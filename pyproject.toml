[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ansys-acp-core"
version = "0.1rc1"

description = "Python library for ACP - Ansys Composite PrepPost"
readme = "README.rst"
homepage = "https://acp.docs.pyansys.com"
repository = "https://github.com/ansys/pyacp/"
documentation = "https://acp.docs.pyansys.com"
authors = ["ANSYS, Inc. <pyansys.core@ansys.com>"]                # this is required
maintainers = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
license = "MIT"
packages = [{ include = "ansys", from = "src" }]
include = ["src/**/docker-compose.yaml"]

# Less than critical but helpful
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
]

[tool.poetry.urls]
Issues = "https://github.com/ansys/pyacp/issues"
Releases = "https://github.com/ansys/pyacp/releases"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
numpy = ">=1.22"
grpcio-health-checking = ">=1.43"
packaging = ">=15.0"
typing-extensions = ">=4.5.0"
ansys-api-acp = "==0.2.0"
ansys-tools-path = ">=0"
ansys-tools-local-product-launcher = ">=0.1"
ansys-tools-filetransfer = ">=0.1"
networkx = ">=3.0.0"

# Optional dependencies which are included in the 'extras' section.
# Update also the 'dev' group when these are updated.
pyvista = { version = ">=0.42.0", optional = true, extras = ["jupyter", "trame"] }
ansys-mapdl-core = { version = ">=0.68.3", optional = true }
ansys-dpf-composites = { version = ">=0.6", optional = true }
ansys-dpf-core = { version = ">=0.13", optional = true}
ansys-mechanical-core = { version = ">=0.10.0", optional = true }
matplotlib = { version = ">=3.8.3", optional = true }
scipy = { version = ">=1.12.0", optional = true }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3"
black = ">=24"
mypy = ">=1.0"
mypy-extensions = ">=1.0"
types-protobuf = ">=4.22.0.2"

Sphinx = ">=7.2.6"
sphinx-copybutton = ">=0.5.2"
numpydoc = ">=1.6.0"
ansys-sphinx-theme = ">=1.0.0"
pypandoc = ">=1.13"
sphinx-gallery = ">=0.15.0"
sphinx-design = ">=0.5.0"  # undeclared indirect dependency via PyVista
sphinx-jinja = ">=2.0.2"
ipykernel = ">=6.22.0"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=7.3.1"
pytest-cov = ">=4.0.0"
pytest-cases = ">=3.6.14"
pytest-benchmark = ">=4.0.0"
hypothesis = ">=6.68.2"
docker = ">=7.0"

[tool.poetry.extras]
# For the examples, we keep an extra to simplify installing these dependencies for the
# end user.
plotting = ["pyvista"]
examples = [
    "ansys-mapdl-core",
    "ansys-dpf-composites",
    "ansys-mechanical-core",
    "matplotlib",
    "scipy",
]
all = [
    "pyvista",
    "ansys-mapdl-core",
    "ansys-dpf-composites",
    "ansys-dpf-core",
    "ansys-mechanical-core",
    "matplotlib",
    "scipy",
]

[tool.poetry.plugins."ansys.tools.local_product_launcher.launcher"]
"ACP.direct" = "ansys.acp.core._server.direct:DirectLauncher"
"ACP.docker_compose" = "ansys.acp.core._server.docker_compose:DockerComposeLauncher"
"ACP.connect" = "ansys.acp.core._server.connect:ConnectLauncher"
"ACP.__fallback__" = "ansys.acp.core._server.direct:DirectLauncher"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
known_first_party = ["ansys"]
src_paths = ["doc", "src", "tests"]

[tool.pydocstyle]
convention = "numpy"
add-ignore = "D201,D202,D203,D204,D105" # blank line rules before / after docstring; magic methods

[tool.codespell]
skip = '*.cdb,*.dat'
ignore-words-list = 'ans,uptodate,notuptodate,eyt'
quiet-level = 3

[tool.mypy]
python_version = "3.10"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"
disable_error_code = "type-abstract"
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "docker.*",
    "grpc_health.*",
    "grpc.*",
    "networkx",
    "scipy.optimize",
    "ansys.mapdl",
    "ansys.mapdl.core",
    "ansys.mechanical",
    "ansys.mechanical.*",
    "ansys.dpf.core",
    "ansys.dpf.core.core",
    "ansys.dpf.core.*",
    "ansys.tools.path",
    ".conftest",           # mypy doesn't seem to find the root 'conftest.py' when imported in 'benchmarks/conftest.py'
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# This section is required even if empty, so that pytest recognizes this
# file as a pytest configuration file, and sets the containing directory
# as its 'rootdir'.
markers = "plotting"

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = ["if (typing\\.)?TYPE_CHECKING:"]
