[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ansys-acp-core"
version = "0.0.dev0"

description = "Python library for ACP - Ansys Composite PrepPost"
readme = "README.rst"
homepage = "https://acp.docs.pyansys.com"
repository = "https://github.com/ansys-internal/pyacp/"

authors = ["Ansys, Inc."] # this is required
maintainers = ["PyAnsys developers <pyansys.support@ansys.com>"]
license = "MIT"

# Less than critical but helpful
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

packages = [
    { include = "ansys", from = "src" },
]

include = ["src/**/docker-compose.yaml"]

[tool.poetry.dependencies]
python = ">=3.9,<4" # Plan on supporting only the currently supported versions of Python
ansys-tools-filetransfer = { git = "https://github.com/ansys-internal/ansys-tools-filetransfer.git", branch = "main" }



[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]

[tool.poetry.extras]

[tool.poetry.plugins."ansys.tools.local_product_launcher.launcher"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
known_first_party = ["ansys"]
src_paths = ["doc", "src", "tests"]

[tool.pydocstyle]
convention = "numpy"

[tool.codespell]
skip = '*.cdb'
ignore-words-list = 'ans,uptodate,notuptodate,eyt'
quiet-level = 3

[tool.mypy]
python_version = 3.8
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"
disable_error_code = "type-abstract"
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "docker.*",
    "grpc.*",
    "grpc_health.*",
    "ansys.mapdl.core",
    "ansys.dpf.core",
    "ansys.dpf.core.core",
    "ansys.dpf.core.*",
    "ansys.tools.path",
    ".conftest", # mypy doesn't seem to find the root 'conftest.py' when imported in 'benchmarks/conftest.py'
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# This section is required even if empty, so that pytest recognizes this
# file as a pytest configuration file, and sets the containing directory
# as its 'rootdir'.
