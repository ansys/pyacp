[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ansys-acp-core"
version = "0.0.dev0"

description = "Python library for ACP - Ansys Composite PrepPost"
readme = "README.rst"
homepage = "https://github.com/pyansys/pyacp/"

authors = ["Ansys, Inc."] # this is required
maintainers = ["PyAnsys developers <pyansys.support@ansys.com>"] # You can change the name. The email group works.
license = "MIT"

# Less than critical but helpful
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.7.2,<3.11" # Plan on supporting only the currently supported versions of Python
numpy = [
    {version = ">=1.15,<1.22", python = ">=3.7,<3.8"},
    {version = "^1.22", python = ">=3.8,<3.11"}
]
importlib-metadata = { version = "^4.0", python = "<3.8" }
ansys-api-acp = { git = "https://github.com/ansys/ansys-api-acp-private.git",  branch = "main" }
grpcio-health-checking = "^1.43"
typing-extensions = { version = "^4.0", python = "<3.8" }

Sphinx =  {version = "^5.0", optional = true}
sphinx-copybutton =  {version = "^0.4", optional = true}
sphinx-autodoc-typehints = {version = "^1.19", optional = true}
numpydoc = {version = "^1.3", optional = true}
ansys-sphinx-theme = {version = "^0", optional = true}
pre-commit = {version = "^2.17.0", optional = true}
black = {version = "22.3.0", optional = true}
mypy = {version = "^0.931", optional = true}
mypy-extensions = {version = "^0.4.3", optional = true}
pytest = {version = "^7.0", optional = true}
pytest-cov = {version = "^3.0", optional = true}
pytest-cases = {version = "^3.6.13", optional = true}
ipykernel = {version = "^6.9.0", optional = true}
types-protobuf = {version = "^3.19.12", optional = true}
jupyter = {version = "^1.0.0", optional = true}
notebook = {version = "^6.4.11", optional = true}
twine = {version = ">=3.8", optional = true}
ansys-mapdl-core = {version = "^0.62.1", optional = true}
ipyvtklink = {version = "^0.2.2", optional = true}

[tool.poetry.extras]
all = [
    "Sphinx",
    "ansys-sphinx-theme",
    "sphinx-autodoc-typehints",
    "sphinx-copybutton",
    "numpydoc",
    "pre-commit",
    "black",
    "mypy",
    "mypy-extensions",
    "types-protobuf",
    "pytest",
    "pytest-cov",
    "pytest-cases",
    "twine",
    "ipykernel",
    "jupyter",
    "notebook",
    "ipyvtklink",
    "ansys-mapdl-core",
]
docs = ["Sphinx", "ansys-sphinx-theme", "sphinx-autodoc-typehints", "sphinx-copybutton", "numpydoc"]
pre-commit = ["pre-commit", "mypy", "mypy-extensions", "types-protobuf", "pytest", "pytest-cases", "black"]
test = ["pytest", "pytest-cov", "pytest-cases"]
build = ["twine"]
examples = ["ipykernel", "jupyter", "notebook", "ipyvtklink", "ansys-mapdl-core"]

[tool.black]
line-length = 100
target-version = ['py37']

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
known_first_party = ["ansys"]
src_paths = ["doc", "src", "tests"]

[tool.pydocstyle]
convention = "numpy"

[tool.mypy]
python_version = 3.7
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "grpc_health.*",
]
ignore_missing_imports = true
