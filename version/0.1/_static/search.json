[
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.name.html#ansys.acp.core.LookUpTable1D.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LookUpTable1D.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.html#variablelarcconstants",
        "title": "VariableLaRCConstants",
        "section": "VariableLaRCConstants",
        "text": "Variable LaRC failure criterion properties.\nAdded in ACP server version 24.2.\nVariableLaRCConstants.field_variables\n\nVariableLaRCConstants.fracture_angle_under_compression\n\nVariableLaRCConstants.fracture_toughness_mode_1\n\nVariableLaRCConstants.fracture_toughness_mode_2\n\nVariableLaRCConstants.fracture_toughness_ratio\n\nVariableLaRCConstants.interpolation_options\n\nVariableLaRCConstants.thin_ply_thickness_limit\n\nVariableLaRCConstants\nVariableLaRCConstants.field_variables\nVariableLaRCConstants.fracture_angle_under_compression\nVariableLaRCConstants.fracture_toughness_mode_1\nVariableLaRCConstants.fracture_toughness_mode_2\nVariableLaRCConstants.fracture_toughness_ratio\nVariableLaRCConstants.interpolation_options\nVariableLaRCConstants.thin_ply_thickness_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.html#ansys.acp.core.material_property_sets.VariableLaRCConstants",
        "title": "VariableLaRCConstants > VariableLaRCConstants > VariableLaRCConstants",
        "section": "VariableLaRCConstants > VariableLaRCConstants",
        "text": "class ansys.acp.core.material_property_sets.VariableLaRCConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable LaRC failure criterion properties.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableLaRCConstants.field_variables\n\n\n\nVariableLaRCConstants.fracture_angle_under_compression\n\n\n\nVariableLaRCConstants.fracture_toughness_mode_1\n\n\n\nVariableLaRCConstants.fracture_toughness_mode_2\n\n\n\nVariableLaRCConstants.fracture_toughness_ratio\n\n\n\nVariableLaRCConstants.interpolation_options\n\n\n\nVariableLaRCConstants.thin_ply_thickness_limit\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.name.html#ansys.acp.core.LookUpTable1DColumn.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LookUpTable1DColumn.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL.html#shell_normal",
        "title": "SHELL_NORMAL",
        "section": "SHELL_NORMAL",
        "text": "SHELL_NORMAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL.html#ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL",
        "title": "SHELL_NORMAL > SHELL_NORMAL > SHELL_NORMAL",
        "section": "SHELL_NORMAL > SHELL_NORMAL",
        "text": "SolidModelOffsetDirectionType.SHELL_NORMAL = 'shell_normal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix.html#removeprefix",
        "title": "removeprefix",
        "section": "removeprefix",
        "text": "Return a str with the given prefix string removed if present.\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.\nremoveprefix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix.html#ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix",
        "title": "removeprefix > removeprefix > removeprefix",
        "section": "removeprefix > removeprefix",
        "text": "PuckMaterialType.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.clone.html#ansys.acp.core.LookUpTable3DColumn.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LookUpTable3DColumn.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.locked",
        "href": "api/_autosummary/ansys.acp.core.Stackup.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.locked",
        "href": "api/_autosummary/ansys.acp.core.Stackup.locked.html#ansys.acp.core.Stackup.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property Stackup.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.maketrans",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.maketrans.html#maketrans",
        "title": "maketrans",
        "section": "maketrans",
        "text": "Return a translation table usable for str.translate().\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.\nmaketrans"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.maketrans",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.maketrans.html#ansys.acp.core.material_property_sets.PuckMaterialType.maketrans",
        "title": "maketrans > maketrans > maketrans",
        "section": "maketrans > maketrans",
        "text": "static PuckMaterialType.maketrans(x, y=<unrepresentable>, z=<unrepresentable>, /)\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES.html#tabular_values",
        "title": "TABULAR_VALUES",
        "section": "TABULAR_VALUES",
        "text": "TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES.html#ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES",
        "title": "TABULAR_VALUES > TABULAR_VALUES > TABULAR_VALUES",
        "section": "TABULAR_VALUES > TABULAR_VALUES",
        "text": "ImportedPlyDrapingType.TABULAR_VALUES = 'tabular_values'\n\n"
    },
    {
        "objectID": "api/other_utils",
        "href": "api/other_utils.html#other-utilities",
        "title": "Other utilities",
        "section": "Other utilities",
        "text": "get_model_tree(model, *[, hide_empty])\nGet a tree representation of the model.\nprint_model(model, *[, hide_empty])\nPrint a tree representation of the model.\nrecursive_copy(*, source_objects, parent_mapping)\nRecursively copy a tree of ACP objects.\nOther utilities\nget_model_tree\nprint_model\nrecursive_copy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.store",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.store",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.store.html#ansys.acp.core.ModelingGroup.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ModelingGroup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.sensor_type",
        "href": "api/_autosummary/ansys.acp.core.Sensor.sensor_type.html#sensor_type",
        "title": "sensor_type",
        "section": "sensor_type",
        "text": "sensor_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.sensor_type",
        "href": "api/_autosummary/ansys.acp.core.Sensor.sensor_type.html#ansys.acp.core.Sensor.sensor_type",
        "title": "sensor_type > sensor_type > sensor_type",
        "section": "sensor_type > sensor_type",
        "text": "property Sensor.sensor_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_CDB.html#ansys_cdb",
        "title": "ANSYS_CDB",
        "section": "ANSYS_CDB",
        "text": "ANSYS_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_CDB.html#ansys.acp.core.FeFormat.ANSYS_CDB",
        "title": "ANSYS_CDB > ANSYS_CDB > ANSYS_CDB",
        "section": "ANSYS_CDB > ANSYS_CDB",
        "text": "FeFormat.ANSYS_CDB = 'ansys:cdb'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.html#stressstatetype",
        "title": "StressStateType",
        "section": "StressStateType",
        "text": "Specifies if the reinforcing elements should behave like a link, membrane, or shell element (with or without bending).\nStressStateType.UNIAXIAL_STRESS_STATE\n\nStressStateType.PLANE_STRESS_STATE\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS\n\nStressStateType\nStressStateType.UNIAXIAL_STRESS_STATE\nStressStateType.PLANE_STRESS_STATE\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.html#ansys.acp.core.StressStateType",
        "title": "StressStateType > StressStateType > StressStateType",
        "section": "StressStateType > StressStateType",
        "text": "class ansys.acp.core.StressStateType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nSpecifies if the reinforcing elements should behave like a link, membrane, or shell element (with or without bending).\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nStressStateType.UNIAXIAL_STRESS_STATE\n\n\n\nStressStateType.PLANE_STRESS_STATE\n\n\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS\n\n\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.CONNECT",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.CONNECT.html#connect",
        "title": "CONNECT",
        "section": "CONNECT",
        "text": "CONNECT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.CONNECT",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.CONNECT.html#ansys.acp.core.LaunchMode.CONNECT",
        "title": "CONNECT > CONNECT > CONNECT",
        "section": "CONNECT > CONNECT",
        "text": "LaunchMode.CONNECT = 'connect'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy.html#sxy",
        "title": "Sxy",
        "section": "Sxy",
        "text": "Sxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy",
        "title": "Sxy > Sxy > Sxy",
        "section": "Sxy > Sxy",
        "text": "property VariableWovenStressLimits.Sxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.area.html#area",
        "title": "area",
        "section": "area",
        "text": "area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.area.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.area",
        "title": "area > area > area",
        "section": "area > area",
        "text": "ModelingPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh.html#import_initial_mesh",
        "title": "import_initial_mesh",
        "section": "import_initial_mesh",
        "text": "Import the solid mesh and its element sets.\nimport_initial_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh.html#ansys.acp.core.ImportedSolidModel.import_initial_mesh",
        "title": "import_initial_mesh > import_initial_mesh > import_initial_mesh",
        "section": "import_initial_mesh > import_initial_mesh",
        "text": "ImportedSolidModel.import_initial_mesh()\n\nImport the solid mesh and its element sets.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh.html#examples-using-importedsolidmodelimport_initial_mesh",
        "title": "import_initial_mesh > Examples using ImportedSolidModel.import_initial_mesh",
        "section": "Examples using ImportedSolidModel.import_initial_mesh",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using ImportedSolidModel.import_initial_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.area_weight",
        "href": "api/_autosummary/ansys.acp.core.Fabric.area_weight.html#area_weight",
        "title": "area_weight",
        "section": "area_weight",
        "text": "area_weight"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.area_weight",
        "href": "api/_autosummary/ansys.acp.core.Fabric.area_weight.html#ansys.acp.core.Fabric.area_weight",
        "title": "area_weight > area_weight > area_weight",
        "section": "area_weight > area_weight",
        "text": "property Fabric.area_weight: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index.html#use_default_coordinate_system_index",
        "title": "use_default_coordinate_system_index",
        "section": "use_default_coordinate_system_index",
        "text": "use_default_coordinate_system_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index.html#ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index",
        "title": "use_default_coordinate_system_index > use_default_coordinate_system_index > use_default_coordinate_system_index",
        "section": "use_default_coordinate_system_index > use_default_coordinate_system_index",
        "text": "property SolidModelExportSettings.use_default_coordinate_system_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.oriented_selection_sets.html#oriented_selection_sets",
        "title": "oriented_selection_sets",
        "section": "oriented_selection_sets",
        "text": "oriented_selection_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.oriented_selection_sets.html#ansys.acp.core.ModelingPly.oriented_selection_sets",
        "title": "oriented_selection_sets > oriented_selection_sets > oriented_selection_sets",
        "section": "oriented_selection_sets > oriented_selection_sets",
        "text": "property ModelingPly.oriented_selection_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.lower_limit",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.lower_limit.html#lower_limit",
        "title": "lower_limit",
        "section": "lower_limit",
        "text": "lower_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.lower_limit",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.lower_limit.html#ansys.acp.core.ParallelSelectionRule.lower_limit",
        "title": "lower_limit > lower_limit > lower_limit",
        "section": "lower_limit > lower_limit",
        "text": "property ParallelSelectionRule.lower_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scale_factor",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scale_factor.html#scale_factor",
        "title": "scale_factor",
        "section": "scale_factor",
        "text": "scale_factor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scale_factor",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scale_factor.html#ansys.acp.core.SectionCut.scale_factor",
        "title": "scale_factor > scale_factor > scale_factor",
        "section": "scale_factor > scale_factor",
        "text": "property SectionCut.scale_factor: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE.html#from_table",
        "title": "FROM_TABLE",
        "section": "FROM_TABLE",
        "text": "FROM_TABLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE.html#ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE",
        "title": "FROM_TABLE > FROM_TABLE > FROM_TABLE",
        "section": "FROM_TABLE > FROM_TABLE",
        "text": "ImportedPlyThicknessType.FROM_TABLE = 'from_table'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.store.html#ansys.acp.core.LookUpTable3D.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "LookUpTable3D.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.html#variableoffsetselectionrule",
        "title": "VariableOffsetSelectionRule",
        "section": "VariableOffsetSelectionRule",
        "text": "Instantiate a Variable Offset Selection Rule.\nname (str) – Name of the Variable Offset Selection Rule.\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\nAdded in ACP server version 24.2.\nVariableOffsetSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nVariableOffsetSelectionRule.delete()\nDelete the object.\nVariableOffsetSelectionRule.store(parent)\nStore the object on the server.\nVariableOffsetSelectionRule.angles\n\nVariableOffsetSelectionRule.distance_along_edge\n\nVariableOffsetSelectionRule.edge_set\n\nVariableOffsetSelectionRule.element_set\n\nVariableOffsetSelectionRule.elemental_data\n\nVariableOffsetSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nVariableOffsetSelectionRule.include_rule\n\nVariableOffsetSelectionRule.inherit_from_lookup_table\n\nVariableOffsetSelectionRule.mesh\nFull mesh associated with the object.\nVariableOffsetSelectionRule.name\nThe name of the object.\nVariableOffsetSelectionRule.nodal_data\n\nVariableOffsetSelectionRule.offsets\n\nVariableOffsetSelectionRule.parent\nThe parent of the object.\nVariableOffsetSelectionRule.radius_direction\n\nVariableOffsetSelectionRule.radius_origin\n\nVariableOffsetSelectionRule.shell_mesh\nShell mesh associated with the object.\nVariableOffsetSelectionRule.status\n\nVariableOffsetSelectionRule.use_offset_correction\n\nVariableOffsetSelectionRule\nFalse\ninherit_from_lookup_table\nFalse\ninherit_from_lookup_table\nFalse\nTrue\nVariableOffsetSelectionRule.clone\nVariableOffsetSelectionRule.delete\nVariableOffsetSelectionRule.store\nVariableOffsetSelectionRule.angles\nVariableOffsetSelectionRule.distance_along_edge\nVariableOffsetSelectionRule.edge_set\nVariableOffsetSelectionRule.element_set\nVariableOffsetSelectionRule.elemental_data\nVariableOffsetSelectionRule.id\nVariableOffsetSelectionRule.include_rule\nVariableOffsetSelectionRule.inherit_from_lookup_table\nVariableOffsetSelectionRule.mesh\nVariableOffsetSelectionRule.name\nVariableOffsetSelectionRule.nodal_data\nVariableOffsetSelectionRule.offsets\nVariableOffsetSelectionRule.parent\nVariableOffsetSelectionRule.radius_direction\nVariableOffsetSelectionRule.radius_origin\nVariableOffsetSelectionRule.shell_mesh\nVariableOffsetSelectionRule.status\nVariableOffsetSelectionRule.use_offset_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.html#ansys.acp.core.VariableOffsetSelectionRule",
        "title": "VariableOffsetSelectionRule > VariableOffsetSelectionRule > VariableOffsetSelectionRule",
        "section": "VariableOffsetSelectionRule > VariableOffsetSelectionRule",
        "text": "class ansys.acp.core.VariableOffsetSelectionRule(*, name='VariableOffsetSelectionrule', edge_set=None, offsets=None, angles=None, include_rule=True, use_offset_correction=False, element_set=None, inherit_from_lookup_table=True, radius_origin=(0.0, 0.0, 0.0), radius_direction=(1.0, 0.0, 0.0), distance_along_edge=False)\n\nInstantiate a Variable Offset Selection Rule.\n\nParameters\n\nname (str) – Name of the Variable Offset Selection Rule.\n\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\n\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\n\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\n\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\n\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\n\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVariableOffsetSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nVariableOffsetSelectionRule.delete()\n\nDelete the object.\n\nVariableOffsetSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableOffsetSelectionRule.angles\n\n\n\nVariableOffsetSelectionRule.distance_along_edge\n\n\n\nVariableOffsetSelectionRule.edge_set\n\n\n\nVariableOffsetSelectionRule.element_set\n\n\n\nVariableOffsetSelectionRule.elemental_data\n\n\n\nVariableOffsetSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nVariableOffsetSelectionRule.include_rule\n\n\n\nVariableOffsetSelectionRule.inherit_from_lookup_table\n\n\n\nVariableOffsetSelectionRule.mesh\n\nFull mesh associated with the object.\n\nVariableOffsetSelectionRule.name\n\nThe name of the object.\n\nVariableOffsetSelectionRule.nodal_data\n\n\n\nVariableOffsetSelectionRule.offsets\n\n\n\nVariableOffsetSelectionRule.parent\n\nThe parent of the object.\n\nVariableOffsetSelectionRule.radius_direction\n\n\n\nVariableOffsetSelectionRule.radius_origin\n\n\n\nVariableOffsetSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nVariableOffsetSelectionRule.status\n\n\n\nVariableOffsetSelectionRule.use_offset_correction\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.html#examples-using-variableoffsetselectionrule",
        "title": "VariableOffsetSelectionRule > Examples using VariableOffsetSelectionRule",
        "section": "Examples using VariableOffsetSelectionRule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using VariableOffsetSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.parent.html#ansys.acp.core.GeometricalSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property GeometricalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.edge_set_type",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.edge_set_type.html#edge_set_type",
        "title": "edge_set_type",
        "section": "edge_set_type",
        "text": "edge_set_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.edge_set_type",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.edge_set_type.html#ansys.acp.core.EdgeSet.edge_set_type",
        "title": "edge_set_type > edge_set_type > edge_set_type",
        "section": "edge_set_type > edge_set_type",
        "text": "property EdgeSet.edge_set_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.get_model_tree",
        "href": "api/_autosummary/ansys.acp.core.get_model_tree.html#get_model_tree",
        "title": "get_model_tree",
        "section": "get_model_tree",
        "text": "Get a tree representation of the model.\nReturns the root node.\nmodel (Model) – ACP model.\nhide_empty (bool) – Whether to hide empty collections.\nNode\nget_model_tree"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.get_model_tree",
        "href": "api/_autosummary/ansys.acp.core.get_model_tree.html#ansys.acp.core.get_model_tree",
        "title": "get_model_tree > get_model_tree > get_model_tree",
        "section": "get_model_tree > get_model_tree",
        "text": "ansys.acp.core.get_model_tree(model, *, hide_empty=True)\n\nGet a tree representation of the model.\n\nReturns the root node.\n\nParameters\n\nmodel (Model) – ACP model.\n\nhide_empty (bool) – Whether to hide empty collections.\n\nReturn type\n\nNode\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.id.html#ansys.acp.core.BooleanSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property BooleanSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.origin",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.origin",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.origin.html#ansys.acp.core.EdgeSet.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property EdgeSet.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.html#modelinggroup",
        "title": "ModelingGroup",
        "section": "ModelingGroup",
        "text": "Instantiate a modeling group.\nname (str) – Name of the modeling group.\nAdded in ACP server version 24.2.\nModelingGroup.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nModelingGroup.create_butt_joint_sequence(*)\nInstantiate a ButtJointSequence.\nModelingGroup.create_interface_layer(*[, ...])\nInstantiate an interface layer.\nModelingGroup.create_modeling_ply(*[, name, ...])\nInstantiate a Modeling Ply.\nModelingGroup.delete()\nDelete the object.\nModelingGroup.store(parent)\nStore the object on the server.\nModelingGroup.butt_joint_sequences\n\nModelingGroup.elemental_data\n\nModelingGroup.id\nIdentifier of the object, used for example as key in maps.\nModelingGroup.interface_layers\n\nModelingGroup.mesh\nFull mesh associated with the object.\nModelingGroup.modeling_plies\n\nModelingGroup.name\nThe name of the object.\nModelingGroup.nodal_data\n\nModelingGroup.parent\nThe parent of the object.\nModelingGroup.shell_mesh\nShell mesh associated with the object.\nModelingGroup\nModelingGroup.clone\nModelingGroup.create_butt_joint_sequence\nModelingGroup.create_interface_layer\nModelingGroup.create_modeling_ply\nModelingGroup.delete\nModelingGroup.store\nModelingGroup.butt_joint_sequences\nModelingGroup.elemental_data\nModelingGroup.id\nModelingGroup.interface_layers\nModelingGroup.mesh\nModelingGroup.modeling_plies\nModelingGroup.name\nModelingGroup.nodal_data\nModelingGroup.parent\nModelingGroup.shell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.html#ansys.acp.core.ModelingGroup",
        "title": "ModelingGroup > ModelingGroup > ModelingGroup",
        "section": "ModelingGroup > ModelingGroup",
        "text": "class ansys.acp.core.ModelingGroup(*, name='ModelingGroup')\n\nInstantiate a modeling group.\n\nParameters\n\nname (str) – Name of the modeling group.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelingGroup.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nModelingGroup.create_butt_joint_sequence(*)\n\nInstantiate a ButtJointSequence.\n\nModelingGroup.create_interface_layer(*[, ...])\n\nInstantiate an interface layer.\n\nModelingGroup.create_modeling_ply(*[, name, ...])\n\nInstantiate a Modeling Ply.\n\nModelingGroup.delete()\n\nDelete the object.\n\nModelingGroup.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelingGroup.butt_joint_sequences\n\n\n\nModelingGroup.elemental_data\n\n\n\nModelingGroup.id\n\nIdentifier of the object, used for example as key in maps.\n\nModelingGroup.interface_layers\n\n\n\nModelingGroup.mesh\n\nFull mesh associated with the object.\n\nModelingGroup.modeling_plies\n\n\n\nModelingGroup.name\n\nThe name of the object.\n\nModelingGroup.nodal_data\n\n\n\nModelingGroup.parent\n\nThe parent of the object.\n\nModelingGroup.shell_mesh\n\nShell mesh associated with the object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.html#examples-using-modelinggroup",
        "title": "ModelingGroup > Examples using ModelingGroup",
        "section": "Examples using ModelingGroup",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using ModelingGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies.html#analysis_plies",
        "title": "analysis_plies",
        "section": "analysis_plies",
        "text": "analysis_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies.html#ansys.acp.core.SolidModel.analysis_plies",
        "title": "analysis_plies > analysis_plies > analysis_plies",
        "section": "analysis_plies > analysis_plies",
        "text": "property SolidModel.analysis_plies: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.analysis_plies.html#examples-using-solidmodelanalysis_plies",
        "title": "analysis_plies > Examples using SolidModel.analysis_plies",
        "section": "Examples using SolidModel.analysis_plies",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SolidModel.analysis_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.algorithm",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.algorithm.html#algorithm",
        "title": "algorithm",
        "section": "algorithm",
        "text": "algorithm"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.algorithm",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.algorithm.html#ansys.acp.core.material_property_sets.InterpolationOptions.algorithm",
        "title": "algorithm > algorithm > algorithm",
        "section": "algorithm > algorithm",
        "text": "InterpolationOptions.algorithm: str\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.html#vectordata",
        "title": "VectorData",
        "section": "VectorData",
        "text": "Class that encapsulates vector data.\nVectorData.get_pyvista_glyphs(*, mesh[, ...])\nGet a pyvista glyph object from the vector data.\nVectorData.component_name\nName of the component.\nVectorData.values\nVector data values as a numpy array.\nVectorData\nVectorData.get_pyvista_glyphs\nVectorData.component_name\nVectorData.values"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.html#ansys.acp.core.mesh_data.VectorData",
        "title": "VectorData > VectorData > VectorData",
        "section": "VectorData > VectorData",
        "text": "class ansys.acp.core.mesh_data.VectorData(field_names, labels, values, component_name)\n\nClass that encapsulates vector data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVectorData.get_pyvista_glyphs(*, mesh[, ...])\n\nGet a pyvista glyph object from the vector data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVectorData.component_name\n\nName of the component.\n\nVectorData.values\n\nVector data values as a numpy array.\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.HALF_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.HALF_ARROW.html#half_arrow",
        "title": "HALF_ARROW",
        "section": "HALF_ARROW",
        "text": "HALF_ARROW"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.HALF_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.HALF_ARROW.html#ansys.acp.core.ArrowType.HALF_ARROW",
        "title": "HALF_ARROW > HALF_ARROW > HALF_ARROW",
        "section": "HALF_ARROW > HALF_ARROW",
        "text": "ArrowType.HALF_ARROW = 'half_arrow'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.status.html#ansys.acp.core.TubeSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property TubeSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule.html#create_boolean_selection_rule",
        "title": "create_boolean_selection_rule",
        "section": "create_boolean_selection_rule",
        "text": "Instantiate a Boolean Selection Rule.\nname (str) – Name of the Boolean Selection Rule.\nselection_rules (Iterable[LinkedSelectionRule])\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nBooleanSelectionRule\nAdded in ACP server version 24.2.\ncreate_boolean_selection_rule\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule.html#ansys.acp.core.Model.create_boolean_selection_rule",
        "title": "create_boolean_selection_rule > create_boolean_selection_rule > create_boolean_selection_rule",
        "section": "create_boolean_selection_rule > create_boolean_selection_rule",
        "text": "Model.create_boolean_selection_rule(*, name='BooleanSelectionrule', selection_rules=(), include_rule=True)\n\nInstantiate a Boolean Selection Rule.\n\nParameters\n\nname (str) – Name of the Boolean Selection Rule.\n\nselection_rules (Iterable[LinkedSelectionRule])\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nBooleanSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule.html#examples-using-modelcreate_boolean_selection_rule",
        "title": "create_boolean_selection_rule > Examples using Model.create_boolean_selection_rule",
        "section": "Examples using Model.create_boolean_selection_rule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.create_boolean_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.id",
        "href": "api/_autosummary/ansys.acp.core.Material.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.id",
        "href": "api/_autosummary/ansys.acp.core.Material.id.html#ansys.acp.core.Material.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Material.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.node_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.node_index.html#node_index",
        "title": "node_index",
        "section": "node_index",
        "text": "node_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.node_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.node_index.html#ansys.acp.core.SolidModelExportSettings.node_index",
        "title": "node_index > node_index > node_index",
        "section": "node_index > node_index",
        "text": "property SolidModelExportSettings.node_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.relative_rule.html#relative_rule",
        "title": "relative_rule",
        "section": "relative_rule",
        "text": "relative_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.relative_rule.html#ansys.acp.core.CylindricalSelectionRule.relative_rule",
        "title": "relative_rule > relative_rule > relative_rule",
        "section": "relative_rule > relative_rule",
        "text": "property CylindricalSelectionRule.relative_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.elemental_data.html#ansys.acp.core.SphericalSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property SphericalSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants.html#from_orthotropic_constants",
        "title": "from_orthotropic_constants",
        "section": "from_orthotropic_constants",
        "text": "Create an orthotropic stress limits property set.\nXc (float) – Compressive stress limit in material 1 direction.\nYc (float) – Compressive stress limit in material 2 direction.\nZc (float) – Compressive stress limit in out-of-plane direction.\nXt (float) – Tensile stress limit in material 1 direction.\nYt (float) – Tensile stress limit in material 2 direction.\nZt (float) – Tensile stress limit in out-of-plane direction.\nSxy (float) – Shear stress limit in-plane (e_{12}).\nSyz (float) – Shear stress limit out-of-plane (e_{23}).\nSxz (float) – Shear stress limit out-of-plane (e_{13}).\nAn orthotropic stress limits property set.\nSelf\nfrom_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants.html#ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants",
        "title": "from_orthotropic_constants > from_orthotropic_constants > from_orthotropic_constants",
        "section": "from_orthotropic_constants > from_orthotropic_constants",
        "text": "classmethod ConstantStressLimits.from_orthotropic_constants(*, Xc=0.0, Yc=0.0, Zc=0.0, Xt=0.0, Yt=0.0, Zt=0.0, Sxy=0.0, Syz=0.0, Sxz=0.0)\n\nCreate an orthotropic stress limits property set.\n\nParameters\n\nXc (float) – Compressive stress limit in material 1 direction.\n\nYc (float) – Compressive stress limit in material 2 direction.\n\nZc (float) – Compressive stress limit in out-of-plane direction.\n\nXt (float) – Tensile stress limit in material 1 direction.\n\nYt (float) – Tensile stress limit in material 2 direction.\n\nZt (float) – Tensile stress limit in out-of-plane direction.\n\nSxy (float) – Shear stress limit in-plane (e_{12}).\n\nSyz (float) – Shear stress limit out-of-plane (e_{23}).\n\nSxz (float) – Shear stress limit out-of-plane (e_{13}).\n\nReturns\n\nAn orthotropic stress limits property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants.html#examples-using-constantstresslimitsfrom_orthotropic_constants",
        "title": "from_orthotropic_constants > Examples using ConstantStressLimits.from_orthotropic_constants",
        "section": "Examples using ConstantStressLimits.from_orthotropic_constants",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ConstantStressLimits.from_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_rosette",
        "href": "api/_autosummary/ansys.acp.core.Model.create_rosette.html#create_rosette",
        "title": "create_rosette",
        "section": "create_rosette",
        "text": "Instantiate a Rosette.\nname (str) – Name of the rosette.\nrosette_type (RosetteType) – Type of the rosette.\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\nRosette\nAdded in ACP server version 24.2.\ncreate_rosette\nRosetteType.EDGE_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_rosette",
        "href": "api/_autosummary/ansys.acp.core.Model.create_rosette.html#ansys.acp.core.Model.create_rosette",
        "title": "create_rosette > create_rosette > create_rosette",
        "section": "create_rosette > create_rosette",
        "text": "Model.create_rosette(*, name='Rosette', rosette_type='parallel', origin=(0.0, 0.0, 0.0), dir1=(1.0, 0.0, 0.0), dir2=(0.0, 1.0, 0.0), edge_set=None)\n\nInstantiate a Rosette.\n\nParameters\n\nname (str) – Name of the rosette.\n\nrosette_type (RosetteType) – Type of the rosette.\n\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\n\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\n\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\n\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\n\nReturn type\n\nRosette\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_rosette",
        "href": "api/_autosummary/ansys.acp.core.Model.create_rosette.html#examples-using-modelcreate_rosette",
        "title": "create_rosette > Examples using Model.create_rosette",
        "section": "Examples using Model.create_rosette",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.create_rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalpha",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalpha.html#isalpha",
        "title": "isalpha",
        "section": "isalpha",
        "text": "Return True if the string is an alphabetic string, False otherwise.\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.\nisalpha"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalpha",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalpha.html#ansys.acp.core.material_property_sets.PuckMaterialType.isalpha",
        "title": "isalpha > isalpha > isalpha",
        "section": "isalpha > isalpha",
        "text": "PuckMaterialType.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.void_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.void_material.html#void_material",
        "title": "void_material",
        "section": "void_material",
        "text": "void_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.void_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.void_material.html#ansys.acp.core.LayupMappingObject.void_material",
        "title": "void_material > void_material > void_material",
        "section": "void_material > void_material",
        "text": "property LayupMappingObject.void_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.NOMINAL",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.NOMINAL.html#nominal",
        "title": "NOMINAL",
        "section": "NOMINAL",
        "text": "NOMINAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.NOMINAL",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.NOMINAL.html#ansys.acp.core.ThicknessType.NOMINAL",
        "title": "NOMINAL > NOMINAL > NOMINAL",
        "section": "NOMINAL > NOMINAL",
        "text": "ThicknessType.NOMINAL = 'nominal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set.html#create_oriented_selection_set",
        "title": "create_oriented_selection_set",
        "section": "create_oriented_selection_set",
        "text": "Instantiate an Oriented Selection Set.\nname (str) – The name of the Oriented Selection Set.\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\ndraping (bool) – If True, activate draping to adjust the reference directions.\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\nOrientedSelectionSet\nAdded in ACP server version 24.2.\ncreate_oriented_selection_set\nTrue\nTrue\nauto_draping_direction\nFalse\n-1.\n0\n1\nDrapingMaterialModel.UD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set.html#ansys.acp.core.Model.create_oriented_selection_set",
        "title": "create_oriented_selection_set > create_oriented_selection_set > create_oriented_selection_set",
        "section": "create_oriented_selection_set > create_oriented_selection_set",
        "text": "Model.create_oriented_selection_set(*, name='OrientedSelectionSet', element_sets=(), orientation_point=(0.0, 0.0, 0.0), orientation_direction=(0.0, 0.0, 0.0), rosettes=(), rosette_selection_method='minimum_angle', selection_rules=(), draping=False, draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(0.0, 0.0, 1.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_material_model='woven', draping_ud_coefficient=0.0, rotation_angle=0.0, reference_direction_field=None)\n\nInstantiate an Oriented Selection Set.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\n\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\n\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\n\ndraping (bool) – If True, activate draping to adjust the reference directions.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\n\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nReturn type\n\nOrientedSelectionSet\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set.html#examples-using-modelcreate_oriented_selection_set",
        "title": "create_oriented_selection_set > Examples using Model.create_oriented_selection_set",
        "section": "Examples using Model.create_oriented_selection_set",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.create_oriented_selection_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_geometries",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_geometries.html#cut_off_geometries",
        "title": "cut_off_geometries",
        "section": "cut_off_geometries",
        "text": "cut_off_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_geometries",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_geometries.html#ansys.acp.core.SolidModel.cut_off_geometries",
        "title": "cut_off_geometries > cut_off_geometries > cut_off_geometries",
        "section": "cut_off_geometries > cut_off_geometries",
        "text": "property SolidModel.cut_off_geometries: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels.html#ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "AnalysisPlyNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2.html#nu12_2",
        "title": "nu12_2",
        "section": "nu12_2",
        "text": "nu12_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2",
        "title": "nu12_2 > nu12_2 > nu12_2",
        "section": "nu12_2 > nu12_2",
        "text": "property VariableWovenCharacterization.nu12_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "CutOffSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isupper",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isupper.html#isupper",
        "title": "isupper",
        "section": "isupper",
        "text": "Return True if the string is an uppercase string, False otherwise.\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.\nisupper"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isupper",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isupper.html#ansys.acp.core.LaunchMode.isupper",
        "title": "isupper > isupper > isupper",
        "section": "isupper > isupper",
        "text": "LaunchMode.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "CutOffSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sublaminates",
        "href": "api/_autosummary/ansys.acp.core.Model.sublaminates.html#sublaminates",
        "title": "sublaminates",
        "section": "sublaminates",
        "text": "sublaminates"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sublaminates",
        "href": "api/_autosummary/ansys.acp.core.Model.sublaminates.html#ansys.acp.core.Model.sublaminates",
        "title": "sublaminates > sublaminates > sublaminates",
        "section": "sublaminates > sublaminates",
        "text": "property Model.sublaminates: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.lower",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.lower.html#lower",
        "title": "lower",
        "section": "lower",
        "text": "Return a copy of the string converted to lowercase.\nlower"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.lower",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.lower.html#ansys.acp.core.LaunchMode.lower",
        "title": "lower > lower > lower",
        "section": "lower > lower",
        "text": "LaunchMode.lower(/)\n\nReturn a copy of the string converted to lowercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction.html#draped_transverse_direction",
        "title": "draped_transverse_direction",
        "section": "draped_transverse_direction",
        "text": "draped_transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction",
        "title": "draped_transverse_direction > draped_transverse_direction > draped_transverse_direction",
        "section": "draped_transverse_direction > draped_transverse_direction",
        "text": "ProductionPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.cad_geometry.html#cad_geometry",
        "title": "cad_geometry",
        "section": "cad_geometry",
        "text": "cad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.cad_geometry.html#ansys.acp.core.SnapToGeometry.cad_geometry",
        "title": "cad_geometry > cad_geometry > cad_geometry",
        "section": "cad_geometry > cad_geometry",
        "text": "property SnapToGeometry.cad_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh.html#refresh",
        "title": "refresh",
        "section": "refresh",
        "text": "Re-import the solid model from the external file.\npath (str | PathLike[str]) – Path of the new input file.\nformat (SolidModelImportFormat | None) – Switch format of the input file. Optional, uses the current format of the\nimported solid model if not specified.\nrefresh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh.html#ansys.acp.core.ImportedSolidModel.refresh",
        "title": "refresh > refresh > refresh",
        "section": "refresh > refresh",
        "text": "ImportedSolidModel.refresh(path, format=None)\n\nRe-import the solid model from the external file.\n\nParameters\n\npath (str | PathLike[str]) – Path of the new input file.\n\nformat (SolidModelImportFormat | None) – Switch format of the input file. Optional, uses the current format of the\nimported solid model if not specified.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh.html#examples-using-importedsolidmodelrefresh",
        "title": "refresh > Examples using ImportedSolidModel.refresh",
        "section": "Examples using ImportedSolidModel.refresh",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using ImportedSolidModel.refresh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.normal.html#ansys.acp.core.mesh_data.ElementSetElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "ElementSetElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.clone",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.clone",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.clone.html#ansys.acp.core.OrientedSelectionSet.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "OrientedSelectionSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY.html#xy",
        "title": "XY",
        "section": "XY",
        "text": "XY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY",
        "title": "XY > XY > XY",
        "section": "XY > XY",
        "text": "property VariableTsaiWuConstants.XY: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY.html#from_geometry",
        "title": "FROM_GEOMETRY",
        "section": "FROM_GEOMETRY",
        "text": "FROM_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY.html#ansys.acp.core.ThicknessType.FROM_GEOMETRY",
        "title": "FROM_GEOMETRY > FROM_GEOMETRY > FROM_GEOMETRY",
        "section": "FROM_GEOMETRY > FROM_GEOMETRY",
        "text": "ThicknessType.FROM_GEOMETRY = 'from_geometry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY.html#examples-using-thicknesstypefrom_geometry",
        "title": "FROM_GEOMETRY > Examples using ThicknessType.FROM_GEOMETRY",
        "section": "Examples using ThicknessType.FROM_GEOMETRY",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ThicknessType.FROM_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_DAT",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_DAT.html#ansys_dat",
        "title": "ANSYS_DAT",
        "section": "ANSYS_DAT",
        "text": "ANSYS_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_DAT",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_DAT.html#ansys.acp.core.SolidModelImportFormat.ANSYS_DAT",
        "title": "ANSYS_DAT > ANSYS_DAT > ANSYS_DAT",
        "section": "ANSYS_DAT > ANSYS_DAT",
        "text": "SolidModelImportFormat.ANSYS_DAT = 'ansys:dat'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.MODELING_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.MODELING_PLY_WISE.html#modeling_ply_wise",
        "title": "MODELING_PLY_WISE",
        "section": "MODELING_PLY_WISE",
        "text": "MODELING_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.MODELING_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.MODELING_PLY_WISE.html#ansys.acp.core.SectionCutType.MODELING_PLY_WISE",
        "title": "MODELING_PLY_WISE > MODELING_PLY_WISE > MODELING_PLY_WISE",
        "section": "MODELING_PLY_WISE > MODELING_PLY_WISE",
        "text": "SectionCutType.MODELING_PLY_WISE = 'modeling_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.html#connectlaunchconfig",
        "title": "ConnectLaunchConfig",
        "section": "ConnectLaunchConfig",
        "text": "Configuration options for attaching to an existing ACP server.\nConnectLaunchConfig.url_acp\n\nConnectLaunchConfig.url_filetransfer\n\nConnectLaunchConfig\nConnectLaunchConfig.url_acp\nConnectLaunchConfig.url_filetransfer"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.html#ansys.acp.core.ConnectLaunchConfig",
        "title": "ConnectLaunchConfig > ConnectLaunchConfig > ConnectLaunchConfig",
        "section": "ConnectLaunchConfig > ConnectLaunchConfig",
        "text": "class ansys.acp.core.ConnectLaunchConfig(url_acp='localhost:50555', url_filetransfer='localhost:50556')\n\nConfiguration options for attaching to an existing ACP server.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConnectLaunchConfig.url_acp\n\n\n\nConnectLaunchConfig.url_filetransfer\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isprintable",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isprintable.html#isprintable",
        "title": "isprintable",
        "section": "isprintable",
        "text": "Return True if all characters in the string are printable, False otherwise.\nA character is printable if repr() may use it in its output.\nisprintable"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isprintable",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isprintable.html#ansys.acp.core.material_property_sets.PuckMaterialType.isprintable",
        "title": "isprintable > isprintable > isprintable",
        "section": "isprintable > isprintable",
        "text": "PuckMaterialType.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nA character is printable if repr() may use it in its output.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "OrientedSelectionSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SURFACE",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SURFACE.html#surface",
        "title": "SURFACE",
        "section": "SURFACE",
        "text": "SURFACE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SURFACE",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SURFACE.html#ansys.acp.core.VirtualGeometryDimension.SURFACE",
        "title": "SURFACE > SURFACE > SURFACE",
        "section": "SURFACE > SURFACE",
        "text": "VirtualGeometryDimension.SURFACE = 'surface'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xc.html#xc",
        "title": "Xc",
        "section": "Xc",
        "text": "Xc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xc.html#ansys.acp.core.material_property_sets.VariableStressLimits.Xc",
        "title": "Xc > Xc > Xc",
        "section": "Xc > Xc",
        "text": "property VariableStressLimits.Xc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.MIDDLE_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.MIDDLE_OFFSET.html#middle_offset",
        "title": "MIDDLE_OFFSET",
        "section": "MIDDLE_OFFSET",
        "text": "MIDDLE_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.MIDDLE_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.MIDDLE_OFFSET.html#ansys.acp.core.OffsetType.MIDDLE_OFFSET",
        "title": "MIDDLE_OFFSET > MIDDLE_OFFSET > MIDDLE_OFFSET",
        "section": "MIDDLE_OFFSET > MIDDLE_OFFSET",
        "text": "OffsetType.MIDDLE_OFFSET = 'middle_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR.html#scalar",
        "title": "SCALAR",
        "section": "SCALAR",
        "text": "SCALAR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR.html#ansys.acp.core.LookUpTableColumnValueType.SCALAR",
        "title": "SCALAR > SCALAR > SCALAR",
        "section": "SCALAR > SCALAR",
        "text": "LookUpTableColumnValueType.SCALAR = 'scalar'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR.html#examples-using-lookuptablecolumnvaluetypescalar",
        "title": "SCALAR > Examples using LookUpTableColumnValueType.SCALAR",
        "section": "Examples using LookUpTableColumnValueType.SCALAR",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using LookUpTableColumnValueType.SCALAR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.status",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.status",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.status.html#ansys.acp.core.SolidElementSet.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SolidElementSet.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_acp",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_acp.html#image_name_acp",
        "title": "image_name_acp",
        "section": "image_name_acp",
        "text": "image_name_acp"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_acp",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_acp.html#ansys.acp.core.DockerComposeLaunchConfig.image_name_acp",
        "title": "image_name_acp > image_name_acp > image_name_acp",
        "section": "image_name_acp > image_name_acp",
        "text": "DockerComposeLaunchConfig.image_name_acp: str = 'ghcr.io/ansys/acp:latest'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.consider_coupling_effect",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.consider_coupling_effect.html#consider_coupling_effect",
        "title": "consider_coupling_effect",
        "section": "consider_coupling_effect",
        "text": "consider_coupling_effect"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.consider_coupling_effect",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.consider_coupling_effect.html#ansys.acp.core.SamplingPoint.consider_coupling_effect",
        "title": "consider_coupling_effect > consider_coupling_effect > consider_coupling_effect",
        "section": "consider_coupling_effect > consider_coupling_effect",
        "text": "property SamplingPoint.consider_coupling_effect: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation.html#orientation",
        "title": "orientation",
        "section": "orientation",
        "text": "orientation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation",
        "title": "orientation > orientation > orientation",
        "section": "orientation > orientation",
        "text": "ModelingPlyElementalData.orientation: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SANDWICH_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SANDWICH_WISE.html#sandwich_wise",
        "title": "SANDWICH_WISE",
        "section": "SANDWICH_WISE",
        "text": "SANDWICH_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SANDWICH_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SANDWICH_WISE.html#ansys.acp.core.ExtrusionMethod.SANDWICH_WISE",
        "title": "SANDWICH_WISE > SANDWICH_WISE > SANDWICH_WISE",
        "section": "SANDWICH_WISE > SANDWICH_WISE",
        "text": "ExtrusionMethod.SANDWICH_WISE = 'sandwich_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material_handling.html#drop_off_material_handling",
        "title": "drop_off_material_handling",
        "section": "drop_off_material_handling",
        "text": "drop_off_material_handling"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material_handling.html#ansys.acp.core.Stackup.drop_off_material_handling",
        "title": "drop_off_material_handling > drop_off_material_handling > drop_off_material_handling",
        "section": "drop_off_material_handling > drop_off_material_handling",
        "text": "property Stackup.drop_off_material_handling: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.endswith",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.endswith.html#endswith",
        "title": "endswith",
        "section": "endswith",
        "text": "Return True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.\nendswith"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.endswith",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.endswith.html#ansys.acp.core.material_property_sets.PuckMaterialType.endswith",
        "title": "endswith > endswith > endswith",
        "section": "endswith > endswith",
        "text": "PuckMaterialType.endswith(suffix, [start, [end]]) -> bool\n\nReturn True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.selection_rule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.selection_rule.html#selection_rule",
        "title": "selection_rule",
        "section": "selection_rule",
        "text": "Link to an existing selection rule.\nselection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.selection_rule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.selection_rule.html#ansys.acp.core.LinkedSelectionRule.selection_rule",
        "title": "selection_rule > selection_rule > selection_rule",
        "section": "selection_rule > selection_rule",
        "text": "property LinkedSelectionRule.selection_rule: BooleanSelectionRule | CutOffSelectionRule | CylindricalSelectionRule | GeometricalSelectionRule | ParallelSelectionRule | SphericalSelectionRule | TubeSelectionRule | VariableOffsetSelectionRule\n\nLink to an existing selection rule.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET.html#middle_offset",
        "title": "MIDDLE_OFFSET",
        "section": "MIDDLE_OFFSET",
        "text": "MIDDLE_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET.html#ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET",
        "title": "MIDDLE_OFFSET > MIDDLE_OFFSET > MIDDLE_OFFSET",
        "section": "MIDDLE_OFFSET > MIDDLE_OFFSET",
        "text": "ImportedPlyOffsetType.MIDDLE_OFFSET = 'middle_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET.html#examples-using-importedplyoffsettypemiddle_offset",
        "title": "MIDDLE_OFFSET > Examples using ImportedPlyOffsetType.MIDDLE_OFFSET",
        "section": "Examples using ImportedPlyOffsetType.MIDDLE_OFFSET",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedPlyOffsetType.MIDDLE_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13.html#nu13",
        "title": "nu13",
        "section": "nu13",
        "text": "nu13"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13",
        "title": "nu13 > nu13 > nu13",
        "section": "nu13 > nu13",
        "text": "property VariableEngineeringConstants.nu13: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_type.html#draping_type",
        "title": "draping_type",
        "section": "draping_type",
        "text": "draping_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_type.html#ansys.acp.core.ImportedModelingPly.draping_type",
        "title": "draping_type > draping_type > draping_type",
        "section": "draping_type > draping_type",
        "text": "property ImportedModelingPly.draping_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE.html#normal_to_surface",
        "title": "NORMAL_TO_SURFACE",
        "section": "NORMAL_TO_SURFACE",
        "text": "NORMAL_TO_SURFACE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE.html#ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE",
        "title": "NORMAL_TO_SURFACE > NORMAL_TO_SURFACE > NORMAL_TO_SURFACE",
        "section": "NORMAL_TO_SURFACE > NORMAL_TO_SURFACE",
        "text": "IntersectionType.NORMAL_TO_SURFACE = 'normal_to_surface'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ParallelSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg.html#p_22_neg",
        "title": "p_22_neg",
        "section": "p_22_neg",
        "text": "p_22_neg"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg.html#ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg",
        "title": "p_22_neg > p_22_neg > p_22_neg",
        "section": "p_22_neg > p_22_neg",
        "text": "property VariablePuckConstants.p_22_neg: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.html#interfacelayer",
        "title": "InterfaceLayer",
        "section": "InterfaceLayer",
        "text": "Instantiate an interface layer.\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\nname (str) – Name of the interface layer.\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\nAdded in ACP server version 25.1.\nInterfaceLayer.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nInterfaceLayer.delete()\nDelete the object.\nInterfaceLayer.store(parent)\nStore the object on the server.\nInterfaceLayer.active\n\nInterfaceLayer.elemental_data\n\nInterfaceLayer.global_ply_nr\n\nInterfaceLayer.id\nIdentifier of the object, used for example as key in maps.\nInterfaceLayer.mesh\nFull mesh associated with the object.\nInterfaceLayer.name\nThe name of the object.\nInterfaceLayer.nodal_data\n\nInterfaceLayer.open_area_sets\n\nInterfaceLayer.oriented_selection_sets\n\nInterfaceLayer.parent\nThe parent of the object.\nInterfaceLayer.shell_mesh\nShell mesh associated with the object.\nInterfaceLayer.status\n\nInterfaceLayer\nOrientedSelectionSet\nElementSet\nInterfaceLayer.clone\nInterfaceLayer.delete\nInterfaceLayer.store\nInterfaceLayer.active\nInterfaceLayer.elemental_data\nInterfaceLayer.global_ply_nr\nInterfaceLayer.id\nInterfaceLayer.mesh\nInterfaceLayer.name\nInterfaceLayer.nodal_data\nInterfaceLayer.open_area_sets\nInterfaceLayer.oriented_selection_sets\nInterfaceLayer.parent\nInterfaceLayer.shell_mesh\nInterfaceLayer.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.html#ansys.acp.core.InterfaceLayer",
        "title": "InterfaceLayer > InterfaceLayer > InterfaceLayer",
        "section": "InterfaceLayer > InterfaceLayer",
        "text": "class ansys.acp.core.InterfaceLayer(*, name='InterfaceLayer', global_ply_nr=0, active=True, oriented_selection_sets=(), open_area_sets=())\n\nInstantiate an interface layer.\n\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\n\nParameters\n\nname (str) – Name of the interface layer.\n\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\n\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\n\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\n\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nInterfaceLayer.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nInterfaceLayer.delete()\n\nDelete the object.\n\nInterfaceLayer.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nInterfaceLayer.active\n\n\n\nInterfaceLayer.elemental_data\n\n\n\nInterfaceLayer.global_ply_nr\n\n\n\nInterfaceLayer.id\n\nIdentifier of the object, used for example as key in maps.\n\nInterfaceLayer.mesh\n\nFull mesh associated with the object.\n\nInterfaceLayer.name\n\nThe name of the object.\n\nInterfaceLayer.nodal_data\n\n\n\nInterfaceLayer.open_area_sets\n\n\n\nInterfaceLayer.oriented_selection_sets\n\n\n\nInterfaceLayer.parent\n\nThe parent of the object.\n\nInterfaceLayer.shell_mesh\n\nShell mesh associated with the object.\n\nInterfaceLayer.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options.html#ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableStrainLimits.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.store.html#ansys.acp.core.LookUpTable1D.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "LookUpTable1D.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.delete",
        "href": "api/_autosummary/ansys.acp.core.Material.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.delete",
        "href": "api/_autosummary/ansys.acp.core.Material.delete.html#ansys.acp.core.Material.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Material.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.id.html#ansys.acp.core.ImportedModelingPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ImportedModelingPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_element_sets.html#transferred_element_sets",
        "title": "transferred_element_sets",
        "section": "transferred_element_sets",
        "text": "transferred_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_element_sets.html#ansys.acp.core.SolidModelExportSettings.transferred_element_sets",
        "title": "transferred_element_sets > transferred_element_sets > transferred_element_sets",
        "section": "transferred_element_sets > transferred_element_sets",
        "text": "property SolidModelExportSettings.transferred_element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation.html#orientation",
        "title": "orientation",
        "section": "orientation",
        "text": "orientation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation",
        "title": "orientation > orientation > orientation",
        "section": "orientation > orientation",
        "text": "AnalysisPlyElementalData.orientation: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.clone",
        "href": "api/_autosummary/ansys.acp.core.SubShape.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored SubShape with the same properties.\nSelf\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.clone",
        "href": "api/_autosummary/ansys.acp.core.SubShape.clone.html#ansys.acp.core.SubShape.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SubShape.clone()\n\nCreate a new unstored SubShape with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSelf"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.id.html#ansys.acp.core.VirtualGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property VirtualGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.store",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.store",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.store.html#ansys.acp.core.SubLaminate.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SubLaminate.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_mesh_size.html#draping_mesh_size",
        "title": "draping_mesh_size",
        "section": "draping_mesh_size",
        "text": "draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_mesh_size.html#ansys.acp.core.ModelingPly.draping_mesh_size",
        "title": "draping_mesh_size > draping_mesh_size > draping_mesh_size",
        "section": "draping_mesh_size > draping_mesh_size",
        "text": "property ModelingPly.draping_mesh_size: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET.html#top_offset",
        "title": "TOP_OFFSET",
        "section": "TOP_OFFSET",
        "text": "TOP_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET.html#ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET",
        "title": "TOP_OFFSET > TOP_OFFSET > TOP_OFFSET",
        "section": "TOP_OFFSET > TOP_OFFSET",
        "text": "ImportedPlyOffsetType.TOP_OFFSET = 'top_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rstrip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rstrip.html#rstrip",
        "title": "rstrip",
        "section": "rstrip",
        "text": "Return a copy of the string with trailing whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nrstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rstrip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rstrip.html#ansys.acp.core.LaunchMode.rstrip",
        "title": "rstrip > rstrip > rstrip",
        "section": "rstrip > rstrip",
        "text": "LaunchMode.rstrip(chars=None, /)\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isspace",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isspace.html#isspace",
        "title": "isspace",
        "section": "isspace",
        "text": "Return True if the string is a whitespace string, False otherwise.\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.\nisspace"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isspace",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isspace.html#ansys.acp.core.LaunchMode.isspace",
        "title": "isspace > isspace > isspace",
        "section": "isspace > isspace",
        "text": "LaunchMode.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.store",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.store",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.store.html#ansys.acp.core.SolidModel.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SolidModel.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.thickness",
        "href": "api/_autosummary/ansys.acp.core.Stackup.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.thickness",
        "href": "api/_autosummary/ansys.acp.core.Stackup.thickness.html#ansys.acp.core.Stackup.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property Stackup.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.rosette.html#rosette",
        "title": "rosette",
        "section": "rosette",
        "text": "rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.rosette.html#ansys.acp.core.ParallelSelectionRule.rosette",
        "title": "rosette > rosette > rosette",
        "section": "rosette > rosette",
        "text": "property ParallelSelectionRule.rosette: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.encode",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.encode.html#encode",
        "title": "encode",
        "section": "encode",
        "text": "Encode the string using the codec registered for encoding.\nThe encoding in which to encode the string.\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors.\nencode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.encode",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.encode.html#ansys.acp.core.LaunchMode.encode",
        "title": "encode > encode > encode",
        "section": "encode > encode",
        "text": "LaunchMode.encode(/, encoding='utf-8', errors='strict')\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.search_radius",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.search_radius.html#search_radius",
        "title": "search_radius",
        "section": "search_radius",
        "text": "search_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.search_radius",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.search_radius.html#ansys.acp.core.SectionCut.search_radius",
        "title": "search_radius > search_radius > search_radius",
        "section": "search_radius > search_radius",
        "text": "property SectionCut.search_radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass.html#mass",
        "title": "mass",
        "section": "mass",
        "text": "mass"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass",
        "title": "mass > mass > mass",
        "section": "mass > mass",
        "text": "AnalysisPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.delete.html#ansys.acp.core.CylindricalSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "CylindricalSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh.html#solid_mesh",
        "title": "solid_mesh",
        "section": "solid_mesh",
        "text": "Solid mesh associated with the object.\nsolid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh.html#ansys.acp.core.ImportedAnalysisPly.solid_mesh",
        "title": "solid_mesh > solid_mesh > solid_mesh",
        "section": "solid_mesh > solid_mesh",
        "text": "property ImportedAnalysisPly.solid_mesh: MeshData\n\nSolid mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh.html#examples-using-importedanalysisplysolid_mesh",
        "title": "solid_mesh > Examples using ImportedAnalysisPly.solid_mesh",
        "section": "Examples using ImportedAnalysisPly.solid_mesh",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ImportedAnalysisPly.solid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT.html#childt",
        "title": "ChildT",
        "section": "ChildT",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nChildT\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT.html#ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT",
        "title": "ChildT > ChildT > ChildT",
        "section": "ChildT > ChildT",
        "text": "ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT = ~ChildT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.html#importedmodelingply",
        "title": "ImportedModelingPly",
        "section": "ImportedModelingPly",
        "text": "Instantiate an Imported Modeling Ply.\nname (str) – The name of the Modeling Ply\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\nAdded in ACP server version 25.1.\nImportedModelingPly.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nImportedModelingPly.delete()\nDelete the object.\nImportedModelingPly.store(parent)\nStore the object on the server.\nImportedModelingPly.active\n\nImportedModelingPly.draping_angle_1_field\n\nImportedModelingPly.draping_angle_2_field\n\nImportedModelingPly.draping_type\n\nImportedModelingPly.id\nIdentifier of the object, used for example as key in maps.\nImportedModelingPly.imported_production_plies\n\nImportedModelingPly.mesh_geometry\n\nImportedModelingPly.mesh_import_type\n\nImportedModelingPly.name\nThe name of the object.\nImportedModelingPly.offset_type\n\nImportedModelingPly.parent\nThe parent of the object.\nImportedModelingPly.ply_angle\n\nImportedModelingPly.ply_material\n\nImportedModelingPly.reference_direction_field\n\nImportedModelingPly.rosette_selection_method\n\nImportedModelingPly.rosettes\n\nImportedModelingPly.rotation_angle\n\nImportedModelingPly.status\n\nImportedModelingPly.thickness_field\n\nImportedModelingPly.thickness_field_type\n\nImportedModelingPly.thickness_type\n\nImportedModelingPly\nBOTTOM_OFFSET\nMIDDLE_OFFSET\nTOP_OFFSET\nmesh_import_type\nFROM_GEOMETRY\nNO_DRAPING\ndraping_angle_1_field\nThicknessType.FROM_TABLE\nThicknessType.NOMINAL\nthickness_type\nThicknessType.FROM_TABLE\nthickness_type\nThicknessType.FROM_TABLE\nThicknessFieldType.ABSOLUTE_VALUES\nThicknessFieldType.RELATIVE_SCALING_FACTOR\nImportedModelingPly.clone\nImportedModelingPly.delete\nImportedModelingPly.store\nImportedModelingPly.active\nImportedModelingPly.draping_angle_1_field\nImportedModelingPly.draping_angle_2_field\nImportedModelingPly.draping_type\nImportedModelingPly.id\nImportedModelingPly.imported_production_plies\nImportedModelingPly.mesh_geometry\nImportedModelingPly.mesh_import_type\nImportedModelingPly.name\nImportedModelingPly.offset_type\nImportedModelingPly.parent\nImportedModelingPly.ply_angle\nImportedModelingPly.ply_material\nImportedModelingPly.reference_direction_field\nImportedModelingPly.rosette_selection_method\nImportedModelingPly.rosettes\nImportedModelingPly.rotation_angle\nImportedModelingPly.status\nImportedModelingPly.thickness_field\nImportedModelingPly.thickness_field_type\nImportedModelingPly.thickness_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.html#ansys.acp.core.ImportedModelingPly",
        "title": "ImportedModelingPly > ImportedModelingPly > ImportedModelingPly",
        "section": "ImportedModelingPly > ImportedModelingPly",
        "text": "class ansys.acp.core.ImportedModelingPly(*, name='ModelingPly', active=True, offset_type='middle_offset', mesh_import_type='from_geometry', mesh_geometry=None, rosette_selection_method='minimum_angle', rosettes=(), reference_direction_field=None, rotation_angle=0.0, ply_material=None, ply_angle=0.0, draping_type='no_draping', draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_field=None, thickness_field_type='absolute_values')\n\nInstantiate an Imported Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\n\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\n\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nImportedModelingPly.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nImportedModelingPly.delete()\n\nDelete the object.\n\nImportedModelingPly.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedModelingPly.active\n\n\n\nImportedModelingPly.draping_angle_1_field\n\n\n\nImportedModelingPly.draping_angle_2_field\n\n\n\nImportedModelingPly.draping_type\n\n\n\nImportedModelingPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nImportedModelingPly.imported_production_plies\n\n\n\nImportedModelingPly.mesh_geometry\n\n\n\nImportedModelingPly.mesh_import_type\n\n\n\nImportedModelingPly.name\n\nThe name of the object.\n\nImportedModelingPly.offset_type\n\n\n\nImportedModelingPly.parent\n\nThe parent of the object.\n\nImportedModelingPly.ply_angle\n\n\n\nImportedModelingPly.ply_material\n\n\n\nImportedModelingPly.reference_direction_field\n\n\n\nImportedModelingPly.rosette_selection_method\n\n\n\nImportedModelingPly.rosettes\n\n\n\nImportedModelingPly.rotation_angle\n\n\n\nImportedModelingPly.status\n\n\n\nImportedModelingPly.thickness_field\n\n\n\nImportedModelingPly.thickness_field_type\n\n\n\nImportedModelingPly.thickness_type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.html#examples-using-importedmodelingply",
        "title": "ImportedModelingPly > Examples using ImportedModelingPly",
        "section": "Examples using ImportedModelingPly",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedModelingPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.shell_mesh.html#ansys.acp.core.ElementSet.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property ElementSet.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete.html#ansys.acp.core.LayupMappingObject.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "LayupMappingObject.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.id.html#ansys.acp.core.SphericalSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SphericalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.element_labels.html#ansys.acp.core.mesh_data.ModelElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ModelElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt.html#xt",
        "title": "Xt",
        "section": "Xt",
        "text": "Xt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt",
        "title": "Xt > Xt > Xt",
        "section": "Xt > Xt",
        "text": "property VariableWovenStressLimits.Xt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL.html#spherical",
        "title": "SPHERICAL",
        "section": "SPHERICAL",
        "text": "SPHERICAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL.html#ansys.acp.core.RosetteType.SPHERICAL",
        "title": "SPHERICAL > SPHERICAL > SPHERICAL",
        "section": "SPHERICAL > SPHERICAL",
        "text": "RosetteType.SPHERICAL = 'spherical'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL.html#examples-using-rosettetypespherical",
        "title": "SPHERICAL > Examples using RosetteType.SPHERICAL",
        "section": "Examples using RosetteType.SPHERICAL",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType.SPHERICAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.partition",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.partition.html#partition",
        "title": "partition",
        "section": "partition",
        "text": "Partition the string into three parts using the given separator.\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.\npartition"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.partition",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.partition.html#ansys.acp.core.material_property_sets.PuckMaterialType.partition",
        "title": "partition > partition > partition",
        "section": "partition > partition",
        "text": "PuckMaterialType.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xt.html#xt",
        "title": "Xt",
        "section": "Xt",
        "text": "Xt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xt.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Xt",
        "title": "Xt > Xt > Xt",
        "section": "Xt > Xt",
        "text": "property ConstantStressLimits.Xt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.zfill",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.zfill.html#zfill",
        "title": "zfill",
        "section": "zfill",
        "text": "Pad a numeric string with zeros on the left, to fill a field of the given width.\nThe string is never truncated.\nzfill"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.zfill",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.zfill.html#ansys.acp.core.material_property_sets.PuckMaterialType.zfill",
        "title": "zfill > zfill > zfill",
        "section": "zfill > zfill",
        "text": "PuckMaterialType.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.origin",
        "href": "api/_autosummary/ansys.acp.core.Rosette.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.origin",
        "href": "api/_autosummary/ansys.acp.core.Rosette.origin.html#ansys.acp.core.Rosette.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property Rosette.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalnum",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalnum.html#isalnum",
        "title": "isalnum",
        "section": "isalnum",
        "text": "Return True if the string is an alpha-numeric string, False otherwise.\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.\nisalnum"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalnum",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalnum.html#ansys.acp.core.material_property_sets.PuckMaterialType.isalnum",
        "title": "isalnum > isalnum > isalnum",
        "section": "isalnum > isalnum",
        "text": "PuckMaterialType.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_geometries",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_geometries.html#cut_off_geometries",
        "title": "cut_off_geometries",
        "section": "cut_off_geometries",
        "text": "cut_off_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_geometries",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_geometries.html#ansys.acp.core.ImportedSolidModel.cut_off_geometries",
        "title": "cut_off_geometries > cut_off_geometries > cut_off_geometries",
        "section": "cut_off_geometries > cut_off_geometries",
        "text": "property ImportedSolidModel.cut_off_geometries: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1.html#e2_1",
        "title": "E2_1",
        "section": "E2_1",
        "text": "E2_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1",
        "title": "E2_1 > E2_1 > E2_1",
        "section": "E2_1 > E2_1",
        "text": "property VariableWovenCharacterization.E2_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXc.html#exc",
        "title": "eXc",
        "section": "eXc",
        "text": "eXc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXc.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eXc",
        "title": "eXc > eXc > eXc",
        "section": "eXc > eXc",
        "text": "property VariableStrainLimits.eXc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.mesh.html#ansys.acp.core.CylindricalSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property CylindricalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.id.html#ansys.acp.core.ParallelSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ParallelSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.include_rule.html#ansys.acp.core.TubeSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property TubeSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT.html#basic_flat_plate_dat",
        "title": "BASIC_FLAT_PLATE_DAT",
        "section": "BASIC_FLAT_PLATE_DAT",
        "text": "BASIC_FLAT_PLATE_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT.html#ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "title": "BASIC_FLAT_PLATE_DAT > BASIC_FLAT_PLATE_DAT > BASIC_FLAT_PLATE_DAT",
        "section": "BASIC_FLAT_PLATE_DAT > BASIC_FLAT_PLATE_DAT",
        "text": "ExampleKeys.BASIC_FLAT_PLATE_DAT = 1\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT.html#examples-using-examplekeysbasic_flat_plate_dat",
        "title": "BASIC_FLAT_PLATE_DAT > Examples using ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "section": "Examples using ExampleKeys.BASIC_FLAT_PLATE_DAT",
        "text": "sphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nExamples using ExampleKeys.BASIC_FLAT_PLATE_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.html#productionplyelementaldata",
        "title": "ProductionPlyElementalData",
        "section": "ProductionPlyElementalData",
        "text": "Represents elemental data for a Production Ply.\nProductionPlyElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nProductionPlyElementalData.area\n\nProductionPlyElementalData.cog\n\nProductionPlyElementalData.design_angle\n\nProductionPlyElementalData.draped_fiber_angle\n\nProductionPlyElementalData.draped_fiber_direction\n\nProductionPlyElementalData.draped_transverse_angle\n\nProductionPlyElementalData.draped_transverse_direction\n\nProductionPlyElementalData.fiber_direction\n\nProductionPlyElementalData.mass\n\nProductionPlyElementalData.normal\n\nProductionPlyElementalData.offset\n\nProductionPlyElementalData.orientation\n\nProductionPlyElementalData.price\n\nProductionPlyElementalData.reference_direction\n\nProductionPlyElementalData.relative_thickness_correction\n\nProductionPlyElementalData.shear_angle\n\nProductionPlyElementalData.thickness\n\nProductionPlyElementalData.transverse_direction\n\nProductionPlyElementalData.volume\n\nProductionPlyElementalData.element_labels\n\nProductionPlyElementalData\nProductionPlyElementalData.get_pyvista_mesh\nProductionPlyElementalData.area\nProductionPlyElementalData.cog\nProductionPlyElementalData.design_angle\nProductionPlyElementalData.draped_fiber_angle\nProductionPlyElementalData.draped_fiber_direction\nProductionPlyElementalData.draped_transverse_angle\nProductionPlyElementalData.draped_transverse_direction\nProductionPlyElementalData.fiber_direction\nProductionPlyElementalData.mass\nProductionPlyElementalData.normal\nProductionPlyElementalData.offset\nProductionPlyElementalData.orientation\nProductionPlyElementalData.price\nProductionPlyElementalData.reference_direction\nProductionPlyElementalData.relative_thickness_correction\nProductionPlyElementalData.shear_angle\nProductionPlyElementalData.thickness\nProductionPlyElementalData.transverse_direction\nProductionPlyElementalData.volume\nProductionPlyElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.html#ansys.acp.core.mesh_data.ProductionPlyElementalData",
        "title": "ProductionPlyElementalData > ProductionPlyElementalData > ProductionPlyElementalData",
        "section": "ProductionPlyElementalData > ProductionPlyElementalData",
        "text": "class ansys.acp.core.mesh_data.ProductionPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Production Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nProductionPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nProductionPlyElementalData.area\n\n\n\nProductionPlyElementalData.cog\n\n\n\nProductionPlyElementalData.design_angle\n\n\n\nProductionPlyElementalData.draped_fiber_angle\n\n\n\nProductionPlyElementalData.draped_fiber_direction\n\n\n\nProductionPlyElementalData.draped_transverse_angle\n\n\n\nProductionPlyElementalData.draped_transverse_direction\n\n\n\nProductionPlyElementalData.fiber_direction\n\n\n\nProductionPlyElementalData.mass\n\n\n\nProductionPlyElementalData.normal\n\n\n\nProductionPlyElementalData.offset\n\n\n\nProductionPlyElementalData.orientation\n\n\n\nProductionPlyElementalData.price\n\n\n\nProductionPlyElementalData.reference_direction\n\n\n\nProductionPlyElementalData.relative_thickness_correction\n\n\n\nProductionPlyElementalData.shear_angle\n\n\n\nProductionPlyElementalData.thickness\n\n\n\nProductionPlyElementalData.transverse_direction\n\n\n\nProductionPlyElementalData.volume\n\n\n\nProductionPlyElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.tail_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.tail_extension.html#tail_extension",
        "title": "tail_extension",
        "section": "tail_extension",
        "text": "tail_extension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.tail_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.tail_extension.html#ansys.acp.core.TubeSelectionRule.tail_extension",
        "title": "tail_extension > tail_extension > tail_extension",
        "section": "tail_extension > tail_extension",
        "text": "property TubeSelectionRule.tail_extension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "We absolutely welcome all code contributions and hope that this\nguide facilitates an understanding of the PyACP code\nrepository. It is important to note that while the PyACP software\npackage is maintained by Ansys and any submissions are reviewed\nthoroughly before merging, we still seek to foster a community that can\nsupport user questions and develop new features to make this software\na useful tool for all users. As such, we welcome and encourage any\nquestions or submissions to this repository.\nFor example, you can make contributions as follows:\nReport a bug or suggest a feature.\nGive feedback or make suggestions for improving the documentation.\nSubmit a pull request to fix a bug or add a feature.\nReport your use case, explain how PyACP has helped you, or indicate what features are still missing.\nFor feedback, suggestions, or bug reports, open an issue on the PyACP GitHub repository.\nFor code changes or documentation improvements, open a pull request.\nContribute"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#development-setup",
        "title": "Contribute > Development Setup",
        "section": "Development Setup",
        "text": "Development Setup"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#installation",
        "title": "Contribute > Installation",
        "section": "Installation",
        "text": "Installing PyACP in developer mode allows you to modify the source and enhance it. Before contributing to the project,\nplease refer to the PyAnsys Developer’s guide.\nYou will need to follow these steps:\nStart by cloning this repository, and entering the newly created directory:\nMake sure you have the latest version of poetry:\nAt this point, you may need to restart your shell or editor to ensure that the new poetry command is available.\nInstall the project and all its development dependencies using poetry. This also takes care of\ncreating a new virtual environment:\nThis step installs PyACP in an editable mode (no build step is needed, no re-install when changing the code).\nActivate your development virtual environment with:\nInstallation\npoetry"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#testing",
        "title": "Contribute > Testing",
        "section": "Testing",
        "text": "The PyACP test suite uses pytest. You can run it with\nTesting"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#benchmarking",
        "title": "Contribute > Benchmarking",
        "section": "Benchmarking",
        "text": "As part of the test suite, we run some performance benchmarks. These can be run with\nAdditional options can be found in the pytest-benchmark documentation.\nNOTE: The benchmarks use the tc-netem Linux kernel module to simulate a slow network\nconnection within a Docker container. This is available only on Linux, not on Docker for MacOS\nor Windows.\nThe benchmark results from the main branch are uploaded to https://acp.docs.pyansys.com/benchmarks.\nBenchmarking\ntc-netem\nmain"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#pre-commit-hooks",
        "title": "Contribute > Pre-commit hooks",
        "section": "Pre-commit hooks",
        "text": "Style and linter checks are run through the pre-commit tool. You can run these checks with\nWe also recommend installing pre-commit into your repository:\nThis will run the pre-commit hooks on the changed files before every git commit. If you ever\nneed to create a commit without running the hooks, you can skip them with git commit -n.\nPre-commit hooks\ngit commit\ngit commit -n"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#documentation",
        "title": "Contribute > Documentation",
        "section": "Documentation",
        "text": "Before generating the documentation, configure the PyACP server via the\nansys-launcher, see Launching ACP above.\nIf Ansys is installed the examples can directly built with Sphinx.\nOn Linux & MacOS:\nOn Windows:\nThe generated HTML files can be viewed with the browser of your choice.\nAlternatively you can build the documentation by starting a mapdl and pydpf-composites docker\ncontainer. First ensure that you have accepted the DPF Preview License Agreement by setting the\nANSYS_DPF_ACCEPT_LA environment variable to Y\n(see DPF Preview License Agreement\n). In addition the  ANSYSLMD_LICENSE_FILE environment variable needs be set to a\nvalid license server (e.g 1055@mylicenseserver.com). Then start the docker containers with:\nThen build the documentation with the Sphinx commands mentioned above.\nOn Windows, you can use the shipped shell script:\nDocumentation\nansys-launcher\n1055@mylicenseserver.com"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#distribution",
        "title": "Contribute > Distribution",
        "section": "Distribution",
        "text": "The following commands can be used to build and check the PyACP package:\nThis creates both a source distribution, and a wheel file. An alternative is\nDistribution"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#license",
        "title": "Contribute > License",
        "section": "License",
        "text": "PyACP is licensed under the MIT license. Please see the LICENSE for more details.\nLicense\nPyACP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION.html#reference_direction",
        "title": "REFERENCE_DIRECTION",
        "section": "REFERENCE_DIRECTION",
        "text": "REFERENCE_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION.html#ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION",
        "title": "REFERENCE_DIRECTION > REFERENCE_DIRECTION > REFERENCE_DIRECTION",
        "section": "REFERENCE_DIRECTION > REFERENCE_DIRECTION",
        "text": "ElementalDataType.REFERENCE_DIRECTION = 'reference_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE.html#minimum_angle",
        "title": "MINIMUM_ANGLE",
        "section": "MINIMUM_ANGLE",
        "text": "MINIMUM_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE.html#ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE",
        "title": "MINIMUM_ANGLE > MINIMUM_ANGLE > MINIMUM_ANGLE",
        "section": "MINIMUM_ANGLE > MINIMUM_ANGLE",
        "text": "RosetteSelectionMethod.MINIMUM_ANGLE = 'minimum_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE.html#examples-using-rosetteselectionmethodminimum_angle",
        "title": "MINIMUM_ANGLE > Examples using RosetteSelectionMethod.MINIMUM_ANGLE",
        "section": "Examples using RosetteSelectionMethod.MINIMUM_ANGLE",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using RosetteSelectionMethod.MINIMUM_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options.html#ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableFabricFiberAngle.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isalnum",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isalnum.html#isalnum",
        "title": "isalnum",
        "section": "isalnum",
        "text": "Return True if the string is an alpha-numeric string, False otherwise.\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.\nisalnum"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isalnum",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isalnum.html#ansys.acp.core.LaunchMode.isalnum",
        "title": "isalnum > isalnum > isalnum",
        "section": "isalnum > isalnum",
        "text": "LaunchMode.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.M",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.M.html#m",
        "title": "M",
        "section": "M",
        "text": "M"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.M",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.M.html#ansys.acp.core.material_property_sets.VariablePuckConstants.M",
        "title": "M > M > M",
        "section": "M > M",
        "text": "property VariablePuckConstants.M: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.id.html#ansys.acp.core.TubeSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property TubeSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.SHEAR_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.SHEAR_ANGLE.html#shear_angle",
        "title": "SHEAR_ANGLE",
        "section": "SHEAR_ANGLE",
        "text": "SHEAR_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.SHEAR_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.SHEAR_ANGLE.html#ansys.acp.core.ElementalDataType.SHEAR_ANGLE",
        "title": "SHEAR_ANGLE > SHEAR_ANGLE > SHEAR_ANGLE",
        "section": "SHEAR_ANGLE > SHEAR_ANGLE",
        "text": "ElementalDataType.SHEAR_ANGLE = 'shear_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu.html#nu",
        "title": "nu",
        "section": "nu",
        "text": "nu"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu",
        "title": "nu > nu > nu",
        "section": "nu > nu",
        "text": "property ConstantEngineeringConstants.nu: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.id",
        "href": "api/_autosummary/ansys.acp.core.Sensor.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.id",
        "href": "api/_autosummary/ansys.acp.core.Sensor.id.html#ansys.acp.core.Sensor.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Sensor.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.mass.html#mass",
        "title": "mass",
        "section": "mass",
        "text": "mass"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.mass.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.mass",
        "title": "mass > mass > mass",
        "section": "mass > mass",
        "text": "ModelingPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_direction.html#draping_direction",
        "title": "draping_direction",
        "section": "draping_direction",
        "text": "draping_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_direction.html#ansys.acp.core.OrientedSelectionSet.draping_direction",
        "title": "draping_direction > draping_direction > draping_direction",
        "section": "draping_direction > draping_direction",
        "text": "property OrientedSelectionSet.draping_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY.html#xy",
        "title": "XY",
        "section": "XY",
        "text": "XY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY.html#ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY",
        "title": "XY > XY > XY",
        "section": "XY > XY",
        "text": "property ConstantTsaiWuConstants.XY: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.swapcase",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.swapcase.html#swapcase",
        "title": "swapcase",
        "section": "swapcase",
        "text": "Convert uppercase characters to lowercase and lowercase characters to uppercase.\nswapcase"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.swapcase",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.swapcase.html#ansys.acp.core.material_property_sets.PuckMaterialType.swapcase",
        "title": "swapcase > swapcase > swapcase",
        "section": "swapcase > swapcase",
        "text": "PuckMaterialType.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy.html#esxy",
        "title": "eSxy",
        "section": "eSxy",
        "text": "eSxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy",
        "title": "eSxy > eSxy > eSxy",
        "section": "eSxy > eSxy",
        "text": "property VariableStrainLimits.eSxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.normal.html#ansys.acp.core.mesh_data.SolidModelElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "SolidModelElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE.html#analysis_ply_wise",
        "title": "ANALYSIS_PLY_WISE",
        "section": "ANALYSIS_PLY_WISE",
        "text": "ANALYSIS_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE.html#ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE",
        "title": "ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE",
        "section": "ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE",
        "text": "SectionCutType.ANALYSIS_PLY_WISE = 'analysis_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.check",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.check.html#check",
        "title": "check",
        "section": "check",
        "text": "Check if the ACP instance is running.\ntimeout (float | None) – Time to wait for the ACP instance to respond, in seconds. Note that\nthere is no guarantee that check returns within this time.\nInstead, this parameter is used as a hint to the underlying\nimplementation.\nbool\ncheck\ncheck"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.check",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.check.html#ansys.acp.core.ACPInstance.check",
        "title": "check > check > check",
        "section": "check > check",
        "text": "ACPInstance.check(timeout=None)\n\nCheck if the ACP instance is running.\n\nParameters\n\ntimeout (float | None) – Time to wait for the ACP instance to respond, in seconds. Note that\nthere is no guarantee that check returns within this time.\nInstead, this parameter is used as a hint to the underlying\nimplementation.\n\nReturn type\n\nbool\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.values",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.values.html#values",
        "title": "values",
        "section": "values",
        "text": "values"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.values",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.values.html#ansys.acp.core.material_property_sets.FieldVariable.values",
        "title": "values > values > values",
        "section": "values > values",
        "text": "FieldVariable.values: tuple[float, ...]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain.html#effective_strain",
        "title": "effective_strain",
        "section": "effective_strain",
        "text": "effective_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain.html#ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain",
        "title": "effective_strain > effective_strain > effective_strain",
        "section": "effective_strain > effective_strain",
        "text": "property VariableStrainLimits.effective_strain: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isascii",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isascii.html#isascii",
        "title": "isascii",
        "section": "isascii",
        "text": "Return True if all characters in the string are ASCII, False otherwise.\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.\nisascii"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isascii",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isascii.html#ansys.acp.core.LaunchMode.isascii",
        "title": "isascii > isascii > isascii",
        "section": "isascii > isascii",
        "text": "LaunchMode.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_H5.html#ansys_h5",
        "title": "ANSYS_H5",
        "section": "ANSYS_H5",
        "text": "ANSYS_H5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_H5.html#ansys.acp.core.SolidModelExportFormat.ANSYS_H5",
        "title": "ANSYS_H5 > ANSYS_H5 > ANSYS_H5",
        "section": "ANSYS_H5 > ANSYS_H5",
        "text": "SolidModelExportFormat.ANSYS_H5 = 'ansys:h5'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels.html#ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "OrientedSelectionSetNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system",
        "title": "use_global_coordinate_system",
        "section": "use_global_coordinate_system",
        "text": "use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system.html#ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system",
        "title": "use_global_coordinate_system > use_global_coordinate_system > use_global_coordinate_system",
        "section": "use_global_coordinate_system > use_global_coordinate_system",
        "text": "property ParallelSelectionRule.use_global_coordinate_system: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL.html#shell",
        "title": "SHELL",
        "section": "SHELL",
        "text": "SHELL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL.html#ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL",
        "title": "SHELL > SHELL > SHELL",
        "section": "SHELL > SHELL",
        "text": "HDF5CompositeCAEProjectionMode.SHELL = 'shell'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.store.html#ansys.acp.core.BooleanSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "BooleanSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.html#booleanselectionrule",
        "title": "BooleanSelectionRule",
        "section": "BooleanSelectionRule",
        "text": "Instantiate a Boolean Selection Rule.\nname (str) – Name of the Boolean Selection Rule.\nselection_rules (Iterable[LinkedSelectionRule])\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nAdded in ACP server version 24.2.\nBooleanSelectionRule.add_selection_rule(...)\nAdd a LinkedSelectionRule to the BooleanSelectionRule.\nBooleanSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nBooleanSelectionRule.delete()\nDelete the object.\nBooleanSelectionRule.store(parent)\nStore the object on the server.\nBooleanSelectionRule.elemental_data\n\nBooleanSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nBooleanSelectionRule.include_rule\n\nBooleanSelectionRule.mesh\nFull mesh associated with the object.\nBooleanSelectionRule.name\nThe name of the object.\nBooleanSelectionRule.nodal_data\n\nBooleanSelectionRule.parent\nThe parent of the object.\nBooleanSelectionRule.selection_rules\n\nBooleanSelectionRule.shell_mesh\nShell mesh associated with the object.\nBooleanSelectionRule.status\n\nBooleanSelectionRule\nFalse\nBooleanSelectionRule.add_selection_rule\nBooleanSelectionRule.clone\nBooleanSelectionRule.delete\nBooleanSelectionRule.store\nBooleanSelectionRule.elemental_data\nBooleanSelectionRule.id\nBooleanSelectionRule.include_rule\nBooleanSelectionRule.mesh\nBooleanSelectionRule.name\nBooleanSelectionRule.nodal_data\nBooleanSelectionRule.parent\nBooleanSelectionRule.selection_rules\nBooleanSelectionRule.shell_mesh\nBooleanSelectionRule.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.html#ansys.acp.core.BooleanSelectionRule",
        "title": "BooleanSelectionRule > BooleanSelectionRule > BooleanSelectionRule",
        "section": "BooleanSelectionRule > BooleanSelectionRule",
        "text": "class ansys.acp.core.BooleanSelectionRule(*, name='BooleanSelectionrule', selection_rules=(), include_rule=True)\n\nInstantiate a Boolean Selection Rule.\n\nParameters\n\nname (str) – Name of the Boolean Selection Rule.\n\nselection_rules (Iterable[LinkedSelectionRule])\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBooleanSelectionRule.add_selection_rule(...)\n\nAdd a LinkedSelectionRule to the BooleanSelectionRule.\n\nBooleanSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nBooleanSelectionRule.delete()\n\nDelete the object.\n\nBooleanSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBooleanSelectionRule.elemental_data\n\n\n\nBooleanSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nBooleanSelectionRule.include_rule\n\n\n\nBooleanSelectionRule.mesh\n\nFull mesh associated with the object.\n\nBooleanSelectionRule.name\n\nThe name of the object.\n\nBooleanSelectionRule.nodal_data\n\n\n\nBooleanSelectionRule.parent\n\nThe parent of the object.\n\nBooleanSelectionRule.selection_rules\n\n\n\nBooleanSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nBooleanSelectionRule.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.html#examples-using-booleanselectionrule",
        "title": "BooleanSelectionRule > Examples using BooleanSelectionRule",
        "section": "Examples using BooleanSelectionRule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using BooleanSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "CylindricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE.html#uniaxial_stress_state",
        "title": "UNIAXIAL_STRESS_STATE",
        "section": "UNIAXIAL_STRESS_STATE",
        "text": "UNIAXIAL_STRESS_STATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE.html#ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE",
        "title": "UNIAXIAL_STRESS_STATE > UNIAXIAL_STRESS_STATE > UNIAXIAL_STRESS_STATE",
        "section": "UNIAXIAL_STRESS_STATE > UNIAXIAL_STRESS_STATE",
        "text": "StressStateType.UNIAXIAL_STRESS_STATE = 'uniaxial_stress_state'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.store.html#ansys.acp.core.CutOffSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "CutOffSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.html#rosetteselectionmethod",
        "title": "RosetteSelectionMethod",
        "section": "RosetteSelectionMethod",
        "text": "Options for how the rosette is selected in oriented selection sets.\nRosetteSelectionMethod.MINIMUM_ANGLE\n\nRosetteSelectionMethod.MAXIMUM_ANGLE\n\nRosetteSelectionMethod.MINIMUM_DISTANCE\n\nRosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED\n\nRosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED\n\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n\nRosetteSelectionMethod.ANSYS_CLASSIC\n\nRosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES\n\nRosetteSelectionMethod\nRosetteSelectionMethod.MINIMUM_ANGLE\nRosetteSelectionMethod.MAXIMUM_ANGLE\nRosetteSelectionMethod.MINIMUM_DISTANCE\nRosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED\nRosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\nRosetteSelectionMethod.ANSYS_CLASSIC\nRosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.html#ansys.acp.core.RosetteSelectionMethod",
        "title": "RosetteSelectionMethod > RosetteSelectionMethod > RosetteSelectionMethod",
        "section": "RosetteSelectionMethod > RosetteSelectionMethod",
        "text": "class ansys.acp.core.RosetteSelectionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how the rosette is selected in oriented selection sets.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nRosetteSelectionMethod.MINIMUM_ANGLE\n\n\n\nRosetteSelectionMethod.MAXIMUM_ANGLE\n\n\n\nRosetteSelectionMethod.MINIMUM_DISTANCE\n\n\n\nRosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.ANSYS_CLASSIC\n\n\n\nRosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.html#examples-using-rosetteselectionmethod",
        "title": "RosetteSelectionMethod > Examples using RosetteSelectionMethod",
        "section": "Examples using RosetteSelectionMethod",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using RosetteSelectionMethod"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt.html#xt",
        "title": "Xt",
        "section": "Xt",
        "text": "Xt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt",
        "title": "Xt > Xt > Xt",
        "section": "Xt > Xt",
        "text": "property ConstantWovenStressLimits.Xt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.material",
        "href": "api/_autosummary/ansys.acp.core.Lamina.material.html#material",
        "title": "material",
        "section": "material",
        "text": "Link to an existing fabric or stackup.\nmaterial"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.material",
        "href": "api/_autosummary/ansys.acp.core.Lamina.material.html#ansys.acp.core.Lamina.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property Lamina.material: Fabric | Stackup\n\nLink to an existing fabric or stackup.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.production_ply_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.production_ply_area.html#production_ply_area",
        "title": "production_ply_area",
        "section": "production_ply_area",
        "text": "The surface area of all production plies of the selected entity.\nproduction_ply_area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.production_ply_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.production_ply_area.html#ansys.acp.core.Sensor.production_ply_area",
        "title": "production_ply_area > production_ply_area > production_ply_area",
        "section": "production_ply_area > production_ply_area",
        "text": "property Sensor.production_ply_area: Any\n\nThe surface area of all production plies of the selected entity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_1",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_1.html#woven_stress_limits_1",
        "title": "woven_stress_limits_1",
        "section": "woven_stress_limits_1",
        "text": "woven_stress_limits_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_1",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_1.html#ansys.acp.core.Material.woven_stress_limits_1",
        "title": "woven_stress_limits_1 > woven_stress_limits_1 > woven_stress_limits_1",
        "section": "woven_stress_limits_1 > woven_stress_limits_1",
        "text": "property Material.woven_stress_limits_1: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.interface_layers",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.interface_layers.html#interface_layers",
        "title": "interface_layers",
        "section": "interface_layers",
        "text": "interface_layers"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.interface_layers",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.interface_layers.html#ansys.acp.core.ModelingGroup.interface_layers",
        "title": "interface_layers > interface_layers > interface_layers",
        "section": "interface_layers > interface_layers",
        "text": "property ModelingGroup.interface_layers: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableEngineeringConstants.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle.html#draped_transverse_angle",
        "title": "draped_transverse_angle",
        "section": "draped_transverse_angle",
        "text": "draped_transverse_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle",
        "title": "draped_transverse_angle > draped_transverse_angle > draped_transverse_angle",
        "section": "draped_transverse_angle > draped_transverse_angle",
        "text": "ModelingPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.html#variabledensity",
        "title": "VariableDensity",
        "section": "VariableDensity",
        "text": "Variable density material property set.\nAdded in ACP server version 24.2.\nVariableDensity.field_variables\n\nVariableDensity.interpolation_options\n\nVariableDensity.rho\n\nVariableDensity\nVariableDensity.field_variables\nVariableDensity.interpolation_options\nVariableDensity.rho"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.html#ansys.acp.core.material_property_sets.VariableDensity",
        "title": "VariableDensity > VariableDensity > VariableDensity",
        "section": "VariableDensity > VariableDensity",
        "text": "class ansys.acp.core.material_property_sets.VariableDensity(*, _parent_object=None, _attribute_path=None)\n\nVariable density material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableDensity.field_variables\n\n\n\nVariableDensity.interpolation_options\n\n\n\nVariableDensity.rho\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2.html#e2_2",
        "title": "E2_2",
        "section": "E2_2",
        "text": "E2_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2",
        "title": "E2_2 > E2_2 > E2_2",
        "section": "E2_2 > E2_2",
        "text": "property VariableWovenCharacterization.E2_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/howto/print_model",
        "href": "user_guide/howto/print_model.html#print-model-tree",
        "title": "Print model tree",
        "section": "Print model tree",
        "text": "A tree structure gives an overview of an ACP model. To print a model’s tree structure, start with a Model instance:\nYou can print the tree structure using the print_model() function:\nAlternatively, you can use get_model_tree() to get a tree representation. This allows manually iterating over the tree structure:\nThe hide_empty label can be set to False to also show empty groups:\nPrint model tree\nModel\nprint_model()\nget_model_tree()\nhide_empty\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress.html#effective_stress",
        "title": "effective_stress",
        "section": "effective_stress",
        "text": "effective_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress.html#ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress",
        "title": "effective_stress > effective_stress > effective_stress",
        "section": "effective_stress > effective_stress",
        "text": "property ConstantStressLimits.effective_stress: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field.html#reference_direction_field",
        "title": "reference_direction_field",
        "section": "reference_direction_field",
        "text": "reference_direction_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field.html#ansys.acp.core.OrientedSelectionSet.reference_direction_field",
        "title": "reference_direction_field > reference_direction_field > reference_direction_field",
        "section": "reference_direction_field > reference_direction_field",
        "text": "property OrientedSelectionSet.reference_direction_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field.html#examples-using-orientedselectionsetreference_direction_field",
        "title": "reference_direction_field > Examples using OrientedSelectionSet.reference_direction_field",
        "section": "Examples using OrientedSelectionSet.reference_direction_field",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using OrientedSelectionSet.reference_direction_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.store",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.store",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.store.html#ansys.acp.core.LayupMappingObject.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "LayupMappingObject.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.fabric",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.fabric.html#fabric",
        "title": "fabric",
        "section": "fabric",
        "text": "Linked fabric.\nfabric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.fabric",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.fabric.html#ansys.acp.core.FabricWithAngle.fabric",
        "title": "fabric > fabric > fabric",
        "section": "fabric > fabric",
        "text": "property FabricWithAngle.fabric: Fabric\n\nLinked fabric.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.elemental_data.html#ansys.acp.core.ProductionPly.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ProductionPly.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL.html#sensor_by_material",
        "title": "SENSOR_BY_MATERIAL",
        "section": "SENSOR_BY_MATERIAL",
        "text": "SENSOR_BY_MATERIAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL.html#ansys.acp.core.SensorType.SENSOR_BY_MATERIAL",
        "title": "SENSOR_BY_MATERIAL > SENSOR_BY_MATERIAL > SENSOR_BY_MATERIAL",
        "section": "SENSOR_BY_MATERIAL > SENSOR_BY_MATERIAL",
        "text": "SensorType.SENSOR_BY_MATERIAL = 'sensor_by_material'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL.html#examples-using-sensortypesensor_by_material",
        "title": "SENSOR_BY_MATERIAL > Examples using SensorType.SENSOR_BY_MATERIAL",
        "section": "Examples using SensorType.SENSOR_BY_MATERIAL",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using SensorType.SENSOR_BY_MATERIAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.html#importedanalysisply",
        "title": "ImportedAnalysisPly",
        "section": "ImportedAnalysisPly",
        "text": "Instantiate an Imported Analysis Ply.\nname (str) – The name of the Imported Analysis Ply.\nmaterial (Material) – Material of the Imported Analysis ply.\nangle (float) – Angle of the Analysis ply in degrees.\nthickness (float) – Thickness of the ply.\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\nAdded in ACP server version 25.1.\nImportedAnalysisPly.active_in_post_mode\n\nImportedAnalysisPly.angle\n\nImportedAnalysisPly.id\nIdentifier of the object, used for example as key in maps.\nImportedAnalysisPly.material\n\nImportedAnalysisPly.name\nThe name of the object.\nImportedAnalysisPly.parent\nThe parent of the object.\nImportedAnalysisPly.solid_mesh\nSolid mesh associated with the object.\nImportedAnalysisPly.status\n\nImportedAnalysisPly.thickness\n\nImportedAnalysisPly\nImportedAnalysisPly.active_in_post_mode\nImportedAnalysisPly.angle\nImportedAnalysisPly.id\nImportedAnalysisPly.material\nImportedAnalysisPly.name\nImportedAnalysisPly.parent\nImportedAnalysisPly.solid_mesh\nImportedAnalysisPly.status\nImportedAnalysisPly.thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.html#ansys.acp.core.ImportedAnalysisPly",
        "title": "ImportedAnalysisPly > ImportedAnalysisPly > ImportedAnalysisPly",
        "section": "ImportedAnalysisPly > ImportedAnalysisPly",
        "text": "class ansys.acp.core.ImportedAnalysisPly\n\nInstantiate an Imported Analysis Ply.\n\nParameters\n\nname (str) – The name of the Imported Analysis Ply.\n\nmaterial (Material) – Material of the Imported Analysis ply.\n\nangle (float) – Angle of the Analysis ply in degrees.\n\nthickness (float) – Thickness of the ply.\n\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedAnalysisPly.active_in_post_mode\n\n\n\nImportedAnalysisPly.angle\n\n\n\nImportedAnalysisPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nImportedAnalysisPly.material\n\n\n\nImportedAnalysisPly.name\n\nThe name of the object.\n\nImportedAnalysisPly.parent\n\nThe parent of the object.\n\nImportedAnalysisPly.solid_mesh\n\nSolid mesh associated with the object.\n\nImportedAnalysisPly.status\n\n\n\nImportedAnalysisPly.thickness\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.html#examples-using-importedanalysisply",
        "title": "ImportedAnalysisPly > Examples using ImportedAnalysisPly",
        "section": "Examples using ImportedAnalysisPly",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ImportedAnalysisPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.CARBON",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.CARBON.html#carbon",
        "title": "CARBON",
        "section": "CARBON",
        "text": "CARBON"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.CARBON",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.CARBON.html#ansys.acp.core.material_property_sets.PuckMaterialType.CARBON",
        "title": "CARBON > CARBON > CARBON",
        "section": "CARBON > CARBON",
        "text": "PuckMaterialType.CARBON = 'carbon'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume.html#volume",
        "title": "volume",
        "section": "volume",
        "text": "volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume",
        "title": "volume > volume > volume",
        "section": "volume > volume",
        "text": "AnalysisPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.REMOVE",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.REMOVE.html#remove",
        "title": "REMOVE",
        "section": "REMOVE",
        "text": "REMOVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.REMOVE",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.REMOVE.html#ansys.acp.core.BooleanOperationType.REMOVE",
        "title": "REMOVE > REMOVE > REMOVE",
        "section": "REMOVE > REMOVE",
        "text": "BooleanOperationType.REMOVE = 'remove'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.clear",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.clear.html#clear",
        "title": "clear",
        "section": "clear",
        "text": "Close all models.\nCloses the models which are currently open, without first\nsaving them to a file.\nclear"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.clear",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.clear.html#ansys.acp.core.ACPInstance.clear",
        "title": "clear > clear > clear",
        "section": "clear > clear",
        "text": "ACPInstance.clear()\n\nClose all models.\n\nCloses the models which are currently open, without first\nsaving them to a file.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.clear",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.clear.html#examples-using-acpinstanceclear",
        "title": "clear > Examples using ACPInstance.clear",
        "section": "Examples using ACPInstance.clear",
        "text": "sphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ACPInstance.clear"
    },
    {
        "objectID": "api/material_property_sets",
        "href": "api/material_property_sets.html#material-property-sets",
        "title": "Material property sets",
        "section": "Material property sets",
        "text": "ConstantDensity(*[, rho, _parent_object, ...])\nConstant density material property set.\nConstantEngineeringConstants(*[, ...])\nConstant engineering constants material property set.\nConstantFabricFiberAngle(*[, ...])\nConstant fabric fiber angle material property set.\nConstantLaRCConstants(*[, ...])\nConstant LaRC failure criterion properties.\nConstantPuckConstants(*[, p_21_pos, ...])\nConstant Puck constants material property set.\nConstantStrainLimits(*[, _parent_object, ...])\nConstant strain limits material property set.\nConstantStressLimits(*[, _parent_object, ...])\nConstant stress limits material property set.\nConstantTsaiWuConstants(*[, XY, XZ, YZ, ...])\nConstant Tsai-Wu constants material property set.\nConstantWovenCharacterization(*[, ...])\nConstant woven characterization material property set.\nConstantWovenStressLimits(*[, Xc, Yc, Zc, ...])\nConstant stress limits property set for woven materials.\nFieldVariable(name, values, default, ...)\nDefines field variables for variable material properties.\nInterpolationOptions(algorithm, cached, ...)\nDefines the interpolation options for variable materials.\nPuckMaterialType(cls, value[, names, ...])\nPossible Puck material types.\nVariableDensity(*[, _parent_object, ...])\nVariable density material property set.\nVariableEngineeringConstants(*[, ...])\nVariable engineering constants material property set.\nVariableFabricFiberAngle(*[, ...])\nVariable fabric fiber angle material property set.\nVariableLaRCConstants(*[, _parent_object, ...])\nVariable LaRC failure criterion properties.\nVariablePuckConstants(*[, _parent_object, ...])\nVariable Puck constants material property set.\nVariableStrainLimits(*[, _parent_object, ...])\nVariable strain limits material property set.\nVariableStressLimits(*[, _parent_object, ...])\nVariable stress limits material property set.\nVariableTsaiWuConstants(*[, _parent_object, ...])\nVariable Tsai-Wu constants material property set.\nVariableWovenCharacterization(*[, ...])\nVariable woven characterization material property set.\nVariableWovenStressLimits(*[, ...])\nVariable stress limits property set for woven materials.\nMaterial property sets\nConstantDensity\nConstantEngineeringConstants\nConstantFabricFiberAngle\nConstantLaRCConstants\nConstantPuckConstants\nConstantStrainLimits\nConstantStressLimits\nConstantTsaiWuConstants\nConstantWovenCharacterization\nConstantWovenStressLimits\nFieldVariable\nInterpolationOptions\nPuckMaterialType\nVariableDensity\nVariableEngineeringConstants\nVariableFabricFiberAngle\nVariableLaRCConstants\nVariablePuckConstants\nVariableStrainLimits\nVariableStressLimits\nVariableTsaiWuConstants\nVariableWovenCharacterization\nVariableWovenStressLimits"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d.html#create_lookup_table_1d",
        "title": "create_lookup_table_1d",
        "section": "create_lookup_table_1d",
        "text": "Instantiate a 1D Look-Up Table.\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\nis automatically created when the look-up table is instantiated\ncannot be deleted or renamed\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\nLookUpTable1D\nAdded in ACP server version 24.2.\ncreate_lookup_table_1d\nLocation\nN\n(N, )\nLocation\nNaN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d.html#ansys.acp.core.Model.create_lookup_table_1d",
        "title": "create_lookup_table_1d > create_lookup_table_1d > create_lookup_table_1d",
        "section": "create_lookup_table_1d > create_lookup_table_1d",
        "text": "Model.create_lookup_table_1d(*, name='LookUpTable1D', origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0))\n\nInstantiate a 1D Look-Up Table.\n\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\n\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\n\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\n\nReturn type\n\nLookUpTable1D\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d.html#examples-using-modelcreate_lookup_table_1d",
        "title": "create_lookup_table_1d > Examples using Model.create_lookup_table_1d",
        "section": "Examples using Model.create_lookup_table_1d",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using Model.create_lookup_table_1d"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.material",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.material.html#material",
        "title": "material",
        "section": "material",
        "text": "material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.material",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.material.html#ansys.acp.core.ProductionPly.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property ProductionPly.material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.store",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.store",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.store.html#ansys.acp.core.ButtJointSequence.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ButtJointSequence.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets.html#oriented_selection_sets",
        "title": "oriented_selection_sets",
        "section": "oriented_selection_sets",
        "text": "oriented_selection_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets.html#ansys.acp.core.Model.oriented_selection_sets",
        "title": "oriented_selection_sets > oriented_selection_sets > oriented_selection_sets",
        "section": "oriented_selection_sets > oriented_selection_sets",
        "text": "property Model.oriented_selection_sets: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.oriented_selection_sets.html#examples-using-modeloriented_selection_sets",
        "title": "oriented_selection_sets > Examples using Model.oriented_selection_sets",
        "section": "Examples using Model.oriented_selection_sets",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Model.oriented_selection_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.area_weight",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.area_weight.html#area_weight",
        "title": "area_weight",
        "section": "area_weight",
        "text": "area_weight"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.area_weight",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.area_weight.html#ansys.acp.core.SubLaminate.area_weight",
        "title": "area_weight > area_weight > area_weight",
        "section": "area_weight > area_weight",
        "text": "property SubLaminate.area_weight: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.name.html#ansys.acp.core.TubeSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property TubeSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance.html#negative_capture_tolerance",
        "title": "negative_capture_tolerance",
        "section": "negative_capture_tolerance",
        "text": "negative_capture_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance.html#ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance",
        "title": "negative_capture_tolerance > negative_capture_tolerance > negative_capture_tolerance",
        "section": "negative_capture_tolerance > negative_capture_tolerance",
        "text": "property GeometricalSelectionRule.negative_capture_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.html#linkedobjecthandling",
        "title": "LinkedObjectHandling",
        "section": "LinkedObjectHandling",
        "text": "Defines options for handling linked objects when copying a tree of ACP objects.\nLinkedObjectHandling.KEEP\n\nLinkedObjectHandling.COPY\n\nLinkedObjectHandling.DISCARD\n\nLinkedObjectHandling\nLinkedObjectHandling.KEEP\nLinkedObjectHandling.COPY\nLinkedObjectHandling.DISCARD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.html#ansys.acp.core.LinkedObjectHandling",
        "title": "LinkedObjectHandling > LinkedObjectHandling > LinkedObjectHandling",
        "section": "LinkedObjectHandling > LinkedObjectHandling",
        "text": "class ansys.acp.core.LinkedObjectHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDefines options for handling linked objects when copying a tree of ACP objects.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLinkedObjectHandling.KEEP\n\n\n\nLinkedObjectHandling.COPY\n\n\n\nLinkedObjectHandling.DISCARD\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "BooleanSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.CURRENCY",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.CURRENCY.html#currency",
        "title": "CURRENCY",
        "section": "CURRENCY",
        "text": "CURRENCY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.CURRENCY",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.CURRENCY.html#ansys.acp.core.PhysicalDimension.CURRENCY",
        "title": "CURRENCY > CURRENCY > CURRENCY",
        "section": "CURRENCY > CURRENCY",
        "text": "PhysicalDimension.CURRENCY = 'currency'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor.html#interface_weakening_factor",
        "title": "interface_weakening_factor",
        "section": "interface_weakening_factor",
        "text": "interface_weakening_factor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor.html#ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor",
        "title": "interface_weakening_factor > interface_weakening_factor > interface_weakening_factor",
        "section": "interface_weakening_factor > interface_weakening_factor",
        "text": "property VariablePuckConstants.interface_weakening_factor: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.join",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.join.html#join",
        "title": "join",
        "section": "join",
        "text": "Concatenate any number of strings.\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’\njoin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.join",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.join.html#ansys.acp.core.LaunchMode.join",
        "title": "join > join > join",
        "section": "join > join",
        "text": "LaunchMode.join(iterable, /)\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.FIBER_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.FIBER_DIRECTION.html#fiber_direction",
        "title": "FIBER_DIRECTION",
        "section": "FIBER_DIRECTION",
        "text": "FIBER_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.FIBER_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.FIBER_DIRECTION.html#ansys.acp.core.ElementalDataType.FIBER_DIRECTION",
        "title": "FIBER_DIRECTION > FIBER_DIRECTION > FIBER_DIRECTION",
        "section": "FIBER_DIRECTION > FIBER_DIRECTION",
        "text": "ElementalDataType.FIBER_DIRECTION = 'fiber_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc.html#yc",
        "title": "Yc",
        "section": "Yc",
        "text": "Yc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc",
        "title": "Yc > Yc > Yc",
        "section": "Yc > Yc",
        "text": "property ConstantWovenStressLimits.Yc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.lookup_tables_3d",
        "href": "api/_autosummary/ansys.acp.core.Model.lookup_tables_3d.html#lookup_tables_3d",
        "title": "lookup_tables_3d",
        "section": "lookup_tables_3d",
        "text": "lookup_tables_3d"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.lookup_tables_3d",
        "href": "api/_autosummary/ansys.acp.core.Model.lookup_tables_3d.html#ansys.acp.core.Model.lookup_tables_3d",
        "title": "lookup_tables_3d > lookup_tables_3d > lookup_tables_3d",
        "section": "lookup_tables_3d > lookup_tables_3d",
        "text": "property Model.lookup_tables_3d: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.import_model",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.import_model.html#import_model",
        "title": "import_model",
        "section": "import_model",
        "text": "Load an ACP model from a file.\nname (str | None) – Name of the newly loaded model.\npath (str | PathLike[str]) – Path of the file to be loaded.\nformat (str) – Format of the file to be loaded. Can be one of \"acp:h5\",\n\"ansys:h5\", \"ansys:cdb\", \"ansys:dat\", \"abaqus:inp\",\nor \"nastran:bdf\".\nignored_entities – Entities to ignore when loading the FE file. Can be a subset of\nthe following values:\n\"coordinate_systems\", \"element_sets\", \"materials\",\n\"mesh\", or \"shell_sections\".\nAvailable only when the format is not \"acp:h5\".\nconvert_section_data – Whether to import the section data of a shell model and convert it\ninto ACP composite definitions.\nAvailable only when the format is not \"acp:h5\".\nunit_system – Defines the unit system of the imported file. Must be set if the\ninput file does not have units. If the input file does have units,\nunit_system must be either \"from_file\", or match the input\nunit system.\nAvailable only when the format is not \"acp:h5\".\nThe loaded Model instance.\nModel\nimport_model\n\"acp:h5\"\n\"ansys:h5\"\n\"ansys:cdb\"\n\"ansys:dat\"\n\"abaqus:inp\"\n\"nastran:bdf\"\n\"coordinate_systems\"\n\"element_sets\"\n\"materials\"\n\"mesh\"\n\"shell_sections\"\n\"acp:h5\"\n\"acp:h5\"\nunit_system\n\"from_file\"\n\"acp:h5\"\nModel"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.import_model",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.import_model.html#ansys.acp.core.ACPInstance.import_model",
        "title": "import_model > import_model > import_model",
        "section": "import_model > import_model",
        "text": "ACPInstance.import_model(path, *, name=None, format='acp:h5', **kwargs)\n\nLoad an ACP model from a file.\n\nParameters\n\nname (str | None) – Name of the newly loaded model.\n\npath (str | PathLike[str]) – Path of the file to be loaded.\n\nformat (str) – Format of the file to be loaded. Can be one of \"acp:h5\",\n\"ansys:h5\", \"ansys:cdb\", \"ansys:dat\", \"abaqus:inp\",\nor \"nastran:bdf\".\n\nignored_entities – Entities to ignore when loading the FE file. Can be a subset of\nthe following values:\n\"coordinate_systems\", \"element_sets\", \"materials\",\n\"mesh\", or \"shell_sections\".\nAvailable only when the format is not \"acp:h5\".\n\nconvert_section_data – Whether to import the section data of a shell model and convert it\ninto ACP composite definitions.\nAvailable only when the format is not \"acp:h5\".\n\nunit_system – Defines the unit system of the imported file. Must be set if the\ninput file does not have units. If the input file does have units,\nunit_system must be either \"from_file\", or match the input\nunit system.\nAvailable only when the format is not \"acp:h5\".\n\nReturns\n\nThe loaded Model instance.\n\nReturn type\n\nModel\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.import_model",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.import_model.html#examples-using-acpinstanceimport_model",
        "title": "import_model > Examples using ACPInstance.import_model",
        "section": "Examples using ACPInstance.import_model",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using ACPInstance.import_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE.html#orthotropic_homogeneous_core",
        "title": "ORTHOTROPIC_HOMOGENEOUS_CORE",
        "section": "ORTHOTROPIC_HOMOGENEOUS_CORE",
        "text": "ORTHOTROPIC_HOMOGENEOUS_CORE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE.html#ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE",
        "title": "ORTHOTROPIC_HOMOGENEOUS_CORE > ORTHOTROPIC_HOMOGENEOUS_CORE > ORTHOTROPIC_HOMOGENEOUS_CORE",
        "section": "ORTHOTROPIC_HOMOGENEOUS_CORE > ORTHOTROPIC_HOMOGENEOUS_CORE",
        "text": "PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE = 'orthotropic_homogeneous_core'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance.html#positive_capture_tolerance",
        "title": "positive_capture_tolerance",
        "section": "positive_capture_tolerance",
        "text": "positive_capture_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance.html#ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance",
        "title": "positive_capture_tolerance > positive_capture_tolerance > positive_capture_tolerance",
        "section": "positive_capture_tolerance > positive_capture_tolerance",
        "text": "property GeometricalSelectionRule.positive_capture_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS.html#coordinate_systems",
        "title": "COORDINATE_SYSTEMS",
        "section": "COORDINATE_SYSTEMS",
        "text": "COORDINATE_SYSTEMS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS.html#ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS",
        "title": "COORDINATE_SYSTEMS > COORDINATE_SYSTEMS > COORDINATE_SYSTEMS",
        "section": "COORDINATE_SYSTEMS > COORDINATE_SYSTEMS",
        "text": "IgnorableEntity.COORDINATE_SYSTEMS = 'coordinate_systems'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableEngineeringConstants.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.html#drapingtype",
        "title": "DrapingType",
        "section": "DrapingType",
        "text": "Options for the draping algorithm used.\nDrapingType.NO_DRAPING\n\nDrapingType.INTERNAL_DRAPING\n\nDrapingType.TABULAR_VALUES\n\nDrapingType\nDrapingType.NO_DRAPING\nDrapingType.INTERNAL_DRAPING\nDrapingType.TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.html#ansys.acp.core.DrapingType",
        "title": "DrapingType > DrapingType > DrapingType",
        "section": "DrapingType > DrapingType",
        "text": "class ansys.acp.core.DrapingType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the draping algorithm used.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDrapingType.NO_DRAPING\n\n\n\nDrapingType.INTERNAL_DRAPING\n\n\n\nDrapingType.TABULAR_VALUES\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.html#examples-using-drapingtype",
        "title": "DrapingType > Examples using DrapingType",
        "section": "Examples using DrapingType",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using DrapingType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.upper_limit",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.upper_limit.html#upper_limit",
        "title": "upper_limit",
        "section": "upper_limit",
        "text": "upper_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.upper_limit",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.upper_limit.html#ansys.acp.core.ParallelSelectionRule.upper_limit",
        "title": "upper_limit > upper_limit > upper_limit",
        "section": "upper_limit > upper_limit",
        "text": "property ParallelSelectionRule.upper_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.angle_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.angle_tolerance.html#angle_tolerance",
        "title": "angle_tolerance",
        "section": "angle_tolerance",
        "text": "angle_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.angle_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.angle_tolerance.html#ansys.acp.core.ShellMappingProperties.angle_tolerance",
        "title": "angle_tolerance > angle_tolerance > angle_tolerance",
        "section": "angle_tolerance > angle_tolerance",
        "text": "ShellMappingProperties.angle_tolerance: float = 35.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material.html#drop_off_material",
        "title": "drop_off_material",
        "section": "drop_off_material",
        "text": "drop_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.Stackup.drop_off_material.html#ansys.acp.core.Stackup.drop_off_material",
        "title": "drop_off_material > drop_off_material > drop_off_material",
        "section": "drop_off_material > drop_off_material",
        "text": "property Stackup.drop_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.html#thicknessfieldtype",
        "title": "ThicknessFieldType",
        "section": "ThicknessFieldType",
        "text": "Options for how thickness from a table is defined.\nThicknessFieldType.ABSOLUTE_VALUES\n\nThicknessFieldType.RELATIVE_SCALING_FACTOR\n\nThicknessFieldType\nThicknessFieldType.ABSOLUTE_VALUES\nThicknessFieldType.RELATIVE_SCALING_FACTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.html#ansys.acp.core.ThicknessFieldType",
        "title": "ThicknessFieldType > ThicknessFieldType > ThicknessFieldType",
        "section": "ThicknessFieldType > ThicknessFieldType",
        "text": "class ansys.acp.core.ThicknessFieldType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how thickness from a table is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nThicknessFieldType.ABSOLUTE_VALUES\n\n\n\nThicknessFieldType.RELATIVE_SCALING_FACTOR\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes.html#root_shapes",
        "title": "root_shapes",
        "section": "root_shapes",
        "text": "root_shapes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes.html#ansys.acp.core.CADGeometry.root_shapes",
        "title": "root_shapes > root_shapes > root_shapes",
        "section": "root_shapes > root_shapes",
        "text": "property CADGeometry.root_shapes: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.root_shapes.html#examples-using-cadgeometryroot_shapes",
        "title": "root_shapes > Examples using CADGeometry.root_shapes",
        "section": "Examples using CADGeometry.root_shapes",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using CADGeometry.root_shapes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.area.html#area",
        "title": "area",
        "section": "area",
        "text": "area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.area.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.area",
        "title": "area > area > area",
        "section": "area > area",
        "text": "ProductionPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.html#fabricwithangle",
        "title": "FabricWithAngle",
        "section": "FabricWithAngle",
        "text": "Defines a fabric of a stackup.\nfabric (Fabric) – Link to an existing fabric.\nangle (float) – Orientation angle in degree of the fabric with respect to the reference direction.\nAdded in ACP server version 24.2.\nFabricWithAngle.clone()\nCreate a new unstored FabricWithAngle with the same properties.\nFabricWithAngle.angle\nOrientation angle in degree of the fabric with respect to the reference direction.\nFabricWithAngle.fabric\nLinked fabric.\nFabricWithAngle\nFabricWithAngle.clone\nFabricWithAngle.angle\nFabricWithAngle.fabric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.html#ansys.acp.core.FabricWithAngle",
        "title": "FabricWithAngle > FabricWithAngle > FabricWithAngle",
        "section": "FabricWithAngle > FabricWithAngle",
        "text": "class ansys.acp.core.FabricWithAngle(fabric, angle=0.0)\n\nDefines a fabric of a stackup.\n\nParameters\n\nfabric (Fabric) – Link to an existing fabric.\n\nangle (float) – Orientation angle in degree of the fabric with respect to the reference direction.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nFabricWithAngle.clone()\n\nCreate a new unstored FabricWithAngle with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nFabricWithAngle.angle\n\nOrientation angle in degree of the fabric with respect to the reference direction.\n\nFabricWithAngle.fabric\n\nLinked fabric.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.html#examples-using-fabricwithangle",
        "title": "FabricWithAngle > Examples using FabricWithAngle",
        "section": "Examples using FabricWithAngle",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using FabricWithAngle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableLaRCConstants.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.ignore_for_postprocessing",
        "href": "api/_autosummary/ansys.acp.core.Stackup.ignore_for_postprocessing.html#ignore_for_postprocessing",
        "title": "ignore_for_postprocessing",
        "section": "ignore_for_postprocessing",
        "text": "ignore_for_postprocessing"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.ignore_for_postprocessing",
        "href": "api/_autosummary/ansys.acp.core.Stackup.ignore_for_postprocessing.html#ansys.acp.core.Stackup.ignore_for_postprocessing",
        "title": "ignore_for_postprocessing > ignore_for_postprocessing > ignore_for_postprocessing",
        "section": "ignore_for_postprocessing > ignore_for_postprocessing",
        "text": "property Stackup.ignore_for_postprocessing: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.translate",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.translate.html#translate",
        "title": "translate",
        "section": "translate",
        "text": "Replace each character in the string using the given translation table.\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.\ntranslate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.translate",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.translate.html#ansys.acp.core.LaunchMode.translate",
        "title": "translate > translate > translate",
        "section": "translate > translate",
        "text": "LaunchMode.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\ntable\n\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2.html#e1_2",
        "title": "E1_2",
        "section": "E1_2",
        "text": "E1_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2",
        "title": "E1_2 > E1_2 > E1_2",
        "section": "E1_2 > E1_2",
        "text": "property ConstantWovenCharacterization.E1_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.taper_edges",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.taper_edges.html#taper_edges",
        "title": "taper_edges",
        "section": "taper_edges",
        "text": "taper_edges"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.taper_edges",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.taper_edges.html#ansys.acp.core.ModelingPly.taper_edges",
        "title": "taper_edges > taper_edges > taper_edges",
        "section": "taper_edges > taper_edges",
        "text": "property ModelingPly.taper_edges: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.store",
        "href": "api/_autosummary/ansys.acp.core.Rosette.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.store",
        "href": "api/_autosummary/ansys.acp.core.Rosette.store.html#ansys.acp.core.Rosette.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "Rosette.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE.html#minimum_distance",
        "title": "MINIMUM_DISTANCE",
        "section": "MINIMUM_DISTANCE",
        "text": "MINIMUM_DISTANCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE.html#ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE",
        "title": "MINIMUM_DISTANCE > MINIMUM_DISTANCE > MINIMUM_DISTANCE",
        "section": "MINIMUM_DISTANCE > MINIMUM_DISTANCE",
        "text": "RosetteSelectionMethod.MINIMUM_DISTANCE = 'minimum_distance'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_H5.html#ansys_h5",
        "title": "ANSYS_H5",
        "section": "ANSYS_H5",
        "text": "ANSYS_H5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_H5.html#ansys.acp.core.SolidModelImportFormat.ANSYS_H5",
        "title": "ANSYS_H5 > ANSYS_H5 > ANSYS_H5",
        "section": "ANSYS_H5 > ANSYS_H5",
        "text": "SolidModelImportFormat.ANSYS_H5 = 'ansys:h5'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_origin",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_origin.html#radius_origin",
        "title": "radius_origin",
        "section": "radius_origin",
        "text": "radius_origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_origin",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_origin.html#ansys.acp.core.VariableOffsetSelectionRule.radius_origin",
        "title": "radius_origin > radius_origin > radius_origin",
        "section": "radius_origin > radius_origin",
        "text": "property VariableOffsetSelectionRule.radius_origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.html#extrusionguide",
        "title": "ExtrusionGuide",
        "section": "ExtrusionGuide",
        "text": "Instantiate an Extrusion Guide of a Solid Model.\nname (str) – The name of the Oriented Selection Set.\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\nradius (float) – Controls the sphere of influence for mesh morphing.\ndepth (float) – Defines the bias of the mesh morphing.\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\nAdded in ACP server version 25.1.\nExtrusionGuide.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nExtrusionGuide.delete()\nDelete the object.\nExtrusionGuide.store(parent)\nStore the object on the server.\nExtrusionGuide.active\n\nExtrusionGuide.cad_geometry\n\nExtrusionGuide.depth\n\nExtrusionGuide.direction\n\nExtrusionGuide.edge_set\n\nExtrusionGuide.extrusion_guide_type\n\nExtrusionGuide.id\nIdentifier of the object, used for example as key in maps.\nExtrusionGuide.name\nThe name of the object.\nExtrusionGuide.parent\nThe parent of the object.\nExtrusionGuide.radius\n\nExtrusionGuide.status\n\nExtrusionGuide.use_curvature_correction\n\nExtrusionGuide\nExtrusionGuideType.BY_GEOMETRY\nExtrusionGuideType.BY_DIRECTION\nExtrusionGuide.clone\nExtrusionGuide.delete\nExtrusionGuide.store\nExtrusionGuide.active\nExtrusionGuide.cad_geometry\nExtrusionGuide.depth\nExtrusionGuide.direction\nExtrusionGuide.edge_set\nExtrusionGuide.extrusion_guide_type\nExtrusionGuide.id\nExtrusionGuide.name\nExtrusionGuide.parent\nExtrusionGuide.radius\nExtrusionGuide.status\nExtrusionGuide.use_curvature_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.html#ansys.acp.core.ExtrusionGuide",
        "title": "ExtrusionGuide > ExtrusionGuide > ExtrusionGuide",
        "section": "ExtrusionGuide > ExtrusionGuide",
        "text": "class ansys.acp.core.ExtrusionGuide(*, name='ExtrusionGuide', active=True, edge_set=None, extrusion_guide_type='by_direction', cad_geometry=None, direction=(0.0, 0.0, 1.0), radius=0.0, depth=0.0, use_curvature_correction=False)\n\nInstantiate an Extrusion Guide of a Solid Model.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\n\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\n\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\n\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\n\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\n\nradius (float) – Controls the sphere of influence for mesh morphing.\n\ndepth (float) – Defines the bias of the mesh morphing.\n\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nExtrusionGuide.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nExtrusionGuide.delete()\n\nDelete the object.\n\nExtrusionGuide.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nExtrusionGuide.active\n\n\n\nExtrusionGuide.cad_geometry\n\n\n\nExtrusionGuide.depth\n\n\n\nExtrusionGuide.direction\n\n\n\nExtrusionGuide.edge_set\n\n\n\nExtrusionGuide.extrusion_guide_type\n\n\n\nExtrusionGuide.id\n\nIdentifier of the object, used for example as key in maps.\n\nExtrusionGuide.name\n\nThe name of the object.\n\nExtrusionGuide.parent\n\nThe parent of the object.\n\nExtrusionGuide.radius\n\n\n\nExtrusionGuide.status\n\n\n\nExtrusionGuide.use_curvature_correction\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.external_path",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.external_path.html#external_path",
        "title": "external_path",
        "section": "external_path",
        "text": "external_path"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.external_path",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.external_path.html#ansys.acp.core.CADGeometry.external_path",
        "title": "external_path > external_path > external_path",
        "section": "external_path > external_path",
        "text": "property CADGeometry.external_path: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#pymechanical-to-cdb-shell-workflow",
        "title": "PyMechanical to CDB shell workflow",
        "section": "PyMechanical to CDB shell workflow",
        "text": "This example shows how to set up a workflow that uses PyMechanical to mesh the\ngeometry and define the load case, PyACP to define a layup, PyMAPDL to solve the\nmodel, and PyDPF - Composites to post-process the results.\nThis workflow does not suffer from the limitations of the PyACP to\nPyMechanical integration.\nPyMechanical to CDB shell workflow"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#import-modules-and-start-the-ansys-products",
        "title": "PyMechanical to CDB shell workflow > Import modules and start the Ansys products",
        "section": "Import modules and start the Ansys products",
        "text": "Import the standard library and third-party dependencies.\nImport PyACP, PyMechanical, and PyDPF - Composites.\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel.\nImport modules and start the Ansys products\nThreadPoolExecutor"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#get-example-input-files",
        "title": "PyMechanical to CDB shell workflow > Get example input files",
        "section": "Get example input files",
        "text": "Create a temporary working directory, and download the example input files\nto this directory.\nGet example input files"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#generate-the-mesh-in-pymechanical",
        "title": "PyMechanical to CDB shell workflow > Generate the mesh in PyMechanical",
        "section": "Generate the mesh in PyMechanical",
        "text": "Load the geometry into Mechanical, generate the mesh, and define the\nload case.\nGenerate the mesh in PyMechanical"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#set-up-the-acp-model",
        "title": "PyMechanical to CDB shell workflow > Set up the ACP model",
        "section": "Set up the ACP model",
        "text": "Setup basic ACP lay-up based on the CDB file.\nSet up the ACP model"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#update-and-save-the-acp-model",
        "title": "PyMechanical to CDB shell workflow > Update and Save the ACP model",
        "section": "Update and Save the ACP model",
        "text": "Update and Save the ACP model"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#solve-with-pymapdl",
        "title": "PyMechanical to CDB shell workflow > Solve with PyMAPDL",
        "section": "Solve with PyMAPDL",
        "text": "Load the CDB file into PyMAPDL.\nSolve the model.\nShow the displacements in postprocessing.\nDownload the RST file for further postprocessing.\nSolve with PyMAPDL"
    },
    {
        "objectID": "examples/workflows/05-pymechanical-to-cdb-workflow",
        "href": "examples/workflows/05-pymechanical-to-cdb-workflow.html#postprocessing-with-pydpf---composites",
        "title": "PyMechanical to CDB shell workflow > Postprocessing with PyDPF - Composites",
        "section": "Postprocessing with PyDPF - Composites",
        "text": "Specify the combined failure criterion.\nCreate the composite model and configure its input.\nEvaluate the failure criteria.\nQuery and plot the results.\nNote that the maximum IRF is different when compared to pymechanical_shell_example\nbecause ACP sets the ERESX,NO option in the CDB file. This option disables interpolation\nof the results from the integration point to the nodes.\nDownload Jupyter notebook: 05-pymechanical-to-cdb-workflow.ipynb\nDownload Python source code: 05-pymechanical-to-cdb-workflow.py\nDownload zipped: 05-pymechanical-to-cdb-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocessing with PyDPF - Composites\nERESX,NO\nDownload Jupyter notebook: 05-pymechanical-to-cdb-workflow.ipynb\nDownload Python source code: 05-pymechanical-to-cdb-workflow.py\nDownload zipped: 05-pymechanical-to-cdb-workflow.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.nodal_data.html#ansys.acp.core.CutOffSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property CutOffSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.edge_set",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.edge_set.html#edge_set",
        "title": "edge_set",
        "section": "edge_set",
        "text": "edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.edge_set",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.edge_set.html#ansys.acp.core.TubeSelectionRule.edge_set",
        "title": "edge_set > edge_set > edge_set",
        "section": "edge_set > edge_set",
        "text": "property TubeSelectionRule.edge_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.shell_element_sets",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.shell_element_sets.html#shell_element_sets",
        "title": "shell_element_sets",
        "section": "shell_element_sets",
        "text": "shell_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.shell_element_sets",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.shell_element_sets.html#ansys.acp.core.LayupMappingObject.shell_element_sets",
        "title": "shell_element_sets > shell_element_sets > shell_element_sets",
        "section": "shell_element_sets > shell_element_sets",
        "text": "property LayupMappingObject.shell_element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.to_pyvista",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.to_pyvista.html#to_pyvista",
        "title": "to_pyvista",
        "section": "to_pyvista",
        "text": "Convert the mesh data to a PyVista object.\nPolyData\nto_pyvista"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.to_pyvista",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.to_pyvista.html#ansys.acp.core.mesh_data.TriangleMesh.to_pyvista",
        "title": "to_pyvista > to_pyvista > to_pyvista",
        "section": "to_pyvista > to_pyvista",
        "text": "TriangleMesh.to_pyvista()\n\nConvert the mesh data to a PyVista object.\n\n!! processed by numpydoc !!\n\nReturn type\n\nPolyData"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.html#unitsystemtype",
        "title": "UnitSystemType",
        "section": "UnitSystemType",
        "text": "Available choices for the unit system.\nUnitSystemType.UNDEFINED\n\nUnitSystemType.SI\n\nUnitSystemType.MKS\n\nUnitSystemType.uMKS\n\nUnitSystemType.CGS\n\nUnitSystemType.MPA\n\nUnitSystemType.BFT\n\nUnitSystemType.BIN\n\nUnitSystemType.FROM_FILE\n\nUnitSystemType\nUnitSystemType.UNDEFINED\nUnitSystemType.SI\nUnitSystemType.MKS\nUnitSystemType.uMKS\nUnitSystemType.CGS\nUnitSystemType.MPA\nUnitSystemType.BFT\nUnitSystemType.BIN\nUnitSystemType.FROM_FILE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.html#ansys.acp.core.UnitSystemType",
        "title": "UnitSystemType > UnitSystemType > UnitSystemType",
        "section": "UnitSystemType > UnitSystemType",
        "text": "class ansys.acp.core.UnitSystemType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nAvailable choices for the unit system.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nUnitSystemType.UNDEFINED\n\n\n\nUnitSystemType.SI\n\n\n\nUnitSystemType.MKS\n\n\n\nUnitSystemType.uMKS\n\n\n\nUnitSystemType.CGS\n\n\n\nUnitSystemType.MPA\n\n\n\nUnitSystemType.BFT\n\n\n\nUnitSystemType.BIN\n\n\n\nUnitSystemType.FROM_FILE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.html#examples-using-unitsystemtype",
        "title": "UnitSystemType > Examples using UnitSystemType",
        "section": "Examples using UnitSystemType",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using UnitSystemType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction.html#fiber_direction",
        "title": "fiber_direction",
        "section": "fiber_direction",
        "text": "fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction",
        "title": "fiber_direction > fiber_direction > fiber_direction",
        "section": "fiber_direction > fiber_direction",
        "text": "ModelingPlyElementalData.fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.locked",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.locked",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.locked.html#ansys.acp.core.SectionCut.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property SectionCut.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.name.html#ansys.acp.core.ImportedModelingPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ImportedModelingPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.delete.html#ansys.acp.core.SphericalSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SphericalSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.id.html#ansys.acp.core.CutOffGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CutOffGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE.html#plane_stress_state",
        "title": "PLANE_STRESS_STATE",
        "section": "PLANE_STRESS_STATE",
        "text": "PLANE_STRESS_STATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE.html#ansys.acp.core.StressStateType.PLANE_STRESS_STATE",
        "title": "PLANE_STRESS_STATE > PLANE_STRESS_STATE > PLANE_STRESS_STATE",
        "section": "PLANE_STRESS_STATE > PLANE_STRESS_STATE",
        "text": "StressStateType.PLANE_STRESS_STATE = 'plane_stress_state'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZt.html#ezt",
        "title": "eZt",
        "section": "eZt",
        "text": "eZt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZt.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eZt",
        "title": "eZt > eZt > eZt",
        "section": "eZt > eZt",
        "text": "property VariableStrainLimits.eZt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.GLOBAL",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.GLOBAL.html#global",
        "title": "GLOBAL",
        "section": "GLOBAL",
        "text": "GLOBAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.GLOBAL",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.GLOBAL.html#ansys.acp.core.DropOffMaterialHandling.GLOBAL",
        "title": "GLOBAL > GLOBAL > GLOBAL",
        "section": "GLOBAL > GLOBAL",
        "text": "DropOffMaterialHandling.GLOBAL = 'global'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "ModelingPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.MATERIALS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.MATERIALS.html#materials",
        "title": "MATERIALS",
        "section": "MATERIALS",
        "text": "MATERIALS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.MATERIALS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.MATERIALS.html#ansys.acp.core.IgnorableEntity.MATERIALS",
        "title": "MATERIALS > MATERIALS > MATERIALS",
        "section": "MATERIALS > MATERIALS",
        "text": "IgnorableEntity.MATERIALS = 'materials'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosette_selection_method.html#rosette_selection_method",
        "title": "rosette_selection_method",
        "section": "rosette_selection_method",
        "text": "rosette_selection_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosette_selection_method.html#ansys.acp.core.ImportedModelingPly.rosette_selection_method",
        "title": "rosette_selection_method > rosette_selection_method > rosette_selection_method",
        "section": "rosette_selection_method > rosette_selection_method",
        "text": "property ImportedModelingPly.rosette_selection_method: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio.html#fracture_toughness_ratio",
        "title": "fracture_toughness_ratio",
        "section": "fracture_toughness_ratio",
        "text": "fracture_toughness_ratio"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio",
        "title": "fracture_toughness_ratio > fracture_toughness_ratio > fracture_toughness_ratio",
        "section": "fracture_toughness_ratio > fracture_toughness_ratio",
        "text": "property ConstantLaRCConstants.fracture_toughness_ratio: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type.html#operation_type",
        "title": "operation_type",
        "section": "operation_type",
        "text": "Operation to combine the selection rule with other selection rules.\noperation_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type.html#ansys.acp.core.LinkedSelectionRule.operation_type",
        "title": "operation_type > operation_type > operation_type",
        "section": "operation_type > operation_type",
        "text": "property LinkedSelectionRule.operation_type: BooleanOperationType\n\nOperation to combine the selection rule with other selection rules.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type.html#examples-using-linkedselectionruleoperation_type",
        "title": "operation_type > Examples using LinkedSelectionRule.operation_type",
        "section": "Examples using LinkedSelectionRule.operation_type",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LinkedSelectionRule.operation_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.locked",
        "href": "api/_autosummary/ansys.acp.core.Sensor.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.locked",
        "href": "api/_autosummary/ansys.acp.core.Sensor.locked.html#ansys.acp.core.Sensor.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property Sensor.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.html#solidelementsetnodaldata",
        "title": "SolidElementSetNodalData",
        "section": "SolidElementSetNodalData",
        "text": "Represents nodal data for a Solid Element Set.\nSolidElementSetNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSolidElementSetNodalData.node_labels\n\nSolidElementSetNodalData\nSolidElementSetNodalData.get_pyvista_mesh\nSolidElementSetNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.html#ansys.acp.core.mesh_data.SolidElementSetNodalData",
        "title": "SolidElementSetNodalData > SolidElementSetNodalData > SolidElementSetNodalData",
        "section": "SolidElementSetNodalData > SolidElementSetNodalData",
        "text": "class ansys.acp.core.mesh_data.SolidElementSetNodalData(node_labels)\n\nRepresents nodal data for a Solid Element Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolidElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidElementSetNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.html#constantdensity",
        "title": "ConstantDensity",
        "section": "ConstantDensity",
        "text": "Constant density material property set.\nAdded in ACP server version 24.2.\nConstantDensity.rho\n\nConstantDensity\nConstantDensity.rho"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.html#ansys.acp.core.material_property_sets.ConstantDensity",
        "title": "ConstantDensity > ConstantDensity > ConstantDensity",
        "section": "ConstantDensity > ConstantDensity",
        "text": "class ansys.acp.core.material_property_sets.ConstantDensity(*, rho=0.0, _parent_object=None, _attribute_path=None)\n\nConstant density material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantDensity.rho\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.html#examples-using-constantdensity",
        "title": "ConstantDensity > Examples using ConstantDensity",
        "section": "Examples using ConstantDensity",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ConstantDensity"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz.html#esyz",
        "title": "eSyz",
        "section": "eSyz",
        "text": "eSyz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz",
        "title": "eSyz > eSyz > eSyz",
        "section": "eSyz > eSyz",
        "text": "property ConstantStrainLimits.eSyz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObjectBase",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObjectBase.html#treeobjectbase",
        "title": "TreeObjectBase",
        "section": "TreeObjectBase",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nBase class for ACP tree objects.\nTreeObjectBase"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObjectBase",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObjectBase.html#ansys.acp.core._tree_objects.base.TreeObjectBase",
        "title": "TreeObjectBase > TreeObjectBase > TreeObjectBase",
        "section": "TreeObjectBase > TreeObjectBase",
        "text": "class ansys.acp.core._tree_objects.base.TreeObjectBase(name='')\n\nBase class for ACP tree objects.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.license_server",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.license_server.html#license_server",
        "title": "license_server",
        "section": "license_server",
        "text": "license_server"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.license_server",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.license_server.html#ansys.acp.core.DockerComposeLaunchConfig.license_server",
        "title": "license_server > license_server > license_server",
        "section": "license_server > license_server",
        "text": "DockerComposeLaunchConfig.license_server: str = ''\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.id",
        "href": "api/_autosummary/ansys.acp.core.Rosette.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.id",
        "href": "api/_autosummary/ansys.acp.core.Rosette.id.html#ansys.acp.core.Rosette.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Rosette.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.format",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.format.html#format",
        "title": "format",
        "section": "format",
        "text": "format"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.format",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.format.html#ansys.acp.core.ImportedSolidModel.format",
        "title": "format > format > format",
        "section": "format > format",
        "text": "property ImportedSolidModel.format: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model",
        "href": "api/_autosummary/ansys.acp.core.Model.html#model",
        "title": "Model",
        "section": "Model",
        "text": "Defines an ACP Model.\nWrapper for accessing an ACP Model residing on a server.\nname (str) – The name of the model.\nuse_nodal_thicknesses (bool) – Defines whether to use nodal thicknesses or element thicknesses.\ndraping_offset_correction (bool) – Defines whether to consider lay-up thickness in draping analysis.\nangle_tolerance (float) – Section computation angle tolerance (in degree).\nrelative_thickness_tolerance (float) – Section computation relative thickness tolerance.\nminimum_analysis_ply_thickness (float) – Section computation minimum analysis ply thickness (in length\nunit of model).\nAdded in ACP server version 24.2.\nModel.create_boolean_selection_rule(*[, ...])\nInstantiate a Boolean Selection Rule.\nModel.create_cad_geometry(*[, name, ...])\nInstantiate a CAD Geometry.\nModel.create_cut_off_selection_rule(*[, ...])\nInstantiate a Cut-Off Selection Rule.\nModel.create_cylindrical_selection_rule(*[, ...])\nInstantiate a Cylindrical Selection Rule.\nModel.create_edge_set(*[, name, ...])\nInstantiate an edge set.\nModel.create_element_set(*[, name, ...])\nInstantiate an Element Set.\nModel.create_fabric(*[, name, material, ...])\nInstantiate a Fabric.\nModel.create_field_definition(*[, name, ...])\nInstantiate a Field Definition.\nModel.create_geometrical_selection_rule(*[, ...])\nInstantiate a Geometrical Selection Rule.\nModel.create_imported_modeling_group(*[, name])\nInstantiate an imported modeling group.\nModel.create_imported_solid_model(*[, name, ...])\nInstantiate an imported solid model.\nModel.create_lookup_table_1d(*[, name, ...])\nInstantiate a 1D Look-Up Table.\nModel.create_lookup_table_3d(*[, name, ...])\nInstantiate a 3D Look-Up Table.\nModel.create_material(*[, name, ply_type, ...])\nInstantiate a Material.\nModel.create_modeling_group(*[, name])\nInstantiate a modeling group.\nModel.create_oriented_selection_set(*[, ...])\nInstantiate an Oriented Selection Set.\nModel.create_parallel_selection_rule(*[, ...])\nInstantiate a Parallel Selection Rule.\nModel.create_rosette(*[, name, ...])\nInstantiate a Rosette.\nModel.create_sampling_point(*[, name, ...])\nInstantiate a Sampling Point.\nModel.create_section_cut(*[, name, active, ...])\nInstantiate a Section Cut.\nModel.create_sensor(*[, name, sensor_type, ...])\nInstantiate a Sensor.\nModel.create_solid_model(*[, name, active, ...])\nInstantiate a solid model.\nModel.create_spherical_selection_rule(*[, ...])\nInstantiate a Spherical Selection Rule.\nModel.create_stackup(*[, name, symmetry, ...])\nInstantiate a Stackup.\nModel.create_sublaminate(*[, name, ...])\nInstantiate a SubLaminate.\nModel.create_tube_selection_rule(*[, name, ...])\nInstantiate a Tube Selection Rule.\nModel.create_variable_offset_selection_rule(*)\nInstantiate a Variable Offset Selection Rule.\nModel.create_virtual_geometry(*[, name, ...])\nInstantiate a Virtual Geometry.\nModel.delete()\nDelete the object.\nModel.export_analysis_model(path)\nSave the analysis model to a CDB file.\nModel.export_hdf5_composite_cae(path, *[, ...])\nExport the lay-up to the HDF5 Composite CAE format.\nModel.export_materials(path)\nWrite materials to a XML (MatML) file.\nModel.export_modeling_ply_geometries(path, *)\nWrite ply geometries to a STEP, IGES, or STL file.\nModel.export_shell_composite_definitions(path)\nExport the lay-up of the shell as HDF5 used by DPF Composites or Mechanical.\nModel.import_hdf5_composite_cae(path[, ...])\nImport the lay-up from an HDF5 Composite CAE file.\nModel.import_materials(matml_path, *[, ...])\nImport materials from a MatML file.\nModel.save(path, *[, save_cache])\nSave ACP Model (.acph5).\nModel.update(*[, relations_only])\nUpdate the model.\nModel.angle_tolerance\n\nModel.average_element_size\n\nModel.boolean_selection_rules\n\nModel.cad_geometries\n\nModel.cut_off_selection_rules\n\nModel.cylindrical_selection_rules\n\nModel.draping_offset_correction\n\nModel.edge_sets\n\nModel.element_sets\n\nModel.elemental_data\n\nModel.fabrics\n\nModel.field_definitions\n\nModel.geometrical_selection_rules\n\nModel.imported_modeling_groups\n\nModel.imported_solid_models\n\nModel.lookup_tables_1d\n\nModel.lookup_tables_3d\n\nModel.materials\n\nModel.mesh\nFull mesh associated with the object.\nModel.minimum_analysis_ply_thickness\n\nModel.modeling_groups\n\nModel.name\nThe name of the object.\nModel.nodal_data\n\nModel.oriented_selection_sets\n\nModel.parallel_selection_rules\n\nModel.parent\nThe parent of the object.\nModel.relative_thickness_tolerance\n\nModel.rosettes\n\nModel.sampling_points\n\nModel.section_cuts\n\nModel.sensors\n\nModel.shell_mesh\nShell mesh associated with the object.\nModel.solid_mesh\nSolid mesh associated with the object.\nModel.solid_models\n\nModel.spherical_selection_rules\n\nModel.stackups\n\nModel.sublaminates\n\nModel.tube_selection_rules\n\nModel.unit_system\n\nModel.use_nodal_thicknesses\n\nModel.variable_offset_selection_rules\n\nModel.virtual_geometries\n\nModel\nModel.create_boolean_selection_rule\nModel.create_cad_geometry\nModel.create_cut_off_selection_rule\nModel.create_cylindrical_selection_rule\nModel.create_edge_set\nModel.create_element_set\nModel.create_fabric\nModel.create_field_definition\nModel.create_geometrical_selection_rule\nModel.create_imported_modeling_group\nModel.create_imported_solid_model\nModel.create_lookup_table_1d\nModel.create_lookup_table_3d\nModel.create_material\nModel.create_modeling_group\nModel.create_oriented_selection_set\nModel.create_parallel_selection_rule\nModel.create_rosette\nModel.create_sampling_point\nModel.create_section_cut\nModel.create_sensor\nModel.create_solid_model\nModel.create_spherical_selection_rule\nModel.create_stackup\nModel.create_sublaminate\nModel.create_tube_selection_rule\nModel.create_variable_offset_selection_rule\nModel.create_virtual_geometry\nModel.delete\nModel.export_analysis_model\nModel.export_hdf5_composite_cae\nModel.export_materials\nModel.export_modeling_ply_geometries\nModel.export_shell_composite_definitions\nModel.import_hdf5_composite_cae\nModel.import_materials\nModel.save\nModel.update\nModel.angle_tolerance\nModel.average_element_size\nModel.boolean_selection_rules\nModel.cad_geometries\nModel.cut_off_selection_rules\nModel.cylindrical_selection_rules\nModel.draping_offset_correction\nModel.edge_sets\nModel.element_sets\nModel.elemental_data\nModel.fabrics\nModel.field_definitions\nModel.geometrical_selection_rules\nModel.imported_modeling_groups\nModel.imported_solid_models\nModel.lookup_tables_1d\nModel.lookup_tables_3d\nModel.materials\nModel.mesh\nModel.minimum_analysis_ply_thickness\nModel.modeling_groups\nModel.name\nModel.nodal_data\nModel.oriented_selection_sets\nModel.parallel_selection_rules\nModel.parent\nModel.relative_thickness_tolerance\nModel.rosettes\nModel.sampling_points\nModel.section_cuts\nModel.sensors\nModel.shell_mesh\nModel.solid_mesh\nModel.solid_models\nModel.spherical_selection_rules\nModel.stackups\nModel.sublaminates\nModel.tube_selection_rules\nModel.unit_system\nModel.use_nodal_thicknesses\nModel.variable_offset_selection_rules\nModel.virtual_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model",
        "href": "api/_autosummary/ansys.acp.core.Model.html#ansys.acp.core.Model",
        "title": "Model > Model > Model",
        "section": "Model > Model",
        "text": "class ansys.acp.core.Model(*, name='ACP Model', use_nodal_thicknesses=False, draping_offset_correction=False, angle_tolerance=1.0, relative_thickness_tolerance=0.01, minimum_analysis_ply_thickness=1e-06)\n\nDefines an ACP Model.\n\nWrapper for accessing an ACP Model residing on a server.\n\nParameters\n\nname (str) – The name of the model.\n\nuse_nodal_thicknesses (bool) – Defines whether to use nodal thicknesses or element thicknesses.\n\ndraping_offset_correction (bool) – Defines whether to consider lay-up thickness in draping analysis.\n\nangle_tolerance (float) – Section computation angle tolerance (in degree).\n\nrelative_thickness_tolerance (float) – Section computation relative thickness tolerance.\n\nminimum_analysis_ply_thickness (float) – Section computation minimum analysis ply thickness (in length\nunit of model).\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModel.create_boolean_selection_rule(*[, ...])\n\nInstantiate a Boolean Selection Rule.\n\nModel.create_cad_geometry(*[, name, ...])\n\nInstantiate a CAD Geometry.\n\nModel.create_cut_off_selection_rule(*[, ...])\n\nInstantiate a Cut-Off Selection Rule.\n\nModel.create_cylindrical_selection_rule(*[, ...])\n\nInstantiate a Cylindrical Selection Rule.\n\nModel.create_edge_set(*[, name, ...])\n\nInstantiate an edge set.\n\nModel.create_element_set(*[, name, ...])\n\nInstantiate an Element Set.\n\nModel.create_fabric(*[, name, material, ...])\n\nInstantiate a Fabric.\n\nModel.create_field_definition(*[, name, ...])\n\nInstantiate a Field Definition.\n\nModel.create_geometrical_selection_rule(*[, ...])\n\nInstantiate a Geometrical Selection Rule.\n\nModel.create_imported_modeling_group(*[, name])\n\nInstantiate an imported modeling group.\n\nModel.create_imported_solid_model(*[, name, ...])\n\nInstantiate an imported solid model.\n\nModel.create_lookup_table_1d(*[, name, ...])\n\nInstantiate a 1D Look-Up Table.\n\nModel.create_lookup_table_3d(*[, name, ...])\n\nInstantiate a 3D Look-Up Table.\n\nModel.create_material(*[, name, ply_type, ...])\n\nInstantiate a Material.\n\nModel.create_modeling_group(*[, name])\n\nInstantiate a modeling group.\n\nModel.create_oriented_selection_set(*[, ...])\n\nInstantiate an Oriented Selection Set.\n\nModel.create_parallel_selection_rule(*[, ...])\n\nInstantiate a Parallel Selection Rule.\n\nModel.create_rosette(*[, name, ...])\n\nInstantiate a Rosette.\n\nModel.create_sampling_point(*[, name, ...])\n\nInstantiate a Sampling Point.\n\nModel.create_section_cut(*[, name, active, ...])\n\nInstantiate a Section Cut.\n\nModel.create_sensor(*[, name, sensor_type, ...])\n\nInstantiate a Sensor.\n\nModel.create_solid_model(*[, name, active, ...])\n\nInstantiate a solid model.\n\nModel.create_spherical_selection_rule(*[, ...])\n\nInstantiate a Spherical Selection Rule.\n\nModel.create_stackup(*[, name, symmetry, ...])\n\nInstantiate a Stackup.\n\nModel.create_sublaminate(*[, name, ...])\n\nInstantiate a SubLaminate.\n\nModel.create_tube_selection_rule(*[, name, ...])\n\nInstantiate a Tube Selection Rule.\n\nModel.create_variable_offset_selection_rule(*)\n\nInstantiate a Variable Offset Selection Rule.\n\nModel.create_virtual_geometry(*[, name, ...])\n\nInstantiate a Virtual Geometry.\n\nModel.delete()\n\nDelete the object.\n\nModel.export_analysis_model(path)\n\nSave the analysis model to a CDB file.\n\nModel.export_hdf5_composite_cae(path, *[, ...])\n\nExport the lay-up to the HDF5 Composite CAE format.\n\nModel.export_materials(path)\n\nWrite materials to a XML (MatML) file.\n\nModel.export_modeling_ply_geometries(path, *)\n\nWrite ply geometries to a STEP, IGES, or STL file.\n\nModel.export_shell_composite_definitions(path)\n\nExport the lay-up of the shell as HDF5 used by DPF Composites or Mechanical.\n\nModel.import_hdf5_composite_cae(path[, ...])\n\nImport the lay-up from an HDF5 Composite CAE file.\n\nModel.import_materials(matml_path, *[, ...])\n\nImport materials from a MatML file.\n\nModel.save(path, *[, save_cache])\n\nSave ACP Model (.acph5).\n\nModel.update(*[, relations_only])\n\nUpdate the model.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModel.angle_tolerance\n\n\n\nModel.average_element_size\n\n\n\nModel.boolean_selection_rules\n\n\n\nModel.cad_geometries\n\n\n\nModel.cut_off_selection_rules\n\n\n\nModel.cylindrical_selection_rules\n\n\n\nModel.draping_offset_correction\n\n\n\nModel.edge_sets\n\n\n\nModel.element_sets\n\n\n\nModel.elemental_data\n\n\n\nModel.fabrics\n\n\n\nModel.field_definitions\n\n\n\nModel.geometrical_selection_rules\n\n\n\nModel.imported_modeling_groups\n\n\n\nModel.imported_solid_models\n\n\n\nModel.lookup_tables_1d\n\n\n\nModel.lookup_tables_3d\n\n\n\nModel.materials\n\n\n\nModel.mesh\n\nFull mesh associated with the object.\n\nModel.minimum_analysis_ply_thickness\n\n\n\nModel.modeling_groups\n\n\n\nModel.name\n\nThe name of the object.\n\nModel.nodal_data\n\n\n\nModel.oriented_selection_sets\n\n\n\nModel.parallel_selection_rules\n\n\n\nModel.parent\n\nThe parent of the object.\n\nModel.relative_thickness_tolerance\n\n\n\nModel.rosettes\n\n\n\nModel.sampling_points\n\n\n\nModel.section_cuts\n\n\n\nModel.sensors\n\n\n\nModel.shell_mesh\n\nShell mesh associated with the object.\n\nModel.solid_mesh\n\nSolid mesh associated with the object.\n\nModel.solid_models\n\n\n\nModel.spherical_selection_rules\n\n\n\nModel.stackups\n\n\n\nModel.sublaminates\n\n\n\nModel.tube_selection_rules\n\n\n\nModel.unit_system\n\n\n\nModel.use_nodal_thicknesses\n\n\n\nModel.variable_offset_selection_rules\n\n\n\nModel.virtual_geometries\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model",
        "href": "api/_autosummary/ansys.acp.core.Model.html#examples-using-model",
        "title": "Model > Examples using Model",
        "section": "Examples using Model",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.reference_direction.html#reference_direction",
        "title": "reference_direction",
        "section": "reference_direction",
        "text": "Local x-direction used in the computation of laminate properties (CLT).\nreference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.reference_direction.html#ansys.acp.core.SamplingPoint.reference_direction",
        "title": "reference_direction > reference_direction > reference_direction",
        "section": "reference_direction > reference_direction",
        "text": "property SamplingPoint.reference_direction: Any\n\nLocal x-direction used in the computation of laminate properties (CLT).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.use_curvature_correction",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.use_curvature_correction.html#use_curvature_correction",
        "title": "use_curvature_correction",
        "section": "use_curvature_correction",
        "text": "use_curvature_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.use_curvature_correction",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.use_curvature_correction.html#ansys.acp.core.ExtrusionGuide.use_curvature_correction",
        "title": "use_curvature_correction > use_curvature_correction > use_curvature_correction",
        "section": "use_curvature_correction > use_curvature_correction",
        "text": "property ExtrusionGuide.use_curvature_correction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo.html#objectinfo",
        "title": "ObjectInfo",
        "section": "ObjectInfo",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nInterface definition for ObjectInfo messages.\nThe ObjectInfo message contains the full information about an object.\nObjectInfo"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo.html#ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo",
        "title": "ObjectInfo > ObjectInfo > ObjectInfo",
        "section": "ObjectInfo > ObjectInfo",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo(*args, **kwargs)\n\nInterface definition for ObjectInfo messages.\n\nThe ObjectInfo message contains the full information about an object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2.html#parameter_2",
        "title": "parameter_2",
        "section": "parameter_2",
        "text": "Second template parameter of the selection rule.\nparameter_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2.html#ansys.acp.core.LinkedSelectionRule.parameter_2",
        "title": "parameter_2 > parameter_2 > parameter_2",
        "section": "parameter_2 > parameter_2",
        "text": "property LinkedSelectionRule.parameter_2: float\n\nSecond template parameter of the selection rule.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2.html#examples-using-linkedselectionruleparameter_2",
        "title": "parameter_2 > Examples using LinkedSelectionRule.parameter_2",
        "section": "Examples using LinkedSelectionRule.parameter_2",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LinkedSelectionRule.parameter_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.radius",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.radius.html#radius",
        "title": "radius",
        "section": "radius",
        "text": "radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.radius",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.radius.html#ansys.acp.core.ExtrusionGuide.radius",
        "title": "radius > radius > radius",
        "section": "radius > radius",
        "text": "property ExtrusionGuide.radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor.html#interface_weakening_factor",
        "title": "interface_weakening_factor",
        "section": "interface_weakening_factor",
        "text": "interface_weakening_factor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor",
        "title": "interface_weakening_factor > interface_weakening_factor > interface_weakening_factor",
        "section": "interface_weakening_factor > interface_weakening_factor",
        "text": "property ConstantPuckConstants.interface_weakening_factor: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.active",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.active",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.active.html#ansys.acp.core.ButtJointSequence.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property ButtJointSequence.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.models",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.models.html#models",
        "title": "models",
        "section": "models",
        "text": "Models currently loaded on the server.\nNote that the models are listed in arbitrary order.\nmodels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.models",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.models.html#ansys.acp.core.ACPInstance.models",
        "title": "models > models > models",
        "section": "models > models",
        "text": "property ACPInstance.models: tuple[Model, ...]\n\nModels currently loaded on the server.\n\nNote that the models are listed in arbitrary order.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_thickness_correction.html#draping_thickness_correction",
        "title": "draping_thickness_correction",
        "section": "draping_thickness_correction",
        "text": "draping_thickness_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_thickness_correction.html#ansys.acp.core.ModelingPly.draping_thickness_correction",
        "title": "draping_thickness_correction > draping_thickness_correction > draping_thickness_correction",
        "section": "draping_thickness_correction > draping_thickness_correction",
        "text": "property ModelingPly.draping_thickness_correction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_type",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_type.html#drop_off_type",
        "title": "drop_off_type",
        "section": "drop_off_type",
        "text": "drop_off_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_type",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_type.html#ansys.acp.core.DropOffSettings.drop_off_type",
        "title": "drop_off_type > drop_off_type > drop_off_type",
        "section": "drop_off_type > drop_off_type",
        "text": "property DropOffSettings.drop_off_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.warping_limit",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.warping_limit.html#warping_limit",
        "title": "warping_limit",
        "section": "warping_limit",
        "text": "warping_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.warping_limit",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.warping_limit.html#ansys.acp.core.ImportedSolidModel.warping_limit",
        "title": "warping_limit > warping_limit > warping_limit",
        "section": "warping_limit > warping_limit",
        "text": "property ImportedSolidModel.warping_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "CylindricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.scalar_field",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.scalar_field.html#scalar_field",
        "title": "scalar_field",
        "section": "scalar_field",
        "text": "scalar_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.scalar_field",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.scalar_field.html#ansys.acp.core.FieldDefinition.scalar_field",
        "title": "scalar_field > scalar_field > scalar_field",
        "section": "scalar_field > scalar_field",
        "text": "property FieldDefinition.scalar_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.area_weight",
        "href": "api/_autosummary/ansys.acp.core.Stackup.area_weight.html#area_weight",
        "title": "area_weight",
        "section": "area_weight",
        "text": "area_weight"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.area_weight",
        "href": "api/_autosummary/ansys.acp.core.Stackup.area_weight.html#ansys.acp.core.Stackup.area_weight",
        "title": "area_weight > area_weight > area_weight",
        "section": "area_weight > area_weight",
        "text": "property Stackup.area_weight: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/example_helpers",
        "href": "api/example_helpers.html#example-helpers",
        "title": "Example helpers",
        "section": "Example helpers",
        "text": "ExampleKeys(cls, value[, names, module, ...])\nKeys for the example files.\nget_example_file(example_key, working_directory)\nDownload an example file from the example-data repo to the working directory.\nExample helpers\nExampleKeys\nget_example_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.delete",
        "href": "api/_autosummary/ansys.acp.core.Stackup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.delete",
        "href": "api/_autosummary/ansys.acp.core.Stackup.delete.html#ansys.acp.core.Stackup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Stackup.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_acp",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_acp.html#url_acp",
        "title": "url_acp",
        "section": "url_acp",
        "text": "url_acp"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_acp",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_acp.html#ansys.acp.core.ConnectLaunchConfig.url_acp",
        "title": "url_acp > url_acp > url_acp",
        "section": "url_acp > url_acp",
        "text": "ConnectLaunchConfig.url_acp: str = 'localhost:50555'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sublaminate",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sublaminate.html#create_sublaminate",
        "title": "create_sublaminate",
        "section": "create_sublaminate",
        "text": "Instantiate a SubLaminate.\nname (str) – Name of the sub-laminate.\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\nSubLaminate\nAdded in ACP server version 24.2.\ncreate_sublaminate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sublaminate",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sublaminate.html#ansys.acp.core.Model.create_sublaminate",
        "title": "create_sublaminate > create_sublaminate > create_sublaminate",
        "section": "create_sublaminate > create_sublaminate",
        "text": "Model.create_sublaminate(*, name='SubLaminate', symmetry='no_symmetry', topdown=True, materials=())\n\nInstantiate a SubLaminate.\n\nParameters\n\nname (str) – Name of the sub-laminate.\n\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\n\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\n\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\n\nReturn type\n\nSubLaminate\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sublaminate",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sublaminate.html#examples-using-modelcreate_sublaminate",
        "title": "create_sublaminate > Examples using Model.create_sublaminate",
        "section": "Examples using Model.create_sublaminate",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using Model.create_sublaminate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.clone",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.clone",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.clone.html#ansys.acp.core.SamplingPoint.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SamplingPoint.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.status",
        "href": "api/_autosummary/ansys.acp.core.Rosette.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.status",
        "href": "api/_autosummary/ansys.acp.core.Rosette.status.html#ansys.acp.core.Rosette.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property Rosette.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.parent",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.parent",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.parent.html#ansys.acp.core.AnalysisPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property AnalysisPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.angle",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.angle",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.angle.html#ansys.acp.core.AnalysisPly.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property AnalysisPly.angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.title",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.title.html#title",
        "title": "title",
        "section": "title",
        "text": "Return a version of the string where each word is titlecased.\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case.\ntitle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.title",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.title.html#ansys.acp.core.LaunchMode.title",
        "title": "title > title > title",
        "section": "title > title",
        "text": "LaunchMode.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS.html#plane_stress_state_with_transverse_shear_and_bending_stiffness",
        "title": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "section": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "text": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS.html#ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "title": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "section": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS",
        "text": "StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS = 'plane_stress_state_with_transverse_shear_and_bending_stiffness'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.use_nodal_thicknesses",
        "href": "api/_autosummary/ansys.acp.core.Model.use_nodal_thicknesses.html#use_nodal_thicknesses",
        "title": "use_nodal_thicknesses",
        "section": "use_nodal_thicknesses",
        "text": "use_nodal_thicknesses"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.use_nodal_thicknesses",
        "href": "api/_autosummary/ansys.acp.core.Model.use_nodal_thicknesses.html#ansys.acp.core.Model.use_nodal_thicknesses",
        "title": "use_nodal_thicknesses > use_nodal_thicknesses > use_nodal_thicknesses",
        "section": "use_nodal_thicknesses > use_nodal_thicknesses",
        "text": "property Model.use_nodal_thicknesses: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ProductionPlyElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.section_cuts",
        "href": "api/_autosummary/ansys.acp.core.Model.section_cuts.html#section_cuts",
        "title": "section_cuts",
        "section": "section_cuts",
        "text": "section_cuts"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.section_cuts",
        "href": "api/_autosummary/ansys.acp.core.Model.section_cuts.html#ansys.acp.core.Model.section_cuts",
        "title": "section_cuts > section_cuts > section_cuts",
        "section": "section_cuts > section_cuts",
        "text": "property Model.section_cuts: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.Fabric.draping_material_model.html#draping_material_model",
        "title": "draping_material_model",
        "section": "draping_material_model",
        "text": "draping_material_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.Fabric.draping_material_model.html#ansys.acp.core.Fabric.draping_material_model",
        "title": "draping_material_model > draping_material_model > draping_material_model",
        "section": "draping_material_model > draping_material_model",
        "text": "property Fabric.draping_material_model: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.shell_mesh.html#ansys.acp.core.BooleanSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property BooleanSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.upper_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.upper_limit.html#upper_limit",
        "title": "upper_limit",
        "section": "upper_limit",
        "text": "upper_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.upper_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.upper_limit.html#ansys.acp.core.material_property_sets.FieldVariable.upper_limit",
        "title": "upper_limit > upper_limit > upper_limit",
        "section": "upper_limit > upper_limit",
        "text": "FieldVariable.upper_limit: float\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.store.html#ansys.acp.core.LookUpTable3DColumn.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "LookUpTable3DColumn.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.html#thicknesstype",
        "title": "ThicknessType",
        "section": "ThicknessType",
        "text": "Options for how ply thickness is defined.\nThicknessType.NOMINAL\n\nThicknessType.FROM_GEOMETRY\n\nThicknessType.FROM_TABLE\n\nThicknessType\nThicknessType.NOMINAL\nThicknessType.FROM_GEOMETRY\nThicknessType.FROM_TABLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.html#ansys.acp.core.ThicknessType",
        "title": "ThicknessType > ThicknessType > ThicknessType",
        "section": "ThicknessType > ThicknessType",
        "text": "class ansys.acp.core.ThicknessType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply thickness is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nThicknessType.NOMINAL\n\n\n\nThicknessType.FROM_GEOMETRY\n\n\n\nThicknessType.FROM_TABLE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.html#examples-using-thicknesstype",
        "title": "ThicknessType > Examples using ThicknessType",
        "section": "Examples using ThicknessType",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ThicknessType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_seed_point",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_seed_point.html#draping_seed_point",
        "title": "draping_seed_point",
        "section": "draping_seed_point",
        "text": "draping_seed_point"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_seed_point",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_seed_point.html#ansys.acp.core.ModelingPly.draping_seed_point",
        "title": "draping_seed_point > draping_seed_point > draping_seed_point",
        "section": "draping_seed_point > draping_seed_point",
        "text": "property ModelingPly.draping_seed_point: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.material.html#material",
        "title": "material",
        "section": "material",
        "text": "material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.material.html#ansys.acp.core.Fabric.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property Fabric.material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.html#physicaldimension",
        "title": "PhysicalDimension",
        "section": "PhysicalDimension",
        "text": "Options for the dimension (time, length, currency, …) of data.\nPhysicalDimension.DIMENSIONLESS\n\nPhysicalDimension.LENGTH\n\nPhysicalDimension.MASS\n\nPhysicalDimension.FORCE\n\nPhysicalDimension.TIME\n\nPhysicalDimension.TEMPERATURE\n\nPhysicalDimension.CURRENCY\n\nPhysicalDimension\nPhysicalDimension.DIMENSIONLESS\nPhysicalDimension.LENGTH\nPhysicalDimension.MASS\nPhysicalDimension.FORCE\nPhysicalDimension.TIME\nPhysicalDimension.TEMPERATURE\nPhysicalDimension.CURRENCY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.html#ansys.acp.core.PhysicalDimension",
        "title": "PhysicalDimension > PhysicalDimension > PhysicalDimension",
        "section": "PhysicalDimension > PhysicalDimension",
        "text": "class ansys.acp.core.PhysicalDimension(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the dimension (time, length, currency, …) of data.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPhysicalDimension.DIMENSIONLESS\n\n\n\nPhysicalDimension.LENGTH\n\n\n\nPhysicalDimension.MASS\n\n\n\nPhysicalDimension.FORCE\n\n\n\nPhysicalDimension.TIME\n\n\n\nPhysicalDimension.TEMPERATURE\n\n\n\nPhysicalDimension.CURRENCY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.html#examples-using-physicaldimension",
        "title": "PhysicalDimension > Examples using PhysicalDimension",
        "section": "Examples using PhysicalDimension",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using PhysicalDimension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5.html#race_car_nose_acph5",
        "title": "RACE_CAR_NOSE_ACPH5",
        "section": "RACE_CAR_NOSE_ACPH5",
        "text": "RACE_CAR_NOSE_ACPH5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5.html#ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5",
        "title": "RACE_CAR_NOSE_ACPH5 > RACE_CAR_NOSE_ACPH5 > RACE_CAR_NOSE_ACPH5",
        "section": "RACE_CAR_NOSE_ACPH5 > RACE_CAR_NOSE_ACPH5",
        "text": "ExampleKeys.RACE_CAR_NOSE_ACPH5 = 5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT.html#scalardatat",
        "title": "ScalarDataT",
        "section": "ScalarDataT",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nScalarDataT\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT.html#ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT",
        "title": "ScalarDataT > ScalarDataT > ScalarDataT",
        "section": "ScalarDataT > ScalarDataT",
        "text": "ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT = ~ScalarDataT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.html#puckmaterialtype",
        "title": "PuckMaterialType",
        "section": "PuckMaterialType",
        "text": "Possible Puck material types.\nPuckMaterialType.encode(/[, encoding, errors])\nEncode the string using the codec registered for encoding.\nPuckMaterialType.replace(old, new[, count])\nReturn a copy with all occurrences of substring old replaced by new.\nPuckMaterialType.split(/[, sep, maxsplit])\nReturn a list of the substrings in the string, using sep as the separator string.\nPuckMaterialType.rsplit(/[, sep, maxsplit])\nReturn a list of the substrings in the string, using sep as the separator string.\nPuckMaterialType.join(iterable, /)\nConcatenate any number of strings.\nPuckMaterialType.capitalize(/)\nReturn a capitalized version of the string.\nPuckMaterialType.casefold(/)\nReturn a version of the string suitable for caseless comparisons.\nPuckMaterialType.title(/)\nReturn a version of the string where each word is titlecased.\nPuckMaterialType.center(width[, fillchar])\nReturn a centered string of length width.\nPuckMaterialType.count(sub[, start[, end]])\nReturn the number of non-overlapping occurrences of substring sub in string S[start:end].\nPuckMaterialType.expandtabs(/[, tabsize])\nReturn a copy where all tab characters are expanded using spaces.\nPuckMaterialType.find(sub[, start[, end]])\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\nPuckMaterialType.partition(sep, /)\nPartition the string into three parts using the given separator.\nPuckMaterialType.index(sub[, start[, end]])\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\nPuckMaterialType.ljust(width[, fillchar])\nReturn a left-justified string of length width.\nPuckMaterialType.lower(/)\nReturn a copy of the string converted to lowercase.\nPuckMaterialType.lstrip([chars])\nReturn a copy of the string with leading whitespace removed.\nPuckMaterialType.rfind(sub[, start[, end]])\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\nPuckMaterialType.rindex(sub[, start[, end]])\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\nPuckMaterialType.rjust(width[, fillchar])\nReturn a right-justified string of length width.\nPuckMaterialType.rstrip([chars])\nReturn a copy of the string with trailing whitespace removed.\nPuckMaterialType.rpartition(sep, /)\nPartition the string into three parts using the given separator.\nPuckMaterialType.splitlines(/[, keepends])\nReturn a list of the lines in the string, breaking at line boundaries.\nPuckMaterialType.strip([chars])\nReturn a copy of the string with leading and trailing whitespace removed.\nPuckMaterialType.swapcase(/)\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\nPuckMaterialType.translate(table, /)\nReplace each character in the string using the given translation table.\nPuckMaterialType.upper(/)\nReturn a copy of the string converted to uppercase.\nPuckMaterialType.startswith(prefix[, start[, ...)\nReturn True if S starts with the specified prefix, False otherwise.\nPuckMaterialType.endswith(suffix[, start[, end]])\nReturn True if S ends with the specified suffix, False otherwise.\nPuckMaterialType.removeprefix(prefix, /)\nReturn a str with the given prefix string removed if present.\nPuckMaterialType.removesuffix(suffix, /)\nReturn a str with the given suffix string removed if present.\nPuckMaterialType.isascii(/)\nReturn True if all characters in the string are ASCII, False otherwise.\nPuckMaterialType.islower(/)\nReturn True if the string is a lowercase string, False otherwise.\nPuckMaterialType.isupper(/)\nReturn True if the string is an uppercase string, False otherwise.\nPuckMaterialType.istitle(/)\nReturn True if the string is a title-cased string, False otherwise.\nPuckMaterialType.isspace(/)\nReturn True if the string is a whitespace string, False otherwise.\nPuckMaterialType.isdecimal(/)\nReturn True if the string is a decimal string, False otherwise.\nPuckMaterialType.isdigit(/)\nReturn True if the string is a digit string, False otherwise.\nPuckMaterialType.isnumeric(/)\nReturn True if the string is a numeric string, False otherwise.\nPuckMaterialType.isalpha(/)\nReturn True if the string is an alphabetic string, False otherwise.\nPuckMaterialType.isalnum(/)\nReturn True if the string is an alpha-numeric string, False otherwise.\nPuckMaterialType.isidentifier(/)\nReturn True if the string is a valid Python identifier, False otherwise.\nPuckMaterialType.isprintable(/)\nReturn True if all characters in the string are printable, False otherwise.\nPuckMaterialType.zfill(width, /)\nPad a numeric string with zeros on the left, to fill a field of the given width.\nPuckMaterialType.format(*args, **kwargs)\nReturn a formatted version of S, using substitutions from args and kwargs.\nPuckMaterialType.format_map(mapping)\nReturn a formatted version of S, using substitutions from mapping.\nPuckMaterialType.maketrans(x[, y, z])\nReturn a translation table usable for str.translate().\nPuckMaterialType.IGNORED\n\nPuckMaterialType.CARBON\n\nPuckMaterialType.GLASS\n\nPuckMaterialType.MATERIAL_SPECIFIC\n\nPuckMaterialType\nPuckMaterialType.encode\nPuckMaterialType.replace\nPuckMaterialType.split\nPuckMaterialType.rsplit\nPuckMaterialType.join\nPuckMaterialType.capitalize\nPuckMaterialType.casefold\nPuckMaterialType.title\nPuckMaterialType.center\nPuckMaterialType.count\nPuckMaterialType.expandtabs\nPuckMaterialType.find\nPuckMaterialType.partition\nPuckMaterialType.index\nPuckMaterialType.ljust\nPuckMaterialType.lower\nPuckMaterialType.lstrip\nPuckMaterialType.rfind\nPuckMaterialType.rindex\nPuckMaterialType.rjust\nPuckMaterialType.rstrip\nPuckMaterialType.rpartition\nPuckMaterialType.splitlines\nPuckMaterialType.strip\nPuckMaterialType.swapcase\nPuckMaterialType.translate\nPuckMaterialType.upper\nPuckMaterialType.startswith\nPuckMaterialType.endswith\nPuckMaterialType.removeprefix\nPuckMaterialType.removesuffix\nPuckMaterialType.isascii\nPuckMaterialType.islower\nPuckMaterialType.isupper\nPuckMaterialType.istitle\nPuckMaterialType.isspace\nPuckMaterialType.isdecimal\nPuckMaterialType.isdigit\nPuckMaterialType.isnumeric\nPuckMaterialType.isalpha\nPuckMaterialType.isalnum\nPuckMaterialType.isidentifier\nPuckMaterialType.isprintable\nPuckMaterialType.zfill\nPuckMaterialType.format\nPuckMaterialType.format_map\nPuckMaterialType.maketrans\nPuckMaterialType.IGNORED\nPuckMaterialType.CARBON\nPuckMaterialType.GLASS\nPuckMaterialType.MATERIAL_SPECIFIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.html#ansys.acp.core.material_property_sets.PuckMaterialType",
        "title": "PuckMaterialType > PuckMaterialType > PuckMaterialType",
        "section": "PuckMaterialType > PuckMaterialType",
        "text": "class ansys.acp.core.material_property_sets.PuckMaterialType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nPossible Puck material types.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPuckMaterialType.encode(/[, encoding, errors])\n\nEncode the string using the codec registered for encoding.\n\nPuckMaterialType.replace(old, new[, count])\n\nReturn a copy with all occurrences of substring old replaced by new.\n\nPuckMaterialType.split(/[, sep, maxsplit])\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nPuckMaterialType.rsplit(/[, sep, maxsplit])\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nPuckMaterialType.join(iterable, /)\n\nConcatenate any number of strings.\n\nPuckMaterialType.capitalize(/)\n\nReturn a capitalized version of the string.\n\nPuckMaterialType.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons.\n\nPuckMaterialType.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nPuckMaterialType.center(width[, fillchar])\n\nReturn a centered string of length width.\n\nPuckMaterialType.count(sub[, start[, end]])\n\nReturn the number of non-overlapping occurrences of substring sub in string S[start:end].\n\nPuckMaterialType.expandtabs(/[, tabsize])\n\nReturn a copy where all tab characters are expanded using spaces.\n\nPuckMaterialType.find(sub[, start[, end]])\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nPuckMaterialType.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nPuckMaterialType.index(sub[, start[, end]])\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nPuckMaterialType.ljust(width[, fillchar])\n\nReturn a left-justified string of length width.\n\nPuckMaterialType.lower(/)\n\nReturn a copy of the string converted to lowercase.\n\nPuckMaterialType.lstrip([chars])\n\nReturn a copy of the string with leading whitespace removed.\n\nPuckMaterialType.rfind(sub[, start[, end]])\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nPuckMaterialType.rindex(sub[, start[, end]])\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nPuckMaterialType.rjust(width[, fillchar])\n\nReturn a right-justified string of length width.\n\nPuckMaterialType.rstrip([chars])\n\nReturn a copy of the string with trailing whitespace removed.\n\nPuckMaterialType.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nPuckMaterialType.splitlines(/[, keepends])\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nPuckMaterialType.strip([chars])\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nPuckMaterialType.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\nPuckMaterialType.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\nPuckMaterialType.upper(/)\n\nReturn a copy of the string converted to uppercase.\n\nPuckMaterialType.startswith(prefix[, start[, ...)\n\nReturn True if S starts with the specified prefix, False otherwise.\n\nPuckMaterialType.endswith(suffix[, start[, end]])\n\nReturn True if S ends with the specified suffix, False otherwise.\n\nPuckMaterialType.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nPuckMaterialType.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nPuckMaterialType.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nPuckMaterialType.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nPuckMaterialType.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nPuckMaterialType.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nPuckMaterialType.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nPuckMaterialType.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nPuckMaterialType.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nPuckMaterialType.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nPuckMaterialType.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nPuckMaterialType.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nPuckMaterialType.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nPuckMaterialType.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nPuckMaterialType.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nPuckMaterialType.format(*args, **kwargs)\n\nReturn a formatted version of S, using substitutions from args and kwargs.\n\nPuckMaterialType.format_map(mapping)\n\nReturn a formatted version of S, using substitutions from mapping.\n\nPuckMaterialType.maketrans(x[, y, z])\n\nReturn a translation table usable for str.translate().\n\n\n\nAttributes\n\n\n\n\n\n\n\nPuckMaterialType.IGNORED\n\n\n\nPuckMaterialType.CARBON\n\n\n\nPuckMaterialType.GLASS\n\n\n\nPuckMaterialType.MATERIAL_SPECIFIC\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.html#meshdata",
        "title": "MeshData",
        "section": "MeshData",
        "text": "Container for the mesh data of an ACP Model.\nMeshData.to_pyvista()\nConvert the mesh data to a PyVista mesh.\nMeshData.node_labels\n\nMeshData.node_coordinates\n\nMeshData.element_labels\n\nMeshData.element_types\n\nMeshData.element_nodes\n\nMeshData.element_nodes_offsets\n\nMeshData\nMeshData.to_pyvista\nMeshData.node_labels\nMeshData.node_coordinates\nMeshData.element_labels\nMeshData.element_types\nMeshData.element_nodes\nMeshData.element_nodes_offsets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.html#ansys.acp.core.mesh_data.MeshData",
        "title": "MeshData > MeshData > MeshData",
        "section": "MeshData > MeshData",
        "text": "class ansys.acp.core.mesh_data.MeshData(node_labels, node_coordinates, element_labels, element_types, element_nodes, element_nodes_offsets)\n\nContainer for the mesh data of an ACP Model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMeshData.to_pyvista()\n\nConvert the mesh data to a PyVista mesh.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMeshData.node_labels\n\n\n\nMeshData.node_coordinates\n\n\n\nMeshData.element_labels\n\n\n\nMeshData.element_types\n\n\n\nMeshData.element_nodes\n\n\n\nMeshData.element_nodes_offsets\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size.html#use_default_draping_mesh_size",
        "title": "use_default_draping_mesh_size",
        "section": "use_default_draping_mesh_size",
        "text": "use_default_draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size.html#ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size",
        "title": "use_default_draping_mesh_size > use_default_draping_mesh_size > use_default_draping_mesh_size",
        "section": "use_default_draping_mesh_size > use_default_draping_mesh_size",
        "text": "property OrientedSelectionSet.use_default_draping_mesh_size: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.parent",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.parent",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.parent.html#ansys.acp.core.ModelingGroup.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ModelingGroup.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.normalized",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.normalized.html#normalized",
        "title": "normalized",
        "section": "normalized",
        "text": "normalized"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.normalized",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.normalized.html#ansys.acp.core.material_property_sets.InterpolationOptions.normalized",
        "title": "normalized > normalized > normalized",
        "section": "normalized > normalized",
        "text": "InterpolationOptions.normalized: bool\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.UNKNOWN",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.UNKNOWN.html#unknown",
        "title": "UNKNOWN",
        "section": "UNKNOWN",
        "text": "UNKNOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.UNKNOWN",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.UNKNOWN.html#ansys.acp.core.VirtualGeometryDimension.UNKNOWN",
        "title": "UNKNOWN > UNKNOWN > UNKNOWN",
        "section": "UNKNOWN > UNKNOWN",
        "text": "VirtualGeometryDimension.UNKNOWN = 'unknown'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SphericalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.store.html#ansys.acp.core.CylindricalSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "CylindricalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/enum_types",
        "href": "api/enum_types.html#enumeration-data-types",
        "title": "Enumeration data types",
        "section": "Enumeration data types",
        "text": "ArrowType(cls, value[, names, module, ...])\nOptions for the type of arrow to be created for directions in the ply geometry export.\nBaseElementMaterialHandling(cls, value[, ...])\nDetermines how the base material is handled where it intersects with a reinforcing element.\nBooleanOperationType(cls, value[, names, ...])\nOptions for combining selection rules.\nCutOffGeometryOrientationType(cls, value[, ...])\nDetermines the orientation of a cut-off geometry.\nCutOffMaterialHandling(cls, value[, names, ...])\nOptions for how cut-off material is selected.\nCutOffRuleType(cls, value[, names, module, ...])\nOptions for how a cut off rule is defined.\nDrapingMaterialModel(cls, value[, names, ...])\nOptions for the material type used in the draping algorithm.\nDrapingType(cls, value[, names, module, ...])\nOptions for the draping algorithm used.\nDropOffMaterialHandling(cls, value[, names, ...])\nOptions for how drop-off material is selected.\nDropOffType(cls, value[, names, module, ...])\nDetermines whether the drop off in solid models is inside or outside the ply boundary.\nEdgeSetType(cls, value[, names, module, ...])\nOptions for how an edge set is defined.\nElementalDataType(cls, value[, names, ...])\nOptions for the type of per-element data.\nElementTechnology(cls, value[, names, ...])\nOptions for the element technology used in a layup mapping object.\nExtrusionGuideType(cls, value[, names, ...])\nExtrusion guide type used in an extrusion guide (solid model).\nExtrusionMethod(cls, value[, names, module, ...])\nExtrusion method used in a solid model.\nExtrusionType(cls, value[, names, module, ...])\nExtrusion method used in a section cut.\nFeFormat(cls, value[, names, module, ...])\nOptions for the format of the FE file.\nGeometricalRuleType(cls, value[, names, ...])\nOptions for how a geometrical selection rule is defined.\nHDF5CompositeCAEImportMode(cls, value[, ...])\nOptions for the import mode of the HDF5 Composite CAE file.\nHDF5CompositeCAEProjectionMode(cls, value[, ...])\nOptions for the projection mode of the HDF5 Composite CAE file.\nIgnorableEntity(cls, value[, names, module, ...])\nOptions for the entities to ignore when loading an FE file.\nImportedPlyDrapingType(cls, value[, names, ...])\nOptions for the draping algorithm used.\nImportedPlyOffsetType(cls, value[, names, ...])\nOptions for the definition of the offset.\nImportedPlyThicknessType(cls, value[, ...])\nOptions for how ply thickness is defined.\nIntersectionType(cls, value[, names, ...])\nDetermines how the intersection is computed for wireframe section cuts.\nLayupMappingRosetteSelectionMethod(cls, value)\nOptions for how the rosette is selected in the layup mapping.\nLinkedObjectHandling(cls, value[, names, ...])\nDefines options for handling linked objects when copying a tree of ACP objects.\nLookUpTable3DInterpolationAlgorithm(cls, value)\nOptions for the interpolation algorithm used for 3D look-up tables.\nLookUpTableColumnValueType(cls, value[, ...])\nOptions for the column type (data location, scalar data, directional data) of look-up table columns.\nMeshImportType(cls, value[, names, module, ...])\nOptions for the definition of the source of the imported mesh.\nNodalDataType(cls, value[, names, module, ...])\nOptions for the type of per-node data.\nOffsetType(cls, value[, names, module, ...])\nOptions for the ply offset type.\nPhysicalDimension(cls, value[, names, ...])\nOptions for the dimension (time, length, currency, ...) of data.\nPlyCutOffType(cls, value[, names, module, ...])\nOptions for how ply cut-off is computed.\nPlyGeometryExportFormat(cls, value[, names, ...])\nOptions for the file format of the ply geometry export.\nPlyType(cls, value[, names, module, ...])\nOptions for the material type of a ply.\nReinforcingBehavior(cls, value[, names, ...])\nSpecifies whether the reinforcing elements carry tension and compression load, or only one of them.\nRosetteSelectionMethod(cls, value[, names, ...])\nOptions for how the rosette is selected in oriented selection sets.\nRosetteType(cls, value[, names, module, ...])\nOptions for the type of a rosette.\nSectionCutType(cls, value[, names, module, ...])\nDetermines whether the section cut is extruded by modeling ply, production ply, or analysis ply.\nSensorType(cls, value[, names, module, ...])\nOptions for the type of sensor.\nSnapToGeometryOrientationType(cls, value[, ...])\nDetermines which layup face a snap-to geometry is applies to.\nSolidModelExportFormat(cls, value[, names, ...])\nOptions for the export format of solid models.\nSolidModelImportFormat(cls, value[, names, ...])\nOptions for the file format when importing a solid model.\nSolidModelOffsetDirectionType(cls, value[, ...])\nDetermines how the offset direction is evaluated in a solid model.\nSolidModelSkinExportFormat(cls, value[, ...])\nOptions for the export format of solid model skins.\nStatus(cls, value[, names, module, ...])\nOptions for the update status of an object.\nStressStateType(cls, value[, names, module, ...])\nSpecifies if the reinforcing elements should behave like a link, membrane, or shell element (with or without bending).\nSymmetryType(cls, value[, names, module, ...])\nOptions for the symmetry of stackups or sublaminates.\nThicknessFieldType(cls, value[, names, ...])\nOptions for how thickness from a table is defined.\nThicknessType(cls, value[, names, module, ...])\nOptions for how ply thickness is defined.\nUnitSystemType(cls, value[, names, module, ...])\nAvailable choices for the unit system.\nVirtualGeometryDimension(cls, value[, ...])\nOptions for the dimension of a virtual geometry.\nEnumeration data types\nArrowType\nBaseElementMaterialHandling\nBooleanOperationType\nCutOffGeometryOrientationType\nCutOffMaterialHandling\nCutOffRuleType\nDrapingMaterialModel\nDrapingType\nDropOffMaterialHandling\nDropOffType\nEdgeSetType\nElementalDataType\nElementTechnology\nExtrusionGuideType\nExtrusionMethod\nExtrusionType\nFeFormat\nGeometricalRuleType\nHDF5CompositeCAEImportMode\nHDF5CompositeCAEProjectionMode\nIgnorableEntity\nImportedPlyDrapingType\nImportedPlyOffsetType\nImportedPlyThicknessType\nIntersectionType\nLayupMappingRosetteSelectionMethod\nLinkedObjectHandling\nLookUpTable3DInterpolationAlgorithm\nLookUpTableColumnValueType\nMeshImportType\nNodalDataType\nOffsetType\nPhysicalDimension\nPlyCutOffType\nPlyGeometryExportFormat\nPlyType\nReinforcingBehavior\nRosetteSelectionMethod\nRosetteType\nSectionCutType\nSensorType\nSnapToGeometryOrientationType\nSolidModelExportFormat\nSolidModelImportFormat\nSolidModelOffsetDirectionType\nSolidModelSkinExportFormat\nStatus\nStressStateType\nSymmetryType\nThicknessFieldType\nThicknessType\nUnitSystemType\nVirtualGeometryDimension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.TEMPERATURE",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.TEMPERATURE.html#temperature",
        "title": "TEMPERATURE",
        "section": "TEMPERATURE",
        "text": "TEMPERATURE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.TEMPERATURE",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.TEMPERATURE.html#ansys.acp.core.PhysicalDimension.TEMPERATURE",
        "title": "TEMPERATURE > TEMPERATURE > TEMPERATURE",
        "section": "TEMPERATURE > TEMPERATURE",
        "text": "PhysicalDimension.TEMPERATURE = 'temperature'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_import_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_import_type.html#mesh_import_type",
        "title": "mesh_import_type",
        "section": "mesh_import_type",
        "text": "mesh_import_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_import_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_import_type.html#ansys.acp.core.ImportedModelingPly.mesh_import_type",
        "title": "mesh_import_type > mesh_import_type > mesh_import_type",
        "section": "mesh_import_type > mesh_import_type",
        "text": "property ImportedModelingPly.mesh_import_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt.html#ezt",
        "title": "eZt",
        "section": "eZt",
        "text": "eZt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt",
        "title": "eZt > eZt > eZt",
        "section": "eZt > eZt",
        "text": "property ConstantStrainLimits.eZt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.offset.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "ProductionPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.add_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.add_selection_rule.html#add_selection_rule",
        "title": "add_selection_rule",
        "section": "add_selection_rule",
        "text": "Add a LinkedSelectionRule to the BooleanSelectionRule.\nSee LinkedSelectionRule for the available parameters.\nLinkedSelectionRule\nadd_selection_rule\nLinkedSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.add_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.add_selection_rule.html#ansys.acp.core.BooleanSelectionRule.add_selection_rule",
        "title": "add_selection_rule > add_selection_rule > add_selection_rule",
        "section": "add_selection_rule > add_selection_rule",
        "text": "BooleanSelectionRule.add_selection_rule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nAdd a LinkedSelectionRule to the BooleanSelectionRule.\n\nSee LinkedSelectionRule for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nLinkedSelectionRule"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#imported-ply",
        "title": "Imported ply",
        "section": "Imported ply",
        "text": "The definition and use of imported plies is demonstrated in this example.\nIn a nutshell, the difference between ImportedModelingPly and\nModelingPly is that the surface mesh of an ImportedModelingPly\nis defined by an external source, such as a CAD surface, where a ModelingPly\nis always defined on the initial loaded shell mesh.\nTherefore, an imported ply can only be used in combination with an\nImportedSolidModel.\nThis examples shows hot to:\nLoad an initial mesh\nAdd a Material and Fabric\nImport geometries which will be used to define the surface of the ImportedModelingPly\nAdd two imported modeling plies\nCreate an ImportedSolidModel\nMap the imported plies to the solid model\nVisualized the mapped plies.\nImported ply\nImportedModelingPly\nModelingPly\nImportedModelingPly\nModelingPly\nImportedSolidModel\nMaterial\nFabric\nImportedModelingPly\nImportedSolidModel"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#import-modules",
        "title": "Imported ply > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#start-acp-and-load-the-model",
        "title": "Imported ply > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nCreate a model by loading a shell mesh\nAdd a material and a fabric with 1mm thickness.\nThe fabric is used for the imported modeling ply.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#import-cad-geometries",
        "title": "Imported ply > Import CAD geometries",
        "section": "Import CAD geometries",
        "text": "Import two cad surfaces to define the surface of the imported modeling plies.\nImport CAD geometries"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#definition-of-imported-plies",
        "title": "Imported ply > Definition of Imported Plies",
        "section": "Definition of Imported Plies",
        "text": "Imported plies cannot be visualized directly yet but the cad geometries are\nshown here instead.\nTo visualize the imported plies, you can save the model and load it in ACP\nstandalone.\nDefinition of Imported Plies"
    },
    {
        "objectID": "examples/modeling_features/030-imported-plies",
        "href": "examples/modeling_features/030-imported-plies.html#map-imported-plies-onto-a-solid-mesh",
        "title": "Imported ply > Map Imported Plies onto a solid mesh",
        "section": "Map Imported Plies onto a solid mesh",
        "text": "An external solid mesh is loaded now to map the imported plies\nonto the solid model. The next figure shows the imported solid mesh\nand the imported plies.\nAdd a mapping object to link the imported plies with the solid model.\nIn this example, all imported plies are mapped in one go.\nThe remaining elemental volume and elements which do not intersect\nwith the imported plies are filled with a void and filler material,\nrespectively.\nShow the imported ply geometries and mapped plies on the solid model.\nNote that the analysis plies are not yet directly accessible via\nthe API of the imported solid model. Also, elemental data such as\nthicknesses are not yet implemented for imported plies.\nThe imported solid model can be passed to Mechanical or MAPDL to run an analysis\nas shown in the examples pymechanical_solid_example and\npymapdl_workflow_example.\nTotal running time of the script: (0 minutes 4.227 seconds)\nDownload Jupyter notebook: 030-imported-plies.ipynb\nDownload Python source code: 030-imported-plies.py\nDownload zipped: 030-imported-plies.zip\nGallery generated by Sphinx-Gallery\nMap Imported Plies onto a solid mesh\nDownload Jupyter notebook: 030-imported-plies.ipynb\nDownload Python source code: 030-imported-plies.py\nDownload zipped: 030-imported-plies.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.store",
        "href": "api/_autosummary/ansys.acp.core.Fabric.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.store",
        "href": "api/_autosummary/ansys.acp.core.Fabric.store.html#ansys.acp.core.Fabric.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "Fabric.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.element_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.element_sets.html#element_sets",
        "title": "element_sets",
        "section": "element_sets",
        "text": "element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.element_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.element_sets.html#ansys.acp.core.Model.element_sets",
        "title": "element_sets > element_sets > element_sets",
        "section": "element_sets > element_sets",
        "text": "property Model.element_sets: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.element_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.element_sets.html#examples-using-modelelement_sets",
        "title": "element_sets > Examples using Model.element_sets",
        "section": "Examples using Model.element_sets",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.parent.html#ansys.acp.core.ParallelSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ParallelSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants.html#from_orthotropic_constants",
        "title": "from_orthotropic_constants",
        "section": "from_orthotropic_constants",
        "text": "Create an orthotropic strain limits property set.\neXc (float) – Compressive strain limit in material 1 direction.\neYc (float) – Compressive strain limit in material 2 direction.\neZc (float) – Compressive strain limit in out-of-plane direction.\neXt (float) – Tensile strain limit in material 1 direction.\neYt (float) – Tensile strain limit in material 2 direction.\neZt (float) – Tensile strain limit in out-of-plane direction.\neSxy (float) – Shear strain limit in-plane (e_{12}).\neSyz (float) – Shear strain limit out-of-plane (e_{23}).\neSxz (float) – Shear strain limit out-of-plane (e_{13}).\nAn orthotropic strain limits property set.\nSelf\nfrom_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants",
        "title": "from_orthotropic_constants > from_orthotropic_constants > from_orthotropic_constants",
        "section": "from_orthotropic_constants > from_orthotropic_constants",
        "text": "classmethod ConstantStrainLimits.from_orthotropic_constants(*, eXc=0.0, eYc=0.0, eZc=0.0, eXt=0.0, eYt=0.0, eZt=0.0, eSxy=0.0, eSyz=0.0, eSxz=0.0)\n\nCreate an orthotropic strain limits property set.\n\nParameters\n\neXc (float) – Compressive strain limit in material 1 direction.\n\neYc (float) – Compressive strain limit in material 2 direction.\n\neZc (float) – Compressive strain limit in out-of-plane direction.\n\neXt (float) – Tensile strain limit in material 1 direction.\n\neYt (float) – Tensile strain limit in material 2 direction.\n\neZt (float) – Tensile strain limit in out-of-plane direction.\n\neSxy (float) – Shear strain limit in-plane (e_{12}).\n\neSyz (float) – Shear strain limit out-of-plane (e_{23}).\n\neSxz (float) – Shear strain limit out-of-plane (e_{13}).\n\nReturns\n\nAn orthotropic strain limits property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants.html#examples-using-constantstrainlimitsfrom_orthotropic_constants",
        "title": "from_orthotropic_constants > Examples using ConstantStrainLimits.from_orthotropic_constants",
        "section": "Examples using ConstantStrainLimits.from_orthotropic_constants",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nExamples using ConstantStrainLimits.from_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle.html#fabric_fiber_angle",
        "title": "fabric_fiber_angle",
        "section": "fabric_fiber_angle",
        "text": "fabric_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle.html#ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle",
        "title": "fabric_fiber_angle > fabric_fiber_angle > fabric_fiber_angle",
        "section": "fabric_fiber_angle > fabric_fiber_angle",
        "text": "property ConstantFabricFiberAngle.fabric_fiber_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.primary_plies",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.primary_plies.html#primary_plies",
        "title": "primary_plies",
        "section": "primary_plies",
        "text": "primary_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.primary_plies",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.primary_plies.html#ansys.acp.core.ButtJointSequence.primary_plies",
        "title": "primary_plies > primary_plies > primary_plies",
        "section": "primary_plies > primary_plies",
        "text": "property ButtJointSequence.primary_plies: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "SphericalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES.html#absolute_values",
        "title": "ABSOLUTE_VALUES",
        "section": "ABSOLUTE_VALUES",
        "text": "ABSOLUTE_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES.html#ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES",
        "title": "ABSOLUTE_VALUES > ABSOLUTE_VALUES > ABSOLUTE_VALUES",
        "section": "ABSOLUTE_VALUES > ABSOLUTE_VALUES",
        "text": "ThicknessFieldType.ABSOLUTE_VALUES = 'absolute_values'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.delete",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.delete",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.delete.html#ansys.acp.core.EdgeSet.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "EdgeSet.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP.html#up",
        "title": "UP",
        "section": "UP",
        "text": "UP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP.html#ansys.acp.core.CutOffGeometryOrientationType.UP",
        "title": "UP > UP > UP",
        "section": "UP > UP",
        "text": "CutOffGeometryOrientationType.UP = 'up'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP.html#examples-using-cutoffgeometryorientationtypeup",
        "title": "UP > Examples using CutOffGeometryOrientationType.UP",
        "section": "Examples using CutOffGeometryOrientationType.UP",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using CutOffGeometryOrientationType.UP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_direction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_direction.html#draping_direction",
        "title": "draping_direction",
        "section": "draping_direction",
        "text": "draping_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_direction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_direction.html#ansys.acp.core.ModelingPly.draping_direction",
        "title": "draping_direction > draping_direction > draping_direction",
        "section": "draping_direction > draping_direction",
        "text": "property ModelingPly.draping_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL.html#sensor_by_solid_model",
        "title": "SENSOR_BY_SOLID_MODEL",
        "section": "SENSOR_BY_SOLID_MODEL",
        "text": "SENSOR_BY_SOLID_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL.html#ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL",
        "title": "SENSOR_BY_SOLID_MODEL > SENSOR_BY_SOLID_MODEL > SENSOR_BY_SOLID_MODEL",
        "section": "SENSOR_BY_SOLID_MODEL > SENSOR_BY_SOLID_MODEL",
        "text": "SensorType.SENSOR_BY_SOLID_MODEL = 'sensor_by_solid_model'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_tapering",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_tapering.html#ply_tapering",
        "title": "ply_tapering",
        "section": "ply_tapering",
        "text": "ply_tapering"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_tapering",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_tapering.html#ansys.acp.core.CutOffSelectionRule.ply_tapering",
        "title": "ply_tapering > ply_tapering > ply_tapering",
        "section": "ply_tapering > ply_tapering",
        "text": "property CutOffSelectionRule.ply_tapering: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR.html#weighted_nearest_neighbor",
        "title": "WEIGHTED_NEAREST_NEIGHBOR",
        "section": "WEIGHTED_NEAREST_NEIGHBOR",
        "text": "WEIGHTED_NEAREST_NEIGHBOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR.html#ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR",
        "title": "WEIGHTED_NEAREST_NEIGHBOR > WEIGHTED_NEAREST_NEIGHBOR > WEIGHTED_NEAREST_NEIGHBOR",
        "section": "WEIGHTED_NEAREST_NEIGHBOR > WEIGHTED_NEAREST_NEIGHBOR",
        "text": "LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR = 'weighted_nearest_neighbor'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.filler_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.filler_material.html#filler_material",
        "title": "filler_material",
        "section": "filler_material",
        "text": "filler_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.filler_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.filler_material.html#ansys.acp.core.LayupMappingObject.filler_material",
        "title": "filler_material > filler_material > filler_material",
        "section": "filler_material > filler_material",
        "text": "property LayupMappingObject.filler_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.symmetry",
        "href": "api/_autosummary/ansys.acp.core.Stackup.symmetry.html#symmetry",
        "title": "symmetry",
        "section": "symmetry",
        "text": "symmetry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.symmetry",
        "href": "api/_autosummary/ansys.acp.core.Stackup.symmetry.html#ansys.acp.core.Stackup.symmetry",
        "title": "symmetry > symmetry > symmetry",
        "section": "symmetry > symmetry",
        "text": "property Stackup.symmetry: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.store.html#ansys.acp.core.TubeSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "TubeSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ImportedSolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.elemental_data.html#ansys.acp.core.ElementSet.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ElementSet.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.middle_offset",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.middle_offset.html#middle_offset",
        "title": "middle_offset",
        "section": "middle_offset",
        "text": "middle_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.middle_offset",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.middle_offset.html#ansys.acp.core.ElementSet.middle_offset",
        "title": "middle_offset > middle_offset > middle_offset",
        "section": "middle_offset > middle_offset",
        "text": "property ElementSet.middle_offset: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.html#examplekeys",
        "title": "ExampleKeys",
        "section": "ExampleKeys",
        "text": "Keys for the example files.\nExampleKeys.BASIC_FLAT_PLATE_DAT\n\nExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT\n\nExampleKeys.BASIC_FLAT_PLATE_ACPH5\n\nExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB\n\nExampleKeys.RACE_CAR_NOSE_ACPH5\n\nExampleKeys.RACE_CAR_NOSE_STEP\n\nExampleKeys.CUT_OFF_GEOMETRY\n\nExampleKeys.RULE_GEOMETRY_TRIANGLE\n\nExampleKeys.THICKNESS_GEOMETRY\n\nExampleKeys.MINIMAL_FLAT_PLATE\n\nExampleKeys.OPTIMIZATION_EXAMPLE_DAT\n\nExampleKeys.CLASS40_AGDB\n\nExampleKeys.CLASS40_CDB\n\nExampleKeys.MATERIALS_XML\n\nExampleKeys.IMPORTED_SOLID_MODEL_ACPH5\n\nExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH\n\nExampleKeys.SNAP_TO_GEOMETRY\n\nExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL\n\nExampleKeys\nExampleKeys.BASIC_FLAT_PLATE_DAT\nExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT\nExampleKeys.BASIC_FLAT_PLATE_ACPH5\nExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB\nExampleKeys.RACE_CAR_NOSE_ACPH5\nExampleKeys.RACE_CAR_NOSE_STEP\nExampleKeys.CUT_OFF_GEOMETRY\nExampleKeys.RULE_GEOMETRY_TRIANGLE\nExampleKeys.THICKNESS_GEOMETRY\nExampleKeys.MINIMAL_FLAT_PLATE\nExampleKeys.OPTIMIZATION_EXAMPLE_DAT\nExampleKeys.CLASS40_AGDB\nExampleKeys.CLASS40_CDB\nExampleKeys.MATERIALS_XML\nExampleKeys.IMPORTED_SOLID_MODEL_ACPH5\nExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH\nExampleKeys.SNAP_TO_GEOMETRY\nExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.html#ansys.acp.core.extras.example_helpers.ExampleKeys",
        "title": "ExampleKeys > ExampleKeys > ExampleKeys",
        "section": "ExampleKeys > ExampleKeys",
        "text": "class ansys.acp.core.extras.example_helpers.ExampleKeys(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nKeys for the example files.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_DAT\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_ACPH5\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB\n\n\n\nExampleKeys.RACE_CAR_NOSE_ACPH5\n\n\n\nExampleKeys.RACE_CAR_NOSE_STEP\n\n\n\nExampleKeys.CUT_OFF_GEOMETRY\n\n\n\nExampleKeys.RULE_GEOMETRY_TRIANGLE\n\n\n\nExampleKeys.THICKNESS_GEOMETRY\n\n\n\nExampleKeys.MINIMAL_FLAT_PLATE\n\n\n\nExampleKeys.OPTIMIZATION_EXAMPLE_DAT\n\n\n\nExampleKeys.CLASS40_AGDB\n\n\n\nExampleKeys.CLASS40_CDB\n\n\n\nExampleKeys.MATERIALS_XML\n\n\n\nExampleKeys.IMPORTED_SOLID_MODEL_ACPH5\n\n\n\nExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH\n\n\n\nExampleKeys.SNAP_TO_GEOMETRY\n\n\n\nExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.status",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.status",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.status.html#ansys.acp.core.SectionCut.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SectionCut.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction.html#draped_fiber_direction",
        "title": "draped_fiber_direction",
        "section": "draped_fiber_direction",
        "text": "draped_fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction",
        "title": "draped_fiber_direction > draped_fiber_direction > draped_fiber_direction",
        "section": "draped_fiber_direction > draped_fiber_direction",
        "text": "AnalysisPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.mesh.html#ansys.acp.core.CutOffSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property CutOffSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#create-input-file-for-pyacp",
        "title": "Create input file for PyACP",
        "section": "Create input file for PyACP",
        "text": "To start working with PyACP, an input file that contains the mesh is required. PyACP supports reading\nthe mesh from:\nCDB or DAT files, using the ACPInstance.import_model() method with the \"ansys::cdb\" or \"ansys:dat\" format.\nHDF5 transfer files generated by Mechanical, using the ACPInstance.import_model() method with the \"ansys::h5\" format.\nPyACP reads the mesh, including any coordinate systems, element sets, and edge sets\nfrom the input file. In the case of CDB or DAT files, PyACP also reads the materials\nfrom the input file.\nOnce the layup has been created with PyACP, you can export the model for downstream analysis.\nThe Model.export_analysis_model() method to export a CDB file from PyACP is only\navailable if the input was read from a CDB or DAT file.\nIf the input was read from a Mechanical HDF5 transfer file, you can export the model\neither to the HDF5 Composite CAE format, or to transfer formats to PyMechanical.\nSee the workflow examples for more information.\nThe following sections describe how to create the input file in CDB or Mechanical HDF5 format.\nCreate input file for PyACP\nACPInstance.import_model()\n\"ansys::cdb\"\n\"ansys:dat\"\nACPInstance.import_model()\n\"ansys::h5\"\nModel.export_analysis_model()"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#create-a-cdb-input-file",
        "title": "Create input file for PyACP > Create a CDB input file",
        "section": "Create a CDB input file",
        "text": "Create a CDB input file"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#create-a-cdb-file-with-ansys-mechanical",
        "title": "Create input file for PyACP > Create a CDB file with Ansys Mechanical",
        "section": "Create a CDB file with Ansys Mechanical",
        "text": "Create a CDB file with Ansys Mechanical"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#in-the-mechanical-gui",
        "title": "Create input file for PyACP > In the Mechanical GUI",
        "section": "In the Mechanical GUI",
        "text": "One way to create an input file for PyACP is to create a static structural setup and export the solver input file. To do this, follow these steps:\nOpen Ansys Workbench.\nAdd a “Static Structural” system.\nCreate or import a geometry in the geometry cell of the static structural system (A3). Note that PyACP only supports shell geometries.\nOpen the Mechanical Model (A4).\nAssign a thickness and a material to the geometry. (These are later overwritten by PyACP.)\nOptional: Define the boundary conditions.\nSelect “Static Structural (A5)” in the tree and then click Environment/Write Input File in the navigation bar.\nSave the input file to a DAT file in the desired location.\nFor a complete example, see pymapdl_workflow_example.\nThe imported model always contains the dummy material named 1 that was assigned to the geometry.\nIn the Mechanical GUI\n1"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#with-scripting",
        "title": "Create input file for PyACP > With scripting",
        "section": "With scripting",
        "text": "You can also create a CDB file from Mechanical or PyMechanical with scripting, using the WriteInputFile method of the analysis object. See pymechanical_to_cdb_example for a complete example.\nWith scripting\nWriteInputFile"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#create-an-input-file-with-ansys-mechanical-apdl",
        "title": "Create input file for PyACP > Create an input file with Ansys Mechanical APDL",
        "section": "Create an input file with Ansys Mechanical APDL",
        "text": "You can also create an input file for PyACP by performing these steps:\nOpen Ansys Mechanical APDL\nLoad or create a model with APDL commands\nWrite the CDB file with the CDWRITE command:\nSee pymapdl_workflow_example for a complete example.\nCreate an input file with Ansys Mechanical APDL"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#notes-on-material-handling",
        "title": "Create input file for PyACP > Notes on material handling",
        "section": "Notes on material handling",
        "text": "Materials present in the input file (*.cdb or *.dat) are read into PyACP. The following rules apply:\nIf the material has defined a UVID, then the material is imported as locked. This means the material cannot be edited in PyACP. If the input file was created with Ansys Mechanical (see cdb_file_from_mechanical), this is always the case. In Mechanical APDL, you can define a UVID with the MP,UVID or MPDATAT,UNBL,16,UVID command.\nIf the material has no UVID, then the material is copied on import. Only the copied material appears in PyACP. The original material is not changed and appears unmodified in the output file.\nNotes on material handling\nMP,UVID\nMPDATAT,UNBL,16,UVID"
    },
    {
        "objectID": "user_guide/howto/create_input_file",
        "href": "user_guide/howto/create_input_file.html#create-a-mechanical-hdf5-transfer-file-experimental",
        "title": "Create input file for PyACP > Create a Mechanical HDF5 transfer file (experimental)",
        "section": "Create a Mechanical HDF5 transfer file (experimental)",
        "text": "The Mechanical to ACP HDF5 transfer file can be created using the export_mesh_for_acp() helper function. See pymechanical_shell_example or pymechanical_solid_example for complete examples.\nCreate a Mechanical HDF5 transfer file (experimental)\nexport_mesh_for_acp()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.STANDARD_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.STANDARD_ARROW.html#standard_arrow",
        "title": "STANDARD_ARROW",
        "section": "STANDARD_ARROW",
        "text": "STANDARD_ARROW"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.STANDARD_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.STANDARD_ARROW.html#ansys.acp.core.ArrowType.STANDARD_ARROW",
        "title": "STANDARD_ARROW > STANDARD_ARROW > STANDARD_ARROW",
        "section": "STANDARD_ARROW > STANDARD_ARROW",
        "text": "ArrowType.STANDARD_ARROW = 'standard_arrow'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material",
        "href": "api/_autosummary/ansys.acp.core.Material.html#material",
        "title": "Material",
        "section": "Material",
        "text": "Instantiate a Material.\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\nThe inactive property sets can still be set, but may not be accessible:\nFor stored materials, inactive property sets always return None.\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\nname (str) – Name of the Material.\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\ndensity (ConstantDensity | None) – Define the density of the material.\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\nAdded in ACP server version 24.2.\nMaterial.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nMaterial.delete()\nDelete the object.\nMaterial.store(parent)\nStore the object on the server.\nMaterial.density\n\nMaterial.engineering_constants\n\nMaterial.ext_id\n\nMaterial.fabric_fiber_angle\n\nMaterial.id\nIdentifier of the object, used for example as key in maps.\nMaterial.larc_constants\n\nMaterial.locked\n\nMaterial.name\nThe name of the object.\nMaterial.parent\nThe parent of the object.\nMaterial.ply_type\n\nMaterial.puck_constants\n\nMaterial.status\n\nMaterial.strain_limits\n\nMaterial.stress_limits\n\nMaterial.tsai_wu_constants\n\nMaterial.woven_characterization\n\nMaterial.woven_puck_constants_1\n\nMaterial.woven_puck_constants_2\n\nMaterial.woven_stress_limits_1\n\nMaterial.woven_stress_limits_2\n\nMaterial\nply_type\npuck_constants\nply_type\nPlyType.REGULAR\nPlyType.WOVEN\nNone\nNone\nMaterial.clone\nMaterial.delete\nMaterial.store\nMaterial.density\nMaterial.engineering_constants\nMaterial.ext_id\nMaterial.fabric_fiber_angle\nMaterial.id\nMaterial.larc_constants\nMaterial.locked\nMaterial.name\nMaterial.parent\nMaterial.ply_type\nMaterial.puck_constants\nMaterial.status\nMaterial.strain_limits\nMaterial.stress_limits\nMaterial.tsai_wu_constants\nMaterial.woven_characterization\nMaterial.woven_puck_constants_1\nMaterial.woven_puck_constants_2\nMaterial.woven_stress_limits_1\nMaterial.woven_stress_limits_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material",
        "href": "api/_autosummary/ansys.acp.core.Material.html#ansys.acp.core.Material",
        "title": "Material > Material > Material",
        "section": "Material > Material",
        "text": "class ansys.acp.core.Material(*, name='Material', ply_type='undefined', density=None, engineering_constants=None, stress_limits=None, strain_limits=None, puck_constants=None, woven_characterization=None, woven_puck_constants_1=None, woven_puck_constants_2=None, woven_stress_limits_1=None, woven_stress_limits_2=None, tsai_wu_constants=None, larc_constants=None, fabric_fiber_angle=None)\n\nInstantiate a Material.\n\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\n\nThe inactive property sets can still be set, but may not be accessible:\n\nFor stored materials, inactive property sets always return None.\n\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\n\nParameters\n\nname (str) – Name of the Material.\n\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\n\ndensity (ConstantDensity | None) – Define the density of the material.\n\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\n\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\n\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\n\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\n\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\n\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\n\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nMaterial.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nMaterial.delete()\n\nDelete the object.\n\nMaterial.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nMaterial.density\n\n\n\nMaterial.engineering_constants\n\n\n\nMaterial.ext_id\n\n\n\nMaterial.fabric_fiber_angle\n\n\n\nMaterial.id\n\nIdentifier of the object, used for example as key in maps.\n\nMaterial.larc_constants\n\n\n\nMaterial.locked\n\n\n\nMaterial.name\n\nThe name of the object.\n\nMaterial.parent\n\nThe parent of the object.\n\nMaterial.ply_type\n\n\n\nMaterial.puck_constants\n\n\n\nMaterial.status\n\n\n\nMaterial.strain_limits\n\n\n\nMaterial.stress_limits\n\n\n\nMaterial.tsai_wu_constants\n\n\n\nMaterial.woven_characterization\n\n\n\nMaterial.woven_puck_constants_1\n\n\n\nMaterial.woven_puck_constants_2\n\n\n\nMaterial.woven_stress_limits_1\n\n\n\nMaterial.woven_stress_limits_2\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material",
        "href": "api/_autosummary/ansys.acp.core.Material.html#examples-using-material",
        "title": "Material > Examples using Material",
        "section": "Examples using Material",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.delete.html#ansys.acp.core.TubeSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "TubeSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.add_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.add_selection_rule.html#add_selection_rule",
        "title": "add_selection_rule",
        "section": "add_selection_rule",
        "text": "Add a LinkedSelectionRule to the ModelingPly.\nSee LinkedSelectionRule for the available parameters.\nLinkedSelectionRule\nadd_selection_rule\nLinkedSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.add_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.add_selection_rule.html#ansys.acp.core.ModelingPly.add_selection_rule",
        "title": "add_selection_rule > add_selection_rule > add_selection_rule",
        "section": "add_selection_rule > add_selection_rule",
        "text": "ModelingPly.add_selection_rule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nAdd a LinkedSelectionRule to the ModelingPly.\n\nSee LinkedSelectionRule for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nLinkedSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.html#snaptogeometry",
        "title": "SnapToGeometry",
        "section": "SnapToGeometry",
        "text": "Instantiate a snap-to geometry.\nname (str) – Name of the snap-to geometry.\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\nAdded in ACP server version 25.1.\nSnapToGeometry.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSnapToGeometry.delete()\nDelete the object.\nSnapToGeometry.store(parent)\nStore the object on the server.\nSnapToGeometry.active\n\nSnapToGeometry.cad_geometry\n\nSnapToGeometry.id\nIdentifier of the object, used for example as key in maps.\nSnapToGeometry.name\nThe name of the object.\nSnapToGeometry.orientation_type\n\nSnapToGeometry.oriented_selection_set\n\nSnapToGeometry.parent\nThe parent of the object.\nSnapToGeometry.status\n\nSnapToGeometry\nSnapToGeometry.clone\nSnapToGeometry.delete\nSnapToGeometry.store\nSnapToGeometry.active\nSnapToGeometry.cad_geometry\nSnapToGeometry.id\nSnapToGeometry.name\nSnapToGeometry.orientation_type\nSnapToGeometry.oriented_selection_set\nSnapToGeometry.parent\nSnapToGeometry.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.html#ansys.acp.core.SnapToGeometry",
        "title": "SnapToGeometry > SnapToGeometry > SnapToGeometry",
        "section": "SnapToGeometry > SnapToGeometry",
        "text": "class ansys.acp.core.SnapToGeometry(*, name='SnapToGeometry', active=True, orientation_type='top', cad_geometry=None, oriented_selection_set=None)\n\nInstantiate a snap-to geometry.\n\nParameters\n\nname (str) – Name of the snap-to geometry.\n\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\n\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\n\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\n\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSnapToGeometry.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSnapToGeometry.delete()\n\nDelete the object.\n\nSnapToGeometry.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSnapToGeometry.active\n\n\n\nSnapToGeometry.cad_geometry\n\n\n\nSnapToGeometry.id\n\nIdentifier of the object, used for example as key in maps.\n\nSnapToGeometry.name\n\nThe name of the object.\n\nSnapToGeometry.orientation_type\n\n\n\nSnapToGeometry.oriented_selection_set\n\n\n\nSnapToGeometry.parent\n\nThe parent of the object.\n\nSnapToGeometry.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_solid_model.html#create_solid_model",
        "title": "create_solid_model",
        "section": "create_solid_model",
        "text": "Instantiate a solid model.\nname (str) – Name of the solid model.\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\nSolidModel\nAdded in ACP server version 25.1.\ncreate_solid_model\nextrusion_method\nSPECIFY_THICKNESS\nMATERIAL_WISE\nSANDWICH_WISE\nextrusion_method\nUSER_DEFINED\nSHELL_NORMAL\nSURFACE_NORMAL\ndrop_off_material_handling\nGLOBAL\ncut_off_material_handling\nGLOBAL\ndelete_bad_elements\n0\ndelete_bad_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_solid_model.html#ansys.acp.core.Model.create_solid_model",
        "title": "create_solid_model > create_solid_model > create_solid_model",
        "section": "create_solid_model > create_solid_model",
        "text": "Model.create_solid_model(*, name='SolidModel', active=True, element_sets=(), extrusion_method='analysis_ply_wise', max_element_thickness=1.0, ply_group_pointers=(), offset_direction_type='shell_normal', skip_elements_without_plies=False, drop_off_material=None, cut_off_material=None, delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, drop_off_settings=<ansys.acp.core._tree_objects.solid_model.DropOffSettings object>, export_settings=<ansys.acp.core._tree_objects.solid_model.SolidModelExportSettings object>)\n\nInstantiate a solid model.\n\nParameters\n\nname (str) – Name of the solid model.\n\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\n\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\n\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\n\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\n\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\n\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\n\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\n\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\n\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\n\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\n\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\n\nReturn type\n\nSolidModel\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_solid_model.html#examples-using-modelcreate_solid_model",
        "title": "create_solid_model > Examples using Model.create_solid_model",
        "section": "Examples using Model.create_solid_model",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using Model.create_solid_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yt.html#yt",
        "title": "Yt",
        "section": "Yt",
        "text": "Yt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yt.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Yt",
        "title": "Yt > Yt > Yt",
        "section": "Yt > Yt",
        "text": "property ConstantStressLimits.Yt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.section_cut_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.section_cut_type.html#section_cut_type",
        "title": "section_cut_type",
        "section": "section_cut_type",
        "text": "section_cut_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.section_cut_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.section_cut_type.html#ansys.acp.core.SectionCut.section_cut_type",
        "title": "section_cut_type > section_cut_type > section_cut_type",
        "section": "section_cut_type > section_cut_type",
        "text": "property SectionCut.section_cut_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.parent",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.parent",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.parent.html#ansys.acp.core.CADComponent.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property CADComponent.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.CreatableTreeObject",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.CreatableTreeObject.html#creatabletreeobject",
        "title": "CreatableTreeObject",
        "section": "CreatableTreeObject",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nBase class for ACP objects which can be created.\nCreatableTreeObject"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.CreatableTreeObject",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.CreatableTreeObject.html#ansys.acp.core._tree_objects.base.CreatableTreeObject",
        "title": "CreatableTreeObject > CreatableTreeObject > CreatableTreeObject",
        "section": "CreatableTreeObject > CreatableTreeObject",
        "text": "class ansys.acp.core._tree_objects.base.CreatableTreeObject(name='')\n\nBase class for ACP objects which can be created.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.html#solidmodelelementaldata",
        "title": "SolidModelElementalData",
        "section": "SolidModelElementalData",
        "text": "Represents elemental data for a Solid Model.\nSolidModelElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSolidModelElementalData.normal\n\nSolidModelElementalData.element_labels\n\nSolidModelElementalData\nSolidModelElementalData.get_pyvista_mesh\nSolidModelElementalData.normal\nSolidModelElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.html#ansys.acp.core.mesh_data.SolidModelElementalData",
        "title": "SolidModelElementalData > SolidModelElementalData > SolidModelElementalData",
        "section": "SolidModelElementalData > SolidModelElementalData",
        "text": "class ansys.acp.core.mesh_data.SolidModelElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Solid Model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidModelElementalData.normal\n\n\n\nSolidModelElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column.html#create_column",
        "title": "create_column",
        "section": "create_column",
        "text": "Instantiate a Column of a 1D Look-Up Table.\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\nLookUpTable1DColumn\nAdded in ACP server version 24.2.\ncreate_column\nvalue_type\nvalue_type\nLocation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column.html#ansys.acp.core.LookUpTable1D.create_column",
        "title": "create_column > create_column > create_column",
        "section": "create_column > create_column",
        "text": "LookUpTable1D.create_column(*, name='LookUpTable1DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 1D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nReturn type\n\nLookUpTable1DColumn\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.create_column.html#examples-using-lookuptable1dcreate_column",
        "title": "create_column > Examples using LookUpTable1D.create_column",
        "section": "Examples using LookUpTable1D.create_column",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LookUpTable1D.create_column"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.status",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.status",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.status.html#ansys.acp.core.SolidModel.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SolidModel.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.scale_ply_thicknesses",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.scale_ply_thicknesses.html#scale_ply_thicknesses",
        "title": "scale_ply_thicknesses",
        "section": "scale_ply_thicknesses",
        "text": "scale_ply_thicknesses"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.scale_ply_thicknesses",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.scale_ply_thicknesses.html#ansys.acp.core.LayupMappingObject.scale_ply_thicknesses",
        "title": "scale_ply_thicknesses > scale_ply_thicknesses > scale_ply_thicknesses",
        "section": "scale_ply_thicknesses > scale_ply_thicknesses",
        "text": "property LayupMappingObject.scale_ply_thicknesses: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.interpolation_algorithm",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.interpolation_algorithm.html#interpolation_algorithm",
        "title": "interpolation_algorithm",
        "section": "interpolation_algorithm",
        "text": "interpolation_algorithm"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.interpolation_algorithm",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.interpolation_algorithm.html#ansys.acp.core.LookUpTable3D.interpolation_algorithm",
        "title": "interpolation_algorithm > interpolation_algorithm > interpolation_algorithm",
        "section": "interpolation_algorithm > interpolation_algorithm",
        "text": "property LookUpTable3D.interpolation_algorithm: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.name",
        "href": "api/_autosummary/ansys.acp.core.Sensor.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.name",
        "href": "api/_autosummary/ansys.acp.core.Sensor.name.html#ansys.acp.core.Sensor.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Sensor.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.price.html#price",
        "title": "price",
        "section": "price",
        "text": "price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.price.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.price",
        "title": "price > price > price",
        "section": "price > price",
        "text": "ModelingPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "examples/workflows/sg_execution_times",
        "href": "examples/workflows/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:25.419 total execution time for 6 files from examples/workflows:\nExample\nTime\nMem (MB)\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py (02-advanced-pymapdl-workflow.py)\n00:19.088\n0.0\nsphx_glr_examples_workflows_01-pymapdl-workflow.py (01-pymapdl-workflow.py)\n00:06.331\n0.0\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py (03-pymechanical-shell-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py (04-pymechanical-solid-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py (05-pymechanical-to-cdb-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py (06-cdb-to-pymechanical-workflow.py)\n00:00.000\n0.0\nComputation times\n02-advanced-pymapdl-workflow.py\n01-pymapdl-workflow.py\n03-pymechanical-shell-workflow.py\n04-pymechanical-solid-workflow.py\n05-pymechanical-to-cdb-workflow.py\n06-cdb-to-pymechanical-workflow.py"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.status.html#ansys.acp.core.BooleanSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property BooleanSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.parent.html#ansys.acp.core.ImportedModelingGroup.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ImportedModelingGroup.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos.html#p_21_pos",
        "title": "p_21_pos",
        "section": "p_21_pos",
        "text": "p_21_pos"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos.html#ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos",
        "title": "p_21_pos > p_21_pos > p_21_pos",
        "section": "p_21_pos > p_21_pos",
        "text": "property VariablePuckConstants.p_21_pos: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.clone",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.clone",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.clone.html#ansys.acp.core.ElementSet.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ElementSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.UNKNOWN",
        "href": "api/_autosummary/ansys.acp.core.Status.UNKNOWN.html#unknown",
        "title": "UNKNOWN",
        "section": "UNKNOWN",
        "text": "UNKNOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.UNKNOWN",
        "href": "api/_autosummary/ansys.acp.core.Status.UNKNOWN.html#ansys.acp.core.Status.UNKNOWN",
        "title": "UNKNOWN > UNKNOWN > UNKNOWN",
        "section": "UNKNOWN > UNKNOWN",
        "text": "Status.UNKNOWN = 'UNKNOWN'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress.html#effective_stress",
        "title": "effective_stress",
        "section": "effective_stress",
        "text": "effective_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress.html#ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress",
        "title": "effective_stress > effective_stress > effective_stress",
        "section": "effective_stress > effective_stress",
        "text": "property VariableStressLimits.effective_stress: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.status",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.status",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.status.html#ansys.acp.core.CADComponent.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property CADComponent.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableWovenStressLimits.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.html#constantpuckconstants",
        "title": "ConstantPuckConstants",
        "section": "ConstantPuckConstants",
        "text": "Constant Puck constants material property set.\nAdded in ACP server version 24.2.\nConstantPuckConstants.M\n\nConstantPuckConstants.interface_weakening_factor\n\nConstantPuckConstants.mat_type\n\nConstantPuckConstants.p_21_neg\n\nConstantPuckConstants.p_21_pos\n\nConstantPuckConstants.p_22_neg\n\nConstantPuckConstants.p_22_pos\n\nConstantPuckConstants.s\n\nConstantPuckConstants\nConstantPuckConstants.M\nConstantPuckConstants.interface_weakening_factor\nConstantPuckConstants.mat_type\nConstantPuckConstants.p_21_neg\nConstantPuckConstants.p_21_pos\nConstantPuckConstants.p_22_neg\nConstantPuckConstants.p_22_pos\nConstantPuckConstants.s"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.html#ansys.acp.core.material_property_sets.ConstantPuckConstants",
        "title": "ConstantPuckConstants > ConstantPuckConstants > ConstantPuckConstants",
        "section": "ConstantPuckConstants > ConstantPuckConstants",
        "text": "class ansys.acp.core.material_property_sets.ConstantPuckConstants(*, p_21_pos=None, p_21_neg=None, p_22_pos=None, p_22_neg=None, s=0.5, M=0.5, interface_weakening_factor=0.8, mat_type=PuckMaterialType.IGNORED, _parent_object=None, _attribute_path=None)\n\nConstant Puck constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantPuckConstants.M\n\n\n\nConstantPuckConstants.interface_weakening_factor\n\n\n\nConstantPuckConstants.mat_type\n\n\n\nConstantPuckConstants.p_21_neg\n\n\n\nConstantPuckConstants.p_21_pos\n\n\n\nConstantPuckConstants.p_22_neg\n\n\n\nConstantPuckConstants.p_22_pos\n\n\n\nConstantPuckConstants.s\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ParallelSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1.html#orientation_1",
        "title": "orientation_1",
        "section": "orientation_1",
        "text": "orientation_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1",
        "title": "orientation_1 > orientation_1 > orientation_1",
        "section": "orientation_1 > orientation_1",
        "text": "property ConstantWovenCharacterization.orientation_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "sg_execution_times",
        "href": "sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "02:41.809 total execution time for 19 files from all galleries:\nExample\nTime\nMem (MB)\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py (../../examples/use_cases/01-optimizing-ply-angles.py)\n00:41.181\n0.0\nsphx_glr_examples_modeling_features_007-sensor.py (../../examples/modeling_features/007-sensor.py)\n00:23.748\n0.0\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py (../../examples/workflows/02-advanced-pymapdl-workflow.py)\n00:19.088\n0.0\nsphx_glr_examples_modeling_features_031-imported-solid-model.py (../../examples/modeling_features/031-imported-solid-model.py)\n00:18.759\n0.0\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py (../../examples/modeling_features/002-rosettes-ply-directions.py)\n00:09.300\n0.0\nsphx_glr_examples_modeling_features_001-materials.py (../../examples/modeling_features/001-materials.py)\n00:08.918\n0.0\nsphx_glr_examples_workflows_01-pymapdl-workflow.py (../../examples/workflows/01-pymapdl-workflow.py)\n00:06.331\n0.0\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py (../../examples/modeling_features/004-advanced-selection-rules.py)\n00:05.001\n0.0\nsphx_glr_examples_modeling_features_020-solid_model.py (../../examples/modeling_features/020-solid_model.py)\n00:04.830\n0.0\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py (../../examples/modeling_features/010-sandwich-panel-layup.py)\n00:04.771\n0.0\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py (../../examples/modeling_features/003-simple-selection-rules.py)\n00:04.311\n0.0\nsphx_glr_examples_modeling_features_030-imported-plies.py (../../examples/modeling_features/030-imported-plies.py)\n00:04.227\n0.0\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py (../../examples/modeling_features/050-composite_cae_h5.py)\n00:04.121\n0.0\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py (../../examples/modeling_features/006-layup-thickness-definitions.py)\n00:03.670\n0.0\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py (../../examples/modeling_features/005-ply-direction-lookup-table.py)\n00:03.553\n0.0\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py (../../examples/workflows/03-pymechanical-shell-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py (../../examples/workflows/04-pymechanical-solid-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py (../../examples/workflows/05-pymechanical-to-cdb-workflow.py)\n00:00.000\n0.0\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py (../../examples/workflows/06-cdb-to-pymechanical-workflow.py)\n00:00.000\n0.0\nComputation times\n../../examples/use_cases/01-optimizing-ply-angles.py\n../../examples/modeling_features/007-sensor.py\n../../examples/workflows/02-advanced-pymapdl-workflow.py\n../../examples/modeling_features/031-imported-solid-model.py\n../../examples/modeling_features/002-rosettes-ply-directions.py\n../../examples/modeling_features/001-materials.py\n../../examples/workflows/01-pymapdl-workflow.py\n../../examples/modeling_features/004-advanced-selection-rules.py\n../../examples/modeling_features/020-solid_model.py\n../../examples/modeling_features/010-sandwich-panel-layup.py\n../../examples/modeling_features/003-simple-selection-rules.py\n../../examples/modeling_features/030-imported-plies.py\n../../examples/modeling_features/050-composite_cae_h5.py\n../../examples/modeling_features/006-layup-thickness-definitions.py\n../../examples/modeling_features/005-ply-direction-lookup-table.py\n../../examples/workflows/03-pymechanical-shell-workflow.py\n../../examples/workflows/04-pymechanical-solid-workflow.py\n../../examples/workflows/05-pymechanical-to-cdb-workflow.py\n../../examples/workflows/06-cdb-to-pymechanical-workflow.py"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.html#offsettype",
        "title": "OffsetType",
        "section": "OffsetType",
        "text": "Options for the ply offset type.\nOffsetType.NO_OFFSET\n\nOffsetType.BOTTOM_OFFSET\n\nOffsetType.MIDDLE_OFFSET\n\nOffsetType.TOP_OFFSET\n\nOffsetType\nOffsetType.NO_OFFSET\nOffsetType.BOTTOM_OFFSET\nOffsetType.MIDDLE_OFFSET\nOffsetType.TOP_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.html#ansys.acp.core.OffsetType",
        "title": "OffsetType > OffsetType > OffsetType",
        "section": "OffsetType > OffsetType",
        "text": "class ansys.acp.core.OffsetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the ply offset type.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nOffsetType.NO_OFFSET\n\n\n\nOffsetType.BOTTOM_OFFSET\n\n\n\nOffsetType.MIDDLE_OFFSET\n\n\n\nOffsetType.TOP_OFFSET\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.html#examples-using-offsettype",
        "title": "OffsetType > Examples using OffsetType",
        "section": "Examples using OffsetType",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using OffsetType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.edge_set",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.edge_set.html#edge_set",
        "title": "edge_set",
        "section": "edge_set",
        "text": "Edge along which the ply tapering is applied.\nedge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.edge_set",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.edge_set.html#ansys.acp.core.TaperEdge.edge_set",
        "title": "edge_set > edge_set > edge_set",
        "section": "edge_set > edge_set",
        "text": "property TaperEdge.edge_set: EdgeSet\n\nEdge along which the ply tapering is applied.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/dpf_integration_helpers",
        "href": "api/dpf_integration_helpers.html#dpf-integration-helpers",
        "title": "DPF integration helpers",
        "section": "DPF integration helpers",
        "text": "get_dpf_unit_system(unit_system)\nConvert pyACP unit system to DPF unit system.\nDPF integration helpers\nget_dpf_unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SOLID",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SOLID.html#solid",
        "title": "SOLID",
        "section": "SOLID",
        "text": "SOLID"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SOLID",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SOLID.html#ansys.acp.core.VirtualGeometryDimension.SOLID",
        "title": "SOLID > SOLID > SOLID",
        "section": "SOLID > SOLID",
        "text": "VirtualGeometryDimension.SOLID = 'solid'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_H5.html#ansys_h5",
        "title": "ANSYS_H5",
        "section": "ANSYS_H5",
        "text": "ANSYS_H5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_H5",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_H5.html#ansys.acp.core.FeFormat.ANSYS_H5",
        "title": "ANSYS_H5 > ANSYS_H5 > ANSYS_H5",
        "section": "ANSYS_H5 > ANSYS_H5",
        "text": "FeFormat.ANSYS_H5 = 'ansys:h5'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC.html#material_specific",
        "title": "MATERIAL_SPECIFIC",
        "section": "MATERIAL_SPECIFIC",
        "text": "MATERIAL_SPECIFIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC.html#ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC",
        "title": "MATERIAL_SPECIFIC > MATERIAL_SPECIFIC > MATERIAL_SPECIFIC",
        "section": "MATERIAL_SPECIFIC > MATERIAL_SPECIFIC",
        "text": "PuckMaterialType.MATERIAL_SPECIFIC = 'material-specific'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.html#lookuptable3dcolumn",
        "title": "LookUpTable3DColumn",
        "section": "LookUpTable3DColumn",
        "text": "Instantiate a Column of a 3D Look-Up Table.\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\nAdded in ACP server version 24.2.\nLookUpTable3DColumn.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nLookUpTable3DColumn.delete()\nDelete the object.\nLookUpTable3DColumn.store(parent)\nStore the object on the server.\nLookUpTable3DColumn.data\n\nLookUpTable3DColumn.id\nIdentifier of the object, used for example as key in maps.\nLookUpTable3DColumn.name\nThe name of the object.\nLookUpTable3DColumn.parent\nThe parent of the object.\nLookUpTable3DColumn.physical_dimension\n\nLookUpTable3DColumn.value_type\n\nLookUpTable3DColumn\nvalue_type\nvalue_type\nLocation\nLookUpTable3DColumn.clone\nLookUpTable3DColumn.delete\nLookUpTable3DColumn.store\nLookUpTable3DColumn.data\nLookUpTable3DColumn.id\nLookUpTable3DColumn.name\nLookUpTable3DColumn.parent\nLookUpTable3DColumn.physical_dimension\nLookUpTable3DColumn.value_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.html#ansys.acp.core.LookUpTable3DColumn",
        "title": "LookUpTable3DColumn > LookUpTable3DColumn > LookUpTable3DColumn",
        "section": "LookUpTable3DColumn > LookUpTable3DColumn",
        "text": "class ansys.acp.core.LookUpTable3DColumn(*, name='LookUpTable3DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 3D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLookUpTable3DColumn.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nLookUpTable3DColumn.delete()\n\nDelete the object.\n\nLookUpTable3DColumn.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLookUpTable3DColumn.data\n\n\n\nLookUpTable3DColumn.id\n\nIdentifier of the object, used for example as key in maps.\n\nLookUpTable3DColumn.name\n\nThe name of the object.\n\nLookUpTable3DColumn.parent\n\nThe parent of the object.\n\nLookUpTable3DColumn.physical_dimension\n\n\n\nLookUpTable3DColumn.value_type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.html#examples-using-lookuptable3dcolumn",
        "title": "LookUpTable3DColumn > Examples using LookUpTable3DColumn",
        "section": "Examples using LookUpTable3DColumn",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using LookUpTable3DColumn"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.core_scale_factor",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.core_scale_factor.html#core_scale_factor",
        "title": "core_scale_factor",
        "section": "core_scale_factor",
        "text": "core_scale_factor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.core_scale_factor",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.core_scale_factor.html#ansys.acp.core.SectionCut.core_scale_factor",
        "title": "core_scale_factor > core_scale_factor > core_scale_factor",
        "section": "core_scale_factor > core_scale_factor",
        "text": "property SectionCut.core_scale_factor: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.shell_mesh.html#ansys.acp.core.SphericalSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property SphericalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.relative_rule.html#relative_rule",
        "title": "relative_rule",
        "section": "relative_rule",
        "text": "relative_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.relative_rule.html#ansys.acp.core.SphericalSelectionRule.relative_rule",
        "title": "relative_rule > relative_rule > relative_rule",
        "section": "relative_rule > relative_rule",
        "text": "property SphericalSelectionRule.relative_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.delete.html#ansys.acp.core.SnapToGeometry.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SnapToGeometry.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "TubeSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solsh_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solsh_elements.html#use_solsh_elements",
        "title": "use_solsh_elements",
        "section": "use_solsh_elements",
        "text": "use_solsh_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solsh_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solsh_elements.html#ansys.acp.core.SolidModelExportSettings.use_solsh_elements",
        "title": "use_solsh_elements > use_solsh_elements > use_solsh_elements",
        "section": "use_solsh_elements > use_solsh_elements",
        "text": "property SolidModelExportSettings.use_solsh_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.delete.html#ansys.acp.core.BooleanSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "BooleanSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method.html#rosette_selection_method",
        "title": "rosette_selection_method",
        "section": "rosette_selection_method",
        "text": "rosette_selection_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method.html#ansys.acp.core.OrientedSelectionSet.rosette_selection_method",
        "title": "rosette_selection_method > rosette_selection_method > rosette_selection_method",
        "section": "rosette_selection_method > rosette_selection_method",
        "text": "property OrientedSelectionSet.rosette_selection_method: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method.html#examples-using-orientedselectionsetrosette_selection_method",
        "title": "rosette_selection_method > Examples using OrientedSelectionSet.rosette_selection_method",
        "section": "Examples using OrientedSelectionSet.rosette_selection_method",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using OrientedSelectionSet.rosette_selection_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rotation_angle",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rotation_angle.html#rotation_angle",
        "title": "rotation_angle",
        "section": "rotation_angle",
        "text": "rotation_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rotation_angle",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rotation_angle.html#ansys.acp.core.OrientedSelectionSet.rotation_angle",
        "title": "rotation_angle > rotation_angle > rotation_angle",
        "section": "rotation_angle > rotation_angle",
        "text": "property OrientedSelectionSet.rotation_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.html#fielddefinition",
        "title": "FieldDefinition",
        "section": "FieldDefinition",
        "text": "Instantiate a Field Definition.\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\nname (str) – Name of the field definition.\nactive (bool) – Inactive field definitions are ignored.\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\nAdded in ACP server version 25.1.\nFieldDefinition.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nFieldDefinition.delete()\nDelete the object.\nFieldDefinition.store(parent)\nStore the object on the server.\nFieldDefinition.active\n\nFieldDefinition.field_variable_name\n\nFieldDefinition.full_mapping\n\nFieldDefinition.id\nIdentifier of the object, used for example as key in maps.\nFieldDefinition.name\nThe name of the object.\nFieldDefinition.parent\nThe parent of the object.\nFieldDefinition.scalar_field\n\nFieldDefinition.scope_entities\n\nFieldDefinition.status\n\nFieldDefinition\nTemperature\nShear Angle\nFieldDefinition.clone\nFieldDefinition.delete\nFieldDefinition.store\nFieldDefinition.active\nFieldDefinition.field_variable_name\nFieldDefinition.full_mapping\nFieldDefinition.id\nFieldDefinition.name\nFieldDefinition.parent\nFieldDefinition.scalar_field\nFieldDefinition.scope_entities\nFieldDefinition.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.html#ansys.acp.core.FieldDefinition",
        "title": "FieldDefinition > FieldDefinition > FieldDefinition",
        "section": "FieldDefinition > FieldDefinition",
        "text": "class ansys.acp.core.FieldDefinition(*, name='FieldDefinition', active=True, field_variable_name='', scope_entities=(), scalar_field=None, full_mapping=False)\n\nInstantiate a Field Definition.\n\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\n\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\n\nParameters\n\nname (str) – Name of the field definition.\n\nactive (bool) – Inactive field definitions are ignored.\n\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\n\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\n\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\n\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nFieldDefinition.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nFieldDefinition.delete()\n\nDelete the object.\n\nFieldDefinition.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nFieldDefinition.active\n\n\n\nFieldDefinition.field_variable_name\n\n\n\nFieldDefinition.full_mapping\n\n\n\nFieldDefinition.id\n\nIdentifier of the object, used for example as key in maps.\n\nFieldDefinition.name\n\nThe name of the object.\n\nFieldDefinition.parent\n\nThe parent of the object.\n\nFieldDefinition.scalar_field\n\n\n\nFieldDefinition.scope_entities\n\n\n\nFieldDefinition.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ.html#xz",
        "title": "XZ",
        "section": "XZ",
        "text": "XZ"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ",
        "title": "XZ > XZ > XZ",
        "section": "XZ > XZ",
        "text": "property VariableTsaiWuConstants.XZ: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23.html#g23",
        "title": "G23",
        "section": "G23",
        "text": "G23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23",
        "title": "G23 > G23 > G23",
        "section": "G23 > G23",
        "text": "property ConstantEngineeringConstants.G23: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.angle.html#ansys.acp.core.ProductionPly.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property ProductionPly.angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL.html#radial",
        "title": "RADIAL",
        "section": "RADIAL",
        "text": "RADIAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL.html#ansys.acp.core.RosetteType.RADIAL",
        "title": "RADIAL > RADIAL > RADIAL",
        "section": "RADIAL > RADIAL",
        "text": "RosetteType.RADIAL = 'radial'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.RADIAL.html#examples-using-rosettetyperadial",
        "title": "RADIAL > Examples using RosetteType.RADIAL",
        "section": "Examples using RosetteType.RADIAL",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType.RADIAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.limit_angle",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.limit_angle.html#limit_angle",
        "title": "limit_angle",
        "section": "limit_angle",
        "text": "limit_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.limit_angle",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.limit_angle.html#ansys.acp.core.EdgeSet.limit_angle",
        "title": "limit_angle > limit_angle > limit_angle",
        "section": "limit_angle > limit_angle",
        "text": "property EdgeSet.limit_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.volume.html#volume",
        "title": "volume",
        "section": "volume",
        "text": "volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.volume.html#ansys.acp.core.mesh_data.ModelElementalData.volume",
        "title": "volume > volume > volume",
        "section": "volume > volume",
        "text": "ModelElementalData.volume: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.parent.html#ansys.acp.core.LookUpTable3DColumn.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property LookUpTable3DColumn.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.html#tubeselectionrulenodaldata",
        "title": "TubeSelectionRuleNodalData",
        "section": "TubeSelectionRuleNodalData",
        "text": "Represents nodal data for a Tube Selection Rule.\nTubeSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nTubeSelectionRuleNodalData.node_labels\n\nTubeSelectionRuleNodalData\nTubeSelectionRuleNodalData.get_pyvista_mesh\nTubeSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.html#ansys.acp.core.mesh_data.TubeSelectionRuleNodalData",
        "title": "TubeSelectionRuleNodalData > TubeSelectionRuleNodalData > TubeSelectionRuleNodalData",
        "section": "TubeSelectionRuleNodalData > TubeSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.TubeSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Tube Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTubeSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTubeSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E.html#e",
        "title": "E",
        "section": "E",
        "text": "E"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.E",
        "title": "E > E > E",
        "section": "E > E",
        "text": "property VariableEngineeringConstants.E: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.draping_offset_correction",
        "href": "api/_autosummary/ansys.acp.core.Model.draping_offset_correction.html#draping_offset_correction",
        "title": "draping_offset_correction",
        "section": "draping_offset_correction",
        "text": "draping_offset_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.draping_offset_correction",
        "href": "api/_autosummary/ansys.acp.core.Model.draping_offset_correction.html#ansys.acp.core.Model.draping_offset_correction",
        "title": "draping_offset_correction > draping_offset_correction > draping_offset_correction",
        "section": "draping_offset_correction > draping_offset_correction",
        "text": "property Model.draping_offset_correction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.name.html#ansys.acp.core.ParallelSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ParallelSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction.html#draped_fiber_direction",
        "title": "draped_fiber_direction",
        "section": "draped_fiber_direction",
        "text": "draped_fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction",
        "title": "draped_fiber_direction > draped_fiber_direction > draped_fiber_direction",
        "section": "draped_fiber_direction > draped_fiber_direction",
        "text": "ModelingPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions.html#import_acp_composite_definitions",
        "title": "import_acp_composite_definitions",
        "section": "import_acp_composite_definitions",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nImport ACP composite definitions HDF5 into Mechanical.\nImports the composite layup defined in ACP into Mechanical, as Imported Plies.\nThis function does not import the solid mesh, use import_acp_mesh_from_cdb()\nfor this purpose.\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\npath (str | PathLike[str]) – The path of the file to import. The extension must be ‘.h5’.\nimport_acp_composite_definitions\nimport_acp_mesh_from_cdb()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions.html#ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions",
        "title": "import_acp_composite_definitions > import_acp_composite_definitions > import_acp_composite_definitions",
        "section": "import_acp_composite_definitions > import_acp_composite_definitions",
        "text": "ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions(*, mechanical, path)\n\nImport ACP composite definitions HDF5 into Mechanical.\n\nImports the composite layup defined in ACP into Mechanical, as Imported Plies.\n\nThis function does not import the solid mesh, use import_acp_mesh_from_cdb()\nfor this purpose.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\npath (str | PathLike[str]) – The path of the file to import. The extension must be ‘.h5’.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.external_path",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.external_path.html#external_path",
        "title": "external_path",
        "section": "external_path",
        "text": "external_path"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.external_path",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.external_path.html#ansys.acp.core.ImportedSolidModel.external_path",
        "title": "external_path > external_path > external_path",
        "section": "external_path > external_path",
        "text": "property ImportedSolidModel.external_path: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE.html#production_ply_wise",
        "title": "PRODUCTION_PLY_WISE",
        "section": "PRODUCTION_PLY_WISE",
        "text": "PRODUCTION_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE.html#ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE",
        "title": "PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE",
        "section": "PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE",
        "text": "SectionCutType.PRODUCTION_PLY_WISE = 'production_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_edge_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_edge_set.html#create_edge_set",
        "title": "create_edge_set",
        "section": "create_edge_set",
        "text": "Instantiate an edge set.\nname (str) – Name of the edge set.\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\nDetermines how the edge set is defined. Can be one of:\nEdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\nEdgeSet\nAdded in ACP server version 24.2.\ncreate_edge_set\nEdgeSetType.BY_REFERENCE\nElementSet\nEdgeSetType.BY_NODES\nedge_set_type\nEdgeSetType.BY_NODES\nedge_set_type\nEdgeSetType.BY_REFERENCE\n-1.\nedge_set_type\nEdgeSetType.BY_REFERENCE\nedge_set_type\nEdgeSetType.BY_REFERENCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_edge_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_edge_set.html#ansys.acp.core.Model.create_edge_set",
        "title": "create_edge_set > create_edge_set > create_edge_set",
        "section": "create_edge_set > create_edge_set",
        "text": "Model.create_edge_set(*, name='EdgeSet', edge_set_type='by_reference', defining_node_labels=(), element_set=None, limit_angle=-1.0, origin=(0.0, 0.0, 0.0))\n\nInstantiate an edge set.\n\nParameters\n\nname (str) – Name of the edge set.\n\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\n\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\n\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nReturn type\n\nEdgeSet\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_edge_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_edge_set.html#examples-using-modelcreate_edge_set",
        "title": "create_edge_set > Examples using Model.create_edge_set",
        "section": "Examples using Model.create_edge_set",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using Model.create_edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements.html#use_solsh_elements",
        "title": "use_solsh_elements",
        "section": "use_solsh_elements",
        "text": "use_solsh_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements.html#ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements",
        "title": "use_solsh_elements > use_solsh_elements > use_solsh_elements",
        "section": "use_solsh_elements > use_solsh_elements",
        "text": "property ImportedSolidModelExportSettings.use_solsh_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.direction.html#ansys.acp.core.SamplingPoint.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property SamplingPoint.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.html#variablestresslimits",
        "title": "VariableStressLimits",
        "section": "VariableStressLimits",
        "text": "Variable stress limits material property set.\nAdded in ACP server version 24.2.\nVariableStressLimits.Sxy\n\nVariableStressLimits.Sxz\n\nVariableStressLimits.Syz\n\nVariableStressLimits.Xc\n\nVariableStressLimits.Xt\n\nVariableStressLimits.Yc\n\nVariableStressLimits.Yt\n\nVariableStressLimits.Zc\n\nVariableStressLimits.Zt\n\nVariableStressLimits.effective_stress\n\nVariableStressLimits.field_variables\n\nVariableStressLimits.interpolation_options\n\nVariableStressLimits\nVariableStressLimits.Sxy\nVariableStressLimits.Sxz\nVariableStressLimits.Syz\nVariableStressLimits.Xc\nVariableStressLimits.Xt\nVariableStressLimits.Yc\nVariableStressLimits.Yt\nVariableStressLimits.Zc\nVariableStressLimits.Zt\nVariableStressLimits.effective_stress\nVariableStressLimits.field_variables\nVariableStressLimits.interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.html#ansys.acp.core.material_property_sets.VariableStressLimits",
        "title": "VariableStressLimits > VariableStressLimits > VariableStressLimits",
        "section": "VariableStressLimits > VariableStressLimits",
        "text": "class ansys.acp.core.material_property_sets.VariableStressLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable stress limits material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableStressLimits.Sxy\n\n\n\nVariableStressLimits.Sxz\n\n\n\nVariableStressLimits.Syz\n\n\n\nVariableStressLimits.Xc\n\n\n\nVariableStressLimits.Xt\n\n\n\nVariableStressLimits.Yc\n\n\n\nVariableStressLimits.Yt\n\n\n\nVariableStressLimits.Zc\n\n\n\nVariableStressLimits.Zt\n\n\n\nVariableStressLimits.effective_stress\n\n\n\nVariableStressLimits.field_variables\n\n\n\nVariableStressLimits.interpolation_options\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.locked",
        "href": "api/_autosummary/ansys.acp.core.Material.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.locked",
        "href": "api/_autosummary/ansys.acp.core.Material.locked.html#ansys.acp.core.Material.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property Material.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rindex",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rindex.html#rindex",
        "title": "rindex",
        "section": "rindex",
        "text": "Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nRaises ValueError when the substring is not found.\nrindex"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rindex",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rindex.html#ansys.acp.core.LaunchMode.rindex",
        "title": "rindex > rindex > rindex",
        "section": "rindex > rindex",
        "text": "LaunchMode.rindex(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING.html#no_draping",
        "title": "NO_DRAPING",
        "section": "NO_DRAPING",
        "text": "NO_DRAPING"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING.html#ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING",
        "title": "NO_DRAPING > NO_DRAPING > NO_DRAPING",
        "section": "NO_DRAPING > NO_DRAPING",
        "text": "ImportedPlyDrapingType.NO_DRAPING = 'no_draping'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance.html#in_plane_capture_tolerance",
        "title": "in_plane_capture_tolerance",
        "section": "in_plane_capture_tolerance",
        "text": "in_plane_capture_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance.html#ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance",
        "title": "in_plane_capture_tolerance > in_plane_capture_tolerance > in_plane_capture_tolerance",
        "section": "in_plane_capture_tolerance > in_plane_capture_tolerance",
        "text": "property GeometricalSelectionRule.in_plane_capture_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.html#lookuptable1dcolumn",
        "title": "LookUpTable1DColumn",
        "section": "LookUpTable1DColumn",
        "text": "Instantiate a Column of a 1D Look-Up Table.\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\nAdded in ACP server version 24.2.\nLookUpTable1DColumn.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nLookUpTable1DColumn.delete()\nDelete the object.\nLookUpTable1DColumn.store(parent)\nStore the object on the server.\nLookUpTable1DColumn.data\n\nLookUpTable1DColumn.id\nIdentifier of the object, used for example as key in maps.\nLookUpTable1DColumn.name\nThe name of the object.\nLookUpTable1DColumn.parent\nThe parent of the object.\nLookUpTable1DColumn.physical_dimension\n\nLookUpTable1DColumn.value_type\n\nLookUpTable1DColumn\nvalue_type\nvalue_type\nLocation\nLookUpTable1DColumn.clone\nLookUpTable1DColumn.delete\nLookUpTable1DColumn.store\nLookUpTable1DColumn.data\nLookUpTable1DColumn.id\nLookUpTable1DColumn.name\nLookUpTable1DColumn.parent\nLookUpTable1DColumn.physical_dimension\nLookUpTable1DColumn.value_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.html#ansys.acp.core.LookUpTable1DColumn",
        "title": "LookUpTable1DColumn > LookUpTable1DColumn > LookUpTable1DColumn",
        "section": "LookUpTable1DColumn > LookUpTable1DColumn",
        "text": "class ansys.acp.core.LookUpTable1DColumn(*, name='LookUpTable1DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 1D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLookUpTable1DColumn.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nLookUpTable1DColumn.delete()\n\nDelete the object.\n\nLookUpTable1DColumn.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLookUpTable1DColumn.data\n\n\n\nLookUpTable1DColumn.id\n\nIdentifier of the object, used for example as key in maps.\n\nLookUpTable1DColumn.name\n\nThe name of the object.\n\nLookUpTable1DColumn.parent\n\nThe parent of the object.\n\nLookUpTable1DColumn.physical_dimension\n\n\n\nLookUpTable1DColumn.value_type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.html#examples-using-lookuptable1dcolumn",
        "title": "LookUpTable1DColumn > Examples using LookUpTable1DColumn",
        "section": "Examples using LookUpTable1DColumn",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LookUpTable1DColumn"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.clone.html#ansys.acp.core.GeometricalSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "GeometricalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply.html#create_modeling_ply",
        "title": "create_modeling_ply",
        "section": "create_modeling_ply",
        "text": "Instantiate a Modeling Ply.\nname (str) – The name of the Modeling Ply\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\nnumber_of_layers (int) – Number of times the plies are generated.\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\nglobal_ply_nr (int) – Defines the global ply order.\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\ndraping_type (DrapingType) – Chooses between different draping formulations.\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\nseed point is used as draping direction.\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\nModelingPly\nAdded in ACP server version 24.2.\ncreate_modeling_ply\nTrue\nauto_draping_direction\nFalse\n-1.\ndraping_angle_1_field\nThicknessType.FROM_GEOMETRY\nThicknessType.FROM_TABLE\nThicknessType.NOMINAL\nthickness_type\nThicknessType.FROM_GEOMETRY\nthickness_type\nThicknessType.FROM_TABLE\nthickness_type\nThicknessType.FROM_TABLE\nThicknessFieldType.ABSOLUTE_VALUES\nThicknessFieldType.RELATIVE_SCALING_FACTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply.html#ansys.acp.core.ModelingGroup.create_modeling_ply",
        "title": "create_modeling_ply > create_modeling_ply > create_modeling_ply",
        "section": "create_modeling_ply > create_modeling_ply",
        "text": "ModelingGroup.create_modeling_ply(*, name='ModelingPly', ply_material=None, oriented_selection_sets=(), ply_angle=0.0, number_of_layers=1, active=True, global_ply_nr=0, selection_rules=(), draping_type='no_draping', draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(1.0, 0.0, 0.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_thickness_correction=True, draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_geometry=None, thickness_field=None, thickness_field_type='absolute_values', taper_edges=())\n\nInstantiate a Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\nnumber_of_layers (int) – Number of times the plies are generated.\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\nglobal_ply_nr (int) – Defines the global ply order.\n\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\n\ndraping_type (DrapingType) – Chooses between different draping formulations.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\n\nReturn type\n\nModelingPly\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply.html#examples-using-modelinggroupcreate_modeling_ply",
        "title": "create_modeling_ply > Examples using ModelingGroup.create_modeling_ply",
        "section": "Examples using ModelingGroup.create_modeling_ply",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using ModelingGroup.create_modeling_ply"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE.html#draped_transverse_angle",
        "title": "DRAPED_TRANSVERSE_ANGLE",
        "section": "DRAPED_TRANSVERSE_ANGLE",
        "text": "DRAPED_TRANSVERSE_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE.html#ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE",
        "title": "DRAPED_TRANSVERSE_ANGLE > DRAPED_TRANSVERSE_ANGLE > DRAPED_TRANSVERSE_ANGLE",
        "section": "DRAPED_TRANSVERSE_ANGLE > DRAPED_TRANSVERSE_ANGLE",
        "text": "ElementalDataType.DRAPED_TRANSVERSE_ANGLE = 'draped_transverse_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.delete",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.delete",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.delete.html#ansys.acp.core.ModelingPly.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ModelingPly.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._server.common.ControllableServerProtocol",
        "href": "api/_autosummary/ansys.acp.core._server.common.ControllableServerProtocol.html#controllableserverprotocol",
        "title": "ControllableServerProtocol",
        "section": "ControllableServerProtocol",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nInterface definition for ACP servers which can be remotely started / stopped.\nControllableServerProtocol"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._server.common.ControllableServerProtocol",
        "href": "api/_autosummary/ansys.acp.core._server.common.ControllableServerProtocol.html#ansys.acp.core._server.common.ControllableServerProtocol",
        "title": "ControllableServerProtocol > ControllableServerProtocol > ControllableServerProtocol",
        "section": "ControllableServerProtocol > ControllableServerProtocol",
        "text": "class ansys.acp.core._server.common.ControllableServerProtocol(*args, **kwargs)\n\nInterface definition for ACP servers which can be remotely started / stopped.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ImportedSolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "GeometricalSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.id.html#ansys.acp.core.GeometricalSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property GeometricalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.store",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.store.html#ansys.acp.core.LookUpTable1DColumn.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "LookUpTable1DColumn.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field_type.html#thickness_field_type",
        "title": "thickness_field_type",
        "section": "thickness_field_type",
        "text": "thickness_field_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field_type.html#ansys.acp.core.ImportedModelingPly.thickness_field_type",
        "title": "thickness_field_type > thickness_field_type > thickness_field_type",
        "section": "thickness_field_type > thickness_field_type",
        "text": "property ImportedModelingPly.thickness_field_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.element_set",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.element_set.html#element_set",
        "title": "element_set",
        "section": "element_set",
        "text": "element_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.element_set",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.element_set.html#ansys.acp.core.VariableOffsetSelectionRule.element_set",
        "title": "element_set > element_set > element_set",
        "section": "element_set > element_set",
        "text": "property VariableOffsetSelectionRule.element_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED.html#surface_sweep_based",
        "title": "SURFACE_SWEEP_BASED",
        "section": "SURFACE_SWEEP_BASED",
        "text": "SURFACE_SWEEP_BASED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED.html#ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED",
        "title": "SURFACE_SWEEP_BASED > SURFACE_SWEEP_BASED > SURFACE_SWEEP_BASED",
        "section": "SURFACE_SWEEP_BASED > SURFACE_SWEEP_BASED",
        "text": "ExtrusionType.SURFACE_SWEEP_BASED = 'surface_sweep_based'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_butt_joint_sequence",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_butt_joint_sequence.html#create_butt_joint_sequence",
        "title": "create_butt_joint_sequence",
        "section": "create_butt_joint_sequence",
        "text": "Instantiate a ButtJointSequence.\nname (str) – Name of the butt joint sequence.\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\nButtJointSequence\nAdded in ACP server version 25.1.\ncreate_butt_joint_sequence"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_butt_joint_sequence",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_butt_joint_sequence.html#ansys.acp.core.ModelingGroup.create_butt_joint_sequence",
        "title": "create_butt_joint_sequence > create_butt_joint_sequence > create_butt_joint_sequence",
        "section": "create_butt_joint_sequence > create_butt_joint_sequence",
        "text": "ModelingGroup.create_butt_joint_sequence(*, name='ButtJointSequence', active=True, global_ply_nr=0, primary_plies=(), secondary_plies=())\n\nInstantiate a ButtJointSequence.\n\nParameters\n\nname (str) – Name of the butt joint sequence.\n\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\n\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\n\nReturn type\n\nButtJointSequence\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.PRICE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.PRICE.html#price",
        "title": "PRICE",
        "section": "PRICE",
        "text": "PRICE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.PRICE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.PRICE.html#ansys.acp.core.ElementalDataType.PRICE",
        "title": "PRICE > PRICE > PRICE",
        "section": "PRICE > PRICE",
        "text": "ElementalDataType.PRICE = 'price'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.HONEYCOMB_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.HONEYCOMB_CORE.html#honeycomb_core",
        "title": "HONEYCOMB_CORE",
        "section": "HONEYCOMB_CORE",
        "text": "HONEYCOMB_CORE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.HONEYCOMB_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.HONEYCOMB_CORE.html#ansys.acp.core.PlyType.HONEYCOMB_CORE",
        "title": "HONEYCOMB_CORE > HONEYCOMB_CORE > HONEYCOMB_CORE",
        "section": "HONEYCOMB_CORE > HONEYCOMB_CORE",
        "text": "PlyType.HONEYCOMB_CORE = 'honeycomb_core'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MATERIAL_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MATERIAL_WISE.html#material_wise",
        "title": "MATERIAL_WISE",
        "section": "MATERIAL_WISE",
        "text": "MATERIAL_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MATERIAL_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MATERIAL_WISE.html#ansys.acp.core.ExtrusionMethod.MATERIAL_WISE",
        "title": "MATERIAL_WISE > MATERIAL_WISE > MATERIAL_WISE",
        "section": "MATERIAL_WISE > MATERIAL_WISE",
        "text": "ExtrusionMethod.MATERIAL_WISE = 'material_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE.html#analysis_ply_wise",
        "title": "ANALYSIS_PLY_WISE",
        "section": "ANALYSIS_PLY_WISE",
        "text": "ANALYSIS_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE.html#ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE",
        "title": "ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE",
        "section": "ANALYSIS_PLY_WISE > ANALYSIS_PLY_WISE",
        "text": "ExtrusionMethod.ANALYSIS_PLY_WISE = 'analysis_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz.html#esyz",
        "title": "eSyz",
        "section": "eSyz",
        "text": "eSyz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz",
        "title": "eSyz > eSyz > eSyz",
        "section": "eSyz > eSyz",
        "text": "property VariableStrainLimits.eSyz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY.html#thickness_geometry",
        "title": "THICKNESS_GEOMETRY",
        "section": "THICKNESS_GEOMETRY",
        "text": "THICKNESS_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY.html#ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY",
        "title": "THICKNESS_GEOMETRY > THICKNESS_GEOMETRY > THICKNESS_GEOMETRY",
        "section": "THICKNESS_GEOMETRY > THICKNESS_GEOMETRY",
        "text": "ExampleKeys.THICKNESS_GEOMETRY = 9\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.html#elementtechnology",
        "title": "ElementTechnology",
        "section": "ElementTechnology",
        "text": "Options for the element technology used in a layup mapping object.\nElementTechnology.LAYERED_ELEMENT\n\nElementTechnology.REINFORCING\n\nElementTechnology\nElementTechnology.LAYERED_ELEMENT\nElementTechnology.REINFORCING"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.html#ansys.acp.core.ElementTechnology",
        "title": "ElementTechnology > ElementTechnology > ElementTechnology",
        "section": "ElementTechnology > ElementTechnology",
        "text": "class ansys.acp.core.ElementTechnology(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the element technology used in a layup mapping object.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nElementTechnology.LAYERED_ELEMENT\n\n\n\nElementTechnology.REINFORCING\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.html#examples-using-elementtechnology",
        "title": "ElementTechnology > Examples using ElementTechnology",
        "section": "Examples using ElementTechnology",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using ElementTechnology"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2.html#g12_2",
        "title": "G12_2",
        "section": "G12_2",
        "text": "G12_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2",
        "title": "G12_2 > G12_2 > G12_2",
        "section": "G12_2 > G12_2",
        "text": "property VariableWovenCharacterization.G12_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes.html#rosettes",
        "title": "rosettes",
        "section": "rosettes",
        "text": "rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes.html#ansys.acp.core.OrientedSelectionSet.rosettes",
        "title": "rosettes > rosettes > rosettes",
        "section": "rosettes > rosettes",
        "text": "property OrientedSelectionSet.rosettes: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes.html#examples-using-orientedselectionsetrosettes",
        "title": "rosettes > Examples using OrientedSelectionSet.rosettes",
        "section": "Examples using OrientedSelectionSet.rosettes",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using OrientedSelectionSet.rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.locked",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.locked",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.locked.html#ansys.acp.core.CADGeometry.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property CADGeometry.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_mesh_size.html#draping_mesh_size",
        "title": "draping_mesh_size",
        "section": "draping_mesh_size",
        "text": "draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_mesh_size.html#ansys.acp.core.OrientedSelectionSet.draping_mesh_size",
        "title": "draping_mesh_size > draping_mesh_size > draping_mesh_size",
        "section": "draping_mesh_size > draping_mesh_size",
        "text": "property OrientedSelectionSet.draping_mesh_size: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY.html#odd_symmetry",
        "title": "ODD_SYMMETRY",
        "section": "ODD_SYMMETRY",
        "text": "ODD_SYMMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY.html#ansys.acp.core.SymmetryType.ODD_SYMMETRY",
        "title": "ODD_SYMMETRY > ODD_SYMMETRY > ODD_SYMMETRY",
        "section": "ODD_SYMMETRY > ODD_SYMMETRY",
        "text": "SymmetryType.ODD_SYMMETRY = 'odd_symmetry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY.html#examples-using-symmetrytypeodd_symmetry",
        "title": "ODD_SYMMETRY > Examples using SymmetryType.ODD_SYMMETRY",
        "section": "Examples using SymmetryType.ODD_SYMMETRY",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nExamples using SymmetryType.ODD_SYMMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.status",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.status",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.status.html#ansys.acp.core.InterfaceLayer.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property InterfaceLayer.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets.html#solid_element_sets",
        "title": "solid_element_sets",
        "section": "solid_element_sets",
        "text": "solid_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets.html#ansys.acp.core.ImportedSolidModel.solid_element_sets",
        "title": "solid_element_sets > solid_element_sets > solid_element_sets",
        "section": "solid_element_sets > solid_element_sets",
        "text": "property ImportedSolidModel.solid_element_sets: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets.html#examples-using-importedsolidmodelsolid_element_sets",
        "title": "solid_element_sets > Examples using ImportedSolidModel.solid_element_sets",
        "section": "Examples using ImportedSolidModel.solid_element_sets",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using ImportedSolidModel.solid_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.capitalize",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.capitalize.html#capitalize",
        "title": "capitalize",
        "section": "capitalize",
        "text": "Return a capitalized version of the string.\nMore specifically, make the first character have upper case and the rest lower\ncase.\ncapitalize"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.capitalize",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.capitalize.html#ansys.acp.core.material_property_sets.PuckMaterialType.capitalize",
        "title": "capitalize > capitalize > capitalize",
        "section": "capitalize > capitalize",
        "text": "PuckMaterialType.capitalize(/)\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower\ncase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY.html#cut_off_geometry",
        "title": "CUT_OFF_GEOMETRY",
        "section": "CUT_OFF_GEOMETRY",
        "text": "CUT_OFF_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY.html#ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY",
        "title": "CUT_OFF_GEOMETRY > CUT_OFF_GEOMETRY > CUT_OFF_GEOMETRY",
        "section": "CUT_OFF_GEOMETRY > CUT_OFF_GEOMETRY",
        "text": "ExampleKeys.CUT_OFF_GEOMETRY = 7\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh.html#solid_mesh",
        "title": "solid_mesh",
        "section": "solid_mesh",
        "text": "Solid mesh associated with the object.\nsolid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh.html#ansys.acp.core.ImportedSolidModel.solid_mesh",
        "title": "solid_mesh > solid_mesh > solid_mesh",
        "section": "solid_mesh > solid_mesh",
        "text": "property ImportedSolidModel.solid_mesh: MeshData\n\nSolid mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh.html#examples-using-importedsolidmodelsolid_mesh",
        "title": "solid_mesh > Examples using ImportedSolidModel.solid_mesh",
        "section": "Examples using ImportedSolidModel.solid_mesh",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedSolidModel.solid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY.html#by_geometry",
        "title": "BY_GEOMETRY",
        "section": "BY_GEOMETRY",
        "text": "BY_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY.html#ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY",
        "title": "BY_GEOMETRY > BY_GEOMETRY > BY_GEOMETRY",
        "section": "BY_GEOMETRY > BY_GEOMETRY",
        "text": "ExtrusionGuideType.BY_GEOMETRY = 'by_geometry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.nodal_data.html#ansys.acp.core.ImportedSolidModel.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ImportedSolidModel.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.name",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.name",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.name.html#ansys.acp.core.EdgeSet.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property EdgeSet.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle.html#fabric_fiber_angle",
        "title": "fabric_fiber_angle",
        "section": "fabric_fiber_angle",
        "text": "fabric_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle.html#ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle",
        "title": "fabric_fiber_angle > fabric_fiber_angle > fabric_fiber_angle",
        "section": "fabric_fiber_angle > fabric_fiber_angle",
        "text": "property VariableFabricFiberAngle.fabric_fiber_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.active",
        "href": "api/_autosummary/ansys.acp.core.Sensor.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.active",
        "href": "api/_autosummary/ansys.acp.core.Sensor.active.html#ansys.acp.core.Sensor.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property Sensor.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction.html#reference_direction",
        "title": "reference_direction",
        "section": "reference_direction",
        "text": "reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction",
        "title": "reference_direction > reference_direction > reference_direction",
        "section": "reference_direction > reference_direction",
        "text": "ModelingPlyElementalData.reference_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.html#tubeselectionruleelementaldata",
        "title": "TubeSelectionRuleElementalData",
        "section": "TubeSelectionRuleElementalData",
        "text": "Represents elemental data for a Tube Selection Rule.\nTubeSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nTubeSelectionRuleElementalData.normal\n\nTubeSelectionRuleElementalData.element_labels\n\nTubeSelectionRuleElementalData\nTubeSelectionRuleElementalData.get_pyvista_mesh\nTubeSelectionRuleElementalData.normal\nTubeSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.html#ansys.acp.core.mesh_data.TubeSelectionRuleElementalData",
        "title": "TubeSelectionRuleElementalData > TubeSelectionRuleElementalData > TubeSelectionRuleElementalData",
        "section": "TubeSelectionRuleElementalData > TubeSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.TubeSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Tube Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTubeSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTubeSelectionRuleElementalData.normal\n\n\n\nTubeSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#pymechanical-shell-workflow",
        "title": "PyMechanical shell workflow",
        "section": "PyMechanical shell workflow",
        "text": "This example shows how to set up a simple shell model with PyACP and\nPyMechanical:\nThe geometry is imported into Mechanical and meshed.\nThe mesh is exported to ACP.\nA simple lay-up is defined in ACP.\nPlies and materials are exported from ACP, and imported into Mechanical.\nBoundary conditions are set in Mechanical.\nThe model is solved.\nThe results are post-processed in PyDPF - Composites.\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\nPyMechanical shell workflow"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#import-modules-and-start-the-ansys-products",
        "title": "PyMechanical shell workflow > Import modules and start the Ansys products",
        "section": "Import modules and start the Ansys products",
        "text": "Import the standard library and third-party dependencies.\nImport PyACP, PyMechanical, and PyDPF - Composites.\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel.\nImport modules and start the Ansys products\nThreadPoolExecutor"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#get-example-input-files",
        "title": "PyMechanical shell workflow > Get example input files",
        "section": "Get example input files",
        "text": "Create a temporary working directory, and download the example input files\nto this directory.\nGet example input files"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#generate-the-mesh-in-pymechanical",
        "title": "PyMechanical shell workflow > Generate the mesh in PyMechanical",
        "section": "Generate the mesh in PyMechanical",
        "text": "Load the geometry into Mechanical, generate the mesh, and export it to the\nappropriate transfer format for ACP.\nGenerate the mesh in PyMechanical"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#set-up-the-acp-model",
        "title": "PyMechanical shell workflow > Set up the ACP model",
        "section": "Set up the ACP model",
        "text": "Setup basic ACP lay-up based on the mesh in mesh_path, and export material and composite\ndefinition file to output_path.\nSet up the ACP model\nmesh_path"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#update-and-save-the-acp-model",
        "title": "PyMechanical shell workflow > Update and Save the ACP model",
        "section": "Update and Save the ACP model",
        "text": "Update and Save the ACP model"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#import-materials-and-plies-into-mechanical",
        "title": "PyMechanical shell workflow > Import materials and plies into Mechanical",
        "section": "Import materials and plies into Mechanical",
        "text": "Import materials into Mechanical\nImport plies into Mechanical\nImport materials and plies into Mechanical"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#set-boundary-condition-and-solve",
        "title": "PyMechanical shell workflow > Set boundary condition and solve",
        "section": "Set boundary condition and solve",
        "text": "Set boundary condition and solve"
    },
    {
        "objectID": "examples/workflows/03-pymechanical-shell-workflow",
        "href": "examples/workflows/03-pymechanical-shell-workflow.html#postprocess-results",
        "title": "PyMechanical shell workflow > Postprocess results",
        "section": "Postprocess results",
        "text": "Evaluate the failure criteria using the PyDPF - Composites.\nDownload Jupyter notebook: 03-pymechanical-shell-workflow.ipynb\nDownload Python source code: 03-pymechanical-shell-workflow.py\nDownload zipped: 03-pymechanical-shell-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocess results\nDownload Jupyter notebook: 03-pymechanical-shell-workflow.ipynb\nDownload Python source code: 03-pymechanical-shell-workflow.py\nDownload zipped: 03-pymechanical-shell-workflow.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.fabrics",
        "href": "api/_autosummary/ansys.acp.core.Model.fabrics.html#fabrics",
        "title": "fabrics",
        "section": "fabrics",
        "text": "fabrics"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.fabrics",
        "href": "api/_autosummary/ansys.acp.core.Model.fabrics.html#ansys.acp.core.Model.fabrics",
        "title": "fabrics > fabrics > fabrics",
        "section": "fabrics > fabrics",
        "text": "property Model.fabrics: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.fabrics",
        "href": "api/_autosummary/ansys.acp.core.Model.fabrics.html#examples-using-modelfabrics",
        "title": "fabrics > Examples using Model.fabrics",
        "section": "Examples using Model.fabrics",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using Model.fabrics"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.mesh.html#ansys.acp.core.ModelingGroup.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property ModelingGroup.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.mesh",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.mesh",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.mesh.html#ansys.acp.core.InterfaceLayer.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property InterfaceLayer.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.AREA",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.AREA.html#area",
        "title": "AREA",
        "section": "AREA",
        "text": "AREA"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.AREA",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.AREA.html#ansys.acp.core.ElementalDataType.AREA",
        "title": "AREA > AREA > AREA",
        "section": "AREA > AREA",
        "text": "ElementalDataType.AREA = 'area'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.sequences",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.sequences.html#sequences",
        "title": "sequences",
        "section": "sequences",
        "text": "sequences"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.sequences",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.sequences.html#ansys.acp.core.LayupMappingObject.sequences",
        "title": "sequences > sequences > sequences",
        "section": "sequences > sequences",
        "text": "property LayupMappingObject.sequences: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.open_area_sets",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.open_area_sets.html#open_area_sets",
        "title": "open_area_sets",
        "section": "open_area_sets",
        "text": "open_area_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.open_area_sets",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.open_area_sets.html#ansys.acp.core.InterfaceLayer.open_area_sets",
        "title": "open_area_sets > open_area_sets > open_area_sets",
        "section": "open_area_sets > open_area_sets",
        "text": "property InterfaceLayer.open_area_sets: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1.html#g12_1",
        "title": "G12_1",
        "section": "G12_1",
        "text": "G12_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1",
        "title": "G12_1 > G12_1 > G12_1",
        "section": "G12_1 > G12_1",
        "text": "property ConstantWovenCharacterization.G12_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.DIRECT",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.DIRECT.html#direct",
        "title": "DIRECT",
        "section": "DIRECT",
        "text": "DIRECT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.DIRECT",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.DIRECT.html#ansys.acp.core.LaunchMode.DIRECT",
        "title": "DIRECT > DIRECT > DIRECT",
        "section": "DIRECT > DIRECT",
        "text": "LaunchMode.DIRECT = 'direct'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.VOLUME",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.VOLUME.html#volume",
        "title": "VOLUME",
        "section": "VOLUME",
        "text": "VOLUME"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.VOLUME",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.VOLUME.html#ansys.acp.core.ElementalDataType.VOLUME",
        "title": "VOLUME > VOLUME > VOLUME",
        "section": "VOLUME > VOLUME",
        "text": "ElementalDataType.VOLUME = 'volume'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.ply_material",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.ply_material.html#ply_material",
        "title": "ply_material",
        "section": "ply_material",
        "text": "ply_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.ply_material",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.ply_material.html#ansys.acp.core.ModelingPly.ply_material",
        "title": "ply_material > ply_material > ply_material",
        "section": "ply_material > ply_material",
        "text": "property ModelingPly.ply_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ParallelSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.TOP_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.TOP_OFFSET.html#top_offset",
        "title": "TOP_OFFSET",
        "section": "TOP_OFFSET",
        "text": "TOP_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.TOP_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.TOP_OFFSET.html#ansys.acp.core.OffsetType.TOP_OFFSET",
        "title": "TOP_OFFSET > TOP_OFFSET > TOP_OFFSET",
        "section": "TOP_OFFSET > TOP_OFFSET",
        "text": "OffsetType.TOP_OFFSET = 'top_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.element_sets",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.element_sets.html#element_sets",
        "title": "element_sets",
        "section": "element_sets",
        "text": "element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.element_sets",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.element_sets.html#ansys.acp.core.GeometricalSelectionRule.element_sets",
        "title": "element_sets > element_sets > element_sets",
        "section": "element_sets > element_sets",
        "text": "property GeometricalSelectionRule.element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.geometrical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.geometrical_selection_rules.html#geometrical_selection_rules",
        "title": "geometrical_selection_rules",
        "section": "geometrical_selection_rules",
        "text": "geometrical_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.geometrical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.geometrical_selection_rules.html#ansys.acp.core.Model.geometrical_selection_rules",
        "title": "geometrical_selection_rules > geometrical_selection_rules > geometrical_selection_rules",
        "section": "geometrical_selection_rules > geometrical_selection_rules",
        "text": "property Model.geometrical_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.data",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.data.html#data",
        "title": "data",
        "section": "data",
        "text": "data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.data",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.data.html#ansys.acp.core.LookUpTable1DColumn.data",
        "title": "data > data > data",
        "section": "data > data",
        "text": "property LookUpTable1DColumn.data: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants.html#from_orthotropic_constants",
        "title": "from_orthotropic_constants",
        "section": "from_orthotropic_constants",
        "text": "Create an orthotropic engineering constants property set.\nE1 (float) – Young’s modulus in material 1 direction.\nE2 (float) – Young’s modulus in material 2 direction.\nE3 (float) – Young’s modulus in out-of-plane direction.\nnu12 (float) – Poisson’s ratio \\nu_{12}.\nnu23 (float) – Poisson’s ratio \\nu_{23}.\nnu13 (float) – Poisson’s ratio \\nu_{13}.\nG12 (float) – Shear modulus G_{12}.\nG23 (float) – Shear modulus G_{23}.\nG31 (float) – Shear modulus G_{31}.\nAn orthotropic engineering constants property set.\nSelf\nfrom_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants",
        "title": "from_orthotropic_constants > from_orthotropic_constants > from_orthotropic_constants",
        "section": "from_orthotropic_constants > from_orthotropic_constants",
        "text": "classmethod ConstantEngineeringConstants.from_orthotropic_constants(*, E1=0.0, E2=0.0, E3=0.0, nu12=0.0, nu23=0.0, nu13=0.0, G12=0.0, G23=0.0, G31=0.0)\n\nCreate an orthotropic engineering constants property set.\n\nParameters\n\nE1 (float) – Young’s modulus in material 1 direction.\n\nE2 (float) – Young’s modulus in material 2 direction.\n\nE3 (float) – Young’s modulus in out-of-plane direction.\n\nnu12 (float) – Poisson’s ratio \\nu_{12}.\n\nnu23 (float) – Poisson’s ratio \\nu_{23}.\n\nnu13 (float) – Poisson’s ratio \\nu_{13}.\n\nG12 (float) – Shear modulus G_{12}.\n\nG23 (float) – Shear modulus G_{23}.\n\nG31 (float) – Shear modulus G_{31}.\n\nReturns\n\nAn orthotropic engineering constants property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants.html#examples-using-constantengineeringconstantsfrom_orthotropic_constants",
        "title": "from_orthotropic_constants > Examples using ConstantEngineeringConstants.from_orthotropic_constants",
        "section": "Examples using ConstantEngineeringConstants.from_orthotropic_constants",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ConstantEngineeringConstants.from_orthotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.find",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nReturn -1 on failure.\nfind"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.find",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.find.html#ansys.acp.core.material_property_sets.PuckMaterialType.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "PuckMaterialType.find(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_GEOMETRY.html#from_geometry",
        "title": "FROM_GEOMETRY",
        "section": "FROM_GEOMETRY",
        "text": "FROM_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_GEOMETRY.html#ansys.acp.core.MeshImportType.FROM_GEOMETRY",
        "title": "FROM_GEOMETRY > FROM_GEOMETRY > FROM_GEOMETRY",
        "section": "FROM_GEOMETRY > FROM_GEOMETRY",
        "text": "MeshImportType.FROM_GEOMETRY = 'from_geometry'\n\n"
    },
    {
        "objectID": "user_guide/howto/index",
        "href": "user_guide/howto/index.html#how-to-guides",
        "title": "How-to guides",
        "section": "How-to guides",
        "text": "These short guides teach you how to use particular features of PyACP.\nHow-to guides"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle.html#design_angle",
        "title": "design_angle",
        "section": "design_angle",
        "text": "design_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle",
        "title": "design_angle > design_angle > design_angle",
        "section": "design_angle > design_angle",
        "text": "ModelingPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "ProductionPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.add_taper_edge",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.add_taper_edge.html#add_taper_edge",
        "title": "add_taper_edge",
        "section": "add_taper_edge",
        "text": "Add a TaperEdge to the ModelingPly.\nSee TaperEdge for the available parameters.\nTaperEdge\nadd_taper_edge\nTaperEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.add_taper_edge",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.add_taper_edge.html#ansys.acp.core.ModelingPly.add_taper_edge",
        "title": "add_taper_edge > add_taper_edge > add_taper_edge",
        "section": "add_taper_edge > add_taper_edge",
        "text": "ModelingPly.add_taper_edge(edge_set, *, angle, offset)\n\nAdd a TaperEdge to the ModelingPly.\n\nSee TaperEdge for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nTaperEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1.html#fracture_toughness_mode_1",
        "title": "fracture_toughness_mode_1",
        "section": "fracture_toughness_mode_1",
        "text": "fracture_toughness_mode_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1",
        "title": "fracture_toughness_mode_1 > fracture_toughness_mode_1 > fracture_toughness_mode_1",
        "section": "fracture_toughness_mode_1 > fracture_toughness_mode_1",
        "text": "property ConstantLaRCConstants.fracture_toughness_mode_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "OrientedSelectionSetElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.delete.html#ansys.acp.core.LookUpTable1DColumn.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "LookUpTable1DColumn.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.number_of_interpolation_points",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.number_of_interpolation_points.html#number_of_interpolation_points",
        "title": "number_of_interpolation_points",
        "section": "number_of_interpolation_points",
        "text": "number_of_interpolation_points"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.number_of_interpolation_points",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.number_of_interpolation_points.html#ansys.acp.core.SectionCut.number_of_interpolation_points",
        "title": "number_of_interpolation_points > number_of_interpolation_points > number_of_interpolation_points",
        "section": "number_of_interpolation_points > number_of_interpolation_points",
        "text": "property SectionCut.number_of_interpolation_points: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.locked",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.locked",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.locked.html#ansys.acp.core.ElementSet.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property ElementSet.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.html#dockercomposelaunchconfig",
        "title": "DockerComposeLaunchConfig",
        "section": "DockerComposeLaunchConfig",
        "text": "Configuration options for launching ACP through docker compose.\nDockerComposeLaunchConfig.compose_file\n\nDockerComposeLaunchConfig.image_name_acp\n\nDockerComposeLaunchConfig.image_name_filetransfer\n\nDockerComposeLaunchConfig.keep_volume\n\nDockerComposeLaunchConfig.license_server\n\nDockerComposeLaunchConfig.environment_variables\n\nDockerComposeLaunchConfig\nDockerComposeLaunchConfig.compose_file\nDockerComposeLaunchConfig.image_name_acp\nDockerComposeLaunchConfig.image_name_filetransfer\nDockerComposeLaunchConfig.keep_volume\nDockerComposeLaunchConfig.license_server\nDockerComposeLaunchConfig.environment_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.html#ansys.acp.core.DockerComposeLaunchConfig",
        "title": "DockerComposeLaunchConfig > DockerComposeLaunchConfig > DockerComposeLaunchConfig",
        "section": "DockerComposeLaunchConfig > DockerComposeLaunchConfig",
        "text": "class ansys.acp.core.DockerComposeLaunchConfig(image_name_acp='ghcr.io/ansys/acp:latest', image_name_filetransfer='ghcr.io/ansys/tools-filetransfer:latest', license_server='', keep_volume=False, compose_file=None, environment_variables=<factory>)\n\nConfiguration options for launching ACP through docker compose.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nDockerComposeLaunchConfig.compose_file\n\n\n\nDockerComposeLaunchConfig.image_name_acp\n\n\n\nDockerComposeLaunchConfig.image_name_filetransfer\n\n\n\nDockerComposeLaunchConfig.keep_volume\n\n\n\nDockerComposeLaunchConfig.license_server\n\n\n\nDockerComposeLaunchConfig.environment_variables\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.html#elementset",
        "title": "ElementSet",
        "section": "ElementSet",
        "text": "Instantiate an Element Set.\nname (str) – The name of the Element Set.\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\nAdded in ACP server version 24.2.\nElementSet.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nElementSet.delete()\nDelete the object.\nElementSet.store(parent)\nStore the object on the server.\nElementSet.element_labels\n\nElementSet.elemental_data\n\nElementSet.id\nIdentifier of the object, used for example as key in maps.\nElementSet.locked\n\nElementSet.mesh\nFull mesh associated with the object.\nElementSet.middle_offset\n\nElementSet.name\nThe name of the object.\nElementSet.nodal_data\n\nElementSet.parent\nThe parent of the object.\nElementSet.shell_mesh\nShell mesh associated with the object.\nElementSet.status\n\nElementSet\nElementSet.clone\nElementSet.delete\nElementSet.store\nElementSet.element_labels\nElementSet.elemental_data\nElementSet.id\nElementSet.locked\nElementSet.mesh\nElementSet.middle_offset\nElementSet.name\nElementSet.nodal_data\nElementSet.parent\nElementSet.shell_mesh\nElementSet.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.html#ansys.acp.core.ElementSet",
        "title": "ElementSet > ElementSet > ElementSet",
        "section": "ElementSet > ElementSet",
        "text": "class ansys.acp.core.ElementSet(*, name='ElementSet', middle_offset=False, element_labels=())\n\nInstantiate an Element Set.\n\nParameters\n\nname (str) – The name of the Element Set.\n\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\n\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElementSet.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nElementSet.delete()\n\nDelete the object.\n\nElementSet.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElementSet.element_labels\n\n\n\nElementSet.elemental_data\n\n\n\nElementSet.id\n\nIdentifier of the object, used for example as key in maps.\n\nElementSet.locked\n\n\n\nElementSet.mesh\n\nFull mesh associated with the object.\n\nElementSet.middle_offset\n\n\n\nElementSet.name\n\nThe name of the object.\n\nElementSet.nodal_data\n\n\n\nElementSet.parent\n\nThe parent of the object.\n\nElementSet.shell_mesh\n\nShell mesh associated with the object.\n\nElementSet.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.html#examples-using-elementset",
        "title": "ElementSet > Examples using ElementSet",
        "section": "Examples using ElementSet",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using ElementSet"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.global_ply_nr.html#global_ply_nr",
        "title": "global_ply_nr",
        "section": "global_ply_nr",
        "text": "global_ply_nr"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.global_ply_nr.html#ansys.acp.core.ModelingPly.global_ply_nr",
        "title": "global_ply_nr > global_ply_nr > global_ply_nr",
        "section": "global_ply_nr > global_ply_nr",
        "text": "property ModelingPly.global_ply_nr: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.elemental_data.html#ansys.acp.core.ParallelSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ParallelSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosettes",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosettes.html#rosettes",
        "title": "rosettes",
        "section": "rosettes",
        "text": "rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosettes",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosettes.html#ansys.acp.core.LayupMappingObject.rosettes",
        "title": "rosettes > rosettes > rosettes",
        "section": "rosettes > rosettes",
        "text": "property LayupMappingObject.rosettes: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.offset",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.offset",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.offset.html#ansys.acp.core.CADGeometry.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "property CADGeometry.offset: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosettes",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosettes.html#rosettes",
        "title": "rosettes",
        "section": "rosettes",
        "text": "rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosettes",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rosettes.html#ansys.acp.core.ImportedModelingPly.rosettes",
        "title": "rosettes > rosettes > rosettes",
        "section": "rosettes > rosettes",
        "text": "property ImportedModelingPly.rosettes: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.html#booleanselectionrulenodaldata",
        "title": "BooleanSelectionRuleNodalData",
        "section": "BooleanSelectionRuleNodalData",
        "text": "Represents nodal data for a Boolean Selection Rule.\nBooleanSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nBooleanSelectionRuleNodalData.node_labels\n\nBooleanSelectionRuleNodalData\nBooleanSelectionRuleNodalData.get_pyvista_mesh\nBooleanSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.html#ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData",
        "title": "BooleanSelectionRuleNodalData > BooleanSelectionRuleNodalData > BooleanSelectionRuleNodalData",
        "section": "BooleanSelectionRuleNodalData > BooleanSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Boolean Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBooleanSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBooleanSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs.html#expandtabs",
        "title": "expandtabs",
        "section": "expandtabs",
        "text": "Return a copy where all tab characters are expanded using spaces.\nIf tabsize is not given, a tab size of 8 characters is assumed.\nexpandtabs"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs.html#ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs",
        "title": "expandtabs > expandtabs > expandtabs",
        "section": "expandtabs > expandtabs",
        "text": "PuckMaterialType.expandtabs(/, tabsize=8)\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz.html#syz",
        "title": "Syz",
        "section": "Syz",
        "text": "Syz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz",
        "title": "Syz > Syz > Syz",
        "section": "Syz > Syz",
        "text": "property ConstantWovenStressLimits.Syz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.status",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.status",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.status.html#ansys.acp.core.ModelingPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ModelingPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.delete",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.delete",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.delete.html#ansys.acp.core.SamplingPoint.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SamplingPoint.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.minimum_void_material_thickness",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.minimum_void_material_thickness.html#minimum_void_material_thickness",
        "title": "minimum_void_material_thickness",
        "section": "minimum_void_material_thickness",
        "text": "minimum_void_material_thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.minimum_void_material_thickness",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.minimum_void_material_thickness.html#ansys.acp.core.LayupMappingObject.minimum_void_material_thickness",
        "title": "minimum_void_material_thickness > minimum_void_material_thickness > minimum_void_material_thickness",
        "section": "minimum_void_material_thickness > minimum_void_material_thickness",
        "text": "property LayupMappingObject.minimum_void_material_thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.default",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.default.html#default",
        "title": "default",
        "section": "default",
        "text": "default"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.default",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.default.html#ansys.acp.core.material_property_sets.FieldVariable.default",
        "title": "default > default > default",
        "section": "default > default",
        "text": "FieldVariable.default: float\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "SphericalSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.status",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.status",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.status.html#ansys.acp.core.OrientedSelectionSet.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property OrientedSelectionSet.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR.html#nearest_neighbor",
        "title": "NEAREST_NEIGHBOR",
        "section": "NEAREST_NEIGHBOR",
        "text": "NEAREST_NEIGHBOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR.html#ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR",
        "title": "NEAREST_NEIGHBOR > NEAREST_NEIGHBOR > NEAREST_NEIGHBOR",
        "section": "NEAREST_NEIGHBOR > NEAREST_NEIGHBOR",
        "text": "LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR = 'nearest_neighbor'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.name",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.name",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.name.html#ansys.acp.core.SectionCut.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SectionCut.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.delete",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.delete",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.delete.html#ansys.acp.core.ElementSet.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ElementSet.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.auto_draping_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.auto_draping_direction.html#auto_draping_direction",
        "title": "auto_draping_direction",
        "section": "auto_draping_direction",
        "text": "auto_draping_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.auto_draping_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.auto_draping_direction.html#ansys.acp.core.OrientedSelectionSet.auto_draping_direction",
        "title": "auto_draping_direction > auto_draping_direction > auto_draping_direction",
        "section": "auto_draping_direction > auto_draping_direction",
        "text": "property OrientedSelectionSet.auto_draping_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc.html#zc",
        "title": "Zc",
        "section": "Zc",
        "text": "Zc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc",
        "title": "Zc > Zc > Zc",
        "section": "Zc > Zc",
        "text": "property ConstantWovenStressLimits.Zc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_NODES",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_NODES.html#by_nodes",
        "title": "BY_NODES",
        "section": "BY_NODES",
        "text": "BY_NODES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_NODES",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_NODES.html#ansys.acp.core.EdgeSetType.BY_NODES",
        "title": "BY_NODES > BY_NODES > BY_NODES",
        "section": "BY_NODES > BY_NODES",
        "text": "EdgeSetType.BY_NODES = 'by_nodes'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.edge_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.edge_sets.html#edge_sets",
        "title": "edge_sets",
        "section": "edge_sets",
        "text": "edge_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.edge_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.edge_sets.html#ansys.acp.core.Model.edge_sets",
        "title": "edge_sets > edge_sets > edge_sets",
        "section": "edge_sets > edge_sets",
        "text": "property Model.edge_sets: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.edge_sets",
        "href": "api/_autosummary/ansys.acp.core.Model.edge_sets.html#examples-using-modeledge_sets",
        "title": "edge_sets > Examples using Model.edge_sets",
        "section": "Examples using Model.edge_sets",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nExamples using Model.edge_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.value_type",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.value_type.html#value_type",
        "title": "value_type",
        "section": "value_type",
        "text": "value_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.value_type",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.value_type.html#ansys.acp.core.LookUpTable1DColumn.value_type",
        "title": "value_type > value_type > value_type",
        "section": "value_type > value_type",
        "text": "property LookUpTable1DColumn.value_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.parent",
        "href": "api/_autosummary/ansys.acp.core.Model.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.parent",
        "href": "api/_autosummary/ansys.acp.core.Model.parent.html#ansys.acp.core.Model.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Model.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.status",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.status",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.status.html#ansys.acp.core.ExtrusionGuide.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ExtrusionGuide.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E.html#e",
        "title": "E",
        "section": "E",
        "text": "E"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E",
        "title": "E > E > E",
        "section": "E > E",
        "text": "property ConstantEngineeringConstants.E: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.set_cad_components",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.set_cad_components.html#set_cad_components",
        "title": "set_cad_components",
        "section": "set_cad_components",
        "text": "Set the sub-shapes to match the given CADComponents.\ncad_components (Iterable[CADComponent]) – The components which make up the virtual geometry.\nset_cad_components"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.set_cad_components",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.set_cad_components.html#ansys.acp.core.VirtualGeometry.set_cad_components",
        "title": "set_cad_components > set_cad_components > set_cad_components",
        "section": "set_cad_components > set_cad_components",
        "text": "VirtualGeometry.set_cad_components(cad_components)\n\nSet the sub-shapes to match the given CADComponents.\n\nParameters\n\ncad_components (Iterable[CADComponent]) – The components which make up the virtual geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.restart",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.restart.html#restart",
        "title": "restart",
        "section": "restart",
        "text": "Stop, then start the product instance.\nstop_timeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\nRuntimeError – If the instance is already in the stopped state.\nRuntimeError – If the instance does not allow restarting.\nrestart"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.restart",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.restart.html#ansys.acp.core.ACPInstance.restart",
        "title": "restart > restart > restart",
        "section": "restart > restart",
        "text": "ACPInstance.restart(stop_timeout=None)\n\nStop, then start the product instance.\n\nParameters\n\nstop_timeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\n\nRaises\n\nRuntimeError – If the instance is already in the stopped state.\n\nRuntimeError – If the instance does not allow restarting.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.html#importedproductionply",
        "title": "ImportedProductionPly",
        "section": "ImportedProductionPly",
        "text": "Instantiate an Imported Production Ply.\nname (str) – The name of the imported production ply.\nmaterial (Material) – Material of the imported production ply.\nangle (float) – Angle of the imported production ply in degrees.\nthickness (float) – Thickness of the imported production ply in degrees.\nAdded in ACP server version 25.1.\nImportedProductionPly.angle\n\nImportedProductionPly.id\nIdentifier of the object, used for example as key in maps.\nImportedProductionPly.imported_analysis_plies\n\nImportedProductionPly.material\n\nImportedProductionPly.name\nThe name of the object.\nImportedProductionPly.parent\nThe parent of the object.\nImportedProductionPly.status\n\nImportedProductionPly.thickness\n\nImportedProductionPly\nImportedProductionPly.angle\nImportedProductionPly.id\nImportedProductionPly.imported_analysis_plies\nImportedProductionPly.material\nImportedProductionPly.name\nImportedProductionPly.parent\nImportedProductionPly.status\nImportedProductionPly.thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.html#ansys.acp.core.ImportedProductionPly",
        "title": "ImportedProductionPly > ImportedProductionPly > ImportedProductionPly",
        "section": "ImportedProductionPly > ImportedProductionPly",
        "text": "class ansys.acp.core.ImportedProductionPly\n\nInstantiate an Imported Production Ply.\n\nParameters\n\nname (str) – The name of the imported production ply.\n\nmaterial (Material) – Material of the imported production ply.\n\nangle (float) – Angle of the imported production ply in degrees.\n\nthickness (float) – Thickness of the imported production ply in degrees.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedProductionPly.angle\n\n\n\nImportedProductionPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nImportedProductionPly.imported_analysis_plies\n\n\n\nImportedProductionPly.material\n\n\n\nImportedProductionPly.name\n\nThe name of the object.\n\nImportedProductionPly.parent\n\nThe parent of the object.\n\nImportedProductionPly.status\n\n\n\nImportedProductionPly.thickness\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.html#examples-using-importedproductionply",
        "title": "ImportedProductionPly > Examples using ImportedProductionPly",
        "section": "Examples using ImportedProductionPly",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedProductionPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.html#cutoffselectionrule",
        "title": "CutOffSelectionRule",
        "section": "CutOffSelectionRule",
        "text": "Instantiate a Cut-Off Selection Rule.\nname (str) – Name of the Cut-Off Selection Rule.\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\nangle (float) – Defines the angle between the cutting plane and the reference surface.\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\nAdded in ACP server version 24.2.\nCutOffSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nCutOffSelectionRule.delete()\nDelete the object.\nCutOffSelectionRule.store(parent)\nStore the object on the server.\nCutOffSelectionRule.angle\n\nCutOffSelectionRule.cut_off_geometry\n\nCutOffSelectionRule.cut_off_rule_type\n\nCutOffSelectionRule.elemental_data\n\nCutOffSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nCutOffSelectionRule.mesh\nFull mesh associated with the object.\nCutOffSelectionRule.name\nThe name of the object.\nCutOffSelectionRule.nodal_data\n\nCutOffSelectionRule.offset\n\nCutOffSelectionRule.parent\nThe parent of the object.\nCutOffSelectionRule.ply_cut_off_type\n\nCutOffSelectionRule.ply_tapering\n\nCutOffSelectionRule.shell_mesh\nShell mesh associated with the object.\nCutOffSelectionRule.status\n\nCutOffSelectionRule.taper_edge_set\n\nCutOffSelectionRule\ncut_off_rule_type\ncut_off_rule_type\nCutOffRuleType.TAPER\nPlyCutOffType.PRODUCTION_PLY_CUTOFF\nPlyCutOffType.ANALYSIS_PLY_CUTOFF\nCutOffSelectionRule.clone\nCutOffSelectionRule.delete\nCutOffSelectionRule.store\nCutOffSelectionRule.angle\nCutOffSelectionRule.cut_off_geometry\nCutOffSelectionRule.cut_off_rule_type\nCutOffSelectionRule.elemental_data\nCutOffSelectionRule.id\nCutOffSelectionRule.mesh\nCutOffSelectionRule.name\nCutOffSelectionRule.nodal_data\nCutOffSelectionRule.offset\nCutOffSelectionRule.parent\nCutOffSelectionRule.ply_cut_off_type\nCutOffSelectionRule.ply_tapering\nCutOffSelectionRule.shell_mesh\nCutOffSelectionRule.status\nCutOffSelectionRule.taper_edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.html#ansys.acp.core.CutOffSelectionRule",
        "title": "CutOffSelectionRule > CutOffSelectionRule > CutOffSelectionRule",
        "section": "CutOffSelectionRule > CutOffSelectionRule",
        "text": "class ansys.acp.core.CutOffSelectionRule(*, name='CutOffSelectionrule', cut_off_rule_type='geometry', cut_off_geometry=None, taper_edge_set=None, offset=0.0, angle=0.0, ply_cut_off_type='production_ply_cutoff', ply_tapering=False)\n\nInstantiate a Cut-Off Selection Rule.\n\nParameters\n\nname (str) – Name of the Cut-Off Selection Rule.\n\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\n\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\n\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\n\nangle (float) – Defines the angle between the cutting plane and the reference surface.\n\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\n\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCutOffSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nCutOffSelectionRule.delete()\n\nDelete the object.\n\nCutOffSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCutOffSelectionRule.angle\n\n\n\nCutOffSelectionRule.cut_off_geometry\n\n\n\nCutOffSelectionRule.cut_off_rule_type\n\n\n\nCutOffSelectionRule.elemental_data\n\n\n\nCutOffSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nCutOffSelectionRule.mesh\n\nFull mesh associated with the object.\n\nCutOffSelectionRule.name\n\nThe name of the object.\n\nCutOffSelectionRule.nodal_data\n\n\n\nCutOffSelectionRule.offset\n\n\n\nCutOffSelectionRule.parent\n\nThe parent of the object.\n\nCutOffSelectionRule.ply_cut_off_type\n\n\n\nCutOffSelectionRule.ply_tapering\n\n\n\nCutOffSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nCutOffSelectionRule.status\n\n\n\nCutOffSelectionRule.taper_edge_set\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.html#examples-using-cutoffselectionrule",
        "title": "CutOffSelectionRule > Examples using CutOffSelectionRule",
        "section": "Examples using CutOffSelectionRule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using CutOffSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_section_cut",
        "href": "api/_autosummary/ansys.acp.core.Model.create_section_cut.html#create_section_cut",
        "title": "create_section_cut",
        "section": "create_section_cut",
        "text": "Instantiate a Section Cut.\nname (str) – Name of the section cut.\nactive (bool) – Inactive section cuts are not evaluated.\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\nscale_factor (float) – Scale factor applied to the ply thicknesses.\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\nSectionCut\nAdded in ACP server version 25.1.\ncreate_section_cut\nscope_element_sets\nscope_entire_model\nextrusion_type\nExtrusionType.WIRE_FRAME\ntolerance\nextrusion_type\nExtrusionType.SURFACE_NORMAL\nExtrusionType.SURFACE_SWEEP_BASED\nextrusion_type\nExtrusionType.SURFACE_NORMAL\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_tolerance\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_interpolation_settings\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_interpolation_settings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_section_cut",
        "href": "api/_autosummary/ansys.acp.core.Model.create_section_cut.html#ansys.acp.core.Model.create_section_cut",
        "title": "create_section_cut > create_section_cut > create_section_cut",
        "section": "create_section_cut > create_section_cut",
        "text": "Model.create_section_cut(*, name='SectionCut', active=True, origin=(0.0, 0.0, 0.0), normal=(0.0, 0.0, 1.0), in_plane_reference_direction1=(1.0, 0.0, 0.0), scope_entire_model=True, scope_element_sets=(), extrusion_type='wire_frame', scale_factor=1.0, core_scale_factor=1.0, section_cut_type='modeling_ply_wise', intersection_type='normal_to_surface', use_default_tolerance=True, tolerance=0.0, use_default_interpolation_settings=True, search_radius=0.0, number_of_interpolation_points=1)\n\nInstantiate a Section Cut.\n\nParameters\n\nname (str) – Name of the section cut.\n\nactive (bool) – Inactive section cuts are not evaluated.\n\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\n\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\n\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\n\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\n\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\n\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\n\nscale_factor (float) – Scale factor applied to the ply thicknesses.\n\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\n\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\n\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\n\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\n\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\n\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\n\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nReturn type\n\nSectionCut\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList.html#linkedobjectlist",
        "title": "LinkedObjectList",
        "section": "LinkedObjectList",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nList of linked tree objects.\nLinkedObjectList"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList.html#ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList",
        "title": "LinkedObjectList > LinkedObjectList > LinkedObjectList",
        "section": "LinkedObjectList > LinkedObjectList",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList(*, _parent_object, _attribute_name, _object_constructor, _allowed_types)\n\nList of linked tree objects.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.clone",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.clone",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.clone.html#ansys.acp.core.LayupMappingObject.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LayupMappingObject.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.html#sphericalselectionruleelementaldata",
        "title": "SphericalSelectionRuleElementalData",
        "section": "SphericalSelectionRuleElementalData",
        "text": "Represents elemental data for a Spherical Selection Rule.\nSphericalSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSphericalSelectionRuleElementalData.normal\n\nSphericalSelectionRuleElementalData.element_labels\n\nSphericalSelectionRuleElementalData\nSphericalSelectionRuleElementalData.get_pyvista_mesh\nSphericalSelectionRuleElementalData.normal\nSphericalSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.html#ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData",
        "title": "SphericalSelectionRuleElementalData > SphericalSelectionRuleElementalData > SphericalSelectionRuleElementalData",
        "section": "SphericalSelectionRuleElementalData > SphericalSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Spherical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSphericalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSphericalSelectionRuleElementalData.normal\n\n\n\nSphericalSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.sub_shapes",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.sub_shapes.html#sub_shapes",
        "title": "sub_shapes",
        "section": "sub_shapes",
        "text": "sub_shapes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.sub_shapes",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.sub_shapes.html#ansys.acp.core.VirtualGeometry.sub_shapes",
        "title": "sub_shapes > sub_shapes > sub_shapes",
        "section": "sub_shapes > sub_shapes",
        "text": "property VirtualGeometry.sub_shapes: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.field_variables.html#ansys.acp.core.material_property_sets.VariableStressLimits.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableStressLimits.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.use_default_reference_direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.use_default_reference_direction.html#use_default_reference_direction",
        "title": "use_default_reference_direction",
        "section": "use_default_reference_direction",
        "text": "use_default_reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.use_default_reference_direction",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.use_default_reference_direction.html#ansys.acp.core.SamplingPoint.use_default_reference_direction",
        "title": "use_default_reference_direction > use_default_reference_direction > use_default_reference_direction",
        "section": "use_default_reference_direction > use_default_reference_direction",
        "text": "property SamplingPoint.use_default_reference_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material_handling.html#cut_off_material_handling",
        "title": "cut_off_material_handling",
        "section": "cut_off_material_handling",
        "text": "cut_off_material_handling"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material_handling.html#ansys.acp.core.Stackup.cut_off_material_handling",
        "title": "cut_off_material_handling > cut_off_material_handling > cut_off_material_handling",
        "section": "cut_off_material_handling > cut_off_material_handling",
        "text": "property Stackup.cut_off_material_handling: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_method",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_method.html#extrusion_method",
        "title": "extrusion_method",
        "section": "extrusion_method",
        "text": "extrusion_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_method",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_method.html#ansys.acp.core.SolidModel.extrusion_method",
        "title": "extrusion_method > extrusion_method > extrusion_method",
        "section": "extrusion_method > extrusion_method",
        "text": "property SolidModel.extrusion_method: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.origin.html#ansys.acp.core.CylindricalSelectionRule.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property CylindricalSelectionRule.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.html#importedsolidmodelelementaldata",
        "title": "ImportedSolidModelElementalData",
        "section": "ImportedSolidModelElementalData",
        "text": "Represents elemental data for an imported solid model.\nImportedSolidModelElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nImportedSolidModelElementalData.element_labels\n\nImportedSolidModelElementalData\nImportedSolidModelElementalData.get_pyvista_mesh\nImportedSolidModelElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.html#ansys.acp.core.mesh_data.ImportedSolidModelElementalData",
        "title": "ImportedSolidModelElementalData > ImportedSolidModelElementalData > ImportedSolidModelElementalData",
        "section": "ImportedSolidModelElementalData > ImportedSolidModelElementalData",
        "text": "class ansys.acp.core.mesh_data.ImportedSolidModelElementalData(element_labels)\n\nRepresents elemental data for an imported solid model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nImportedSolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedSolidModelElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isascii",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isascii.html#isascii",
        "title": "isascii",
        "section": "isascii",
        "text": "Return True if all characters in the string are ASCII, False otherwise.\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.\nisascii"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isascii",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isascii.html#ansys.acp.core.material_property_sets.PuckMaterialType.isascii",
        "title": "isascii > isascii > isascii",
        "section": "isascii > isascii",
        "text": "PuckMaterialType.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.KEEP",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.KEEP.html#keep",
        "title": "KEEP",
        "section": "KEEP",
        "text": "KEEP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.KEEP",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.KEEP.html#ansys.acp.core.LinkedObjectHandling.KEEP",
        "title": "KEEP > KEEP > KEEP",
        "section": "KEEP > KEEP",
        "text": "LinkedObjectHandling.KEEP = 'keep'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.rho",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.rho.html#rho",
        "title": "rho",
        "section": "rho",
        "text": "rho"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.rho",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.rho.html#ansys.acp.core.material_property_sets.ConstantDensity.rho",
        "title": "rho > rho > rho",
        "section": "rho > rho",
        "text": "property ConstantDensity.rho: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.angles",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.angles.html#angles",
        "title": "angles",
        "section": "angles",
        "text": "angles"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.angles",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.angles.html#ansys.acp.core.VariableOffsetSelectionRule.angles",
        "title": "angles > angles > angles",
        "section": "angles > angles",
        "text": "property VariableOffsetSelectionRule.angles: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.parent",
        "href": "api/_autosummary/ansys.acp.core.Stackup.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.parent",
        "href": "api/_autosummary/ansys.acp.core.Stackup.parent.html#ansys.acp.core.Stackup.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Stackup.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.parent",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.parent",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.parent.html#ansys.acp.core.SubLaminate.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SubLaminate.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.name.html#ansys.acp.core.CADGeometry.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CADGeometry.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.id",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.id",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.id.html#ansys.acp.core.SamplingPoint.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SamplingPoint.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.nodal_data.html#ansys.acp.core.VariableOffsetSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property VariableOffsetSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.shell_mesh.html#ansys.acp.core.GeometricalSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property GeometricalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB.html#ansys_cdb",
        "title": "ANSYS_CDB",
        "section": "ANSYS_CDB",
        "text": "ANSYS_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB.html#ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB",
        "title": "ANSYS_CDB > ANSYS_CDB > ANSYS_CDB",
        "section": "ANSYS_CDB > ANSYS_CDB",
        "text": "SolidModelSkinExportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.include_rule.html#ansys.acp.core.GeometricalSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property GeometricalSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.BOTTOM",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.BOTTOM.html#bottom",
        "title": "BOTTOM",
        "section": "BOTTOM",
        "text": "BOTTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.BOTTOM",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.BOTTOM.html#ansys.acp.core.SnapToGeometryOrientationType.BOTTOM",
        "title": "BOTTOM > BOTTOM > BOTTOM",
        "section": "BOTTOM > BOTTOM",
        "text": "SnapToGeometryOrientationType.BOTTOM = 'bottom'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.parent.html#ansys.acp.core.SnapToGeometry.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SnapToGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.clone.html#ansys.acp.core.LookUpTable1DColumn.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LookUpTable1DColumn.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_types",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_types.html#element_types",
        "title": "element_types",
        "section": "element_types",
        "text": "element_types"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_types",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_types.html#ansys.acp.core.mesh_data.MeshData.element_types",
        "title": "element_types > element_types > element_types",
        "section": "element_types > element_types",
        "text": "MeshData.element_types: ndarray[tuple[int, ...], dtype[int32]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes_offsets",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes_offsets.html#element_nodes_offsets",
        "title": "element_nodes_offsets",
        "section": "element_nodes_offsets",
        "text": "element_nodes_offsets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes_offsets",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes_offsets.html#ansys.acp.core.mesh_data.MeshData.element_nodes_offsets",
        "title": "element_nodes_offsets > element_nodes_offsets > element_nodes_offsets",
        "section": "element_nodes_offsets > element_nodes_offsets",
        "text": "MeshData.element_nodes_offsets: ndarray[tuple[int, ...], dtype[int32]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.clone",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored TaperEdge with the same properties.\nSelf\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.clone",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.clone.html#ansys.acp.core.TaperEdge.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "TaperEdge.clone()\n\nCreate a new unstored TaperEdge with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSelf"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.weight",
        "href": "api/_autosummary/ansys.acp.core.Sensor.weight.html#weight",
        "title": "weight",
        "section": "weight",
        "text": "The mass of the selected entity.\nweight"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.weight",
        "href": "api/_autosummary/ansys.acp.core.Sensor.weight.html#ansys.acp.core.Sensor.weight",
        "title": "weight > weight > weight",
        "section": "weight > weight",
        "text": "property Sensor.weight: Any\n\nThe mass of the selected entity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_y",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_y.html#translation_y",
        "title": "translation_y",
        "section": "translation_y",
        "text": "translation_y"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_y",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_y.html#ansys.acp.core.CoordinateTransformation.translation_y",
        "title": "translation_y > translation_y > translation_y",
        "section": "translation_y > translation_y",
        "text": "CoordinateTransformation.translation_y: float = 0.0\n\n"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "Examples"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#acp-modeling-features",
        "title": "Examples > ACP modeling features",
        "section": "ACP modeling features",
        "text": "These examples show how to use PyACP for defining composite layups.\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nGallery generated by Sphinx-Gallery\nACP modeling features"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#workflow-examples",
        "title": "Examples > Workflow examples",
        "section": "Workflow examples",
        "text": "These examples show how to combine PyACP with other tools to create a full\nsimulation workflow.\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nGallery generated by Sphinx-Gallery\nWorkflow examples"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#use-case-examples",
        "title": "Examples > Use case examples",
        "section": "Use case examples",
        "text": "These examples can serve as an inspiration for how you can tackle your own\nuse cases with PyACP.\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nGallery generated by Sphinx-Gallery\nUse case examples"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS.html#specify_thickness",
        "title": "SPECIFY_THICKNESS",
        "section": "SPECIFY_THICKNESS",
        "text": "SPECIFY_THICKNESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS.html#ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS",
        "title": "SPECIFY_THICKNESS > SPECIFY_THICKNESS > SPECIFY_THICKNESS",
        "section": "SPECIFY_THICKNESS > SPECIFY_THICKNESS",
        "text": "ExtrusionMethod.SPECIFY_THICKNESS = 'specify_thickness'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.thickness.html#ansys.acp.core.ImportedAnalysisPly.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property ImportedAnalysisPly.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zc.html#zc",
        "title": "Zc",
        "section": "Zc",
        "text": "Zc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zc.html#ansys.acp.core.material_property_sets.VariableStressLimits.Zc",
        "title": "Zc > Zc > Zc",
        "section": "Zc > Zc",
        "text": "property VariableStressLimits.Zc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction.html#fiber_direction",
        "title": "fiber_direction",
        "section": "fiber_direction",
        "text": "fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction",
        "title": "fiber_direction > fiber_direction > fiber_direction",
        "section": "fiber_direction > fiber_direction",
        "text": "AnalysisPlyElementalData.fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.connect_butt_joined_plies",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.connect_butt_joined_plies.html#connect_butt_joined_plies",
        "title": "connect_butt_joined_plies",
        "section": "connect_butt_joined_plies",
        "text": "connect_butt_joined_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.connect_butt_joined_plies",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.connect_butt_joined_plies.html#ansys.acp.core.DropOffSettings.connect_butt_joined_plies",
        "title": "connect_butt_joined_plies > connect_butt_joined_plies > connect_butt_joined_plies",
        "section": "connect_butt_joined_plies > connect_butt_joined_plies",
        "text": "property DropOffSettings.connect_butt_joined_plies: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.s",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.s.html#s",
        "title": "s",
        "section": "s",
        "text": "s"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.s",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.s.html#ansys.acp.core.material_property_sets.VariablePuckConstants.s",
        "title": "s > s > s",
        "section": "s > s",
        "text": "property VariablePuckConstants.s: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule.html#create_geometrical_selection_rule",
        "title": "create_geometrical_selection_rule",
        "section": "create_geometrical_selection_rule",
        "text": "Instantiate a Geometrical Selection Rule.\nname (str) – Name of the Geometrical Selection Rule.\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nuse_default_tolerances (bool) – Whether to use default tolerances.\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\nGeometricalSelectionRule\nAdded in ACP server version 24.2.\ncreate_geometrical_selection_rule\nGeometricalRuleType.GEOMETRY\nGeometricalRuleType.ELEMENT_SETS\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule.html#ansys.acp.core.Model.create_geometrical_selection_rule",
        "title": "create_geometrical_selection_rule > create_geometrical_selection_rule > create_geometrical_selection_rule",
        "section": "create_geometrical_selection_rule > create_geometrical_selection_rule",
        "text": "Model.create_geometrical_selection_rule(*, name='GeometricalSelectionrule', geometrical_rule_type='geometry', geometry=None, element_sets=(), include_rule=True, use_default_tolerances=True, in_plane_capture_tolerance=0.0, negative_capture_tolerance=0.0, positive_capture_tolerance=0.0)\n\nInstantiate a Geometrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Geometrical Selection Rule.\n\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\n\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\n\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_default_tolerances (bool) – Whether to use default tolerances.\n\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\n\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\n\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\n\nReturn type\n\nGeometricalSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule.html#examples-using-modelcreate_geometrical_selection_rule",
        "title": "create_geometrical_selection_rule > Examples using Model.create_geometrical_selection_rule",
        "section": "Examples using Model.create_geometrical_selection_rule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using Model.create_geometrical_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.name.html#ansys.acp.core.GeometricalSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property GeometricalSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.html#parallelselectionrule",
        "title": "ParallelSelectionRule",
        "section": "ParallelSelectionRule",
        "text": "Instantiate a Parallel Selection Rule.\nname (str) – Name of the Parallel Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nAdded in ACP server version 24.2.\nParallelSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nParallelSelectionRule.delete()\nDelete the object.\nParallelSelectionRule.store(parent)\nStore the object on the server.\nParallelSelectionRule.direction\n\nParallelSelectionRule.elemental_data\n\nParallelSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nParallelSelectionRule.include_rule\n\nParallelSelectionRule.lower_limit\n\nParallelSelectionRule.mesh\nFull mesh associated with the object.\nParallelSelectionRule.name\nThe name of the object.\nParallelSelectionRule.nodal_data\n\nParallelSelectionRule.origin\n\nParallelSelectionRule.parent\nThe parent of the object.\nParallelSelectionRule.relative_rule\n\nParallelSelectionRule.rosette\n\nParallelSelectionRule.shell_mesh\nShell mesh associated with the object.\nParallelSelectionRule.status\n\nParallelSelectionRule.upper_limit\n\nParallelSelectionRule.use_global_coordinate_system\n\nParallelSelectionRule\nuse_global_coordinate_system\nFalse\nParallelSelectionRule.clone\nParallelSelectionRule.delete\nParallelSelectionRule.store\nParallelSelectionRule.direction\nParallelSelectionRule.elemental_data\nParallelSelectionRule.id\nParallelSelectionRule.include_rule\nParallelSelectionRule.lower_limit\nParallelSelectionRule.mesh\nParallelSelectionRule.name\nParallelSelectionRule.nodal_data\nParallelSelectionRule.origin\nParallelSelectionRule.parent\nParallelSelectionRule.relative_rule\nParallelSelectionRule.rosette\nParallelSelectionRule.shell_mesh\nParallelSelectionRule.status\nParallelSelectionRule.upper_limit\nParallelSelectionRule.use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.html#ansys.acp.core.ParallelSelectionRule",
        "title": "ParallelSelectionRule > ParallelSelectionRule > ParallelSelectionRule",
        "section": "ParallelSelectionRule > ParallelSelectionRule",
        "text": "class ansys.acp.core.ParallelSelectionRule(*, name='ParallelSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(1.0, 0.0, 0.0), lower_limit=0.0, upper_limit=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Parallel Selection Rule.\n\nParameters\n\nname (str) – Name of the Parallel Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\n\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\n\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nParallelSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nParallelSelectionRule.delete()\n\nDelete the object.\n\nParallelSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nParallelSelectionRule.direction\n\n\n\nParallelSelectionRule.elemental_data\n\n\n\nParallelSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nParallelSelectionRule.include_rule\n\n\n\nParallelSelectionRule.lower_limit\n\n\n\nParallelSelectionRule.mesh\n\nFull mesh associated with the object.\n\nParallelSelectionRule.name\n\nThe name of the object.\n\nParallelSelectionRule.nodal_data\n\n\n\nParallelSelectionRule.origin\n\n\n\nParallelSelectionRule.parent\n\nThe parent of the object.\n\nParallelSelectionRule.relative_rule\n\n\n\nParallelSelectionRule.rosette\n\n\n\nParallelSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nParallelSelectionRule.status\n\n\n\nParallelSelectionRule.upper_limit\n\n\n\nParallelSelectionRule.use_global_coordinate_system\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.html#examples-using-parallelselectionrule",
        "title": "ParallelSelectionRule > Examples using ParallelSelectionRule",
        "section": "Examples using ParallelSelectionRule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ParallelSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction.html#relative_thickness_correction",
        "title": "relative_thickness_correction",
        "section": "relative_thickness_correction",
        "text": "relative_thickness_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction",
        "title": "relative_thickness_correction > relative_thickness_correction > relative_thickness_correction",
        "section": "relative_thickness_correction > relative_thickness_correction",
        "text": "ModelingPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION.html#tension_and_compression",
        "title": "TENSION_AND_COMPRESSION",
        "section": "TENSION_AND_COMPRESSION",
        "text": "TENSION_AND_COMPRESSION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION.html#ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION",
        "title": "TENSION_AND_COMPRESSION > TENSION_AND_COMPRESSION > TENSION_AND_COMPRESSION",
        "section": "TENSION_AND_COMPRESSION > TENSION_AND_COMPRESSION",
        "text": "ReinforcingBehavior.TENSION_AND_COMPRESSION = 'tension_and_compression'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.angle.html#ansys.acp.core.ImportedProductionPly.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property ImportedProductionPly.angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule.html#create_cylindrical_selection_rule",
        "title": "create_cylindrical_selection_rule",
        "section": "create_cylindrical_selection_rule",
        "text": "Instantiate a Cylindrical Selection Rule.\nname (str) – Name of the Cylindrical Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\nradius (float) – Radius of the cylinder.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nCylindricalSelectionRule\nAdded in ACP server version 24.2.\ncreate_cylindrical_selection_rule\nuse_global_coordinate_system\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule.html#ansys.acp.core.Model.create_cylindrical_selection_rule",
        "title": "create_cylindrical_selection_rule > create_cylindrical_selection_rule > create_cylindrical_selection_rule",
        "section": "create_cylindrical_selection_rule > create_cylindrical_selection_rule",
        "text": "Model.create_cylindrical_selection_rule(*, name='CylindricalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 1.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Cylindrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Cylindrical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\n\nradius (float) – Radius of the cylinder.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nCylindricalSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule.html#examples-using-modelcreate_cylindrical_selection_rule",
        "title": "create_cylindrical_selection_rule > Examples using Model.create_cylindrical_selection_rule",
        "section": "Examples using Model.create_cylindrical_selection_rule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using Model.create_cylindrical_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_2",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_2.html#woven_puck_constants_2",
        "title": "woven_puck_constants_2",
        "section": "woven_puck_constants_2",
        "text": "woven_puck_constants_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_2",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_2.html#ansys.acp.core.Material.woven_puck_constants_2",
        "title": "woven_puck_constants_2 > woven_puck_constants_2 > woven_puck_constants_2",
        "section": "woven_puck_constants_2 > woven_puck_constants_2",
        "text": "property Material.woven_puck_constants_2: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns.html#columns",
        "title": "columns",
        "section": "columns",
        "text": "columns"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns.html#ansys.acp.core.LookUpTable1D.columns",
        "title": "columns > columns > columns",
        "section": "columns > columns",
        "text": "property LookUpTable1D.columns: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.columns.html#examples-using-lookuptable1dcolumns",
        "title": "columns > Examples using LookUpTable1D.columns",
        "section": "Examples using LookUpTable1D.columns",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LookUpTable1D.columns"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.html#parallelselectionrulenodaldata",
        "title": "ParallelSelectionRuleNodalData",
        "section": "ParallelSelectionRuleNodalData",
        "text": "Represents nodal data for a Parallel Selection Rule.\nParallelSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nParallelSelectionRuleNodalData.node_labels\n\nParallelSelectionRuleNodalData\nParallelSelectionRuleNodalData.get_pyvista_mesh\nParallelSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.html#ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData",
        "title": "ParallelSelectionRuleNodalData > ParallelSelectionRuleNodalData > ParallelSelectionRuleNodalData",
        "section": "ParallelSelectionRuleNodalData > ParallelSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Parallel Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nParallelSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nParallelSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED.html#ignored",
        "title": "IGNORED",
        "section": "IGNORED",
        "text": "IGNORED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED.html#ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED",
        "title": "IGNORED > IGNORED > IGNORED",
        "section": "IGNORED > IGNORED",
        "text": "PuckMaterialType.IGNORED = 'ignored'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_interface_layer",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_interface_layer.html#create_interface_layer",
        "title": "create_interface_layer",
        "section": "create_interface_layer",
        "text": "Instantiate an interface layer.\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\nname (str) – Name of the interface layer.\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\nInterfaceLayer\nAdded in ACP server version 25.1.\ncreate_interface_layer\nOrientedSelectionSet\nElementSet"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.create_interface_layer",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.create_interface_layer.html#ansys.acp.core.ModelingGroup.create_interface_layer",
        "title": "create_interface_layer > create_interface_layer > create_interface_layer",
        "section": "create_interface_layer > create_interface_layer",
        "text": "ModelingGroup.create_interface_layer(*, name='InterfaceLayer', global_ply_nr=0, active=True, oriented_selection_sets=(), open_area_sets=())\n\nInstantiate an interface layer.\n\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\n\nParameters\n\nname (str) – Name of the interface layer.\n\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\n\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\n\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\n\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\n\nReturn type\n\nInterfaceLayer\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION.html#material_1_direction",
        "title": "MATERIAL_1_DIRECTION",
        "section": "MATERIAL_1_DIRECTION",
        "text": "MATERIAL_1_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION.html#ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION",
        "title": "MATERIAL_1_DIRECTION > MATERIAL_1_DIRECTION > MATERIAL_1_DIRECTION",
        "section": "MATERIAL_1_DIRECTION > MATERIAL_1_DIRECTION",
        "text": "ElementalDataType.MATERIAL_1_DIRECTION = 'material_1_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.area.html#area",
        "title": "area",
        "section": "area",
        "text": "area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.area.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.area",
        "title": "area > area > area",
        "section": "area > area",
        "text": "AnalysisPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.ljust",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.ljust.html#ljust",
        "title": "ljust",
        "section": "ljust",
        "text": "Return a left-justified string of length width.\nPadding is done using the specified fill character (default is a space).\nljust"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.ljust",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.ljust.html#ansys.acp.core.LaunchMode.ljust",
        "title": "ljust > ljust > ljust",
        "section": "ljust > ljust",
        "text": "LaunchMode.ljust(width, fillchar=' ', /)\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosette_selection_method.html#rosette_selection_method",
        "title": "rosette_selection_method",
        "section": "rosette_selection_method",
        "text": "rosette_selection_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.rosette_selection_method.html#ansys.acp.core.LayupMappingObject.rosette_selection_method",
        "title": "rosette_selection_method > rosette_selection_method > rosette_selection_method",
        "section": "rosette_selection_method > rosette_selection_method",
        "text": "property LayupMappingObject.rosette_selection_method: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule.html#template_rule",
        "title": "template_rule",
        "section": "template_rule",
        "text": "Whether the selection rule is a template rule.\ntemplate_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule.html#ansys.acp.core.LinkedSelectionRule.template_rule",
        "title": "template_rule > template_rule > template_rule",
        "section": "template_rule > template_rule",
        "text": "property LinkedSelectionRule.template_rule: bool\n\nWhether the selection rule is a template rule.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule.html#examples-using-linkedselectionruletemplate_rule",
        "title": "template_rule > Examples using LinkedSelectionRule.template_rule",
        "section": "Examples using LinkedSelectionRule.template_rule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LinkedSelectionRule.template_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.UNDEFINED",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.UNDEFINED.html#undefined",
        "title": "UNDEFINED",
        "section": "UNDEFINED",
        "text": "UNDEFINED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.UNDEFINED",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.UNDEFINED.html#ansys.acp.core.UnitSystemType.UNDEFINED",
        "title": "UNDEFINED > UNDEFINED > UNDEFINED",
        "section": "UNDEFINED > UNDEFINED",
        "text": "UnitSystemType.UNDEFINED = 'undefined'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.parent.html#ansys.acp.core.LookUpTable1D.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property LookUpTable1D.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.node_labels.html#ansys.acp.core.mesh_data.SolidModelNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "SolidModelNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.active",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.active",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.active.html#ansys.acp.core.SnapToGeometry.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property SnapToGeometry.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.RETAIN",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.RETAIN.html#retain",
        "title": "RETAIN",
        "section": "RETAIN",
        "text": "RETAIN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.RETAIN",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.RETAIN.html#ansys.acp.core.BaseElementMaterialHandling.RETAIN",
        "title": "RETAIN > RETAIN > RETAIN",
        "section": "RETAIN > RETAIN",
        "text": "BaseElementMaterialHandling.RETAIN = 'retain'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.name",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.name",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.name.html#ansys.acp.core.ModelingGroup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ModelingGroup.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.inner_radius",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.inner_radius.html#inner_radius",
        "title": "inner_radius",
        "section": "inner_radius",
        "text": "inner_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.inner_radius",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.inner_radius.html#ansys.acp.core.TubeSelectionRule.inner_radius",
        "title": "inner_radius > inner_radius > inner_radius",
        "section": "inner_radius > inner_radius",
        "text": "property TubeSelectionRule.inner_radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.delete.html#ansys.acp.core.CutOffSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "CutOffSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material.html#cut_off_material",
        "title": "cut_off_material",
        "section": "cut_off_material",
        "text": "cut_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.Stackup.cut_off_material.html#ansys.acp.core.Stackup.cut_off_material",
        "title": "cut_off_material > cut_off_material > cut_off_material",
        "section": "cut_off_material > cut_off_material",
        "text": "property Stackup.cut_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.clone",
        "href": "api/_autosummary/ansys.acp.core.Material.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.clone",
        "href": "api/_autosummary/ansys.acp.core.Material.clone.html#ansys.acp.core.Material.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Material.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.cog.html#cog",
        "title": "cog",
        "section": "cog",
        "text": "cog"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.cog.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.cog",
        "title": "cog > cog > cog",
        "section": "cog > cog",
        "text": "ModelingPlyElementalData.cog: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies.html#imported_analysis_plies",
        "title": "imported_analysis_plies",
        "section": "imported_analysis_plies",
        "text": "imported_analysis_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies.html#ansys.acp.core.ImportedProductionPly.imported_analysis_plies",
        "title": "imported_analysis_plies > imported_analysis_plies > imported_analysis_plies",
        "section": "imported_analysis_plies > imported_analysis_plies",
        "text": "property ImportedProductionPly.imported_analysis_plies: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies.html#examples-using-importedproductionplyimported_analysis_plies",
        "title": "imported_analysis_plies > Examples using ImportedProductionPly.imported_analysis_plies",
        "section": "Examples using ImportedProductionPly.imported_analysis_plies",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedProductionPly.imported_analysis_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.html#solidmodelexportsettings",
        "title": "SolidModelExportSettings",
        "section": "SolidModelExportSettings",
        "text": "Defines the settings for exporting a solid model.\nuse_default_section_index (bool) – Use the default start index for sections.\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\nuse_default_material_index (bool) – Use the default start index for materials.\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\nuse_default_node_index (bool) – Use the default start index for nodes.\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\nuse_default_element_index (bool) – Use the default start index for elements.\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\nwrite_degenerated_elements (bool) – Whether to export drop-off and cut-off elements.\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\nuse_solid_model_prefix (bool) – Use the solid model name as a prefix for the exported file.\ntransfer_all_sets (bool) – When True, all element sets and edge sets are exported.\ntransferred_element_sets (Iterable[ElementSet]) – Element sets to be exported.\nOnly used if transfer_all_sets is False.\ntransferred_edge_sets (Iterable[EdgeSet]) – Edge sets to be exported.\nOnly used if transfer_all_sets is False.\nAdded in ACP server version 25.1.\nSolidModelExportSettings.coordinate_system_index\n\nSolidModelExportSettings.drop_hanging_nodes\n\nSolidModelExportSettings.element_index\n\nSolidModelExportSettings.material_index\n\nSolidModelExportSettings.node_index\n\nSolidModelExportSettings.section_index\n\nSolidModelExportSettings.transfer_all_sets\n\nSolidModelExportSettings.transferred_edge_sets\n\nSolidModelExportSettings.transferred_element_sets\n\nSolidModelExportSettings.use_default_coordinate_system_index\n\nSolidModelExportSettings.use_default_element_index\n\nSolidModelExportSettings.use_default_material_index\n\nSolidModelExportSettings.use_default_node_index\n\nSolidModelExportSettings.use_default_section_index\n\nSolidModelExportSettings.use_solid_model_prefix\n\nSolidModelExportSettings.use_solsh_elements\n\nSolidModelExportSettings.write_degenerated_elements\n\nSolidModelExportSettings\nuse_default_section_index\nuse_default_coordinate_system_index\nuse_default_material_index\nuse_default_node_index\nuse_default_element_index\ntransfer_all_sets\ntransfer_all_sets\nSolidModelExportSettings.coordinate_system_index\nSolidModelExportSettings.drop_hanging_nodes\nSolidModelExportSettings.element_index\nSolidModelExportSettings.material_index\nSolidModelExportSettings.node_index\nSolidModelExportSettings.section_index\nSolidModelExportSettings.transfer_all_sets\nSolidModelExportSettings.transferred_edge_sets\nSolidModelExportSettings.transferred_element_sets\nSolidModelExportSettings.use_default_coordinate_system_index\nSolidModelExportSettings.use_default_element_index\nSolidModelExportSettings.use_default_material_index\nSolidModelExportSettings.use_default_node_index\nSolidModelExportSettings.use_default_section_index\nSolidModelExportSettings.use_solid_model_prefix\nSolidModelExportSettings.use_solsh_elements\nSolidModelExportSettings.write_degenerated_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.html#ansys.acp.core.SolidModelExportSettings",
        "title": "SolidModelExportSettings > SolidModelExportSettings > SolidModelExportSettings",
        "section": "SolidModelExportSettings > SolidModelExportSettings",
        "text": "class ansys.acp.core.SolidModelExportSettings(*, use_default_section_index=True, section_index=0, use_default_coordinate_system_index=True, coordinate_system_index=0, use_default_material_index=True, material_index=0, use_default_node_index=True, node_index=0, use_default_element_index=True, element_index=0, use_solsh_elements=False, write_degenerated_elements=True, drop_hanging_nodes=True, use_solid_model_prefix=True, transfer_all_sets=True, transferred_element_sets=(), transferred_edge_sets=(), _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the settings for exporting a solid model.\n\nParameters\n\nuse_default_section_index (bool) – Use the default start index for sections.\n\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\n\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\n\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\n\nuse_default_material_index (bool) – Use the default start index for materials.\n\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\n\nuse_default_node_index (bool) – Use the default start index for nodes.\n\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\n\nuse_default_element_index (bool) – Use the default start index for elements.\n\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\n\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\n\nwrite_degenerated_elements (bool) – Whether to export drop-off and cut-off elements.\n\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\n\nuse_solid_model_prefix (bool) – Use the solid model name as a prefix for the exported file.\n\ntransfer_all_sets (bool) – When True, all element sets and edge sets are exported.\n\ntransferred_element_sets (Iterable[ElementSet]) – Element sets to be exported.\nOnly used if transfer_all_sets is False.\n\ntransferred_edge_sets (Iterable[EdgeSet]) – Edge sets to be exported.\nOnly used if transfer_all_sets is False.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidModelExportSettings.coordinate_system_index\n\n\n\nSolidModelExportSettings.drop_hanging_nodes\n\n\n\nSolidModelExportSettings.element_index\n\n\n\nSolidModelExportSettings.material_index\n\n\n\nSolidModelExportSettings.node_index\n\n\n\nSolidModelExportSettings.section_index\n\n\n\nSolidModelExportSettings.transfer_all_sets\n\n\n\nSolidModelExportSettings.transferred_edge_sets\n\n\n\nSolidModelExportSettings.transferred_element_sets\n\n\n\nSolidModelExportSettings.use_default_coordinate_system_index\n\n\n\nSolidModelExportSettings.use_default_element_index\n\n\n\nSolidModelExportSettings.use_default_material_index\n\n\n\nSolidModelExportSettings.use_default_node_index\n\n\n\nSolidModelExportSettings.use_default_section_index\n\n\n\nSolidModelExportSettings.use_solid_model_prefix\n\n\n\nSolidModelExportSettings.use_solsh_elements\n\n\n\nSolidModelExportSettings.write_degenerated_elements\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.area_price",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.area_price.html#area_price",
        "title": "area_price",
        "section": "area_price",
        "text": "area_price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.area_price",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.area_price.html#ansys.acp.core.SubLaminate.area_price",
        "title": "area_price > area_price > area_price",
        "section": "area_price > area_price",
        "text": "property SubLaminate.area_price: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.index",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.index.html#index",
        "title": "index",
        "section": "index",
        "text": "Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nRaises ValueError when the substring is not found.\nindex"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.index",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.index.html#ansys.acp.core.material_property_sets.PuckMaterialType.index",
        "title": "index > index > index",
        "section": "index > index",
        "text": "PuckMaterialType.index(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle.html#draped_fiber_angle",
        "title": "draped_fiber_angle",
        "section": "draped_fiber_angle",
        "text": "draped_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle",
        "title": "draped_fiber_angle > draped_fiber_angle > draped_fiber_angle",
        "section": "draped_fiber_angle > draped_fiber_angle",
        "text": "AnalysisPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.imported_modeling_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.imported_modeling_plies.html#imported_modeling_plies",
        "title": "imported_modeling_plies",
        "section": "imported_modeling_plies",
        "text": "imported_modeling_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.imported_modeling_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.imported_modeling_plies.html#ansys.acp.core.ImportedModelingGroup.imported_modeling_plies",
        "title": "imported_modeling_plies > imported_modeling_plies > imported_modeling_plies",
        "section": "imported_modeling_plies > imported_modeling_plies",
        "text": "property ImportedModelingGroup.imported_modeling_plies: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.node_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.node_index.html#node_index",
        "title": "node_index",
        "section": "node_index",
        "text": "node_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.node_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.node_index.html#ansys.acp.core.ImportedSolidModelExportSettings.node_index",
        "title": "node_index > node_index > node_index",
        "section": "node_index > node_index",
        "text": "property ImportedSolidModelExportSettings.node_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xc.html#xc",
        "title": "Xc",
        "section": "Xc",
        "text": "Xc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xc.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Xc",
        "title": "Xc > Xc > Xc",
        "section": "Xc > Xc",
        "text": "property ConstantStressLimits.Xc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels.html#ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ImportedSolidModelElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.covered_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.covered_area.html#covered_area",
        "title": "covered_area",
        "section": "covered_area",
        "text": "The surface area of a selected Element Set / Oriented Selection Set, or the tooling surface area that is covered by the composite layup of the selected Material or Modeling Ply.\ncovered_area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.covered_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.covered_area.html#ansys.acp.core.Sensor.covered_area",
        "title": "covered_area > covered_area > covered_area",
        "section": "covered_area > covered_area",
        "text": "property Sensor.covered_area: Any\n\nThe surface area of a selected Element Set / Oriented Selection Set, or the tooling surface area that is covered by the composite layup of the selected Material or Modeling Ply.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset.html#ply_offset",
        "title": "ply_offset",
        "section": "ply_offset",
        "text": "ply_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset.html#ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset",
        "title": "ply_offset > ply_offset > ply_offset",
        "section": "ply_offset > ply_offset",
        "text": "ProductionPlyNodalData.ply_offset: VectorData\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.status.html#ansys.acp.core.CutOffGeometry.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property CutOffGeometry.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format_map",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format_map.html#format_map",
        "title": "format_map",
        "section": "format_map",
        "text": "Return a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’).\nformat_map"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format_map",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format_map.html#ansys.acp.core.material_property_sets.PuckMaterialType.format_map",
        "title": "format_map > format_map > format_map",
        "section": "format_map > format_map",
        "text": "PuckMaterialType.format_map(mapping) -> str\n\nReturn a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule.html#create_spherical_selection_rule",
        "title": "create_spherical_selection_rule",
        "section": "create_spherical_selection_rule",
        "text": "Instantiate a Spherical Selection Rule.\nname (str) – Name of the Spherical Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the sphere.\nradius (float) – Radius of the sphere.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nSphericalSelectionRule\nAdded in ACP server version 24.2.\ncreate_spherical_selection_rule\nuse_global_coordinate_system\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule.html#ansys.acp.core.Model.create_spherical_selection_rule",
        "title": "create_spherical_selection_rule > create_spherical_selection_rule > create_spherical_selection_rule",
        "section": "create_spherical_selection_rule > create_spherical_selection_rule",
        "text": "Model.create_spherical_selection_rule(*, name='SphericalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Spherical Selection Rule.\n\nParameters\n\nname (str) – Name of the Spherical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the sphere.\n\nradius (float) – Radius of the sphere.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nSphericalSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule.html#examples-using-modelcreate_spherical_selection_rule",
        "title": "create_spherical_selection_rule > Examples using Model.create_spherical_selection_rule",
        "section": "Examples using Model.create_spherical_selection_rule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nExamples using Model.create_spherical_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1.html#nu12_1",
        "title": "nu12_1",
        "section": "nu12_1",
        "text": "nu12_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1",
        "title": "nu12_1 > nu12_1 > nu12_1",
        "section": "nu12_1 > nu12_1",
        "text": "property ConstantWovenCharacterization.nu12_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.COORDINATES",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.COORDINATES.html#coordinates",
        "title": "COORDINATES",
        "section": "COORDINATES",
        "text": "COORDINATES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.COORDINATES",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.COORDINATES.html#ansys.acp.core.ElementalDataType.COORDINATES",
        "title": "COORDINATES > COORDINATES > COORDINATES",
        "section": "COORDINATES > COORDINATES",
        "text": "ElementalDataType.COORDINATES = 'coordinates'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.INTERNAL_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.INTERNAL_DRAPING.html#internal_draping",
        "title": "INTERNAL_DRAPING",
        "section": "INTERNAL_DRAPING",
        "text": "INTERNAL_DRAPING"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.INTERNAL_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.INTERNAL_DRAPING.html#ansys.acp.core.DrapingType.INTERNAL_DRAPING",
        "title": "INTERNAL_DRAPING > INTERNAL_DRAPING > INTERNAL_DRAPING",
        "section": "INTERNAL_DRAPING > INTERNAL_DRAPING",
        "text": "DrapingType.INTERNAL_DRAPING = 'internal_draping'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.WOVEN",
        "href": "api/_autosummary/ansys.acp.core.PlyType.WOVEN.html#woven",
        "title": "WOVEN",
        "section": "WOVEN",
        "text": "WOVEN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.WOVEN",
        "href": "api/_autosummary/ansys.acp.core.PlyType.WOVEN.html#ansys.acp.core.PlyType.WOVEN",
        "title": "WOVEN > WOVEN > WOVEN",
        "section": "WOVEN > WOVEN",
        "text": "PlyType.WOVEN = 'woven'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.WOVEN",
        "href": "api/_autosummary/ansys.acp.core.PlyType.WOVEN.html#examples-using-plytypewoven",
        "title": "WOVEN > Examples using PlyType.WOVEN",
        "section": "Examples using PlyType.WOVEN",
        "text": "sphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using PlyType.WOVEN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.NodalDataType",
        "href": "api/_autosummary/ansys.acp.core.NodalDataType.html#nodaldatatype",
        "title": "NodalDataType",
        "section": "NodalDataType",
        "text": "Options for the type of per-node data.\nNodalDataType.PLY_OFFSET\n\nNodalDataType\nNodalDataType.PLY_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.NodalDataType",
        "href": "api/_autosummary/ansys.acp.core.NodalDataType.html#ansys.acp.core.NodalDataType",
        "title": "NodalDataType > NodalDataType > NodalDataType",
        "section": "NodalDataType > NodalDataType",
        "text": "class ansys.acp.core.NodalDataType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of per-node data.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nNodalDataType.PLY_OFFSET\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_2_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_2_field.html#draping_angle_2_field",
        "title": "draping_angle_2_field",
        "section": "draping_angle_2_field",
        "text": "draping_angle_2_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_2_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_2_field.html#ansys.acp.core.ImportedModelingPly.draping_angle_2_field",
        "title": "draping_angle_2_field > draping_angle_2_field > draping_angle_2_field",
        "section": "draping_angle_2_field > draping_angle_2_field",
        "text": "property ImportedModelingPly.draping_angle_2_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.clone.html#ansys.acp.core.VariableOffsetSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "VariableOffsetSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DESIGN_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DESIGN_ANGLE.html#design_angle",
        "title": "DESIGN_ANGLE",
        "section": "DESIGN_ANGLE",
        "text": "DESIGN_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DESIGN_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DESIGN_ANGLE.html#ansys.acp.core.ElementalDataType.DESIGN_ANGLE",
        "title": "DESIGN_ANGLE > DESIGN_ANGLE > DESIGN_ANGLE",
        "section": "DESIGN_ANGLE > DESIGN_ANGLE",
        "text": "ElementalDataType.DESIGN_ANGLE = 'design_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.html#geometricalselectionrule",
        "title": "GeometricalSelectionRule",
        "section": "GeometricalSelectionRule",
        "text": "Instantiate a Geometrical Selection Rule.\nname (str) – Name of the Geometrical Selection Rule.\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nuse_default_tolerances (bool) – Whether to use default tolerances.\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\nAdded in ACP server version 24.2.\nGeometricalSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nGeometricalSelectionRule.delete()\nDelete the object.\nGeometricalSelectionRule.store(parent)\nStore the object on the server.\nGeometricalSelectionRule.element_sets\n\nGeometricalSelectionRule.elemental_data\n\nGeometricalSelectionRule.geometrical_rule_type\n\nGeometricalSelectionRule.geometry\n\nGeometricalSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nGeometricalSelectionRule.in_plane_capture_tolerance\n\nGeometricalSelectionRule.include_rule\n\nGeometricalSelectionRule.mesh\nFull mesh associated with the object.\nGeometricalSelectionRule.name\nThe name of the object.\nGeometricalSelectionRule.negative_capture_tolerance\n\nGeometricalSelectionRule.nodal_data\n\nGeometricalSelectionRule.parent\nThe parent of the object.\nGeometricalSelectionRule.positive_capture_tolerance\n\nGeometricalSelectionRule.shell_mesh\nShell mesh associated with the object.\nGeometricalSelectionRule.status\n\nGeometricalSelectionRule.use_default_tolerances\n\nGeometricalSelectionRule\nGeometricalRuleType.GEOMETRY\nGeometricalRuleType.ELEMENT_SETS\nFalse\nGeometricalSelectionRule.clone\nGeometricalSelectionRule.delete\nGeometricalSelectionRule.store\nGeometricalSelectionRule.element_sets\nGeometricalSelectionRule.elemental_data\nGeometricalSelectionRule.geometrical_rule_type\nGeometricalSelectionRule.geometry\nGeometricalSelectionRule.id\nGeometricalSelectionRule.in_plane_capture_tolerance\nGeometricalSelectionRule.include_rule\nGeometricalSelectionRule.mesh\nGeometricalSelectionRule.name\nGeometricalSelectionRule.negative_capture_tolerance\nGeometricalSelectionRule.nodal_data\nGeometricalSelectionRule.parent\nGeometricalSelectionRule.positive_capture_tolerance\nGeometricalSelectionRule.shell_mesh\nGeometricalSelectionRule.status\nGeometricalSelectionRule.use_default_tolerances"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.html#ansys.acp.core.GeometricalSelectionRule",
        "title": "GeometricalSelectionRule > GeometricalSelectionRule > GeometricalSelectionRule",
        "section": "GeometricalSelectionRule > GeometricalSelectionRule",
        "text": "class ansys.acp.core.GeometricalSelectionRule(*, name='GeometricalSelectionrule', geometrical_rule_type='geometry', geometry=None, element_sets=(), include_rule=True, use_default_tolerances=True, in_plane_capture_tolerance=0.0, negative_capture_tolerance=0.0, positive_capture_tolerance=0.0)\n\nInstantiate a Geometrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Geometrical Selection Rule.\n\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\n\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\n\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_default_tolerances (bool) – Whether to use default tolerances.\n\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\n\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\n\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nGeometricalSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nGeometricalSelectionRule.delete()\n\nDelete the object.\n\nGeometricalSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nGeometricalSelectionRule.element_sets\n\n\n\nGeometricalSelectionRule.elemental_data\n\n\n\nGeometricalSelectionRule.geometrical_rule_type\n\n\n\nGeometricalSelectionRule.geometry\n\n\n\nGeometricalSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nGeometricalSelectionRule.in_plane_capture_tolerance\n\n\n\nGeometricalSelectionRule.include_rule\n\n\n\nGeometricalSelectionRule.mesh\n\nFull mesh associated with the object.\n\nGeometricalSelectionRule.name\n\nThe name of the object.\n\nGeometricalSelectionRule.negative_capture_tolerance\n\n\n\nGeometricalSelectionRule.nodal_data\n\n\n\nGeometricalSelectionRule.parent\n\nThe parent of the object.\n\nGeometricalSelectionRule.positive_capture_tolerance\n\n\n\nGeometricalSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nGeometricalSelectionRule.status\n\n\n\nGeometricalSelectionRule.use_default_tolerances\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.html#examples-using-geometricalselectionrule",
        "title": "GeometricalSelectionRule > Examples using GeometricalSelectionRule",
        "section": "Examples using GeometricalSelectionRule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using GeometricalSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_direction.html#orientation_direction",
        "title": "orientation_direction",
        "section": "orientation_direction",
        "text": "orientation_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_direction",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_direction.html#ansys.acp.core.OrientedSelectionSet.orientation_direction",
        "title": "orientation_direction > orientation_direction > orientation_direction",
        "section": "orientation_direction > orientation_direction",
        "text": "property OrientedSelectionSet.orientation_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "CutOffSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete.html#ansys.acp.core.ImportedSolidModel.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ImportedSolidModel.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "VariableOffsetSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType.ELEMENT_SETS",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.ELEMENT_SETS.html#element_sets",
        "title": "ELEMENT_SETS",
        "section": "ELEMENT_SETS",
        "text": "ELEMENT_SETS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType.ELEMENT_SETS",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.ELEMENT_SETS.html#ansys.acp.core.GeometricalRuleType.ELEMENT_SETS",
        "title": "ELEMENT_SETS > ELEMENT_SETS > ELEMENT_SETS",
        "section": "ELEMENT_SETS > ELEMENT_SETS",
        "text": "GeometricalRuleType.ELEMENT_SETS = 'element_sets'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE.html#overwrite",
        "title": "OVERWRITE",
        "section": "OVERWRITE",
        "text": "OVERWRITE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE.html#ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE",
        "title": "OVERWRITE > OVERWRITE > OVERWRITE",
        "section": "OVERWRITE > OVERWRITE",
        "text": "HDF5CompositeCAEImportMode.OVERWRITE = 'overwrite'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.BFT",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.BFT.html#bft",
        "title": "BFT",
        "section": "BFT",
        "text": "BFT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.BFT",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.BFT.html#ansys.acp.core.UnitSystemType.BFT",
        "title": "BFT > BFT > BFT",
        "section": "BFT > BFT",
        "text": "UnitSystemType.BFT = 'bft'\n\n"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#pymechanical-solid-workflow",
        "title": "PyMechanical solid workflow",
        "section": "PyMechanical solid workflow",
        "text": "This example shows how to set up a simple solid model with PyACP and\nPyMechanical:\nThe geometry is imported into Mechanical and meshed.\nThe mesh is exported to ACP.\nA simple lay-up and solid model is defined in ACP.\nThe solid model is exported, to a CDB file and a composite definition file.\nIn a separate Mechanical instance, the solid model is imported.\nMaterials and plies are imported.\nBoundary conditions are set.\nThe model is solved.\nThe results are post-processed in PyDPF - Composites.\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\nPyMechanical solid workflow"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#import-modules-and-start-the-ansys-products",
        "title": "PyMechanical solid workflow > Import modules and start the Ansys products",
        "section": "Import modules and start the Ansys products",
        "text": "Import the standard library and third-party dependencies.\nImport PyACP, PyMechanical, and PyDPF - Composites.\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel.\nImport modules and start the Ansys products\nThreadPoolExecutor"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#get-example-input-files",
        "title": "PyMechanical solid workflow > Get example input files",
        "section": "Get example input files",
        "text": "Create a temporary working directory, and download the example input files\nto this directory.\nGet example input files"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#generate-the-mesh-in-pymechanical",
        "title": "PyMechanical solid workflow > Generate the mesh in PyMechanical",
        "section": "Generate the mesh in PyMechanical",
        "text": "Load the geometry into Mechanical, generate the mesh, and export it to the\nappropriate transfer format for ACP.\nGenerate the mesh in PyMechanical"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#set-up-the-acp-model",
        "title": "PyMechanical solid workflow > Set up the ACP model",
        "section": "Set up the ACP model",
        "text": "Setup basic ACP lay-up based on the mesh in mesh_path, and export the following\nfiles to output_path:\nMaterials XML file\nComposite definitions HDF5 file\nSolid model composite definitions HDF5 file\nSolid model CDB file\nSet up the ACP model\nmesh_path\noutput_path"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#update-and-save-the-acp-model",
        "title": "PyMechanical solid workflow > Update and Save the ACP model",
        "section": "Update and Save the ACP model",
        "text": "Update and Save the ACP model"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#import-mesh-materials-and-plies-into-mechanical",
        "title": "PyMechanical solid workflow > Import mesh, materials and plies into Mechanical",
        "section": "Import mesh, materials and plies into Mechanical",
        "text": "Import geometry, mesh, and named selections into Mechanical\nImport materials into Mechanical\nImport plies into Mechanical\nImport mesh, materials and plies into Mechanical"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#set-boundary-condition-and-solve",
        "title": "PyMechanical solid workflow > Set boundary condition and solve",
        "section": "Set boundary condition and solve",
        "text": "Set boundary condition and solve\nSet boundary condition and solve"
    },
    {
        "objectID": "examples/workflows/04-pymechanical-solid-workflow",
        "href": "examples/workflows/04-pymechanical-solid-workflow.html#postprocess-results",
        "title": "PyMechanical solid workflow > Postprocess results",
        "section": "Postprocess results",
        "text": "Evaluate the failure criteria using the PyDPF - Composites.\nDownload Jupyter notebook: 04-pymechanical-solid-workflow.ipynb\nDownload Python source code: 04-pymechanical-solid-workflow.py\nDownload zipped: 04-pymechanical-solid-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocess results\nDownload Jupyter notebook: 04-pymechanical-solid-workflow.ipynb\nDownload Python source code: 04-pymechanical-solid-workflow.py\nDownload zipped: 04-pymechanical-solid-workflow.zip"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#material-property-sets",
        "title": "Material property sets",
        "section": "Material property sets",
        "text": "Material property sets define certain aspects of the properties\nof a material.\nThe attributes described in the following subsections show how\nyou can create and access material property sets in PyACP.\nMaterial property sets"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#constant-versus-variable-property-sets",
        "title": "Material property sets > Constant versus variable property sets",
        "section": "Constant versus variable property sets",
        "text": "Material property sets can either be constant or variable. Constant property\nsets are defined by a single value per property. Variable property\nsets depend on field variables such as temperature and fiber volume content.\nCurrently, you can only modify the constant property sets with PyACP. Variable\nproperty sets can be inspected, but not modified.\nConstant versus variable property sets"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#isotropic-versus-orthotropic-property-sets",
        "title": "Material property sets > Isotropic versus orthotropic property sets",
        "section": "Isotropic versus orthotropic property sets",
        "text": "The following material property sets can be defined as either isotropic or orthotropic:\nEngineering constants, defined in the ConstantEngineeringConstants and VariableEngineeringConstants classes.\nStress limits, defined in the  ConstantStressLimits and VariableStressLimits classes.\nStrain limits, defined in the ConstantStrainLimits and VariableStrainLimits classes.\nWhether a material has isotropic or orthotropic properties is determined by its\nply type. The isotropic ply types are:\nPlyType.ISOTROPIC\nPlyType.ADHESIVE\nThe PlyType.ISOTROPIC_HOMOGENEOUS_CORE ply type has isotropic Engineering Constants,\nbut orthotropic stress and strain limits.\nWhile a material is unstored (see stored_vs_unstored), the property set does not\nautomatically change from orthotropic to isotropic or vice versa. When storing the\nmaterial, the backend ensures that its definition is consistent.\nIsotropic versus orthotropic property sets\nConstantEngineeringConstants\nVariableEngineeringConstants\nConstantStressLimits\nVariableStressLimits\nConstantStrainLimits\nVariableStrainLimits\nPlyType.ISOTROPIC\nPlyType.ADHESIVE\nPlyType.ISOTROPIC_HOMOGENEOUS_CORE"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#available-attributes",
        "title": "Material property sets > Available attributes",
        "section": "Available attributes",
        "text": "The available attributes for a given property set type change depending on whether\nthe material is isotropic or orthotropic.\nThe following table lists the available attributes for the different property sets in\nisotropic and orthotropic materials.\nProperty set\nIsotropic attributes\nOrthotropic attributes\nEngineering constants\nE, nu\nE1, E2, E3, nu12, nu13, nu23, G12, G13, G23\nStress limits\neffective_stress\nXc, Yc, Zc, Xt, Yt, Zt, Sxy, Syz, Sxz\nStrain limits\neffective_strain\neXc, eYc, eZc, eXt, eYt, eZt, eSxy, eSyz, eSxz\nAvailable attributes\nE\nnu\nE1\nE2\nE3\nnu12\nnu13\nnu23\nG12\nG13\nG23\neffective_stress\nXc\nYc\nZc\nXt\nYt\nZt\nSxy\nSyz\nSxz\neffective_strain\neXc\neYc\neZc\neXt\neYt\neZt\neSxy\neSyz\neSxz"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#relation-between-isotropic-and-orthotropic-property-sets",
        "title": "Material property sets > Relation between isotropic and orthotropic property sets",
        "section": "Relation between isotropic and orthotropic property sets",
        "text": "For stress and strain limits, the isotropic and orthotropic attributes are\nindependently defined. This means that when you change the ply type of a material,\nyou must redefine the stress and strain limits.\nFor engineering constants, however, the orthotropic and isotropic definitions\nare interlinked. Therefore, when you change the ply type of a material, the\nengineering constants are automatically converted.\nTo avoid accidental use of incorrect engineering constants, PyACP enforces\nconversion and assignment rules, as described later on this page.\nRelation between isotropic and orthotropic property sets"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#conversion-rules",
        "title": "Material property sets > Conversion rules",
        "section": "Conversion rules",
        "text": "The following rules apply when changing the ply type of a material:\nThe ply type can always be changed from an isotropic to an orthotropic type.\nWhen changing from an orthotropic to an isotropic type, the engineering constants must\nbe consistent with their isotropic counterpart. In particular, the\nfollowing relations must hold:\nConsider the following example:\nFirst, convert to an isotropic ply type. This is allowed since the engineering constants are\nconsistent with an isotropic material.\nThen convert to an orthotropic material. This is always allowed.\nNow, the engineering constants are no longer consistent with an isotropic material, so converting\nback to an isotropic ply type is not allowed.\nConversion rules"
    },
    {
        "objectID": "user_guide/concepts/material_property_sets",
        "href": "user_guide/concepts/material_property_sets.html#assignment-rules",
        "title": "Material property sets > Assignment rules",
        "section": "Assignment rules",
        "text": "Similar rules apply when assigning engineering constants to a material:\nIsotropic engineering constants can be assigned to both isotropic and orthotropic materials.\nOrthotropic engineering constants can be assigned to isotropic materials, if their values are consistent with them,\nand orthotropic materials.\nContinuing from the preceding example, you can assign either orthotropic or isotropic engineering constants to the orthotropic material:\nNow you can switch back to an isotropic ply type.\nIsotropic engineering constants can always be assigned to an isotropic material.\nOrthotropic engineering constants can be assigned only if the values are consistent with an isotropic material.\nAssignment rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.islower",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.islower.html#islower",
        "title": "islower",
        "section": "islower",
        "text": "Return True if the string is a lowercase string, False otherwise.\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.\nislower"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.islower",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.islower.html#ansys.acp.core.material_property_sets.PuckMaterialType.islower",
        "title": "islower > islower > islower",
        "section": "islower > islower",
        "text": "PuckMaterialType.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableTsaiWuConstants.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.html#elementsetnodaldata",
        "title": "ElementSetNodalData",
        "section": "ElementSetNodalData",
        "text": "Represents nodal data for an Element Set.\nElementSetNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nElementSetNodalData.node_labels\n\nElementSetNodalData\nElementSetNodalData.get_pyvista_mesh\nElementSetNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.html#ansys.acp.core.mesh_data.ElementSetNodalData",
        "title": "ElementSetNodalData > ElementSetNodalData > ElementSetNodalData",
        "section": "ElementSetNodalData > ElementSetNodalData",
        "text": "class ansys.acp.core.mesh_data.ElementSetNodalData(node_labels)\n\nRepresents nodal data for an Element Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElementSetNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.nodal_data.html#ansys.acp.core.ProductionPly.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ProductionPly.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction.html#relative_thickness_correction",
        "title": "relative_thickness_correction",
        "section": "relative_thickness_correction",
        "text": "relative_thickness_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction.html#ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction",
        "title": "relative_thickness_correction > relative_thickness_correction > relative_thickness_correction",
        "section": "relative_thickness_correction > relative_thickness_correction",
        "text": "ModelElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "user_guide/howto/view_model_in_acp_gui",
        "href": "user_guide/howto/view_model_in_acp_gui.html#view-model-in-acp-gui",
        "title": "View model in ACP GUI",
        "section": "View model in ACP GUI",
        "text": "To view the PyACP model in the ACP GUI, save the model to a file using the Model.save() method and then open the saved file in ACP by selecting File > Open.\nIn the ACP GUI, reload the model from its context menu by right-clicking the model’s name in the tree and selecting Reload Model.\nA common workflow is to save the model to a file at the end of the script and reload it in ACP after each script run.\nView model in ACP GUI\nModel.save()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.normal",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.normal",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.normal.html#ansys.acp.core.SectionCut.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "property SectionCut.normal: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.origin.html#ansys.acp.core.ParallelSelectionRule.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property ParallelSelectionRule.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION.html#draped_fiber_direction",
        "title": "DRAPED_FIBER_DIRECTION",
        "section": "DRAPED_FIBER_DIRECTION",
        "text": "DRAPED_FIBER_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION.html#ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION",
        "title": "DRAPED_FIBER_DIRECTION > DRAPED_FIBER_DIRECTION > DRAPED_FIBER_DIRECTION",
        "section": "DRAPED_FIBER_DIRECTION > DRAPED_FIBER_DIRECTION",
        "text": "ElementalDataType.DRAPED_FIBER_DIRECTION = 'draped_fiber_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.add_fabric",
        "href": "api/_autosummary/ansys.acp.core.Stackup.add_fabric.html#add_fabric",
        "title": "add_fabric",
        "section": "add_fabric",
        "text": "Add a FabricWithAngle to the Stackup.\nSee FabricWithAngle for the available parameters.\nFabricWithAngle\nadd_fabric\nFabricWithAngle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.add_fabric",
        "href": "api/_autosummary/ansys.acp.core.Stackup.add_fabric.html#ansys.acp.core.Stackup.add_fabric",
        "title": "add_fabric > add_fabric > add_fabric",
        "section": "add_fabric > add_fabric",
        "text": "Stackup.add_fabric(fabric, angle=0.0)\n\nAdd a FabricWithAngle to the Stackup.\n\nSee FabricWithAngle for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nFabricWithAngle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.material",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.material.html#material",
        "title": "material",
        "section": "material",
        "text": "material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.material",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.material.html#ansys.acp.core.ImportedProductionPly.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property ImportedProductionPly.material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#advanced-selection-rules",
        "title": "Advanced selection rules",
        "section": "Advanced selection rules",
        "text": "This example shows how to use advanced rules, including the geometrical,\ncut-off, and variable offset rules. It also demonstrates how rules can be templated\nand reused with different parameters. For more basic rules, see\nbasic_selection_rules_example.\nThis example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nAdvanced selection rules"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#import-modules",
        "title": "Advanced selection rules > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#start-acp-and-load-the-model",
        "title": "Advanced selection rules > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from the input file.\nAdd more layers to the modeling ply so that it is easier to see the effects of the selection rules.\nPlot the thickness of all the plies without any rules.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#parametrized-parallel-rule",
        "title": "Advanced selection rules > Parametrized Parallel Rule",
        "section": "Parametrized Parallel Rule",
        "text": "Rules can be parametrized. This is useful when a rule is used multiple times but with different\nparameters.  The LinkedSelectionRule class shows what parameters are available for each rule.\nThis code modifies the extent of the parallel rule.\nCreate a parallel rule.\nAssign it the modeling ply.\nPlot the thickness of the ply before the parametrization.\nModify the parallel rule by changing the parameters of the linked rule.\nParameters defined on the linked rule override the parameters of the original rule.\nPlot the thickness of the ply with the modified rule.\nParametrized Parallel Rule\nLinkedSelectionRule"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#create-a-geometrical-selection-rule",
        "title": "Advanced selection rules > Create a geometrical selection rule",
        "section": "Create a geometrical selection rule",
        "text": "Add a CAD geometry to the model.\nCreate a virtual geometry from the CAD geometry.\nCreate the geometrical selection rule.\nAssign the geometrical selection rule to the ply. Plot the ply extent with\nthe outline of the geometry.\nCreate a geometrical selection rule"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#create-a-cut-off-selection-rule",
        "title": "Advanced selection rules > Create a cut-off selection rule",
        "section": "Create a cut-off selection rule",
        "text": "Add the cut off CAD geometry to the model.\nCreate a virtual geometry from the CAD geometry.\nCreate the cut_off selection rule.\nAssign the cut_off selection rule to the ply. Plot the ply extent with\nthe outline of the geometry.\nCreate a cut-off selection rule"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#create-a-variable-offset-selection-rule",
        "title": "Advanced selection rules > Create a variable offset selection rule",
        "section": "Create a variable offset selection rule",
        "text": "Create the lookup table.\nAdd the location data. The “Location” column of the lookup table\nis always created by default.\nCreate the offset column that defines the offsets from the edge.\nCreate the edge set from the “All_Elements” element set. Because you\nassigned 30 degrees to the limit angle, only one edge at x=0 is selected.\nCreate the variable offset rule and assign it to the ply.\nPlot the ply extent.\nCreate a variable offset selection rule"
    },
    {
        "objectID": "examples/modeling_features/004-advanced-selection-rules",
        "href": "examples/modeling_features/004-advanced-selection-rules.html#create-a-boolean-selection-rule",
        "title": "Advanced selection rules > Create a boolean selection rule",
        "section": "Create a boolean selection rule",
        "text": "Creating a Boolean selection rule and assigning it to a ply has the same\neffect as linking the individual rules directly to the ply. Boolean rules are still useful\nbecause they can help organize rules and make more complex ones.\nCreate a cylindrical selection rule to combine with the parallel rule.\nPlot the ply extent.\nModify the operation type of the Boolean selection rule so that the two rules are added.\nPlot the ply extent.\nTotal running time of the script: (0 minutes 5.001 seconds)\nDownload Jupyter notebook: 004-advanced-selection-rules.ipynb\nDownload Python source code: 004-advanced-selection-rules.py\nDownload zipped: 004-advanced-selection-rules.zip\nGallery generated by Sphinx-Gallery\nCreate a boolean selection rule\nDownload Jupyter notebook: 004-advanced-selection-rules.ipynb\nDownload Python source code: 004-advanced-selection-rules.py\nDownload zipped: 004-advanced-selection-rules.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.clone.html#ansys.acp.core.CylindricalSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "CylindricalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored LinkedSelectionRule with the same properties.\nLinkedSelectionRule\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.clone.html#ansys.acp.core.LinkedSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LinkedSelectionRule.clone()\n\nCreate a new unstored LinkedSelectionRule with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nLinkedSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxy.html#sxy",
        "title": "Sxy",
        "section": "Sxy",
        "text": "Sxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxy.html#ansys.acp.core.material_property_sets.VariableStressLimits.Sxy",
        "title": "Sxy > Sxy > Sxy",
        "section": "Sxy > Sxy",
        "text": "property VariableStressLimits.Sxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.html#virtualgeometrydimension",
        "title": "VirtualGeometryDimension",
        "section": "VirtualGeometryDimension",
        "text": "Options for the dimension of a virtual geometry.\nVirtualGeometryDimension.UNKNOWN\n\nVirtualGeometryDimension.LINE\n\nVirtualGeometryDimension.SURFACE\n\nVirtualGeometryDimension.SOLID\n\nVirtualGeometryDimension\nVirtualGeometryDimension.UNKNOWN\nVirtualGeometryDimension.LINE\nVirtualGeometryDimension.SURFACE\nVirtualGeometryDimension.SOLID"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.html#ansys.acp.core.VirtualGeometryDimension",
        "title": "VirtualGeometryDimension > VirtualGeometryDimension > VirtualGeometryDimension",
        "section": "VirtualGeometryDimension > VirtualGeometryDimension",
        "text": "class ansys.acp.core.VirtualGeometryDimension(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the dimension of a virtual geometry.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nVirtualGeometryDimension.UNKNOWN\n\n\n\nVirtualGeometryDimension.LINE\n\n\n\nVirtualGeometryDimension.SURFACE\n\n\n\nVirtualGeometryDimension.SOLID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape",
        "href": "api/_autosummary/ansys.acp.core.SubShape.html#subshape",
        "title": "SubShape",
        "section": "SubShape",
        "text": "Represents a sub-shape of a virtual geometry.\nAdded in ACP server version 24.2.\nSubShape.clone()\nCreate a new unstored SubShape with the same properties.\nSubShape.cad_geometry\nLinked CAD geometry.\nSubShape.path\nTopological path of the sub-shape within the CAD geometry.\nSubShape\nSubShape.clone\nSubShape.cad_geometry\nSubShape.path"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape",
        "href": "api/_autosummary/ansys.acp.core.SubShape.html#ansys.acp.core.SubShape",
        "title": "SubShape > SubShape > SubShape",
        "section": "SubShape > SubShape",
        "text": "class ansys.acp.core.SubShape(cad_geometry, path)\n\nRepresents a sub-shape of a virtual geometry.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSubShape.clone()\n\nCreate a new unstored SubShape with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSubShape.cad_geometry\n\nLinked CAD geometry.\n\nSubShape.path\n\nTopological path of the sub-shape within the CAD geometry.\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae.html#import_hdf5_composite_cae",
        "title": "import_hdf5_composite_cae",
        "section": "import_hdf5_composite_cae",
        "text": "Import the lay-up from an HDF5 Composite CAE file.\npath (str | PathLike[str]) – File path.\nimport_mode (HDF5CompositeCAEImportMode) – In HDF5CompositeCAEImportMode.APPEND mode, the imported objects are\nappended to existing layup.\nIn HDF5CompositeCAEImportMode.OVERWRITE mode, existing objects in the model\nwith the same name are replaced if possible (not locked).\nprojection_mode (HDF5CompositeCAEProjectionMode) – Determines whether loaded plies are mapped onto the reference surface\n(HDF5CompositeCAEProjectionMode.SHELL mode) or exposed as\n3D plies (HDF5CompositeCAEProjectionMode.SOLID mode).\nminimum_angle_tolerance (float) – Minimum angle tolerance for which tabular correction angles for plies are computed.\nrecompute_reference_directions (bool) – Whether reference directions should be recomputed from tabular angle data or not.\nshell_mapping_properties (ShellMappingProperties) – Properties for mapping to the shell on importing HDF5 Composite CAE files.\nUsed only if projection_mode is set to \"shell\".\nsolid_mapping_properties (SolidMappingProperties) – Properties for importing HDF5 Composite CAE files as imported plies.\nUsed only if projection_mode is set to \"solid\".\ncoordinate_transformation (CoordinateTransformation) – Coordinate transformation applied to the imported lay-up.\nimport_hdf5_composite_cae\nHDF5CompositeCAEImportMode.APPEND\nHDF5CompositeCAEImportMode.OVERWRITE\nHDF5CompositeCAEProjectionMode.SHELL\nHDF5CompositeCAEProjectionMode.SOLID\nprojection_mode\n\"shell\"\nprojection_mode\n\"solid\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae.html#ansys.acp.core.Model.import_hdf5_composite_cae",
        "title": "import_hdf5_composite_cae > import_hdf5_composite_cae > import_hdf5_composite_cae",
        "section": "import_hdf5_composite_cae > import_hdf5_composite_cae",
        "text": "Model.import_hdf5_composite_cae(path, import_mode='append', projection_mode='shell', minimum_angle_tolerance=0.001, recompute_reference_directions=False, shell_mapping_properties=ShellMappingProperties(all_elements=True, element_sets=(), relative_thickness_tolerance=0.5, relative_in_plane_tolerance=0.01, angle_tolerance=35.0, small_hole_threshold=0.0), solid_mapping_properties=SolidMappingProperties(offset_type=<OffsetType.BOTTOM_OFFSET: 'bottom_offset'>), coordinate_transformation=CoordinateTransformation(rotation_angle_x=0.0, rotation_angle_y=0.0, rotation_angle_z=0.0, translation_x=0.0, translation_y=0.0, translation_z=0.0))\n\nImport the lay-up from an HDF5 Composite CAE file.\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nimport_mode (HDF5CompositeCAEImportMode) – In HDF5CompositeCAEImportMode.APPEND mode, the imported objects are\nappended to existing layup.\nIn HDF5CompositeCAEImportMode.OVERWRITE mode, existing objects in the model\nwith the same name are replaced if possible (not locked).\n\nprojection_mode (HDF5CompositeCAEProjectionMode) – Determines whether loaded plies are mapped onto the reference surface\n(HDF5CompositeCAEProjectionMode.SHELL mode) or exposed as\n3D plies (HDF5CompositeCAEProjectionMode.SOLID mode).\n\nminimum_angle_tolerance (float) – Minimum angle tolerance for which tabular correction angles for plies are computed.\n\nrecompute_reference_directions (bool) – Whether reference directions should be recomputed from tabular angle data or not.\n\nshell_mapping_properties (ShellMappingProperties) – Properties for mapping to the shell on importing HDF5 Composite CAE files.\nUsed only if projection_mode is set to \"shell\".\n\nsolid_mapping_properties (SolidMappingProperties) – Properties for importing HDF5 Composite CAE files as imported plies.\nUsed only if projection_mode is set to \"solid\".\n\ncoordinate_transformation (CoordinateTransformation) – Coordinate transformation applied to the imported lay-up.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae.html#examples-using-modelimport_hdf5_composite_cae",
        "title": "import_hdf5_composite_cae > Examples using Model.import_hdf5_composite_cae",
        "section": "Examples using Model.import_hdf5_composite_cae",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.import_hdf5_composite_cae"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.nodal_data.html#ansys.acp.core.SolidModel.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property SolidModel.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#solid-model",
        "title": "Solid Model",
        "section": "Solid Model",
        "text": "This example shows how to create and shape a solid model.\nThe solid model implements an extrusion algorithm which creates\na layered solid mesh based on the shell mesh and layup definition.\nThis solid mesh can be further processed by ExtrusionGuide,\nSnapToGeometry, and CutOffGeometry.\nImport the standard library and third-party dependencies.\nImport the PyACP dependencies.\nSolid Model\nExtrusionGuide\nSnapToGeometry\nCutOffGeometry"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#load-a-minimal-model",
        "title": "Solid Model > Load a minimal model",
        "section": "Load a minimal model",
        "text": "Launch the PyACP server and connect to it.\nLoad the model from the input file.\nLoad a minimal model"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#create-a-simple-layup",
        "title": "Solid Model > Create a simple layup",
        "section": "Create a simple layup",
        "text": "%%\nAdd more layers to the modeling ply so that it is easier to see the\neffects of the selection rules.\nCreate a simple layup"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#create-an-initial-solid-model",
        "title": "Solid Model > Create an initial solid model",
        "section": "Create an initial solid model",
        "text": "By default, the layup is extruded along the normal direction of the shell mesh.\nCreate an initial solid model"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#snap-the-top-to-a-geometry",
        "title": "Solid Model > Snap the top to a geometry",
        "section": "Snap the top to a geometry",
        "text": "The SnapToGeometry allows to shape the bottom or top of the solid model.\nFirst, import the geometry and then add the snap-to feature to the solid model.\nSnap the top to a geometry\nSnapToGeometry"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#shape-the-walls",
        "title": "Solid Model > Shape the walls",
        "section": "Shape the walls",
        "text": "The ExtrusionGuide is used to shape the side walls of the solid model.\nThe feature can be defined by a direction as shown here or through a geometry.\nShape the walls\nExtrusionGuide"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#cut-off-an-edge",
        "title": "Solid Model > Cut-off an edge",
        "section": "Cut-off an edge",
        "text": "The CutOffGeometry is used to crop elements from the solid model.\nCut-off an edge\nCutOffGeometry"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#plot-results-on-the-solid-mesh",
        "title": "Solid Model > Plot results on the solid mesh",
        "section": "Plot results on the solid mesh",
        "text": "The plotting capabilities also support the visualization of ply-wise results,\nsuch as directions or thicknesses as shown here.\nGet the analysis ply of interest\nPlot results on the solid mesh"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#plot-fiber-directions",
        "title": "Solid Model > Plot fiber directions",
        "section": "Plot fiber directions",
        "text": "Plot fiber directions"
    },
    {
        "objectID": "examples/modeling_features/020-solid_model",
        "href": "examples/modeling_features/020-solid_model.html#plot-thicknesses",
        "title": "Solid Model > Plot thicknesses",
        "section": "Plot thicknesses",
        "text": "Total running time of the script: (0 minutes 4.830 seconds)\nDownload Jupyter notebook: 020-solid_model.ipynb\nDownload Python source code: 020-solid_model.py\nDownload zipped: 020-solid_model.zip\nGallery generated by Sphinx-Gallery\nPlot thicknesses\nDownload Jupyter notebook: 020-solid_model.ipynb\nDownload Python source code: 020-solid_model.py\nDownload zipped: 020-solid_model.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.parent",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.parent",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.parent.html#ansys.acp.core.SolidModel.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SolidModel.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.rosette",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.rosette.html#rosette",
        "title": "rosette",
        "section": "rosette",
        "text": "rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.rosette",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.rosette.html#ansys.acp.core.SamplingPoint.rosette",
        "title": "rosette > rosette > rosette",
        "section": "rosette > rosette",
        "text": "property SamplingPoint.rosette: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "VariableOffsetSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.add_primary_ply",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.add_primary_ply.html#add_primary_ply",
        "title": "add_primary_ply",
        "section": "add_primary_ply",
        "text": "Add a PrimaryPly to the ButtJointSequence.\nSee PrimaryPly for the available parameters.\nPrimaryPly\nadd_primary_ply\nPrimaryPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.add_primary_ply",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.add_primary_ply.html#ansys.acp.core.ButtJointSequence.add_primary_ply",
        "title": "add_primary_ply > add_primary_ply > add_primary_ply",
        "section": "add_primary_ply > add_primary_ply",
        "text": "ButtJointSequence.add_primary_ply(sequence, level=1)\n\nAdd a PrimaryPly to the ButtJointSequence.\n\nSee PrimaryPly for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nPrimaryPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.parent.html#ansys.acp.core.ImportedSolidModel.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ImportedSolidModel.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT.html#intersect",
        "title": "INTERSECT",
        "section": "INTERSECT",
        "text": "INTERSECT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT.html#ansys.acp.core.BooleanOperationType.INTERSECT",
        "title": "INTERSECT > INTERSECT > INTERSECT",
        "section": "INTERSECT > INTERSECT",
        "text": "BooleanOperationType.INTERSECT = 'intersect'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT.html#examples-using-booleanoperationtypeintersect",
        "title": "INTERSECT > Examples using BooleanOperationType.INTERSECT",
        "section": "Examples using BooleanOperationType.INTERSECT",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using BooleanOperationType.INTERSECT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.CUSTOM",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.CUSTOM.html#custom",
        "title": "CUSTOM",
        "section": "CUSTOM",
        "text": "CUSTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.CUSTOM",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.CUSTOM.html#ansys.acp.core.CutOffMaterialHandling.CUSTOM",
        "title": "CUSTOM > CUSTOM > CUSTOM",
        "section": "CUSTOM > CUSTOM",
        "text": "CutOffMaterialHandling.CUSTOM = 'custom'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.clone",
        "href": "api/_autosummary/ansys.acp.core.Sensor.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.clone",
        "href": "api/_autosummary/ansys.acp.core.Sensor.clone.html#ansys.acp.core.Sensor.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Sensor.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yc.html#yc",
        "title": "Yc",
        "section": "Yc",
        "text": "Yc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yc.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Yc",
        "title": "Yc > Yc > Yc",
        "section": "Yc > Yc",
        "text": "property ConstantStressLimits.Yc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.status",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.status",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.status.html#ansys.acp.core.SamplingPoint.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SamplingPoint.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg.html#p_22_neg",
        "title": "p_22_neg",
        "section": "p_22_neg",
        "text": "p_22_neg"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg",
        "title": "p_22_neg > p_22_neg > p_22_neg",
        "section": "p_22_neg > p_22_neg",
        "text": "property ConstantPuckConstants.p_22_neg: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.html#variablewovenstresslimits",
        "title": "VariableWovenStressLimits",
        "section": "VariableWovenStressLimits",
        "text": "Variable stress limits property set for woven materials.\nAdded in ACP server version 24.2.\nVariableWovenStressLimits.Sxy\n\nVariableWovenStressLimits.Sxz\n\nVariableWovenStressLimits.Syz\n\nVariableWovenStressLimits.Xc\n\nVariableWovenStressLimits.Xt\n\nVariableWovenStressLimits.Yc\n\nVariableWovenStressLimits.Yt\n\nVariableWovenStressLimits.Zc\n\nVariableWovenStressLimits.Zt\n\nVariableWovenStressLimits.field_variables\n\nVariableWovenStressLimits.interpolation_options\n\nVariableWovenStressLimits\nVariableWovenStressLimits.Sxy\nVariableWovenStressLimits.Sxz\nVariableWovenStressLimits.Syz\nVariableWovenStressLimits.Xc\nVariableWovenStressLimits.Xt\nVariableWovenStressLimits.Yc\nVariableWovenStressLimits.Yt\nVariableWovenStressLimits.Zc\nVariableWovenStressLimits.Zt\nVariableWovenStressLimits.field_variables\nVariableWovenStressLimits.interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits",
        "title": "VariableWovenStressLimits > VariableWovenStressLimits > VariableWovenStressLimits",
        "section": "VariableWovenStressLimits > VariableWovenStressLimits",
        "text": "class ansys.acp.core.material_property_sets.VariableWovenStressLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable stress limits property set for woven materials.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableWovenStressLimits.Sxy\n\n\n\nVariableWovenStressLimits.Sxz\n\n\n\nVariableWovenStressLimits.Syz\n\n\n\nVariableWovenStressLimits.Xc\n\n\n\nVariableWovenStressLimits.Xt\n\n\n\nVariableWovenStressLimits.Yc\n\n\n\nVariableWovenStressLimits.Yt\n\n\n\nVariableWovenStressLimits.Zc\n\n\n\nVariableWovenStressLimits.Zt\n\n\n\nVariableWovenStressLimits.field_variables\n\n\n\nVariableWovenStressLimits.interpolation_options\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.html#meshimporttype",
        "title": "MeshImportType",
        "section": "MeshImportType",
        "text": "Options for the definition of the source of the imported mesh.\nMeshImportType.FROM_H5_COMPOSITE_CAE\n\nMeshImportType.FROM_GEOMETRY\n\nMeshImportType\nMeshImportType.FROM_H5_COMPOSITE_CAE\nMeshImportType.FROM_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.html#ansys.acp.core.MeshImportType",
        "title": "MeshImportType > MeshImportType > MeshImportType",
        "section": "MeshImportType > MeshImportType",
        "text": "class ansys.acp.core.MeshImportType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the definition of the source of the imported mesh.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nMeshImportType.FROM_H5_COMPOSITE_CAE\n\n\n\nMeshImportType.FROM_GEOMETRY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.html#scalardata",
        "title": "ScalarData",
        "section": "ScalarData",
        "text": "Class that encapsulates scalar data.\nScalarData.get_pyvista_mesh(mesh)\nConvert the mesh data to a PyVista object.\nScalarData.component_name\nName of the component.\nScalarData.values\nScalar data values as a numpy array.\nScalarData\nScalarData.get_pyvista_mesh\nScalarData.component_name\nScalarData.values"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.html#ansys.acp.core.mesh_data.ScalarData",
        "title": "ScalarData > ScalarData > ScalarData",
        "section": "ScalarData > ScalarData",
        "text": "class ansys.acp.core.mesh_data.ScalarData(field_names, labels, values, component_name)\n\nClass that encapsulates scalar data.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nScalarData.get_pyvista_mesh(mesh)\n\nConvert the mesh data to a PyVista object.\n\n\n\nAttributes\n\n\n\n\n\n\n\nScalarData.component_name\n\nName of the component.\n\nScalarData.values\n\nScalar data values as a numpy array.\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.split",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.split.html#split",
        "title": "split",
        "section": "split",
        "text": "Return a list of the substrings in the string, using sep as the separator string.\nThe separator used to split the string.\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\nMaximum number of splits.\n-1 (the default value) means no limit.\nSplitting starts at the front of the string and works to the end.\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.\nsplit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.split",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.split.html#ansys.acp.core.material_property_sets.PuckMaterialType.split",
        "title": "split > split > split",
        "section": "split > split",
        "text": "PuckMaterialType.split(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the front of the string and works to the end.\n\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.average_element_size",
        "href": "api/_autosummary/ansys.acp.core.Model.average_element_size.html#average_element_size",
        "title": "average_element_size",
        "section": "average_element_size",
        "text": "average_element_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.average_element_size",
        "href": "api/_autosummary/ansys.acp.core.Model.average_element_size.html#ansys.acp.core.Model.average_element_size",
        "title": "average_element_size > average_element_size > average_element_size",
        "section": "average_element_size > average_element_size",
        "text": "property Model.average_element_size: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.id.html#ansys.acp.core.CutOffSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CutOffSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.oriented_selection_set",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.oriented_selection_set.html#oriented_selection_set",
        "title": "oriented_selection_set",
        "section": "oriented_selection_set",
        "text": "oriented_selection_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.oriented_selection_set",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.oriented_selection_set.html#ansys.acp.core.SnapToGeometry.oriented_selection_set",
        "title": "oriented_selection_set > oriented_selection_set > oriented_selection_set",
        "section": "oriented_selection_set > oriented_selection_set",
        "text": "property SnapToGeometry.oriented_selection_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED.html#maximum_angle_superposed",
        "title": "MAXIMUM_ANGLE_SUPERPOSED",
        "section": "MAXIMUM_ANGLE_SUPERPOSED",
        "text": "MAXIMUM_ANGLE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED.html#ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED",
        "title": "MAXIMUM_ANGLE_SUPERPOSED > MAXIMUM_ANGLE_SUPERPOSED > MAXIMUM_ANGLE_SUPERPOSED",
        "section": "MAXIMUM_ANGLE_SUPERPOSED > MAXIMUM_ANGLE_SUPERPOSED",
        "text": "RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED = 'maximum_angle_superposed'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction.html#relative_thickness_correction",
        "title": "relative_thickness_correction",
        "section": "relative_thickness_correction",
        "text": "relative_thickness_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction",
        "title": "relative_thickness_correction > relative_thickness_correction > relative_thickness_correction",
        "section": "relative_thickness_correction > relative_thickness_correction",
        "text": "AnalysisPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.html#coordinatetransformation",
        "title": "CoordinateTransformation",
        "section": "CoordinateTransformation",
        "text": "Defines a coordinate transformation via rotation angles and translations.\nAll angles are in degrees. The operations are performed in the following order:\nRotation about the x-axis\nRotation about the y-axis\nRotation about the z-axis\nTranslation\nCoordinateTransformation.rotation_angle_x\n\nCoordinateTransformation.rotation_angle_y\n\nCoordinateTransformation.rotation_angle_z\n\nCoordinateTransformation.translation_x\n\nCoordinateTransformation.translation_y\n\nCoordinateTransformation.translation_z\n\nCoordinateTransformation\nCoordinateTransformation.rotation_angle_x\nCoordinateTransformation.rotation_angle_y\nCoordinateTransformation.rotation_angle_z\nCoordinateTransformation.translation_x\nCoordinateTransformation.translation_y\nCoordinateTransformation.translation_z"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.html#ansys.acp.core.CoordinateTransformation",
        "title": "CoordinateTransformation > CoordinateTransformation > CoordinateTransformation",
        "section": "CoordinateTransformation > CoordinateTransformation",
        "text": "class ansys.acp.core.CoordinateTransformation(rotation_angle_x=0.0, rotation_angle_y=0.0, rotation_angle_z=0.0, translation_x=0.0, translation_y=0.0, translation_z=0.0)\n\nDefines a coordinate transformation via rotation angles and translations.\n\nAll angles are in degrees. The operations are performed in the following order:\n\nRotation about the x-axis\n\nRotation about the y-axis\n\nRotation about the z-axis\n\nTranslation\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nCoordinateTransformation.rotation_angle_x\n\n\n\nCoordinateTransformation.rotation_angle_y\n\n\n\nCoordinateTransformation.rotation_angle_z\n\n\n\nCoordinateTransformation.translation_x\n\n\n\nCoordinateTransformation.translation_y\n\n\n\nCoordinateTransformation.translation_z\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.id",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.id",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.id.html#ansys.acp.core.EdgeSet.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property EdgeSet.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Syz.html#syz",
        "title": "Syz",
        "section": "Syz",
        "text": "Syz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Syz.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Syz",
        "title": "Syz > Syz > Syz",
        "section": "Syz > Syz",
        "text": "property ConstantStressLimits.Syz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rsplit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rsplit.html#rsplit",
        "title": "rsplit",
        "section": "rsplit",
        "text": "Return a list of the substrings in the string, using sep as the separator string.\nThe separator used to split the string.\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\nMaximum number of splits.\n-1 (the default value) means no limit.\nSplitting starts at the end of the string and works to the front.\nrsplit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rsplit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rsplit.html#ansys.acp.core.material_property_sets.PuckMaterialType.rsplit",
        "title": "rsplit > rsplit > rsplit",
        "section": "rsplit > rsplit",
        "text": "PuckMaterialType.rsplit(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.name.html#ansys.acp.core.CutOffGeometry.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CutOffGeometry.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_filetransfer",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_filetransfer.html#url_filetransfer",
        "title": "url_filetransfer",
        "section": "url_filetransfer",
        "text": "url_filetransfer"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_filetransfer",
        "href": "api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_filetransfer.html#ansys.acp.core.ConnectLaunchConfig.url_filetransfer",
        "title": "url_filetransfer > url_filetransfer > url_filetransfer",
        "section": "url_filetransfer > url_filetransfer",
        "text": "ConnectLaunchConfig.url_filetransfer: str = 'localhost:50556'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_modeling_group.html#create_modeling_group",
        "title": "create_modeling_group",
        "section": "create_modeling_group",
        "text": "Instantiate a modeling group.\nname (str) – Name of the modeling group.\nModelingGroup\nAdded in ACP server version 24.2.\ncreate_modeling_group"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_modeling_group.html#ansys.acp.core.Model.create_modeling_group",
        "title": "create_modeling_group > create_modeling_group > create_modeling_group",
        "section": "create_modeling_group > create_modeling_group",
        "text": "Model.create_modeling_group(*, name='ModelingGroup')\n\nInstantiate a modeling group.\n\nParameters\n\nname (str) – Name of the modeling group.\n\nReturn type\n\nModelingGroup\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_modeling_group.html#examples-using-modelcreate_modeling_group",
        "title": "create_modeling_group > Examples using Model.create_modeling_group",
        "section": "Examples using Model.create_modeling_group",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.create_modeling_group"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.include_rule.html#ansys.acp.core.BooleanSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property BooleanSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.html#importedsolidmodelexportsettings",
        "title": "ImportedSolidModelExportSettings",
        "section": "ImportedSolidModelExportSettings",
        "text": "Defines the settings for exporting an imported solid model.\nuse_default_section_index (bool) – Use the default start index for sections.\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\nuse_default_material_index (bool) – Use the default start index for materials.\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\nuse_default_node_index (bool) – Use the default start index for nodes.\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\nuse_default_element_index (bool) – Use the default start index for elements.\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\nuse_solid_model_prefix (bool) – Use the imported solid model name as a prefix for the exported file.\nAdded in ACP server version 25.1.\nImportedSolidModelExportSettings.coordinate_system_index\n\nImportedSolidModelExportSettings.drop_hanging_nodes\n\nImportedSolidModelExportSettings.element_index\n\nImportedSolidModelExportSettings.material_index\n\nImportedSolidModelExportSettings.node_index\n\nImportedSolidModelExportSettings.section_index\n\nImportedSolidModelExportSettings.use_default_coordinate_system_index\n\nImportedSolidModelExportSettings.use_default_element_index\n\nImportedSolidModelExportSettings.use_default_material_index\n\nImportedSolidModelExportSettings.use_default_node_index\n\nImportedSolidModelExportSettings.use_default_section_index\n\nImportedSolidModelExportSettings.use_solid_model_prefix\n\nImportedSolidModelExportSettings.use_solsh_elements\n\nImportedSolidModelExportSettings\nuse_default_section_index\nuse_default_coordinate_system_index\nuse_default_material_index\nuse_default_node_index\nuse_default_element_index\nImportedSolidModelExportSettings.coordinate_system_index\nImportedSolidModelExportSettings.drop_hanging_nodes\nImportedSolidModelExportSettings.element_index\nImportedSolidModelExportSettings.material_index\nImportedSolidModelExportSettings.node_index\nImportedSolidModelExportSettings.section_index\nImportedSolidModelExportSettings.use_default_coordinate_system_index\nImportedSolidModelExportSettings.use_default_element_index\nImportedSolidModelExportSettings.use_default_material_index\nImportedSolidModelExportSettings.use_default_node_index\nImportedSolidModelExportSettings.use_default_section_index\nImportedSolidModelExportSettings.use_solid_model_prefix\nImportedSolidModelExportSettings.use_solsh_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.html#ansys.acp.core.ImportedSolidModelExportSettings",
        "title": "ImportedSolidModelExportSettings > ImportedSolidModelExportSettings > ImportedSolidModelExportSettings",
        "section": "ImportedSolidModelExportSettings > ImportedSolidModelExportSettings",
        "text": "class ansys.acp.core.ImportedSolidModelExportSettings(*, use_default_section_index=True, section_index=0, use_default_coordinate_system_index=True, coordinate_system_index=0, use_default_material_index=True, material_index=0, use_default_node_index=True, node_index=0, use_default_element_index=True, element_index=0, use_solsh_elements=False, drop_hanging_nodes=True, use_solid_model_prefix=True, _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the settings for exporting an imported solid model.\n\nParameters\n\nuse_default_section_index (bool) – Use the default start index for sections.\n\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\n\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\n\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\n\nuse_default_material_index (bool) – Use the default start index for materials.\n\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\n\nuse_default_node_index (bool) – Use the default start index for nodes.\n\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\n\nuse_default_element_index (bool) – Use the default start index for elements.\n\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\n\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\n\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\n\nuse_solid_model_prefix (bool) – Use the imported solid model name as a prefix for the exported file.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedSolidModelExportSettings.coordinate_system_index\n\n\n\nImportedSolidModelExportSettings.drop_hanging_nodes\n\n\n\nImportedSolidModelExportSettings.element_index\n\n\n\nImportedSolidModelExportSettings.material_index\n\n\n\nImportedSolidModelExportSettings.node_index\n\n\n\nImportedSolidModelExportSettings.section_index\n\n\n\nImportedSolidModelExportSettings.use_default_coordinate_system_index\n\n\n\nImportedSolidModelExportSettings.use_default_element_index\n\n\n\nImportedSolidModelExportSettings.use_default_material_index\n\n\n\nImportedSolidModelExportSettings.use_default_node_index\n\n\n\nImportedSolidModelExportSettings.use_default_section_index\n\n\n\nImportedSolidModelExportSettings.use_solid_model_prefix\n\n\n\nImportedSolidModelExportSettings.use_solsh_elements\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.volume.html#volume",
        "title": "volume",
        "section": "volume",
        "text": "volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.volume.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.volume",
        "title": "volume > volume > volume",
        "section": "volume > volume",
        "text": "ProductionPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ParallelSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.status",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.status",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.status.html#ansys.acp.core.LookUpTable1D.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property LookUpTable1D.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation.html#orientation",
        "title": "orientation",
        "section": "orientation",
        "text": "orientation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation",
        "title": "orientation > orientation > orientation",
        "section": "orientation > orientation",
        "text": "ProductionPlyElementalData.orientation: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.name",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.name",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.name.html#ansys.acp.core.FieldDefinition.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property FieldDefinition.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.dir1",
        "href": "api/_autosummary/ansys.acp.core.Rosette.dir1.html#dir1",
        "title": "dir1",
        "section": "dir1",
        "text": "dir1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.dir1",
        "href": "api/_autosummary/ansys.acp.core.Rosette.dir1.html#ansys.acp.core.Rosette.dir1",
        "title": "dir1 > dir1 > dir1",
        "section": "dir1 > dir1",
        "text": "property Rosette.dir1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.name",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.name",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.name.html#ansys.acp.core.ElementSet.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ElementSet.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.delete",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.delete",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.delete.html#ansys.acp.core.ButtJointSequence.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ButtJointSequence.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rfind",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rfind.html#rfind",
        "title": "rfind",
        "section": "rfind",
        "text": "Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nReturn -1 on failure.\nrfind"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rfind",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rfind.html#ansys.acp.core.material_property_sets.PuckMaterialType.rfind",
        "title": "rfind > rfind > rfind",
        "section": "rfind > rfind",
        "text": "PuckMaterialType.rfind(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "AnalysisPlyElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.keep_volume",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.keep_volume.html#keep_volume",
        "title": "keep_volume",
        "section": "keep_volume",
        "text": "keep_volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.keep_volume",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.keep_volume.html#ansys.acp.core.DockerComposeLaunchConfig.keep_volume",
        "title": "keep_volume > keep_volume > keep_volume",
        "section": "keep_volume > keep_volume",
        "text": "DockerComposeLaunchConfig.keep_volume: bool = False\n\n"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#stored-versus-unstored-objects",
        "title": "Stored versus unstored objects",
        "section": "Stored versus unstored objects",
        "text": "This is an advanced PyACP concept. It is not required knowledge for most modeling tasks.\nStored versus unstored objects"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#general-concept",
        "title": "Stored versus unstored objects > General concept",
        "section": "General concept",
        "text": "PyACP objects can exist in two states: stored and unstored.\nA stored object is one that has been sent to the ACP server. When any of its properties change, the change is automatically propagated to the server. Similarly, when an attribute is accessed, the value is retrieved from the server.\nAn unstored object is a local representation of an ACP object. It can be used to specify the defining properties of the object, but all computed properties are unavailable. When it is stored, it is sent to the server and becomes a stored object.\nGeneral concept"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#creating-stored-and-unstored-objects",
        "title": "Stored versus unstored objects > Creating stored and unstored objects",
        "section": "Creating stored and unstored objects",
        "text": "Consider the following example. First, launch an ACP instance and import a model. This creates a stored model object.\nTo create a new stored material object, call the create_material() method of the model object.\nTo instead create an unstored material object, directly call the Material constructor:\nNotice that the unstored material object has an empty ID. This is because the ID is assigned by the server when the object is stored.\nCreating stored and unstored objects\ncreate_material()\nMaterial"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#storing-objects",
        "title": "Stored versus unstored objects > Storing objects",
        "section": "Storing objects",
        "text": "You can make changes to the unstored material, but they are lost when the Python session ends.\nTo store a material in an ACP model, call its store method. The parent parameter determines where in the model the material is stored. In this case, the parent is the model itself.\nStoring objects\nstore\nparent"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#cloning-objects",
        "title": "Stored versus unstored objects > Cloning objects",
        "section": "Cloning objects",
        "text": "You can create an unstored copy of an existing object by calling the clone method. The source object can be either stored or unstored.\nYou may also use the clone method to copy an object between models, even if the models are on different ACP servers.\nCloning objects\nclone\nclone"
    },
    {
        "objectID": "user_guide/concepts/store",
        "href": "user_guide/concepts/store.html#performance-considerations",
        "title": "Stored versus unstored objects > Performance considerations",
        "section": "Performance considerations",
        "text": "When building ACP models, performance can vary depending on whether the objects are stored or unstored. In general, it is best to first build an unstored object and then store its finished form. Otherwise, each change to the object is sent to the server, which can slow down the performance depending on the network connection.\nThis does not mean that you necessarily need to use the store() method. It is just as efficient to use the create_*() methods and simply pass all the defining properties at once.\nPerformance considerations\nstore()\ncreate_*()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.delete.html#ansys.acp.core.VariableOffsetSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "VariableOffsetSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.status.html#ansys.acp.core.CADGeometry.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property CADGeometry.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE.html#production_ply_wise",
        "title": "PRODUCTION_PLY_WISE",
        "section": "PRODUCTION_PLY_WISE",
        "text": "PRODUCTION_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE.html#ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE",
        "title": "PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE",
        "section": "PRODUCTION_PLY_WISE > PRODUCTION_PLY_WISE",
        "text": "ExtrusionMethod.PRODUCTION_PLY_WISE = 'production_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies.html#imported_production_plies",
        "title": "imported_production_plies",
        "section": "imported_production_plies",
        "text": "imported_production_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies.html#ansys.acp.core.ImportedModelingPly.imported_production_plies",
        "title": "imported_production_plies > imported_production_plies > imported_production_plies",
        "section": "imported_production_plies > imported_production_plies",
        "text": "property ImportedModelingPly.imported_production_plies: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies.html#examples-using-importedmodelingplyimported_production_plies",
        "title": "imported_production_plies > Examples using ImportedModelingPly.imported_production_plies",
        "section": "Examples using ImportedModelingPly.imported_production_plies",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedModelingPly.imported_production_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yt.html#yt",
        "title": "Yt",
        "section": "Yt",
        "text": "Yt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yt.html#ansys.acp.core.material_property_sets.VariableStressLimits.Yt",
        "title": "Yt > Yt > Yt",
        "section": "Yt > Yt",
        "text": "property VariableStressLimits.Yt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_1_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_1_field.html#draping_angle_1_field",
        "title": "draping_angle_1_field",
        "section": "draping_angle_1_field",
        "text": "draping_angle_1_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_1_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_1_field.html#ansys.acp.core.ImportedModelingPly.draping_angle_1_field",
        "title": "draping_angle_1_field > draping_angle_1_field > draping_angle_1_field",
        "section": "draping_angle_1_field > draping_angle_1_field",
        "text": "property ImportedModelingPly.draping_angle_1_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy.html#sxy",
        "title": "Sxy",
        "section": "Sxy",
        "text": "Sxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy",
        "title": "Sxy > Sxy > Sxy",
        "section": "Sxy > Sxy",
        "text": "property ConstantWovenStressLimits.Sxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.name",
        "href": "api/_autosummary/ansys.acp.core.Model.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.name",
        "href": "api/_autosummary/ansys.acp.core.Model.name.html#ansys.acp.core.Model.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Model.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.name",
        "href": "api/_autosummary/ansys.acp.core.Model.name.html#examples-using-modelname",
        "title": "name > Examples using Model.name",
        "section": "Examples using Model.name",
        "text": "sphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt.html#yt",
        "title": "Yt",
        "section": "Yt",
        "text": "Yt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt",
        "title": "Yt > Yt > Yt",
        "section": "Yt > Yt",
        "text": "property VariableWovenStressLimits.Yt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SphericalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels.html#ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ImportedSolidModelNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology.REINFORCING",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.REINFORCING.html#reinforcing",
        "title": "REINFORCING",
        "section": "REINFORCING",
        "text": "REINFORCING"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology.REINFORCING",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.REINFORCING.html#ansys.acp.core.ElementTechnology.REINFORCING",
        "title": "REINFORCING > REINFORCING > REINFORCING",
        "section": "REINFORCING > REINFORCING",
        "text": "ElementTechnology.REINFORCING = 'reinforcing'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.html#extrusionguidetype",
        "title": "ExtrusionGuideType",
        "section": "ExtrusionGuideType",
        "text": "Extrusion guide type used in an extrusion guide (solid model).\nExtrusionGuideType.BY_GEOMETRY\n\nExtrusionGuideType.BY_DIRECTION\n\nExtrusionGuideType\nExtrusionGuideType.BY_GEOMETRY\nExtrusionGuideType.BY_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.html#ansys.acp.core.ExtrusionGuideType",
        "title": "ExtrusionGuideType > ExtrusionGuideType > ExtrusionGuideType",
        "section": "ExtrusionGuideType > ExtrusionGuideType",
        "text": "class ansys.acp.core.ExtrusionGuideType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion guide type used in an extrusion guide (solid model).\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nExtrusionGuideType.BY_GEOMETRY\n\n\n\nExtrusionGuideType.BY_DIRECTION\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.html#examples-using-extrusionguidetype",
        "title": "ExtrusionGuideType > Examples using ExtrusionGuideType",
        "section": "Examples using ExtrusionGuideType",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using ExtrusionGuideType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isspace",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isspace.html#isspace",
        "title": "isspace",
        "section": "isspace",
        "text": "Return True if the string is a whitespace string, False otherwise.\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.\nisspace"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isspace",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isspace.html#ansys.acp.core.material_property_sets.PuckMaterialType.isspace",
        "title": "isspace > isspace > isspace",
        "section": "isspace > isspace",
        "text": "PuckMaterialType.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_material",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_material.html#ply_material",
        "title": "ply_material",
        "section": "ply_material",
        "text": "ply_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_material",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_material.html#ansys.acp.core.ImportedModelingPly.ply_material",
        "title": "ply_material > ply_material > ply_material",
        "section": "ply_material > ply_material",
        "text": "property ImportedModelingPly.ply_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry.html#create_snap_to_geometry",
        "title": "create_snap_to_geometry",
        "section": "create_snap_to_geometry",
        "text": "Instantiate a snap-to geometry.\nname (str) – Name of the snap-to geometry.\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\nSnapToGeometry\nAdded in ACP server version 25.1.\ncreate_snap_to_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry.html#ansys.acp.core.SolidModel.create_snap_to_geometry",
        "title": "create_snap_to_geometry > create_snap_to_geometry > create_snap_to_geometry",
        "section": "create_snap_to_geometry > create_snap_to_geometry",
        "text": "SolidModel.create_snap_to_geometry(*, name='SnapToGeometry', active=True, orientation_type='top', cad_geometry=None, oriented_selection_set=None)\n\nInstantiate a snap-to geometry.\n\nParameters\n\nname (str) – Name of the snap-to geometry.\n\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\n\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\n\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\n\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\n\nReturn type\n\nSnapToGeometry\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry.html#examples-using-solidmodelcreate_snap_to_geometry",
        "title": "create_snap_to_geometry > Examples using SolidModel.create_snap_to_geometry",
        "section": "Examples using SolidModel.create_snap_to_geometry",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SolidModel.create_snap_to_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23.html#nu23",
        "title": "nu23",
        "section": "nu23",
        "text": "nu23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23",
        "title": "nu23 > nu23 > nu23",
        "section": "nu23 > nu23",
        "text": "property ConstantEngineeringConstants.nu23: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz.html#esxz",
        "title": "eSxz",
        "section": "eSxz",
        "text": "eSxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz",
        "title": "eSxz > eSxz > eSxz",
        "section": "eSxz > eSxz",
        "text": "property ConstantStrainLimits.eSxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.rosettes",
        "href": "api/_autosummary/ansys.acp.core.Model.rosettes.html#rosettes",
        "title": "rosettes",
        "section": "rosettes",
        "text": "rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.rosettes",
        "href": "api/_autosummary/ansys.acp.core.Model.rosettes.html#ansys.acp.core.Model.rosettes",
        "title": "rosettes > rosettes > rosettes",
        "section": "rosettes > rosettes",
        "text": "property Model.rosettes: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.rosettes",
        "href": "api/_autosummary/ansys.acp.core.Model.rosettes.html#examples-using-modelrosettes",
        "title": "rosettes > Examples using Model.rosettes",
        "section": "Examples using Model.rosettes",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using Model.rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.delete.html#ansys.acp.core.ImportedModelingGroup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ImportedModelingGroup.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.Model.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.Model.nodal_data.html#ansys.acp.core.Model.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property Model.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.clone.html#ansys.acp.core.BooleanSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "BooleanSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.shell_mesh.html#ansys.acp.core.ModelingGroup.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property ModelingGroup.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.use_default_search_radius",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.use_default_search_radius.html#use_default_search_radius",
        "title": "use_default_search_radius",
        "section": "use_default_search_radius",
        "text": "use_default_search_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.use_default_search_radius",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.use_default_search_radius.html#ansys.acp.core.LookUpTable3D.use_default_search_radius",
        "title": "use_default_search_radius > use_default_search_radius > use_default_search_radius",
        "section": "use_default_search_radius > use_default_search_radius",
        "text": "property LookUpTable3D.use_default_search_radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.id.html#ansys.acp.core.SnapToGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SnapToGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.MESH",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.MESH.html#mesh",
        "title": "MESH",
        "section": "MESH",
        "text": "MESH"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.MESH",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.MESH.html#ansys.acp.core.IgnorableEntity.MESH",
        "title": "MESH > MESH > MESH",
        "section": "MESH > MESH",
        "text": "IgnorableEntity.MESH = 'mesh'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.parallel_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.parallel_selection_rules.html#parallel_selection_rules",
        "title": "parallel_selection_rules",
        "section": "parallel_selection_rules",
        "text": "parallel_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.parallel_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.parallel_selection_rules.html#ansys.acp.core.Model.parallel_selection_rules",
        "title": "parallel_selection_rules > parallel_selection_rules > parallel_selection_rules",
        "section": "parallel_selection_rules > parallel_selection_rules",
        "text": "property Model.parallel_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d.html#create_lookup_table_3d",
        "title": "create_lookup_table_3d",
        "section": "create_lookup_table_3d",
        "text": "Instantiate a 3D Look-Up Table.\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\nhas shape (N, 3), where N is the number of data points (rows)\nis automatically created when the look-up table is instantiated\ncannot be deleted or renamed\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\nLookUpTable3D\nAdded in ACP server version 24.2.\ncreate_lookup_table_3d\nLocation\n(N, 3)\nN\nLocation\nNaN\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d.html#ansys.acp.core.Model.create_lookup_table_3d",
        "title": "create_lookup_table_3d > create_lookup_table_3d > create_lookup_table_3d",
        "section": "create_lookup_table_3d > create_lookup_table_3d",
        "text": "Model.create_lookup_table_3d(*, name='LookUpTable3D', interpolation_algorithm='weighted_nearest_neighbor', use_default_search_radius=True, search_radius=0.0, num_min_neighbors=1)\n\nInstantiate a 3D Look-Up Table.\n\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\n\nhas shape (N, 3), where N is the number of data points (rows)\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\n\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\n\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\n\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\n\nReturn type\n\nLookUpTable3D\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d",
        "href": "api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d.html#examples-using-modelcreate_lookup_table_3d",
        "title": "create_lookup_table_3d > Examples using Model.create_lookup_table_3d",
        "section": "Examples using Model.create_lookup_table_3d",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using Model.create_lookup_table_3d"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.parent.html#ansys.acp.core.VirtualGeometry.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property VirtualGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.html#cutoffgeometryorientationtype",
        "title": "CutOffGeometryOrientationType",
        "section": "CutOffGeometryOrientationType",
        "text": "Determines the orientation of a cut-off geometry.\nCutOffGeometryOrientationType.UP\n\nCutOffGeometryOrientationType.DOWN\n\nCutOffGeometryOrientationType\nCutOffGeometryOrientationType.UP\nCutOffGeometryOrientationType.DOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.html#ansys.acp.core.CutOffGeometryOrientationType",
        "title": "CutOffGeometryOrientationType > CutOffGeometryOrientationType > CutOffGeometryOrientationType",
        "section": "CutOffGeometryOrientationType > CutOffGeometryOrientationType",
        "text": "class ansys.acp.core.CutOffGeometryOrientationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines the orientation of a cut-off geometry.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nCutOffGeometryOrientationType.UP\n\n\n\nCutOffGeometryOrientationType.DOWN\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.html#examples-using-cutoffgeometryorientationtype",
        "title": "CutOffGeometryOrientationType > Examples using CutOffGeometryOrientationType",
        "section": "Examples using CutOffGeometryOrientationType",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using CutOffGeometryOrientationType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.id",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.id",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.id.html#ansys.acp.core.ModelingGroup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ModelingGroup.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels.html#ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ModelingPlyNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType.OUTSIDE_PLY",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.OUTSIDE_PLY.html#outside_ply",
        "title": "OUTSIDE_PLY",
        "section": "OUTSIDE_PLY",
        "text": "OUTSIDE_PLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType.OUTSIDE_PLY",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.OUTSIDE_PLY.html#ansys.acp.core.DropOffType.OUTSIDE_PLY",
        "title": "OUTSIDE_PLY > OUTSIDE_PLY > OUTSIDE_PLY",
        "section": "OUTSIDE_PLY > OUTSIDE_PLY",
        "text": "DropOffType.OUTSIDE_PLY = 'outside_ply'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.html#importedsolidmodel",
        "title": "ImportedSolidModel",
        "section": "ImportedSolidModel",
        "text": "Instantiate an imported solid model.\nname (str) – Name of the imported solid model.\nactive (bool) – Inactive imported solid models are ignored in the analysis.\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\nexternal_path (str | PathLike[str]) – Path of the file to be imported.\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\nAdded in ACP server version 25.1.\nImportedSolidModel.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nImportedSolidModel.create_cut_off_geometry(*)\nInstantiate a cut-off geometry.\nImportedSolidModel.create_layup_mapping_object(*)\nInstantiate a layup mapping object.\nImportedSolidModel.delete()\nDelete the object.\nImportedSolidModel.export(path, *, format)\nExport the solid model to a file.\nImportedSolidModel.export_skin(path, *, format)\nExport the skin of the solid model to a file.\nImportedSolidModel.import_initial_mesh()\nImport the solid mesh and its element sets.\nImportedSolidModel.refresh(path[, format])\nRe-import the solid model from the external file.\nImportedSolidModel.store(parent)\nStore the object on the server.\nImportedSolidModel.active\n\nImportedSolidModel.cut_off_geometries\n\nImportedSolidModel.cut_off_material\n\nImportedSolidModel.delete_bad_elements\n\nImportedSolidModel.elemental_data\n\nImportedSolidModel.export_settings\n\nImportedSolidModel.external_path\n\nImportedSolidModel.format\n\nImportedSolidModel.id\nIdentifier of the object, used for example as key in maps.\nImportedSolidModel.layup_mapping_objects\n\nImportedSolidModel.locked\n\nImportedSolidModel.minimum_volume\n\nImportedSolidModel.name\nThe name of the object.\nImportedSolidModel.nodal_data\n\nImportedSolidModel.parent\nThe parent of the object.\nImportedSolidModel.solid_element_sets\n\nImportedSolidModel.solid_mesh\nSolid mesh associated with the object.\nImportedSolidModel.status\n\nImportedSolidModel.unit_system\n\nImportedSolidModel.warping_limit\n\nImportedSolidModel\ndelete_bad_elements\ndelete_bad_elements\ncut_off_material_handling\nGLOBAL\nImportedSolidModel.clone\nImportedSolidModel.create_cut_off_geometry\nImportedSolidModel.create_layup_mapping_object\nImportedSolidModel.delete\nImportedSolidModel.export\nImportedSolidModel.export_skin\nImportedSolidModel.import_initial_mesh\nImportedSolidModel.refresh\nImportedSolidModel.store\nImportedSolidModel.active\nImportedSolidModel.cut_off_geometries\nImportedSolidModel.cut_off_material\nImportedSolidModel.delete_bad_elements\nImportedSolidModel.elemental_data\nImportedSolidModel.export_settings\nImportedSolidModel.external_path\nImportedSolidModel.format\nImportedSolidModel.id\nImportedSolidModel.layup_mapping_objects\nImportedSolidModel.locked\nImportedSolidModel.minimum_volume\nImportedSolidModel.name\nImportedSolidModel.nodal_data\nImportedSolidModel.parent\nImportedSolidModel.solid_element_sets\nImportedSolidModel.solid_mesh\nImportedSolidModel.status\nImportedSolidModel.unit_system\nImportedSolidModel.warping_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.html#ansys.acp.core.ImportedSolidModel",
        "title": "ImportedSolidModel > ImportedSolidModel > ImportedSolidModel",
        "section": "ImportedSolidModel > ImportedSolidModel",
        "text": "class ansys.acp.core.ImportedSolidModel(*, name='ImportedSolidModel', active=True, format='ansys:cdb', unit_system='from_file', external_path='', delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, cut_off_material=None, export_settings=<ansys.acp.core._tree_objects.imported_solid_model.ImportedSolidModelExportSettings object>)\n\nInstantiate an imported solid model.\n\nParameters\n\nname (str) – Name of the imported solid model.\n\nactive (bool) – Inactive imported solid models are ignored in the analysis.\n\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\n\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\n\nexternal_path (str | PathLike[str]) – Path of the file to be imported.\n\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\n\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nImportedSolidModel.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nImportedSolidModel.create_cut_off_geometry(*)\n\nInstantiate a cut-off geometry.\n\nImportedSolidModel.create_layup_mapping_object(*)\n\nInstantiate a layup mapping object.\n\nImportedSolidModel.delete()\n\nDelete the object.\n\nImportedSolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nImportedSolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nImportedSolidModel.import_initial_mesh()\n\nImport the solid mesh and its element sets.\n\nImportedSolidModel.refresh(path[, format])\n\nRe-import the solid model from the external file.\n\nImportedSolidModel.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedSolidModel.active\n\n\n\nImportedSolidModel.cut_off_geometries\n\n\n\nImportedSolidModel.cut_off_material\n\n\n\nImportedSolidModel.delete_bad_elements\n\n\n\nImportedSolidModel.elemental_data\n\n\n\nImportedSolidModel.export_settings\n\n\n\nImportedSolidModel.external_path\n\n\n\nImportedSolidModel.format\n\n\n\nImportedSolidModel.id\n\nIdentifier of the object, used for example as key in maps.\n\nImportedSolidModel.layup_mapping_objects\n\n\n\nImportedSolidModel.locked\n\n\n\nImportedSolidModel.minimum_volume\n\n\n\nImportedSolidModel.name\n\nThe name of the object.\n\nImportedSolidModel.nodal_data\n\n\n\nImportedSolidModel.parent\n\nThe parent of the object.\n\nImportedSolidModel.solid_element_sets\n\n\n\nImportedSolidModel.solid_mesh\n\nSolid mesh associated with the object.\n\nImportedSolidModel.status\n\n\n\nImportedSolidModel.unit_system\n\n\n\nImportedSolidModel.warping_limit\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.html#examples-using-importedsolidmodel",
        "title": "ImportedSolidModel > Examples using ImportedSolidModel",
        "section": "Examples using ImportedSolidModel",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ImportedSolidModel"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.html#intersectiontype",
        "title": "IntersectionType",
        "section": "IntersectionType",
        "text": "Determines how the intersection is computed for wireframe section cuts.\nIntersectionType.NORMAL_TO_SURFACE\n\nIntersectionType.IN_PLANE\n\nIntersectionType\nIntersectionType.NORMAL_TO_SURFACE\nIntersectionType.IN_PLANE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.html#ansys.acp.core.IntersectionType",
        "title": "IntersectionType > IntersectionType > IntersectionType",
        "section": "IntersectionType > IntersectionType",
        "text": "class ansys.acp.core.IntersectionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the intersection is computed for wireframe section cuts.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nIntersectionType.NORMAL_TO_SURFACE\n\n\n\nIntersectionType.IN_PLANE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.html#cadgeometry",
        "title": "CADGeometry",
        "section": "CADGeometry",
        "text": "Instantiate a CAD Geometry.\nname (str) – Name of the CAD Geometry.\nexternal_path (str) – Path to the CAD file.\nscale_factor (float) – Scale factor applied to the CAD geometry.\nuse_default_precision (bool) – Whether to use the default precision value.\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\nuse_default_offset (bool) – Whether to use the default offset value.\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\nAdded in ACP server version 24.2.\nCADGeometry.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nCADGeometry.delete()\nDelete the object.\nCADGeometry.refresh(path)\nReload the geometry from its external source.\nCADGeometry.store(parent)\nStore the object on the server.\nCADGeometry.external_path\n\nCADGeometry.id\nIdentifier of the object, used for example as key in maps.\nCADGeometry.locked\n\nCADGeometry.name\nThe name of the object.\nCADGeometry.offset\n\nCADGeometry.parent\nThe parent of the object.\nCADGeometry.precision\n\nCADGeometry.root_shapes\n\nCADGeometry.scale_factor\n\nCADGeometry.status\n\nCADGeometry.use_default_offset\n\nCADGeometry.use_default_precision\n\nCADGeometry.visualization_mesh\nSurface mesh for visualization.\nCADGeometry\nCADGeometry.clone\nCADGeometry.delete\nCADGeometry.refresh\nCADGeometry.store\nCADGeometry.external_path\nCADGeometry.id\nCADGeometry.locked\nCADGeometry.name\nCADGeometry.offset\nCADGeometry.parent\nCADGeometry.precision\nCADGeometry.root_shapes\nCADGeometry.scale_factor\nCADGeometry.status\nCADGeometry.use_default_offset\nCADGeometry.use_default_precision\nCADGeometry.visualization_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.html#ansys.acp.core.CADGeometry",
        "title": "CADGeometry > CADGeometry > CADGeometry",
        "section": "CADGeometry > CADGeometry",
        "text": "class ansys.acp.core.CADGeometry(*, name='CADGeometry', external_path='', scale_factor=1.0, use_default_precision=True, precision=0.001, use_default_offset=True, offset=0.0)\n\nInstantiate a CAD Geometry.\n\nParameters\n\nname (str) – Name of the CAD Geometry.\n\nexternal_path (str) – Path to the CAD file.\n\nscale_factor (float) – Scale factor applied to the CAD geometry.\n\nuse_default_precision (bool) – Whether to use the default precision value.\n\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\n\nuse_default_offset (bool) – Whether to use the default offset value.\n\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCADGeometry.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nCADGeometry.delete()\n\nDelete the object.\n\nCADGeometry.refresh(path)\n\nReload the geometry from its external source.\n\nCADGeometry.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCADGeometry.external_path\n\n\n\nCADGeometry.id\n\nIdentifier of the object, used for example as key in maps.\n\nCADGeometry.locked\n\n\n\nCADGeometry.name\n\nThe name of the object.\n\nCADGeometry.offset\n\n\n\nCADGeometry.parent\n\nThe parent of the object.\n\nCADGeometry.precision\n\n\n\nCADGeometry.root_shapes\n\n\n\nCADGeometry.scale_factor\n\n\n\nCADGeometry.status\n\n\n\nCADGeometry.use_default_offset\n\n\n\nCADGeometry.use_default_precision\n\n\n\nCADGeometry.visualization_mesh\n\nSurface mesh for visualization.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.html#examples-using-cadgeometry",
        "title": "CADGeometry > Examples using CADGeometry",
        "section": "Examples using CADGeometry",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using CADGeometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "GeometricalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2.html#fracture_toughness_mode_2",
        "title": "fracture_toughness_mode_2",
        "section": "fracture_toughness_mode_2",
        "text": "fracture_toughness_mode_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2",
        "title": "fracture_toughness_mode_2 > fracture_toughness_mode_2 > fracture_toughness_mode_2",
        "section": "fracture_toughness_mode_2 > fracture_toughness_mode_2",
        "text": "property ConstantLaRCConstants.fracture_toughness_mode_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isprintable",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isprintable.html#isprintable",
        "title": "isprintable",
        "section": "isprintable",
        "text": "Return True if all characters in the string are printable, False otherwise.\nA character is printable if repr() may use it in its output.\nisprintable"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isprintable",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isprintable.html#ansys.acp.core.LaunchMode.isprintable",
        "title": "isprintable > isprintable > isprintable",
        "section": "isprintable > isprintable",
        "text": "LaunchMode.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nA character is printable if repr() may use it in its output.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_precision",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_precision.html#use_default_precision",
        "title": "use_default_precision",
        "section": "use_default_precision",
        "text": "use_default_precision"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_precision",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_precision.html#ansys.acp.core.CADGeometry.use_default_precision",
        "title": "use_default_precision > use_default_precision > use_default_precision",
        "section": "use_default_precision > use_default_precision",
        "text": "property CADGeometry.use_default_precision: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.taper_edge_set",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.taper_edge_set.html#taper_edge_set",
        "title": "taper_edge_set",
        "section": "taper_edge_set",
        "text": "taper_edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.taper_edge_set",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.taper_edge_set.html#ansys.acp.core.CutOffSelectionRule.taper_edge_set",
        "title": "taper_edge_set > taper_edge_set > taper_edge_set",
        "section": "taper_edge_set > taper_edge_set",
        "text": "property CutOffSelectionRule.taper_edge_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz.html#sxz",
        "title": "Sxz",
        "section": "Sxz",
        "text": "Sxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz",
        "title": "Sxz > Sxz > Sxz",
        "section": "Sxz > Sxz",
        "text": "property ConstantWovenStressLimits.Sxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.html#buttjointsequence",
        "title": "ButtJointSequence",
        "section": "ButtJointSequence",
        "text": "Instantiate a ButtJointSequence.\nname (str) – Name of the butt joint sequence.\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\nAdded in ACP server version 25.1.\nButtJointSequence.add_primary_ply(sequence)\nAdd a PrimaryPly to the ButtJointSequence.\nButtJointSequence.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nButtJointSequence.delete()\nDelete the object.\nButtJointSequence.store(parent)\nStore the object on the server.\nButtJointSequence.active\n\nButtJointSequence.global_ply_nr\n\nButtJointSequence.id\nIdentifier of the object, used for example as key in maps.\nButtJointSequence.name\nThe name of the object.\nButtJointSequence.parent\nThe parent of the object.\nButtJointSequence.primary_plies\n\nButtJointSequence.secondary_plies\n\nButtJointSequence.status\n\nButtJointSequence\nButtJointSequence.add_primary_ply\nButtJointSequence.clone\nButtJointSequence.delete\nButtJointSequence.store\nButtJointSequence.active\nButtJointSequence.global_ply_nr\nButtJointSequence.id\nButtJointSequence.name\nButtJointSequence.parent\nButtJointSequence.primary_plies\nButtJointSequence.secondary_plies\nButtJointSequence.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.html#ansys.acp.core.ButtJointSequence",
        "title": "ButtJointSequence > ButtJointSequence > ButtJointSequence",
        "section": "ButtJointSequence > ButtJointSequence",
        "text": "class ansys.acp.core.ButtJointSequence(*, name='ButtJointSequence', active=True, global_ply_nr=0, primary_plies=(), secondary_plies=())\n\nInstantiate a ButtJointSequence.\n\nParameters\n\nname (str) – Name of the butt joint sequence.\n\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\n\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nButtJointSequence.add_primary_ply(sequence)\n\nAdd a PrimaryPly to the ButtJointSequence.\n\nButtJointSequence.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nButtJointSequence.delete()\n\nDelete the object.\n\nButtJointSequence.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nButtJointSequence.active\n\n\n\nButtJointSequence.global_ply_nr\n\n\n\nButtJointSequence.id\n\nIdentifier of the object, used for example as key in maps.\n\nButtJointSequence.name\n\nThe name of the object.\n\nButtJointSequence.parent\n\nThe parent of the object.\n\nButtJointSequence.primary_plies\n\n\n\nButtJointSequence.secondary_plies\n\n\n\nButtJointSequence.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.delete.html#ansys.acp.core.ParallelSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ParallelSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.mesh.html#ansys.acp.core.SphericalSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property SphericalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz.html#sxz",
        "title": "Sxz",
        "section": "Sxz",
        "text": "Sxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz",
        "title": "Sxz > Sxz > Sxz",
        "section": "Sxz > Sxz",
        "text": "property ConstantStressLimits.Sxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZc.html#ezc",
        "title": "eZc",
        "section": "eZc",
        "text": "eZc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZc.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eZc",
        "title": "eZc > eZc > eZc",
        "section": "eZc > eZc",
        "text": "property VariableStrainLimits.eZc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.html#modelelementaldata",
        "title": "ModelElementalData",
        "section": "ModelElementalData",
        "text": "Represents elemental data for a Model.\nModelElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nModelElementalData.area\n\nModelElementalData.cog\n\nModelElementalData.mass\n\nModelElementalData.normal\n\nModelElementalData.offset\n\nModelElementalData.relative_thickness_correction\n\nModelElementalData.thickness\n\nModelElementalData.volume\n\nModelElementalData.element_labels\n\nModelElementalData\nModelElementalData.get_pyvista_mesh\nModelElementalData.area\nModelElementalData.cog\nModelElementalData.mass\nModelElementalData.normal\nModelElementalData.offset\nModelElementalData.relative_thickness_correction\nModelElementalData.thickness\nModelElementalData.volume\nModelElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.html#ansys.acp.core.mesh_data.ModelElementalData",
        "title": "ModelElementalData > ModelElementalData > ModelElementalData",
        "section": "ModelElementalData > ModelElementalData",
        "text": "class ansys.acp.core.mesh_data.ModelElementalData(element_labels, normal=None, thickness=None, relative_thickness_correction=None, area=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelElementalData.area\n\n\n\nModelElementalData.cog\n\n\n\nModelElementalData.mass\n\n\n\nModelElementalData.normal\n\n\n\nModelElementalData.offset\n\n\n\nModelElementalData.relative_thickness_correction\n\n\n\nModelElementalData.thickness\n\n\n\nModelElementalData.volume\n\n\n\nModelElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data.html#ansys.acp.core.OrientedSelectionSet.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property OrientedSelectionSet.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data.html#examples-using-orientedselectionsetelemental_data",
        "title": "elemental_data > Examples using OrientedSelectionSet.elemental_data",
        "section": "Examples using OrientedSelectionSet.elemental_data",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using OrientedSelectionSet.elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.direction",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.direction",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.direction.html#ansys.acp.core.LookUpTable1D.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property LookUpTable1D.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.origin",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.origin",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.origin.html#ansys.acp.core.SectionCut.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property SectionCut.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.tolerance",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.tolerance.html#tolerance",
        "title": "tolerance",
        "section": "tolerance",
        "text": "tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.tolerance",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.tolerance.html#ansys.acp.core.SectionCut.tolerance",
        "title": "tolerance > tolerance > tolerance",
        "section": "tolerance > tolerance",
        "text": "property SectionCut.tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.auto_draping_direction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.auto_draping_direction.html#auto_draping_direction",
        "title": "auto_draping_direction",
        "section": "auto_draping_direction",
        "text": "auto_draping_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.auto_draping_direction",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.auto_draping_direction.html#ansys.acp.core.ModelingPly.auto_draping_direction",
        "title": "auto_draping_direction > auto_draping_direction > auto_draping_direction",
        "section": "auto_draping_direction > auto_draping_direction",
        "text": "property ModelingPly.auto_draping_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.html#plygeometryexportformat",
        "title": "PlyGeometryExportFormat",
        "section": "PlyGeometryExportFormat",
        "text": "Options for the file format of the ply geometry export.\nPlyGeometryExportFormat.STEP\n\nPlyGeometryExportFormat.IGES\n\nPlyGeometryExportFormat.STL\n\nPlyGeometryExportFormat\nPlyGeometryExportFormat.STEP\nPlyGeometryExportFormat.IGES\nPlyGeometryExportFormat.STL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.html#ansys.acp.core.PlyGeometryExportFormat",
        "title": "PlyGeometryExportFormat > PlyGeometryExportFormat > PlyGeometryExportFormat",
        "section": "PlyGeometryExportFormat > PlyGeometryExportFormat",
        "text": "class ansys.acp.core.PlyGeometryExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the file format of the ply geometry export.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPlyGeometryExportFormat.STEP\n\n\n\nPlyGeometryExportFormat.IGES\n\n\n\nPlyGeometryExportFormat.STL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.analysis_plies.html#analysis_plies",
        "title": "analysis_plies",
        "section": "analysis_plies",
        "text": "analysis_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.analysis_plies",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.analysis_plies.html#ansys.acp.core.ProductionPly.analysis_plies",
        "title": "analysis_plies > analysis_plies > analysis_plies",
        "section": "analysis_plies > analysis_plies",
        "text": "property ProductionPly.analysis_plies: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog.html#cog",
        "title": "cog",
        "section": "cog",
        "text": "cog"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog",
        "title": "cog > cog > cog",
        "section": "cog > cog",
        "text": "AnalysisPlyElementalData.cog: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions",
        "href": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions.html#export_shell_composite_definitions",
        "title": "export_shell_composite_definitions",
        "section": "export_shell_composite_definitions",
        "text": "Export the lay-up of the shell as HDF5 used by DPF Composites or Mechanical.\npath (str | PathLike[str]) – File path. Eg. /tmp/ACPCompositeDefinitions.h5\nexport_shell_composite_definitions"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions",
        "href": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions.html#ansys.acp.core.Model.export_shell_composite_definitions",
        "title": "export_shell_composite_definitions > export_shell_composite_definitions > export_shell_composite_definitions",
        "section": "export_shell_composite_definitions > export_shell_composite_definitions",
        "text": "Model.export_shell_composite_definitions(path)\n\nExport the lay-up of the shell as HDF5 used by DPF Composites or Mechanical.\n\nParameters\n\npath (str | PathLike[str]) – File path. Eg. /tmp/ACPCompositeDefinitions.h5\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions",
        "href": "api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions.html#examples-using-modelexport_shell_composite_definitions",
        "title": "export_shell_composite_definitions > Examples using Model.export_shell_composite_definitions",
        "section": "Examples using Model.export_shell_composite_definitions",
        "text": "sphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.export_shell_composite_definitions"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.status",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.status",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.status.html#ansys.acp.core.FieldDefinition.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property FieldDefinition.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ModelingPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.offset",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "Move the cutting plane along the out-of-plane direction.\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle).\noffset\n-offset/tan(angle)"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.offset",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.offset.html#ansys.acp.core.TaperEdge.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "property TaperEdge.offset: float\n\nMove the cutting plane along the out-of-plane direction.\n\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object.html#create_layup_mapping_object",
        "title": "create_layup_mapping_object",
        "section": "create_layup_mapping_object",
        "text": "Instantiate a layup mapping object.\nname (str) – Name of the layup mapping object.\nactive (bool) – Inactive layup mapping objects are not used.\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\nDetermines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.\nIf use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\nDetermines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.\nIf use_imported_plies is False, modeling groups and modeling\nplies are allowed\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\nLayupMappingObject\nAdded in ACP server version 25.1.\ncreate_layup_mapping_object\n\"layered_element\"\n\"reinforcing\"\nuse_imported_plies\nsequences\nuse_imported_plies\nselect_all_plies\nuse_imported_plies\nselect_all_plies\nuse_imported_plies\nuse_imported_plies\nsolid_element_sets\nelement_technology\n\"layered_element\"\nscale_ply_thicknesses\nelement_technology\n\"layered_element\"\nscale_ply_thicknesses\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\ndelete_lost_elements\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\nelement_technology\n\"reinforcing\"\n\"remove\"\n\"retain\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object.html#ansys.acp.core.ImportedSolidModel.create_layup_mapping_object",
        "title": "create_layup_mapping_object > create_layup_mapping_object > create_layup_mapping_object",
        "section": "create_layup_mapping_object > create_layup_mapping_object",
        "text": "ImportedSolidModel.create_layup_mapping_object(*, name='LayupMappingObject', active=True, element_technology='layered_element', shell_element_sets=(), use_imported_plies=False, select_all_plies=True, sequences=(), entire_solid_mesh=True, solid_element_sets=(), scale_ply_thicknesses=True, void_material=None, minimum_void_material_thickness=1e-06, delete_lost_elements=True, filler_material=None, rosettes=(), rosette_selection_method='minimum_distance', reinforcing_behavior='tension_and_compression', base_element_material_handling='remove', stress_state='plane_stress_state_with_transverse_shear_and_bending_stiffness', base_material=None, base_element_rosettes=(), base_element_rosette_selection_method='minimum_distance')\n\nInstantiate a layup mapping object.\n\nParameters\n\nname (str) – Name of the layup mapping object.\n\nactive (bool) – Inactive layup mapping objects are not used.\n\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\n\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\n\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\n\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\n\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\n\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\n\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\n\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\n\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\n\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\n\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\n\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\n\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\n\nReturn type\n\nLayupMappingObject\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object.html#examples-using-importedsolidmodelcreate_layup_mapping_object",
        "title": "create_layup_mapping_object > Examples using ImportedSolidModel.create_layup_mapping_object",
        "section": "Examples using ImportedSolidModel.create_layup_mapping_object",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ImportedSolidModel.create_layup_mapping_object"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.html#orientedselectionset",
        "title": "OrientedSelectionSet",
        "section": "OrientedSelectionSet",
        "text": "Instantiate an Oriented Selection Set.\nname (str) – The name of the Oriented Selection Set.\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\ndraping (bool) – If True, activate draping to adjust the reference directions.\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\nAdded in ACP server version 24.2.\nOrientedSelectionSet.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nOrientedSelectionSet.delete()\nDelete the object.\nOrientedSelectionSet.store(parent)\nStore the object on the server.\nOrientedSelectionSet.auto_draping_direction\n\nOrientedSelectionSet.draping\n\nOrientedSelectionSet.draping_direction\n\nOrientedSelectionSet.draping_material_model\n\nOrientedSelectionSet.draping_mesh_size\n\nOrientedSelectionSet.draping_seed_point\n\nOrientedSelectionSet.draping_ud_coefficient\n\nOrientedSelectionSet.element_sets\n\nOrientedSelectionSet.elemental_data\n\nOrientedSelectionSet.id\nIdentifier of the object, used for example as key in maps.\nOrientedSelectionSet.mesh\nFull mesh associated with the object.\nOrientedSelectionSet.name\nThe name of the object.\nOrientedSelectionSet.nodal_data\n\nOrientedSelectionSet.orientation_direction\n\nOrientedSelectionSet.orientation_point\n\nOrientedSelectionSet.parent\nThe parent of the object.\nOrientedSelectionSet.reference_direction_field\n\nOrientedSelectionSet.rosette_selection_method\n\nOrientedSelectionSet.rosettes\n\nOrientedSelectionSet.rotation_angle\n\nOrientedSelectionSet.selection_rules\n\nOrientedSelectionSet.shell_mesh\nShell mesh associated with the object.\nOrientedSelectionSet.status\n\nOrientedSelectionSet.use_default_draping_mesh_size\n\nOrientedSelectionSet\nTrue\nTrue\nauto_draping_direction\nFalse\n-1.\n0\n1\nDrapingMaterialModel.UD\nOrientedSelectionSet.clone\nOrientedSelectionSet.delete\nOrientedSelectionSet.store\nOrientedSelectionSet.auto_draping_direction\nOrientedSelectionSet.draping\nOrientedSelectionSet.draping_direction\nOrientedSelectionSet.draping_material_model\nOrientedSelectionSet.draping_mesh_size\nOrientedSelectionSet.draping_seed_point\nOrientedSelectionSet.draping_ud_coefficient\nOrientedSelectionSet.element_sets\nOrientedSelectionSet.elemental_data\nOrientedSelectionSet.id\nOrientedSelectionSet.mesh\nOrientedSelectionSet.name\nOrientedSelectionSet.nodal_data\nOrientedSelectionSet.orientation_direction\nOrientedSelectionSet.orientation_point\nOrientedSelectionSet.parent\nOrientedSelectionSet.reference_direction_field\nOrientedSelectionSet.rosette_selection_method\nOrientedSelectionSet.rosettes\nOrientedSelectionSet.rotation_angle\nOrientedSelectionSet.selection_rules\nOrientedSelectionSet.shell_mesh\nOrientedSelectionSet.status\nOrientedSelectionSet.use_default_draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.html#ansys.acp.core.OrientedSelectionSet",
        "title": "OrientedSelectionSet > OrientedSelectionSet > OrientedSelectionSet",
        "section": "OrientedSelectionSet > OrientedSelectionSet",
        "text": "class ansys.acp.core.OrientedSelectionSet(*, name='OrientedSelectionSet', element_sets=(), orientation_point=(0.0, 0.0, 0.0), orientation_direction=(0.0, 0.0, 0.0), rosettes=(), rosette_selection_method='minimum_angle', selection_rules=(), draping=False, draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(0.0, 0.0, 1.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_material_model='woven', draping_ud_coefficient=0.0, rotation_angle=0.0, reference_direction_field=None)\n\nInstantiate an Oriented Selection Set.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\n\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\n\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\n\ndraping (bool) – If True, activate draping to adjust the reference directions.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\n\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nOrientedSelectionSet.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nOrientedSelectionSet.delete()\n\nDelete the object.\n\nOrientedSelectionSet.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nOrientedSelectionSet.auto_draping_direction\n\n\n\nOrientedSelectionSet.draping\n\n\n\nOrientedSelectionSet.draping_direction\n\n\n\nOrientedSelectionSet.draping_material_model\n\n\n\nOrientedSelectionSet.draping_mesh_size\n\n\n\nOrientedSelectionSet.draping_seed_point\n\n\n\nOrientedSelectionSet.draping_ud_coefficient\n\n\n\nOrientedSelectionSet.element_sets\n\n\n\nOrientedSelectionSet.elemental_data\n\n\n\nOrientedSelectionSet.id\n\nIdentifier of the object, used for example as key in maps.\n\nOrientedSelectionSet.mesh\n\nFull mesh associated with the object.\n\nOrientedSelectionSet.name\n\nThe name of the object.\n\nOrientedSelectionSet.nodal_data\n\n\n\nOrientedSelectionSet.orientation_direction\n\n\n\nOrientedSelectionSet.orientation_point\n\n\n\nOrientedSelectionSet.parent\n\nThe parent of the object.\n\nOrientedSelectionSet.reference_direction_field\n\n\n\nOrientedSelectionSet.rosette_selection_method\n\n\n\nOrientedSelectionSet.rosettes\n\n\n\nOrientedSelectionSet.rotation_angle\n\n\n\nOrientedSelectionSet.selection_rules\n\n\n\nOrientedSelectionSet.shell_mesh\n\nShell mesh associated with the object.\n\nOrientedSelectionSet.status\n\n\n\nOrientedSelectionSet.use_default_draping_mesh_size\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.html#examples-using-orientedselectionset",
        "title": "OrientedSelectionSet > Examples using OrientedSelectionSet",
        "section": "Examples using OrientedSelectionSet",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using OrientedSelectionSet"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.delete",
        "href": "api/_autosummary/ansys.acp.core.Sensor.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.delete",
        "href": "api/_autosummary/ansys.acp.core.Sensor.delete.html#ansys.acp.core.Sensor.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Sensor.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.delete",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.delete",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.delete.html#ansys.acp.core.ModelingGroup.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ModelingGroup.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.name",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.name",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.name.html#ansys.acp.core.ModelingPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ModelingPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_top",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_top.html#disable_drop_offs_on_top",
        "title": "disable_drop_offs_on_top",
        "section": "disable_drop_offs_on_top",
        "text": "disable_drop_offs_on_top"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_top",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_top.html#ansys.acp.core.DropOffSettings.disable_drop_offs_on_top",
        "title": "disable_drop_offs_on_top > disable_drop_offs_on_top > disable_drop_offs_on_top",
        "section": "disable_drop_offs_on_top > disable_drop_offs_on_top",
        "text": "property DropOffSettings.disable_drop_offs_on_top: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.active_in_post_mode",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.active_in_post_mode.html#active_in_post_mode",
        "title": "active_in_post_mode",
        "section": "active_in_post_mode",
        "text": "active_in_post_mode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.active_in_post_mode",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.active_in_post_mode.html#ansys.acp.core.AnalysisPly.active_in_post_mode",
        "title": "active_in_post_mode > active_in_post_mode > active_in_post_mode",
        "section": "active_in_post_mode > active_in_post_mode",
        "text": "property AnalysisPly.active_in_post_mode: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.html#parallelselectionruleelementaldata",
        "title": "ParallelSelectionRuleElementalData",
        "section": "ParallelSelectionRuleElementalData",
        "text": "Represents elemental data for a Parallel Selection Rule.\nParallelSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nParallelSelectionRuleElementalData.normal\n\nParallelSelectionRuleElementalData.element_labels\n\nParallelSelectionRuleElementalData\nParallelSelectionRuleElementalData.get_pyvista_mesh\nParallelSelectionRuleElementalData.normal\nParallelSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.html#ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData",
        "title": "ParallelSelectionRuleElementalData > ParallelSelectionRuleElementalData > ParallelSelectionRuleElementalData",
        "section": "ParallelSelectionRuleElementalData > ParallelSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Parallel Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nParallelSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nParallelSelectionRuleElementalData.normal\n\n\n\nParallelSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh.html#visualization_mesh",
        "title": "visualization_mesh",
        "section": "visualization_mesh",
        "text": "Surface mesh for visualization.\nThe CAD Geometry’s surface represented as a triangle mesh.\nvisualization_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh.html#ansys.acp.core.CADGeometry.visualization_mesh",
        "title": "visualization_mesh > visualization_mesh > visualization_mesh",
        "section": "visualization_mesh > visualization_mesh",
        "text": "property CADGeometry.visualization_mesh: TriangleMesh\n\nSurface mesh for visualization.\n\nThe CAD Geometry’s surface represented as a triangle mesh.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh.html#examples-using-cadgeometryvisualization_mesh",
        "title": "visualization_mesh > Examples using CADGeometry.visualization_mesh",
        "section": "Examples using CADGeometry.visualization_mesh",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using CADGeometry.visualization_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_x",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_x.html#rotation_angle_x",
        "title": "rotation_angle_x",
        "section": "rotation_angle_x",
        "text": "rotation_angle_x"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_x",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_x.html#ansys.acp.core.CoordinateTransformation.rotation_angle_x",
        "title": "rotation_angle_x > rotation_angle_x > rotation_angle_x",
        "section": "rotation_angle_x > rotation_angle_x",
        "text": "CoordinateTransformation.rotation_angle_x: float = 0.0\n\n"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#imported-solid-model",
        "title": "Imported solid model",
        "section": "Imported solid model",
        "text": "This example guides you through the definition of an ImportedSolidModel\nwhich allows to map the layup onto an external solid mesh.\nIn contrast to the SolidModel, the raw solid mesh of\nImportedSolidModel is loaded from an external source, such as a CDB file.\nIn this example, the layup is applied onto a t-joint which consists of different\nparts such as shell, stringer, and bonding skins.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nThis example starts from an ACP model with layup. It shows how to:\nCreate an ImportedSolidModel from an external mesh.\nDefine the LayupMappingObject to apply the layup onto the solid mesh.\nScope plies to specific parts of the solid mesh.\nVisualize the mapped layup.\nIt is recommended to look at the Ansys help for all the details. This example shows the\nbasic setup only.\nImport the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImported solid model\nImportedSolidModel\nSolidModel\nImportedSolidModel\nImportedSolidModel\nLayupMappingObject"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#start-acp-and-load-the-model",
        "title": "Imported solid model > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "%%\nGet the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from an acph5 file\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#import-external-solid-model",
        "title": "Imported solid model > Import external solid model",
        "section": "Import external solid model",
        "text": "Get the solid mesh file and create an ImportedSolidModel,\nload the initial mesh and show the raw mesh without any mapping.\nThe solid element sets are used as target for the mapping later.\nHere is the full list and one is visualized.\nImport external solid model"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#add-mapping-objects",
        "title": "Imported solid model > Add mapping objects",
        "section": "Add mapping objects",
        "text": "Link the layup (plies) of the top skin of the sandwich\nwith the corresponding named selections of the solid mesh\nand show the updated solid model.\nShow the mass of the solid model elements\nAdd other mapping objects\nShow intermediate result\nThe mapping can also be done for specific plies\nas shown for the core materials.\nAdd filler mapping objects where the solid mesh is “filled”\nwith a single material. No plies from the layup are used here.\nShow final solid mesh with mapped layup\nAdd mapping objects"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#show-extent-and-thickness-of-mapped-plies",
        "title": "Imported solid model > Show extent and thickness of mapped plies",
        "section": "Show extent and thickness of mapped plies",
        "text": "Use print_model() to get the list of plies. After identifying the ply\nof interest, for example the thickness can be visualized. Note that\nonly ply-wise data of AnalysisPly can be visualized on the\nsolid mesh. ProductionPly and ModelingPly cannot\nbe visualized on the solid mesh.\nShow extent and thickness of mapped plies\nprint_model()\nAnalysisPly\nProductionPly\nModelingPly"
    },
    {
        "objectID": "examples/modeling_features/031-imported-solid-model",
        "href": "examples/modeling_features/031-imported-solid-model.html#other-features",
        "title": "Imported solid model > Other features",
        "section": "Other features",
        "text": "The CutOffGeometry can be used in combination witt the ImportedSolidModel\nas well. See example solid_model_example for more details.\nMore plotting capabilities are shown in the example solid_model_example as well.\nAn example of an ImportedSolidModel in combination with ImportedModelingPly\nis shown in imported_plies_example.\nThe solid mesh can be exported as CDB for MAPDL or to PyMechanical for further analysis.\nThese workflows are shown in pymapdl_workflow_example and\npymechanical_solid_example.\nTotal running time of the script: (0 minutes 18.759 seconds)\nDownload Jupyter notebook: 031-imported-solid-model.ipynb\nDownload Python source code: 031-imported-solid-model.py\nDownload zipped: 031-imported-solid-model.zip\nGallery generated by Sphinx-Gallery\nOther features\nCutOffGeometry\nImportedSolidModel\nImportedSolidModel\nImportedModelingPly\nDownload Jupyter notebook: 031-imported-solid-model.ipynb\nDownload Python source code: 031-imported-solid-model.py\nDownload zipped: 031-imported-solid-model.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head_extension.html#head_extension",
        "title": "head_extension",
        "section": "head_extension",
        "text": "head_extension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head_extension.html#ansys.acp.core.TubeSelectionRule.head_extension",
        "title": "head_extension > head_extension > head_extension",
        "section": "head_extension > head_extension",
        "text": "property TubeSelectionRule.head_extension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.elemental_data.html#ansys.acp.core.TubeSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property TubeSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sampling_points",
        "href": "api/_autosummary/ansys.acp.core.Model.sampling_points.html#sampling_points",
        "title": "sampling_points",
        "section": "sampling_points",
        "text": "sampling_points"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sampling_points",
        "href": "api/_autosummary/ansys.acp.core.Model.sampling_points.html#ansys.acp.core.Model.sampling_points",
        "title": "sampling_points > sampling_points > sampling_points",
        "section": "sampling_points > sampling_points",
        "text": "property Model.sampling_points: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.elemental_data.html#ansys.acp.core.BooleanSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property BooleanSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.clone",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.clone",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.clone.html#ansys.acp.core.InterfaceLayer.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "InterfaceLayer.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.html#cylindricalselectionrule",
        "title": "CylindricalSelectionRule",
        "section": "CylindricalSelectionRule",
        "text": "Instantiate a Cylindrical Selection Rule.\nname (str) – Name of the Cylindrical Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\nradius (float) – Radius of the cylinder.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nAdded in ACP server version 24.2.\nCylindricalSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nCylindricalSelectionRule.delete()\nDelete the object.\nCylindricalSelectionRule.store(parent)\nStore the object on the server.\nCylindricalSelectionRule.direction\n\nCylindricalSelectionRule.elemental_data\n\nCylindricalSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nCylindricalSelectionRule.include_rule\n\nCylindricalSelectionRule.mesh\nFull mesh associated with the object.\nCylindricalSelectionRule.name\nThe name of the object.\nCylindricalSelectionRule.nodal_data\n\nCylindricalSelectionRule.origin\n\nCylindricalSelectionRule.parent\nThe parent of the object.\nCylindricalSelectionRule.radius\n\nCylindricalSelectionRule.relative_rule\n\nCylindricalSelectionRule.rosette\n\nCylindricalSelectionRule.shell_mesh\nShell mesh associated with the object.\nCylindricalSelectionRule.status\n\nCylindricalSelectionRule.use_global_coordinate_system\n\nCylindricalSelectionRule\nuse_global_coordinate_system\nFalse\nCylindricalSelectionRule.clone\nCylindricalSelectionRule.delete\nCylindricalSelectionRule.store\nCylindricalSelectionRule.direction\nCylindricalSelectionRule.elemental_data\nCylindricalSelectionRule.id\nCylindricalSelectionRule.include_rule\nCylindricalSelectionRule.mesh\nCylindricalSelectionRule.name\nCylindricalSelectionRule.nodal_data\nCylindricalSelectionRule.origin\nCylindricalSelectionRule.parent\nCylindricalSelectionRule.radius\nCylindricalSelectionRule.relative_rule\nCylindricalSelectionRule.rosette\nCylindricalSelectionRule.shell_mesh\nCylindricalSelectionRule.status\nCylindricalSelectionRule.use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.html#ansys.acp.core.CylindricalSelectionRule",
        "title": "CylindricalSelectionRule > CylindricalSelectionRule > CylindricalSelectionRule",
        "section": "CylindricalSelectionRule > CylindricalSelectionRule",
        "text": "class ansys.acp.core.CylindricalSelectionRule(*, name='CylindricalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 1.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Cylindrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Cylindrical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\n\nradius (float) – Radius of the cylinder.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCylindricalSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nCylindricalSelectionRule.delete()\n\nDelete the object.\n\nCylindricalSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCylindricalSelectionRule.direction\n\n\n\nCylindricalSelectionRule.elemental_data\n\n\n\nCylindricalSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nCylindricalSelectionRule.include_rule\n\n\n\nCylindricalSelectionRule.mesh\n\nFull mesh associated with the object.\n\nCylindricalSelectionRule.name\n\nThe name of the object.\n\nCylindricalSelectionRule.nodal_data\n\n\n\nCylindricalSelectionRule.origin\n\n\n\nCylindricalSelectionRule.parent\n\nThe parent of the object.\n\nCylindricalSelectionRule.radius\n\n\n\nCylindricalSelectionRule.relative_rule\n\n\n\nCylindricalSelectionRule.rosette\n\n\n\nCylindricalSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nCylindricalSelectionRule.status\n\n\n\nCylindricalSelectionRule.use_global_coordinate_system\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.html#examples-using-cylindricalselectionrule",
        "title": "CylindricalSelectionRule > Examples using CylindricalSelectionRule",
        "section": "Examples using CylindricalSelectionRule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using CylindricalSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.istitle",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.istitle.html#istitle",
        "title": "istitle",
        "section": "istitle",
        "text": "Return True if the string is a title-cased string, False otherwise.\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.\nistitle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.istitle",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.istitle.html#ansys.acp.core.LaunchMode.istitle",
        "title": "istitle > istitle > istitle",
        "section": "istitle > istitle",
        "text": "LaunchMode.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION.html#by_direction",
        "title": "BY_DIRECTION",
        "section": "BY_DIRECTION",
        "text": "BY_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION.html#ansys.acp.core.ExtrusionGuideType.BY_DIRECTION",
        "title": "BY_DIRECTION > BY_DIRECTION > BY_DIRECTION",
        "section": "BY_DIRECTION > BY_DIRECTION",
        "text": "ExtrusionGuideType.BY_DIRECTION = 'by_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION.html#examples-using-extrusionguidetypeby_direction",
        "title": "BY_DIRECTION > Examples using ExtrusionGuideType.BY_DIRECTION",
        "section": "Examples using ExtrusionGuideType.BY_DIRECTION",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using ExtrusionGuideType.BY_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.delete",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.delete",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.delete.html#ansys.acp.core.SectionCut.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SectionCut.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.active",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.active",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.active.html#ansys.acp.core.SectionCut.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property SectionCut.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom.html#disable_drop_offs_on_bottom",
        "title": "disable_drop_offs_on_bottom",
        "section": "disable_drop_offs_on_bottom",
        "text": "disable_drop_offs_on_bottom"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom.html#ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom",
        "title": "disable_drop_offs_on_bottom > disable_drop_offs_on_bottom > disable_drop_offs_on_bottom",
        "section": "disable_drop_offs_on_bottom > disable_drop_offs_on_bottom",
        "text": "property DropOffSettings.disable_drop_offs_on_bottom: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.html#elementaldatatype",
        "title": "ElementalDataType",
        "section": "ElementalDataType",
        "text": "Options for the type of per-element data.\nElementalDataType.COORDINATES\n\nElementalDataType.NORMAL\n\nElementalDataType.ORIENTATION\n\nElementalDataType.REFERENCE_DIRECTION\n\nElementalDataType.FIBER_DIRECTION\n\nElementalDataType.DRAPED_FIBER_DIRECTION\n\nElementalDataType.TRANSVERSE_DIRECTION\n\nElementalDataType.DRAPED_TRANSVERSE_DIRECTION\n\nElementalDataType.THICKNESS\n\nElementalDataType.RELATIVE_THICKNESS_CORRECTION\n\nElementalDataType.DESIGN_ANGLE\n\nElementalDataType.SHEAR_ANGLE\n\nElementalDataType.DRAPED_FIBER_ANGLE\n\nElementalDataType.DRAPED_TRANSVERSE_ANGLE\n\nElementalDataType.AREA\n\nElementalDataType.PRICE\n\nElementalDataType.VOLUME\n\nElementalDataType.MASS\n\nElementalDataType.OFFSET\n\nElementalDataType.MATERIAL_1_DIRECTION\n\nElementalDataType.COG\n\nElementalDataType\nElementalDataType.COORDINATES\nElementalDataType.NORMAL\nElementalDataType.ORIENTATION\nElementalDataType.REFERENCE_DIRECTION\nElementalDataType.FIBER_DIRECTION\nElementalDataType.DRAPED_FIBER_DIRECTION\nElementalDataType.TRANSVERSE_DIRECTION\nElementalDataType.DRAPED_TRANSVERSE_DIRECTION\nElementalDataType.THICKNESS\nElementalDataType.RELATIVE_THICKNESS_CORRECTION\nElementalDataType.DESIGN_ANGLE\nElementalDataType.SHEAR_ANGLE\nElementalDataType.DRAPED_FIBER_ANGLE\nElementalDataType.DRAPED_TRANSVERSE_ANGLE\nElementalDataType.AREA\nElementalDataType.PRICE\nElementalDataType.VOLUME\nElementalDataType.MASS\nElementalDataType.OFFSET\nElementalDataType.MATERIAL_1_DIRECTION\nElementalDataType.COG"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.html#ansys.acp.core.ElementalDataType",
        "title": "ElementalDataType > ElementalDataType > ElementalDataType",
        "section": "ElementalDataType > ElementalDataType",
        "text": "class ansys.acp.core.ElementalDataType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of per-element data.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nElementalDataType.COORDINATES\n\n\n\nElementalDataType.NORMAL\n\n\n\nElementalDataType.ORIENTATION\n\n\n\nElementalDataType.REFERENCE_DIRECTION\n\n\n\nElementalDataType.FIBER_DIRECTION\n\n\n\nElementalDataType.DRAPED_FIBER_DIRECTION\n\n\n\nElementalDataType.TRANSVERSE_DIRECTION\n\n\n\nElementalDataType.DRAPED_TRANSVERSE_DIRECTION\n\n\n\nElementalDataType.THICKNESS\n\n\n\nElementalDataType.RELATIVE_THICKNESS_CORRECTION\n\n\n\nElementalDataType.DESIGN_ANGLE\n\n\n\nElementalDataType.SHEAR_ANGLE\n\n\n\nElementalDataType.DRAPED_FIBER_ANGLE\n\n\n\nElementalDataType.DRAPED_TRANSVERSE_ANGLE\n\n\n\nElementalDataType.AREA\n\n\n\nElementalDataType.PRICE\n\n\n\nElementalDataType.VOLUME\n\n\n\nElementalDataType.MASS\n\n\n\nElementalDataType.OFFSET\n\n\n\nElementalDataType.MATERIAL_1_DIRECTION\n\n\n\nElementalDataType.COG\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction.html#reference_direction",
        "title": "reference_direction",
        "section": "reference_direction",
        "text": "reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction",
        "title": "reference_direction > reference_direction > reference_direction",
        "section": "reference_direction > reference_direction",
        "text": "ProductionPlyElementalData.reference_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.nodal_data.html#ansys.acp.core.TubeSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property TubeSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.THICKNESS",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.THICKNESS.html#thickness",
        "title": "THICKNESS",
        "section": "THICKNESS",
        "text": "THICKNESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.THICKNESS",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.THICKNESS.html#ansys.acp.core.ElementalDataType.THICKNESS",
        "title": "THICKNESS > THICKNESS > THICKNESS",
        "section": "THICKNESS > THICKNESS",
        "text": "ElementalDataType.THICKNESS = 'thickness'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TV",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TV.html#tv",
        "title": "TV",
        "section": "TV",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nTV\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TV",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TV.html#ansys.acp.core._tree_objects.material.property_sets.wrapper.TV",
        "title": "TV > TV > TV",
        "section": "TV > TV",
        "text": "ansys.acp.core._tree_objects.material.property_sets.wrapper.TV = ~TV\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index.html#use_default_coordinate_system_index",
        "title": "use_default_coordinate_system_index",
        "section": "use_default_coordinate_system_index",
        "text": "use_default_coordinate_system_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index.html#ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index",
        "title": "use_default_coordinate_system_index > use_default_coordinate_system_index > use_default_coordinate_system_index",
        "section": "use_default_coordinate_system_index > use_default_coordinate_system_index",
        "text": "property ImportedSolidModelExportSettings.use_default_coordinate_system_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.upper",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.upper.html#upper",
        "title": "upper",
        "section": "upper",
        "text": "Return a copy of the string converted to uppercase.\nupper"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.upper",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.upper.html#ansys.acp.core.LaunchMode.upper",
        "title": "upper > upper > upper",
        "section": "upper > upper",
        "text": "LaunchMode.upper(/)\n\nReturn a copy of the string converted to uppercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.OFFSET.html#offset",
        "title": "OFFSET",
        "section": "OFFSET",
        "text": "OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.OFFSET.html#ansys.acp.core.ElementalDataType.OFFSET",
        "title": "OFFSET > OFFSET > OFFSET",
        "section": "OFFSET > OFFSET",
        "text": "ElementalDataType.OFFSET = 'offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.html#solidelementsetelementaldata",
        "title": "SolidElementSetElementalData",
        "section": "SolidElementSetElementalData",
        "text": "Represents elemental data for a Solid Element Set.\nSolidElementSetElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSolidElementSetElementalData.element_labels\n\nSolidElementSetElementalData\nSolidElementSetElementalData.get_pyvista_mesh\nSolidElementSetElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.html#ansys.acp.core.mesh_data.SolidElementSetElementalData",
        "title": "SolidElementSetElementalData > SolidElementSetElementalData > SolidElementSetElementalData",
        "section": "SolidElementSetElementalData > SolidElementSetElementalData",
        "text": "class ansys.acp.core.mesh_data.SolidElementSetElementalData(element_labels)\n\nRepresents elemental data for a Solid Element Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolidElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidElementSetElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.secondary_plies",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.secondary_plies.html#secondary_plies",
        "title": "secondary_plies",
        "section": "secondary_plies",
        "text": "secondary_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.secondary_plies",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.secondary_plies.html#ansys.acp.core.ButtJointSequence.secondary_plies",
        "title": "secondary_plies > secondary_plies > secondary_plies",
        "section": "secondary_plies > secondary_plies",
        "text": "property ButtJointSequence.secondary_plies: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.Stackup.draping_ud_coefficient.html#draping_ud_coefficient",
        "title": "draping_ud_coefficient",
        "section": "draping_ud_coefficient",
        "text": "draping_ud_coefficient"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.Stackup.draping_ud_coefficient.html#ansys.acp.core.Stackup.draping_ud_coefficient",
        "title": "draping_ud_coefficient > draping_ud_coefficient > draping_ud_coefficient",
        "section": "draping_ud_coefficient > draping_ud_coefficient",
        "text": "property Stackup.draping_ud_coefficient: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column.html#create_column",
        "title": "create_column",
        "section": "create_column",
        "text": "Instantiate a Column of a 3D Look-Up Table.\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\nLookUpTable3DColumn\nAdded in ACP server version 24.2.\ncreate_column\nvalue_type\nvalue_type\nLocation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column.html#ansys.acp.core.LookUpTable3D.create_column",
        "title": "create_column > create_column > create_column",
        "section": "create_column > create_column",
        "text": "LookUpTable3D.create_column(*, name='LookUpTable3DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 3D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nReturn type\n\nLookUpTable3DColumn\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.create_column.html#examples-using-lookuptable3dcreate_column",
        "title": "create_column > Examples using LookUpTable3D.create_column",
        "section": "Examples using LookUpTable3D.create_column",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using LookUpTable3D.create_column"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType",
        "href": "api/_autosummary/ansys.acp.core.PlyType.html#plytype",
        "title": "PlyType",
        "section": "PlyType",
        "text": "Options for the material type of a ply.\nPlyType.REGULAR\n\nPlyType.WOVEN\n\nPlyType.ORTHOTROPIC_HOMOGENEOUS_CORE\n\nPlyType.ISOTROPIC_HOMOGENEOUS_CORE\n\nPlyType.HONEYCOMB_CORE\n\nPlyType.ISOTROPIC\n\nPlyType.UNDEFINED\n\nPlyType.ADHESIVE\n\nPlyType\nPlyType.REGULAR\nPlyType.WOVEN\nPlyType.ORTHOTROPIC_HOMOGENEOUS_CORE\nPlyType.ISOTROPIC_HOMOGENEOUS_CORE\nPlyType.HONEYCOMB_CORE\nPlyType.ISOTROPIC\nPlyType.UNDEFINED\nPlyType.ADHESIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType",
        "href": "api/_autosummary/ansys.acp.core.PlyType.html#ansys.acp.core.PlyType",
        "title": "PlyType > PlyType > PlyType",
        "section": "PlyType > PlyType",
        "text": "class ansys.acp.core.PlyType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the material type of a ply.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPlyType.REGULAR\n\n\n\nPlyType.WOVEN\n\n\n\nPlyType.ORTHOTROPIC_HOMOGENEOUS_CORE\n\n\n\nPlyType.ISOTROPIC_HOMOGENEOUS_CORE\n\n\n\nPlyType.HONEYCOMB_CORE\n\n\n\nPlyType.ISOTROPIC\n\n\n\nPlyType.UNDEFINED\n\n\n\nPlyType.ADHESIVE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType",
        "href": "api/_autosummary/ansys.acp.core.PlyType.html#examples-using-plytype",
        "title": "PlyType > Examples using PlyType",
        "section": "Examples using PlyType",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using PlyType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.parent.html#ansys.acp.core.ProductionPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ProductionPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.parent.html#ansys.acp.core.CADGeometry.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property CADGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type.html#mat_type",
        "title": "mat_type",
        "section": "mat_type",
        "text": "mat_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type.html#ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type",
        "title": "mat_type > mat_type > mat_type",
        "section": "mat_type > mat_type",
        "text": "property VariablePuckConstants.mat_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/use_cases/sg_execution_times",
        "href": "examples/use_cases/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:41.181 total execution time for 1 file from examples/use_cases:\nExample\nTime\nMem (MB)\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py (01-optimizing-ply-angles.py)\n00:41.181\n0.0\nComputation times\n01-optimizing-ply-angles.py"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.radius",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.radius.html#radius",
        "title": "radius",
        "section": "radius",
        "text": "radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.radius",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.radius.html#ansys.acp.core.CylindricalSelectionRule.radius",
        "title": "radius > radius > radius",
        "section": "radius > radius",
        "text": "property CylindricalSelectionRule.radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT.html#optimization_example_dat",
        "title": "OPTIMIZATION_EXAMPLE_DAT",
        "section": "OPTIMIZATION_EXAMPLE_DAT",
        "text": "OPTIMIZATION_EXAMPLE_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT.html#ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT",
        "title": "OPTIMIZATION_EXAMPLE_DAT > OPTIMIZATION_EXAMPLE_DAT > OPTIMIZATION_EXAMPLE_DAT",
        "section": "OPTIMIZATION_EXAMPLE_DAT > OPTIMIZATION_EXAMPLE_DAT",
        "text": "ExampleKeys.OPTIMIZATION_EXAMPLE_DAT = 11\n\n"
    },
    {
        "objectID": "index",
        "href": "index.html#limitations",
        "title": "Limitations",
        "section": "Limitations",
        "text": "Field definitions are currently only supported through (Py)Mechanical.\nThe workflow from PyACP to (Py)MADL ignores field definitions.\nThe PyACP to PyMADL workflow does not fully support variable materials.\nThe PyACP to PyMechanical workflow is experimental and has the following limitations:\nIt only works on Windows, with a remote (not embedded) PyMechanical session.\nOnly one ACP shell or solid model is supported at a time.\nNamed selections defined in ACP are not transferred to PyMechanical.\nThe ansys.acp.core.mechanical_integration_helpers module may be\nchanged or removed in future versions, when the corresponding features\nare available in PyMechanical directly.\nPost-processing with the Composite Failure Tool inside Mechanical is not\nyet supported.\nVisualization and mesh data of imported plies are not supported yet.\nSection cuts cannot be visualized.\nSampling point analysis data is not available.\nImported solid model mapping statistics are not available.\nSensor by solid model is not yet supported.\nLimitations\nansys.acp.core.mechanical_integration_helpers"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF.html#analysis_ply_cutoff",
        "title": "ANALYSIS_PLY_CUTOFF",
        "section": "ANALYSIS_PLY_CUTOFF",
        "text": "ANALYSIS_PLY_CUTOFF"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF.html#ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF",
        "title": "ANALYSIS_PLY_CUTOFF > ANALYSIS_PLY_CUTOFF > ANALYSIS_PLY_CUTOFF",
        "section": "ANALYSIS_PLY_CUTOFF > ANALYSIS_PLY_CUTOFF",
        "text": "PlyCutOffType.ANALYSIS_PLY_CUTOFF = 'analysis_ply_cutoff'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#minimum_distance_superposed",
        "title": "MINIMUM_DISTANCE_SUPERPOSED",
        "section": "MINIMUM_DISTANCE_SUPERPOSED",
        "text": "MINIMUM_DISTANCE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "title": "MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED",
        "section": "MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED",
        "text": "LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED = 'minimum_distance_superposed'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.html#importedmodelinggroup",
        "title": "ImportedModelingGroup",
        "section": "ImportedModelingGroup",
        "text": "Instantiate an imported modeling group.\nname (str) – Name of the imported modeling group.\nAdded in ACP server version 25.1.\nImportedModelingGroup.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nImportedModelingGroup.create_imported_modeling_ply(*)\nInstantiate an Imported Modeling Ply.\nImportedModelingGroup.delete()\nDelete the object.\nImportedModelingGroup.store(parent)\nStore the object on the server.\nImportedModelingGroup.id\nIdentifier of the object, used for example as key in maps.\nImportedModelingGroup.imported_modeling_plies\n\nImportedModelingGroup.name\nThe name of the object.\nImportedModelingGroup.parent\nThe parent of the object.\nImportedModelingGroup\nImportedModelingGroup.clone\nImportedModelingGroup.create_imported_modeling_ply\nImportedModelingGroup.delete\nImportedModelingGroup.store\nImportedModelingGroup.id\nImportedModelingGroup.imported_modeling_plies\nImportedModelingGroup.name\nImportedModelingGroup.parent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.html#ansys.acp.core.ImportedModelingGroup",
        "title": "ImportedModelingGroup > ImportedModelingGroup > ImportedModelingGroup",
        "section": "ImportedModelingGroup > ImportedModelingGroup",
        "text": "class ansys.acp.core.ImportedModelingGroup(*, name='ImportedModelingGroup')\n\nInstantiate an imported modeling group.\n\nParameters\n\nname (str) – Name of the imported modeling group.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nImportedModelingGroup.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nImportedModelingGroup.create_imported_modeling_ply(*)\n\nInstantiate an Imported Modeling Ply.\n\nImportedModelingGroup.delete()\n\nDelete the object.\n\nImportedModelingGroup.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedModelingGroup.id\n\nIdentifier of the object, used for example as key in maps.\n\nImportedModelingGroup.imported_modeling_plies\n\n\n\nImportedModelingGroup.name\n\nThe name of the object.\n\nImportedModelingGroup.parent\n\nThe parent of the object.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.html#examples-using-importedmodelinggroup",
        "title": "ImportedModelingGroup > Examples using ImportedModelingGroup",
        "section": "Examples using ImportedModelingGroup",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedModelingGroup"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.elemental_data.html#ansys.acp.core.ImportedSolidModel.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ImportedSolidModel.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.parent",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.parent",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.parent.html#ansys.acp.core.ElementSet.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ElementSet.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.split",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.split.html#split",
        "title": "split",
        "section": "split",
        "text": "Return a list of the substrings in the string, using sep as the separator string.\nThe separator used to split the string.\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\nMaximum number of splits.\n-1 (the default value) means no limit.\nSplitting starts at the front of the string and works to the end.\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.\nsplit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.split",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.split.html#ansys.acp.core.LaunchMode.split",
        "title": "split > split > split",
        "section": "split > split",
        "text": "LaunchMode.split(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the front of the string and works to the end.\n\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu.html#nu",
        "title": "nu",
        "section": "nu",
        "text": "nu"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu",
        "title": "nu > nu > nu",
        "section": "nu > nu",
        "text": "property VariableEngineeringConstants.nu: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.id",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.id",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.id.html#ansys.acp.core.ModelingPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ModelingPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#sensor",
        "title": "Sensor",
        "section": "Sensor",
        "text": "The Sensor capabilities to analyze the composite structure\nis demonstrated in this example. A sensor is used to compute the weight,\narea, cost, etc. of the model or specific entities such as ply material,\nmodeling ply, etc.\nSensor\nSensor"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#import-modules",
        "title": "Sensor > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#start-acp-and-load-the-model",
        "title": "Sensor > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from the input file which contains\na formula 1 front wing with layup. The plot shows the total\nlaminate thickness per element.\nSet price per area for all fabrics.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#sensor-by-area",
        "title": "Sensor > Sensor by area",
        "section": "Sensor by area",
        "text": "Sensor by area"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#entire-model",
        "title": "Sensor > Entire Model",
        "section": "Entire Model",
        "text": "The first sensor is applied to the entire model to compute for example\nthe total weight, area of production material, and material cost.\nUpdate the model to compute the sensor values.\nPrint the values. The production ply area is the area of production material.\nEntire Model\nproduction ply area"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#scope-to-a-specific-component",
        "title": "Sensor > Scope to a specific component",
        "section": "Scope to a specific component",
        "text": "Compute the measures for the nose only. Note that OrientedSelectionSet\ncan also be used to scope the sensor.\nScope to a specific component\nOrientedSelectionSet"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#sensor-by-material",
        "title": "Sensor > Sensor by material",
        "section": "Sensor by material",
        "text": "A sensor can also be used to compute the amount of a certain ply material\n(Fabric, Stackup, SubLaminate).\nSensor by material\nFabric\nStackup\nSubLaminate"
    },
    {
        "objectID": "examples/modeling_features/007-sensor",
        "href": "examples/modeling_features/007-sensor.html#sensor-by-ply",
        "title": "Sensor > Sensor by ply",
        "section": "Sensor by ply",
        "text": "A sensor can also be scoped to a specific ply or a list of plies. In this example,\na ply of the suction side and a ply of the pressure side of wing 3 are selected.\nTotal running time of the script: (0 minutes 23.748 seconds)\nDownload Jupyter notebook: 007-sensor.ipynb\nDownload Python source code: 007-sensor.py\nDownload zipped: 007-sensor.zip\nGallery generated by Sphinx-Gallery\nSensor by ply\nDownload Jupyter notebook: 007-sensor.ipynb\nDownload Python source code: 007-sensor.py\nDownload zipped: 007-sensor.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.html#solidmodelexportformat",
        "title": "SolidModelExportFormat",
        "section": "SolidModelExportFormat",
        "text": "Options for the export format of solid models.\nSolidModelExportFormat.ANSYS_H5\n\nSolidModelExportFormat.ANSYS_CDB\n\nSolidModelExportFormat\nSolidModelExportFormat.ANSYS_H5\nSolidModelExportFormat.ANSYS_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.html#ansys.acp.core.SolidModelExportFormat",
        "title": "SolidModelExportFormat > SolidModelExportFormat > SolidModelExportFormat",
        "section": "SolidModelExportFormat > SolidModelExportFormat",
        "text": "class ansys.acp.core.SolidModelExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the export format of solid models.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolidModelExportFormat.ANSYS_H5\n\n\n\nSolidModelExportFormat.ANSYS_CDB\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.LOCATION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.LOCATION.html#location",
        "title": "LOCATION",
        "section": "LOCATION",
        "text": "LOCATION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.LOCATION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.LOCATION.html#ansys.acp.core.LookUpTableColumnValueType.LOCATION",
        "title": "LOCATION > LOCATION > LOCATION",
        "section": "LOCATION > LOCATION",
        "text": "LookUpTableColumnValueType.LOCATION = 'location'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.store.html#ansys.acp.core.ParallelSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ParallelSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes.html#drop_hanging_nodes",
        "title": "drop_hanging_nodes",
        "section": "drop_hanging_nodes",
        "text": "drop_hanging_nodes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes.html#ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes",
        "title": "drop_hanging_nodes > drop_hanging_nodes > drop_hanging_nodes",
        "section": "drop_hanging_nodes > drop_hanging_nodes",
        "text": "property SolidModelExportSettings.drop_hanging_nodes: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc.html#zc",
        "title": "Zc",
        "section": "Zc",
        "text": "Zc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc",
        "title": "Zc > Zc > Zc",
        "section": "Zc > Zc",
        "text": "property VariableWovenStressLimits.Zc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.html#symmetrytype",
        "title": "SymmetryType",
        "section": "SymmetryType",
        "text": "Options for the symmetry of stackups or sublaminates.\nSymmetryType.NO_SYMMETRY\n\nSymmetryType.EVEN_SYMMETRY\n\nSymmetryType.ODD_SYMMETRY\n\nSymmetryType\nSymmetryType.NO_SYMMETRY\nSymmetryType.EVEN_SYMMETRY\nSymmetryType.ODD_SYMMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.html#ansys.acp.core.SymmetryType",
        "title": "SymmetryType > SymmetryType > SymmetryType",
        "section": "SymmetryType > SymmetryType",
        "text": "class ansys.acp.core.SymmetryType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the symmetry of stackups or sublaminates.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSymmetryType.NO_SYMMETRY\n\n\n\nSymmetryType.EVEN_SYMMETRY\n\n\n\nSymmetryType.ODD_SYMMETRY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.html#examples-using-symmetrytype",
        "title": "SymmetryType > Examples using SymmetryType",
        "section": "Examples using SymmetryType",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nExamples using SymmetryType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.count",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.count.html#count",
        "title": "count",
        "section": "count",
        "text": "Return the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.\ncount"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.count",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.count.html#ansys.acp.core.material_property_sets.PuckMaterialType.count",
        "title": "count > count > count",
        "section": "count > count",
        "text": "PuckMaterialType.count(sub, [start, [end]]) -> int\n\nReturn the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "AnalysisPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.element_sets.html#element_sets",
        "title": "element_sets",
        "section": "element_sets",
        "text": "element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.element_sets.html#ansys.acp.core.SolidModel.element_sets",
        "title": "element_sets > element_sets > element_sets",
        "section": "element_sets > element_sets",
        "text": "property SolidModel.element_sets: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.angle_tolerance",
        "href": "api/_autosummary/ansys.acp.core.Model.angle_tolerance.html#angle_tolerance",
        "title": "angle_tolerance",
        "section": "angle_tolerance",
        "text": "angle_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.angle_tolerance",
        "href": "api/_autosummary/ansys.acp.core.Model.angle_tolerance.html#ansys.acp.core.Model.angle_tolerance",
        "title": "angle_tolerance > angle_tolerance > angle_tolerance",
        "section": "angle_tolerance > angle_tolerance",
        "text": "property Model.angle_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type.html#geometrical_rule_type",
        "title": "geometrical_rule_type",
        "section": "geometrical_rule_type",
        "text": "geometrical_rule_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type.html#ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type",
        "title": "geometrical_rule_type > geometrical_rule_type > geometrical_rule_type",
        "section": "geometrical_rule_type > geometrical_rule_type",
        "text": "property GeometricalSelectionRule.geometrical_rule_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.html#solidelementset",
        "title": "SolidElementSet",
        "section": "SolidElementSet",
        "text": "Instantiate a Solid Element Set.\nname (str) – The name of the production ply.\nelement_labels – Label of elements.\nAdded in ACP server version 25.1.\nSolidElementSet.element_labels\n\nSolidElementSet.id\nIdentifier of the object, used for example as key in maps.\nSolidElementSet.locked\n\nSolidElementSet.name\nThe name of the object.\nSolidElementSet.parent\nThe parent of the object.\nSolidElementSet.solid_mesh\nSolid mesh associated with the object.\nSolidElementSet.status\n\nSolidElementSet\nSolidElementSet.element_labels\nSolidElementSet.id\nSolidElementSet.locked\nSolidElementSet.name\nSolidElementSet.parent\nSolidElementSet.solid_mesh\nSolidElementSet.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.html#ansys.acp.core.SolidElementSet",
        "title": "SolidElementSet > SolidElementSet > SolidElementSet",
        "section": "SolidElementSet > SolidElementSet",
        "text": "class ansys.acp.core.SolidElementSet\n\nInstantiate a Solid Element Set.\n\nParameters\n\nname (str) – The name of the production ply.\n\nelement_labels – Label of elements.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidElementSet.element_labels\n\n\n\nSolidElementSet.id\n\nIdentifier of the object, used for example as key in maps.\n\nSolidElementSet.locked\n\n\n\nSolidElementSet.name\n\nThe name of the object.\n\nSolidElementSet.parent\n\nThe parent of the object.\n\nSolidElementSet.solid_mesh\n\nSolid mesh associated with the object.\n\nSolidElementSet.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.section_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.section_index.html#section_index",
        "title": "section_index",
        "section": "section_index",
        "text": "section_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.section_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.section_index.html#ansys.acp.core.SolidModelExportSettings.section_index",
        "title": "section_index > section_index > section_index",
        "section": "section_index > section_index",
        "text": "property SolidModelExportSettings.section_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION.html#relative_thickness_correction",
        "title": "RELATIVE_THICKNESS_CORRECTION",
        "section": "RELATIVE_THICKNESS_CORRECTION",
        "text": "RELATIVE_THICKNESS_CORRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION.html#ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION",
        "title": "RELATIVE_THICKNESS_CORRECTION > RELATIVE_THICKNESS_CORRECTION > RELATIVE_THICKNESS_CORRECTION",
        "section": "RELATIVE_THICKNESS_CORRECTION > RELATIVE_THICKNESS_CORRECTION",
        "text": "ElementalDataType.RELATIVE_THICKNESS_CORRECTION = 'relative_thickness_correction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index.html#use_default_section_index",
        "title": "use_default_section_index",
        "section": "use_default_section_index",
        "text": "use_default_section_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index.html#ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index",
        "title": "use_default_section_index > use_default_section_index > use_default_section_index",
        "section": "use_default_section_index > use_default_section_index",
        "text": "property ImportedSolidModelExportSettings.use_default_section_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.depth",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.depth.html#depth",
        "title": "depth",
        "section": "depth",
        "text": "depth"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.depth",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.depth.html#ansys.acp.core.ExtrusionGuide.depth",
        "title": "depth > depth > depth",
        "section": "depth > depth",
        "text": "property ExtrusionGuide.depth: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.html#snaptogeometryorientationtype",
        "title": "SnapToGeometryOrientationType",
        "section": "SnapToGeometryOrientationType",
        "text": "Determines which layup face a snap-to geometry is applies to. Note that the _UNDEFINED option should not be used. It is equivalent to using BOTTOM, and included only for compatibility with existing models.\nSnapToGeometryOrientationType.BOTTOM\n\nSnapToGeometryOrientationType.TOP\n\nSnapToGeometryOrientationType\n_UNDEFINED\nBOTTOM\nSnapToGeometryOrientationType.BOTTOM\nSnapToGeometryOrientationType.TOP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.html#ansys.acp.core.SnapToGeometryOrientationType",
        "title": "SnapToGeometryOrientationType > SnapToGeometryOrientationType > SnapToGeometryOrientationType",
        "section": "SnapToGeometryOrientationType > SnapToGeometryOrientationType",
        "text": "class ansys.acp.core.SnapToGeometryOrientationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines which layup face a snap-to geometry is applies to. Note that the _UNDEFINED option should not be used. It is equivalent to using BOTTOM, and included only for compatibility with existing models.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSnapToGeometryOrientationType.BOTTOM\n\n\n\nSnapToGeometryOrientationType.TOP\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.html#examples-using-snaptogeometryorientationtype",
        "title": "SnapToGeometryOrientationType > Examples using SnapToGeometryOrientationType",
        "section": "Examples using SnapToGeometryOrientationType",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SnapToGeometryOrientationType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE.html#minimal_flat_plate",
        "title": "MINIMAL_FLAT_PLATE",
        "section": "MINIMAL_FLAT_PLATE",
        "text": "MINIMAL_FLAT_PLATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE.html#ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE",
        "title": "MINIMAL_FLAT_PLATE > MINIMAL_FLAT_PLATE > MINIMAL_FLAT_PLATE",
        "section": "MINIMAL_FLAT_PLATE > MINIMAL_FLAT_PLATE",
        "text": "ExampleKeys.MINIMAL_FLAT_PLATE = 10\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.point",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.point.html#point",
        "title": "point",
        "section": "point",
        "text": "point"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.point",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.point.html#ansys.acp.core.SamplingPoint.point",
        "title": "point > point > point",
        "section": "point > point",
        "text": "property SamplingPoint.point: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.stress_state",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.stress_state.html#stress_state",
        "title": "stress_state",
        "section": "stress_state",
        "text": "stress_state"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.stress_state",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.stress_state.html#ansys.acp.core.LayupMappingObject.stress_state",
        "title": "stress_state > stress_state > stress_state",
        "section": "stress_state > stress_state",
        "text": "property LayupMappingObject.stress_state: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._server.common.ServerProtocol",
        "href": "api/_autosummary/ansys.acp.core._server.common.ServerProtocol.html#serverprotocol",
        "title": "ServerProtocol",
        "section": "ServerProtocol",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nInterface definition for ACP gRPC servers.\nServerProtocol"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._server.common.ServerProtocol",
        "href": "api/_autosummary/ansys.acp.core._server.common.ServerProtocol.html#ansys.acp.core._server.common.ServerProtocol",
        "title": "ServerProtocol > ServerProtocol > ServerProtocol",
        "section": "ServerProtocol > ServerProtocol",
        "text": "class ansys.acp.core._server.common.ServerProtocol(*args, **kwargs)\n\nInterface definition for ACP gRPC servers.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.id",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.id",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.id.html#ansys.acp.core.AnalysisPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property AnalysisPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.active",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.active",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.active.html#ansys.acp.core.ExtrusionGuide.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property ExtrusionGuide.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc.html#eyc",
        "title": "eYc",
        "section": "eYc",
        "text": "eYc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc",
        "title": "eYc > eYc > eYc",
        "section": "eYc > eYc",
        "text": "property ConstantStrainLimits.eYc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.name.html#ansys.acp.core.CylindricalSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CylindricalSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.html#primaryply",
        "title": "PrimaryPly",
        "section": "PrimaryPly",
        "text": "Defines a primary ply of a butt joint sequence.\nsequence (ModelingGroup | ModelingPly) – Modeling group or modeling ply defining the primary ply.\nlevel (int) – Level of the primary ply. Plies with a higher level inherit the thickness\nfrom adjacent plies with a lower level.\nAdded in ACP server version 25.1.\nPrimaryPly.clone()\nCreate a new unstored PrimaryPly with the same properties.\nPrimaryPly.level\nLevel of the primary ply.\nPrimaryPly.sequence\nLinked sequence.\nPrimaryPly\nPrimaryPly.clone\nPrimaryPly.level\nPrimaryPly.sequence"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.html#ansys.acp.core.PrimaryPly",
        "title": "PrimaryPly > PrimaryPly > PrimaryPly",
        "section": "PrimaryPly > PrimaryPly",
        "text": "class ansys.acp.core.PrimaryPly(sequence, level=1)\n\nDefines a primary ply of a butt joint sequence.\n\nParameters\n\nsequence (ModelingGroup | ModelingPly) – Modeling group or modeling ply defining the primary ply.\n\nlevel (int) – Level of the primary ply. Plies with a higher level inherit the thickness\nfrom adjacent plies with a lower level.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nPrimaryPly.clone()\n\nCreate a new unstored PrimaryPly with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nPrimaryPly.level\n\nLevel of the primary ply.\n\nPrimaryPly.sequence\n\nLinked sequence.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.cog.html#cog",
        "title": "cog",
        "section": "cog",
        "text": "cog"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.cog.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.cog",
        "title": "cog > cog > cog",
        "section": "cog > cog",
        "text": "ProductionPlyElementalData.cog: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.larc_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.larc_constants.html#larc_constants",
        "title": "larc_constants",
        "section": "larc_constants",
        "text": "larc_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.larc_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.larc_constants.html#ansys.acp.core.Material.larc_constants",
        "title": "larc_constants > larc_constants > larc_constants",
        "section": "larc_constants > larc_constants",
        "text": "property Material.larc_constants: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data.html#ansys.acp.core.ModelingPly.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ModelingPly.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.nodal_data.html#examples-using-modelingplynodal_data",
        "title": "nodal_data > Examples using ModelingPly.nodal_data",
        "section": "Examples using ModelingPly.nodal_data",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using ModelingPly.nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.store.html#ansys.acp.core.SphericalSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SphericalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.FROM_FILE",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.FROM_FILE.html#from_file",
        "title": "FROM_FILE",
        "section": "FROM_FILE",
        "text": "FROM_FILE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.FROM_FILE",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.FROM_FILE.html#ansys.acp.core.UnitSystemType.FROM_FILE",
        "title": "FROM_FILE > FROM_FILE > FROM_FILE",
        "section": "FROM_FILE > FROM_FILE",
        "text": "UnitSystemType.FROM_FILE = 'from_file'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.use_imported_plies",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.use_imported_plies.html#use_imported_plies",
        "title": "use_imported_plies",
        "section": "use_imported_plies",
        "text": "use_imported_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.use_imported_plies",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.use_imported_plies.html#ansys.acp.core.LayupMappingObject.use_imported_plies",
        "title": "use_imported_plies > use_imported_plies > use_imported_plies",
        "section": "use_imported_plies > use_imported_plies",
        "text": "property LayupMappingObject.use_imported_plies: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.status",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.status",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.status.html#ansys.acp.core.LookUpTable3D.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property LookUpTable3D.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.cad_geometry.html#cad_geometry",
        "title": "cad_geometry",
        "section": "cad_geometry",
        "text": "cad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.cad_geometry.html#ansys.acp.core.CutOffGeometry.cad_geometry",
        "title": "cad_geometry > cad_geometry > cad_geometry",
        "section": "cad_geometry > cad_geometry",
        "text": "property CutOffGeometry.cad_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH.html#imported_solid_model_solid_mesh",
        "title": "IMPORTED_SOLID_MODEL_SOLID_MESH",
        "section": "IMPORTED_SOLID_MODEL_SOLID_MESH",
        "text": "IMPORTED_SOLID_MODEL_SOLID_MESH"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH.html#ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH",
        "title": "IMPORTED_SOLID_MODEL_SOLID_MESH > IMPORTED_SOLID_MODEL_SOLID_MESH > IMPORTED_SOLID_MODEL_SOLID_MESH",
        "section": "IMPORTED_SOLID_MODEL_SOLID_MESH > IMPORTED_SOLID_MODEL_SOLID_MESH",
        "text": "ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH = 16\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.element_sets",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.element_sets.html#element_sets",
        "title": "element_sets",
        "section": "element_sets",
        "text": "element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.element_sets",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.element_sets.html#ansys.acp.core.OrientedSelectionSet.element_sets",
        "title": "element_sets > element_sets > element_sets",
        "section": "element_sets > element_sets",
        "text": "property OrientedSelectionSet.element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.store.html#ansys.acp.core.VirtualGeometry.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "VirtualGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "CylindricalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.locked",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.locked",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.locked.html#ansys.acp.core.SubLaminate.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property SubLaminate.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.origin",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.origin.html#ansys.acp.core.SphericalSelectionRule.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property SphericalSelectionRule.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.capitalize",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.capitalize.html#capitalize",
        "title": "capitalize",
        "section": "capitalize",
        "text": "Return a capitalized version of the string.\nMore specifically, make the first character have upper case and the rest lower\ncase.\ncapitalize"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.capitalize",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.capitalize.html#ansys.acp.core.LaunchMode.capitalize",
        "title": "capitalize > capitalize > capitalize",
        "section": "capitalize > capitalize",
        "text": "LaunchMode.capitalize(/)\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower\ncase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP.html#top",
        "title": "TOP",
        "section": "TOP",
        "text": "TOP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP.html#ansys.acp.core.SnapToGeometryOrientationType.TOP",
        "title": "TOP > TOP > TOP",
        "section": "TOP > TOP",
        "text": "SnapToGeometryOrientationType.TOP = 'top'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP.html#examples-using-snaptogeometryorientationtypetop",
        "title": "TOP > Examples using SnapToGeometryOrientationType.TOP",
        "section": "Examples using SnapToGeometryOrientationType.TOP",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SnapToGeometryOrientationType.TOP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA.html#mpa",
        "title": "MPA",
        "section": "MPA",
        "text": "MPA"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA.html#ansys.acp.core.UnitSystemType.MPA",
        "title": "MPA > MPA > MPA",
        "section": "MPA > MPA",
        "text": "UnitSystemType.MPA = 'mpa'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.MPA.html#examples-using-unitsystemtypempa",
        "title": "MPA > Examples using UnitSystemType.MPA",
        "section": "Examples using UnitSystemType.MPA",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using UnitSystemType.MPA"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.parent.html#ansys.acp.core.TubeSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property TubeSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidMappingProperties.offset_type",
        "href": "api/_autosummary/ansys.acp.core.SolidMappingProperties.offset_type.html#offset_type",
        "title": "offset_type",
        "section": "offset_type",
        "text": "offset_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidMappingProperties.offset_type",
        "href": "api/_autosummary/ansys.acp.core.SolidMappingProperties.offset_type.html#ansys.acp.core.SolidMappingProperties.offset_type",
        "title": "offset_type > offset_type > offset_type",
        "section": "offset_type > offset_type",
        "text": "SolidMappingProperties.offset_type: OffsetType = 'bottom_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.html#importedplyoffsettype",
        "title": "ImportedPlyOffsetType",
        "section": "ImportedPlyOffsetType",
        "text": "Options for the definition of the offset.\nImportedPlyOffsetType.BOTTOM_OFFSET\n\nImportedPlyOffsetType.MIDDLE_OFFSET\n\nImportedPlyOffsetType.TOP_OFFSET\n\nImportedPlyOffsetType\nImportedPlyOffsetType.BOTTOM_OFFSET\nImportedPlyOffsetType.MIDDLE_OFFSET\nImportedPlyOffsetType.TOP_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.html#ansys.acp.core.ImportedPlyOffsetType",
        "title": "ImportedPlyOffsetType > ImportedPlyOffsetType > ImportedPlyOffsetType",
        "section": "ImportedPlyOffsetType > ImportedPlyOffsetType",
        "text": "class ansys.acp.core.ImportedPlyOffsetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the definition of the offset.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nImportedPlyOffsetType.BOTTOM_OFFSET\n\n\n\nImportedPlyOffsetType.MIDDLE_OFFSET\n\n\n\nImportedPlyOffsetType.TOP_OFFSET\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.html#examples-using-importedplyoffsettype",
        "title": "ImportedPlyOffsetType > Examples using ImportedPlyOffsetType",
        "section": "Examples using ImportedPlyOffsetType",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedPlyOffsetType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels.html#ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "SolidElementSetNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_material_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_material_index.html#use_default_material_index",
        "title": "use_default_material_index",
        "section": "use_default_material_index",
        "text": "use_default_material_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_material_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_material_index.html#ansys.acp.core.SolidModelExportSettings.use_default_material_index",
        "title": "use_default_material_index > use_default_material_index > use_default_material_index",
        "section": "use_default_material_index > use_default_material_index",
        "text": "property SolidModelExportSettings.use_default_material_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels.html#ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ProductionPlyNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.shell_mesh.html#ansys.acp.core.Model.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property Model.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.shell_mesh.html#examples-using-modelshell_mesh",
        "title": "shell_mesh > Examples using Model.shell_mesh",
        "section": "Examples using Model.shell_mesh",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.shell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.ply_group_pointers",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.ply_group_pointers.html#ply_group_pointers",
        "title": "ply_group_pointers",
        "section": "ply_group_pointers",
        "text": "ply_group_pointers"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.ply_group_pointers",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.ply_group_pointers.html#ansys.acp.core.SolidModel.ply_group_pointers",
        "title": "ply_group_pointers > ply_group_pointers > ply_group_pointers",
        "section": "ply_group_pointers > ply_group_pointers",
        "text": "property SolidModel.ply_group_pointers: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isidentifier",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isidentifier.html#isidentifier",
        "title": "isidentifier",
        "section": "isidentifier",
        "text": "Return True if the string is a valid Python identifier, False otherwise.\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”.\nisidentifier"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isidentifier",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isidentifier.html#ansys.acp.core.LaunchMode.isidentifier",
        "title": "isidentifier > isidentifier > isidentifier",
        "section": "isidentifier > isidentifier",
        "text": "LaunchMode.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STL",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STL.html#stl",
        "title": "STL",
        "section": "STL",
        "text": "STL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STL",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STL.html#ansys.acp.core.PlyGeometryExportFormat.STL",
        "title": "STL > STL > STL",
        "section": "STL > STL",
        "text": "PlyGeometryExportFormat.STL = 'stl'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry.html#thickness_geometry",
        "title": "thickness_geometry",
        "section": "thickness_geometry",
        "text": "thickness_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry.html#ansys.acp.core.ModelingPly.thickness_geometry",
        "title": "thickness_geometry > thickness_geometry > thickness_geometry",
        "section": "thickness_geometry > thickness_geometry",
        "text": "property ModelingPly.thickness_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry.html#examples-using-modelingplythickness_geometry",
        "title": "thickness_geometry > Examples using ModelingPly.thickness_geometry",
        "section": "Examples using ModelingPly.thickness_geometry",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ModelingPly.thickness_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE.html#by_reference",
        "title": "BY_REFERENCE",
        "section": "BY_REFERENCE",
        "text": "BY_REFERENCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE.html#ansys.acp.core.EdgeSetType.BY_REFERENCE",
        "title": "BY_REFERENCE > BY_REFERENCE > BY_REFERENCE",
        "section": "BY_REFERENCE > BY_REFERENCE",
        "text": "EdgeSetType.BY_REFERENCE = 'by_reference'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE.html#examples-using-edgesettypeby_reference",
        "title": "BY_REFERENCE > Examples using EdgeSetType.BY_REFERENCE",
        "section": "Examples using EdgeSetType.BY_REFERENCE",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using EdgeSetType.BY_REFERENCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.clone",
        "href": "api/_autosummary/ansys.acp.core.Stackup.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.clone",
        "href": "api/_autosummary/ansys.acp.core.Stackup.clone.html#ansys.acp.core.Stackup.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Stackup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_settings",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_settings.html#export_settings",
        "title": "export_settings",
        "section": "export_settings",
        "text": "export_settings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_settings",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_settings.html#ansys.acp.core.ImportedSolidModel.export_settings",
        "title": "export_settings > export_settings > export_settings",
        "section": "export_settings > export_settings",
        "text": "property ImportedSolidModel.export_settings: AttribT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_NORMAL.html#surface_normal",
        "title": "SURFACE_NORMAL",
        "section": "SURFACE_NORMAL",
        "text": "SURFACE_NORMAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_NORMAL.html#ansys.acp.core.ExtrusionType.SURFACE_NORMAL",
        "title": "SURFACE_NORMAL > SURFACE_NORMAL > SURFACE_NORMAL",
        "section": "SURFACE_NORMAL > SURFACE_NORMAL",
        "text": "ExtrusionType.SURFACE_NORMAL = 'surface_normal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.radius",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.radius.html#radius",
        "title": "radius",
        "section": "radius",
        "text": "radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.radius",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.radius.html#ansys.acp.core.SphericalSelectionRule.radius",
        "title": "radius > radius > radius",
        "section": "radius > radius",
        "text": "property SphericalSelectionRule.radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.locked",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.locked",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.locked.html#ansys.acp.core.SamplingPoint.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property SamplingPoint.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.html#cylindricalselectionruleelementaldata",
        "title": "CylindricalSelectionRuleElementalData",
        "section": "CylindricalSelectionRuleElementalData",
        "text": "Represents elemental data for a Cylindrical Selection Rule.\nCylindricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nCylindricalSelectionRuleElementalData.normal\n\nCylindricalSelectionRuleElementalData.element_labels\n\nCylindricalSelectionRuleElementalData\nCylindricalSelectionRuleElementalData.get_pyvista_mesh\nCylindricalSelectionRuleElementalData.normal\nCylindricalSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData",
        "title": "CylindricalSelectionRuleElementalData > CylindricalSelectionRuleElementalData > CylindricalSelectionRuleElementalData",
        "section": "CylindricalSelectionRuleElementalData > CylindricalSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Cylindrical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCylindricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCylindricalSelectionRuleElementalData.normal\n\n\n\nCylindricalSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.dimension",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.dimension.html#dimension",
        "title": "dimension",
        "section": "dimension",
        "text": "dimension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.dimension",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.dimension.html#ansys.acp.core.VirtualGeometry.dimension",
        "title": "dimension > dimension > dimension",
        "section": "dimension > dimension",
        "text": "property VirtualGeometry.dimension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.status",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.status",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.status.html#ansys.acp.core.AnalysisPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property AnalysisPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.name",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.name",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.name.html#ansys.acp.core.OrientedSelectionSet.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property OrientedSelectionSet.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXt.html#ext",
        "title": "eXt",
        "section": "eXt",
        "text": "eXt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXt.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eXt",
        "title": "eXt > eXt > eXt",
        "section": "eXt > eXt",
        "text": "property VariableStrainLimits.eXt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.extrusion_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.extrusion_type.html#extrusion_type",
        "title": "extrusion_type",
        "section": "extrusion_type",
        "text": "extrusion_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.extrusion_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.extrusion_type.html#ansys.acp.core.SectionCut.extrusion_type",
        "title": "extrusion_type > extrusion_type > extrusion_type",
        "section": "extrusion_type > extrusion_type",
        "text": "property SectionCut.extrusion_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index.html#use_default_node_index",
        "title": "use_default_node_index",
        "section": "use_default_node_index",
        "text": "use_default_node_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index.html#ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index",
        "title": "use_default_node_index > use_default_node_index > use_default_node_index",
        "section": "use_default_node_index > use_default_node_index",
        "text": "property ImportedSolidModelExportSettings.use_default_node_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.id.html#ansys.acp.core.ImportedAnalysisPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ImportedAnalysisPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1.html#e1",
        "title": "E1",
        "section": "E1",
        "text": "E1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1",
        "title": "E1 > E1 > E1",
        "section": "E1 > E1",
        "text": "property VariableEngineeringConstants.E1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.offset_direction_type",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.offset_direction_type.html#offset_direction_type",
        "title": "offset_direction_type",
        "section": "offset_direction_type",
        "text": "offset_direction_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.offset_direction_type",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.offset_direction_type.html#ansys.acp.core.SolidModel.offset_direction_type",
        "title": "offset_direction_type > offset_direction_type > offset_direction_type",
        "section": "offset_direction_type > offset_direction_type",
        "text": "property SolidModel.offset_direction_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.html#solidmodelskinexportformat",
        "title": "SolidModelSkinExportFormat",
        "section": "SolidModelSkinExportFormat",
        "text": "Options for the export format of solid model skins.\nSolidModelSkinExportFormat.ANSYS_CDB\n\nSolidModelSkinExportFormat.STEP\n\nSolidModelSkinExportFormat.IGES\n\nSolidModelSkinExportFormat.STL\n\nSolidModelSkinExportFormat\nSolidModelSkinExportFormat.ANSYS_CDB\nSolidModelSkinExportFormat.STEP\nSolidModelSkinExportFormat.IGES\nSolidModelSkinExportFormat.STL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.html#ansys.acp.core.SolidModelSkinExportFormat",
        "title": "SolidModelSkinExportFormat > SolidModelSkinExportFormat > SolidModelSkinExportFormat",
        "section": "SolidModelSkinExportFormat > SolidModelSkinExportFormat",
        "text": "class ansys.acp.core.SolidModelSkinExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the export format of solid model skins.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolidModelSkinExportFormat.ANSYS_CDB\n\n\n\nSolidModelSkinExportFormat.STEP\n\n\n\nSolidModelSkinExportFormat.IGES\n\n\n\nSolidModelSkinExportFormat.STL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.casefold",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.casefold.html#casefold",
        "title": "casefold",
        "section": "casefold",
        "text": "Return a version of the string suitable for caseless comparisons.\ncasefold"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.casefold",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.casefold.html#ansys.acp.core.LaunchMode.casefold",
        "title": "casefold > casefold > casefold",
        "section": "casefold > casefold",
        "text": "LaunchMode.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.id",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.id",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.id.html#ansys.acp.core.SubLaminate.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SubLaminate.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "CutOffSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.id",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.id",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.id.html#ansys.acp.core.ElementSet.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ElementSet.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.parent.html#ansys.acp.core.CutOffSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property CutOffSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants.html#from_isotropic_constants",
        "title": "from_isotropic_constants",
        "section": "from_isotropic_constants",
        "text": "Create an isotropic strain limits property set.\neffective_strain (float) – Effective strain limit.\nAn isotropic strain limits property set.\nSelf\nfrom_isotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants",
        "title": "from_isotropic_constants > from_isotropic_constants > from_isotropic_constants",
        "section": "from_isotropic_constants > from_isotropic_constants",
        "text": "classmethod ConstantStrainLimits.from_isotropic_constants(*, effective_strain=0.0)\n\nCreate an isotropic strain limits property set.\n\nParameters\n\neffective_strain (float) – Effective strain limit.\n\nReturns\n\nAn isotropic strain limits property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lstrip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lstrip.html#lstrip",
        "title": "lstrip",
        "section": "lstrip",
        "text": "Return a copy of the string with leading whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nlstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lstrip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lstrip.html#ansys.acp.core.material_property_sets.PuckMaterialType.lstrip",
        "title": "lstrip > lstrip > lstrip",
        "section": "lstrip > lstrip",
        "text": "PuckMaterialType.lstrip(chars=None, /)\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data.html#ansys.acp.core.ModelingPly.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ModelingPly.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.elemental_data.html#examples-using-modelingplyelemental_data",
        "title": "elemental_data > Examples using ModelingPly.elemental_data",
        "section": "Examples using ModelingPly.elemental_data",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ModelingPly.elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.shell_mesh.html#ansys.acp.core.OrientedSelectionSet.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property OrientedSelectionSet.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.html#fieldvariable",
        "title": "FieldVariable",
        "section": "FieldVariable",
        "text": "Defines field variables for variable material properties.\nFieldVariable.name\n\nFieldVariable.values\n\nFieldVariable.default\n\nFieldVariable.lower_limit\n\nFieldVariable.upper_limit\n\nFieldVariable\nFieldVariable.name\nFieldVariable.values\nFieldVariable.default\nFieldVariable.lower_limit\nFieldVariable.upper_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.html#ansys.acp.core.material_property_sets.FieldVariable",
        "title": "FieldVariable > FieldVariable > FieldVariable",
        "section": "FieldVariable > FieldVariable",
        "text": "class ansys.acp.core.material_property_sets.FieldVariable(name, values, default, lower_limit, upper_limit)\n\nDefines field variables for variable material properties.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nFieldVariable.name\n\n\n\nFieldVariable.values\n\n\n\nFieldVariable.default\n\n\n\nFieldVariable.lower_limit\n\n\n\nFieldVariable.upper_limit\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.binary_path",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.binary_path.html#binary_path",
        "title": "binary_path",
        "section": "binary_path",
        "text": "binary_path"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.binary_path",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.binary_path.html#ansys.acp.core.DirectLaunchConfig.binary_path",
        "title": "binary_path > binary_path > binary_path",
        "section": "binary_path > binary_path",
        "text": "DirectLaunchConfig.binary_path: str = ''\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1.html#e1_1",
        "title": "E1_1",
        "section": "E1_1",
        "text": "E1_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1",
        "title": "E1_1 > E1_1 > E1_1",
        "section": "E1_1 > E1_1",
        "text": "property ConstantWovenCharacterization.E1_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field.html#thickness_field",
        "title": "thickness_field",
        "section": "thickness_field",
        "text": "thickness_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field.html#ansys.acp.core.ModelingPly.thickness_field",
        "title": "thickness_field > thickness_field > thickness_field",
        "section": "thickness_field > thickness_field",
        "text": "property ModelingPly.thickness_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field.html#examples-using-modelingplythickness_field",
        "title": "thickness_field > Examples using ModelingPly.thickness_field",
        "section": "Examples using ModelingPly.thickness_field",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ModelingPly.thickness_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.html#sectioncuttype",
        "title": "SectionCutType",
        "section": "SectionCutType",
        "text": "Determines whether the section cut is extruded by modeling ply, production ply, or analysis ply.\nSectionCutType.MODELING_PLY_WISE\n\nSectionCutType.PRODUCTION_PLY_WISE\n\nSectionCutType.ANALYSIS_PLY_WISE\n\nSectionCutType\nSectionCutType.MODELING_PLY_WISE\nSectionCutType.PRODUCTION_PLY_WISE\nSectionCutType.ANALYSIS_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCutType",
        "href": "api/_autosummary/ansys.acp.core.SectionCutType.html#ansys.acp.core.SectionCutType",
        "title": "SectionCutType > SectionCutType > SectionCutType",
        "section": "SectionCutType > SectionCutType",
        "text": "class ansys.acp.core.SectionCutType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines whether the section cut is extruded by modeling ply, production ply, or analysis ply.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSectionCutType.MODELING_PLY_WISE\n\n\n\nSectionCutType.PRODUCTION_PLY_WISE\n\n\n\nSectionCutType.ANALYSIS_PLY_WISE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.SubShape.cad_geometry.html#cad_geometry",
        "title": "cad_geometry",
        "section": "cad_geometry",
        "text": "Linked CAD geometry.\ncad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.SubShape.cad_geometry.html#ansys.acp.core.SubShape.cad_geometry",
        "title": "cad_geometry > cad_geometry > cad_geometry",
        "section": "cad_geometry > cad_geometry",
        "text": "property SubShape.cad_geometry: CADGeometry\n\nLinked CAD geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix.html#removesuffix",
        "title": "removesuffix",
        "section": "removesuffix",
        "text": "Return a str with the given suffix string removed if present.\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.\nremovesuffix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix.html#ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix",
        "title": "removesuffix > removesuffix > removesuffix",
        "section": "removesuffix > removesuffix",
        "text": "PuckMaterialType.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction.html#transverse_direction",
        "title": "transverse_direction",
        "section": "transverse_direction",
        "text": "transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction",
        "title": "transverse_direction > transverse_direction > transverse_direction",
        "section": "transverse_direction > transverse_direction",
        "text": "ModelingPlyElementalData.transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.mesh.html#ansys.acp.core.GeometricalSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property GeometricalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5.html#basic_flat_plate_acph5",
        "title": "BASIC_FLAT_PLATE_ACPH5",
        "section": "BASIC_FLAT_PLATE_ACPH5",
        "text": "BASIC_FLAT_PLATE_ACPH5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5.html#ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5",
        "title": "BASIC_FLAT_PLATE_ACPH5 > BASIC_FLAT_PLATE_ACPH5 > BASIC_FLAT_PLATE_ACPH5",
        "section": "BASIC_FLAT_PLATE_ACPH5 > BASIC_FLAT_PLATE_ACPH5",
        "text": "ExampleKeys.BASIC_FLAT_PLATE_ACPH5 = 3\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.include_rule.html#ansys.acp.core.VariableOffsetSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property VariableOffsetSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.locked",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.locked",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.locked.html#ansys.acp.core.SolidModel.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property SolidModel.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2.html#g12_2",
        "title": "G12_2",
        "section": "G12_2",
        "text": "G12_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2",
        "title": "G12_2 > G12_2 > G12_2",
        "section": "G12_2 > G12_2",
        "text": "property ConstantWovenCharacterization.G12_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "BooleanSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.html#geometricalruletype",
        "title": "GeometricalRuleType",
        "section": "GeometricalRuleType",
        "text": "Options for how a geometrical selection rule is defined.\nGeometricalRuleType.GEOMETRY\n\nGeometricalRuleType.ELEMENT_SETS\n\nGeometricalRuleType\nGeometricalRuleType.GEOMETRY\nGeometricalRuleType.ELEMENT_SETS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.html#ansys.acp.core.GeometricalRuleType",
        "title": "GeometricalRuleType > GeometricalRuleType > GeometricalRuleType",
        "section": "GeometricalRuleType > GeometricalRuleType",
        "text": "class ansys.acp.core.GeometricalRuleType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how a geometrical selection rule is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nGeometricalRuleType.GEOMETRY\n\n\n\nGeometricalRuleType.ELEMENT_SETS\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.physical_dimension",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.physical_dimension.html#physical_dimension",
        "title": "physical_dimension",
        "section": "physical_dimension",
        "text": "physical_dimension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.physical_dimension",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.physical_dimension.html#ansys.acp.core.LookUpTable1DColumn.physical_dimension",
        "title": "physical_dimension > physical_dimension > physical_dimension",
        "section": "physical_dimension > physical_dimension",
        "text": "property LookUpTable1DColumn.physical_dimension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.USER_DEFINED",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.USER_DEFINED.html#user_defined",
        "title": "USER_DEFINED",
        "section": "USER_DEFINED",
        "text": "USER_DEFINED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.USER_DEFINED",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.USER_DEFINED.html#ansys.acp.core.ExtrusionMethod.USER_DEFINED",
        "title": "USER_DEFINED > USER_DEFINED > USER_DEFINED",
        "section": "USER_DEFINED > USER_DEFINED",
        "text": "ExtrusionMethod.USER_DEFINED = 'user_defined'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.nodal_data.html#ansys.acp.core.GeometricalSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property GeometricalSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.strain_limits",
        "href": "api/_autosummary/ansys.acp.core.Material.strain_limits.html#strain_limits",
        "title": "strain_limits",
        "section": "strain_limits",
        "text": "strain_limits"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.strain_limits",
        "href": "api/_autosummary/ansys.acp.core.Material.strain_limits.html#ansys.acp.core.Material.strain_limits",
        "title": "strain_limits > strain_limits > strain_limits",
        "section": "strain_limits > strain_limits",
        "text": "property Material.strain_limits: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.field_definitions",
        "href": "api/_autosummary/ansys.acp.core.Model.field_definitions.html#field_definitions",
        "title": "field_definitions",
        "section": "field_definitions",
        "text": "field_definitions"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.field_definitions",
        "href": "api/_autosummary/ansys.acp.core.Model.field_definitions.html#ansys.acp.core.Model.field_definitions",
        "title": "field_definitions > field_definitions > field_definitions",
        "section": "field_definitions > field_definitions",
        "text": "property Model.field_definitions: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.lookup_tables_1d",
        "href": "api/_autosummary/ansys.acp.core.Model.lookup_tables_1d.html#lookup_tables_1d",
        "title": "lookup_tables_1d",
        "section": "lookup_tables_1d",
        "text": "lookup_tables_1d"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.lookup_tables_1d",
        "href": "api/_autosummary/ansys.acp.core.Model.lookup_tables_1d.html#ansys.acp.core.Model.lookup_tables_1d",
        "title": "lookup_tables_1d > lookup_tables_1d > lookup_tables_1d",
        "section": "lookup_tables_1d > lookup_tables_1d",
        "text": "property Model.lookup_tables_1d: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.partition",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.partition.html#partition",
        "title": "partition",
        "section": "partition",
        "text": "Partition the string into three parts using the given separator.\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.\npartition"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.partition",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.partition.html#ansys.acp.core.LaunchMode.partition",
        "title": "partition > partition > partition",
        "section": "partition > partition",
        "text": "LaunchMode.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.html#solidmodelnodaldata",
        "title": "SolidModelNodalData",
        "section": "SolidModelNodalData",
        "text": "Represents nodal data for a Solid Model.\nSolidModelNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSolidModelNodalData.node_labels\n\nSolidModelNodalData\nSolidModelNodalData.get_pyvista_mesh\nSolidModelNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.html#ansys.acp.core.mesh_data.SolidModelNodalData",
        "title": "SolidModelNodalData > SolidModelNodalData > SolidModelNodalData",
        "section": "SolidModelNodalData > SolidModelNodalData",
        "text": "class ansys.acp.core.mesh_data.SolidModelNodalData(node_labels)\n\nRepresents nodal data for a Solid Model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidModelNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.mass.html#mass",
        "title": "mass",
        "section": "mass",
        "text": "mass"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.mass.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.mass",
        "title": "mass > mass > mass",
        "section": "mass > mass",
        "text": "ProductionPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.node_labels.html#ansys.acp.core.mesh_data.ModelNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ModelNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.name",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.name",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.name.html#ansys.acp.core.LayupMappingObject.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LayupMappingObject.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.html#extrusiontype",
        "title": "ExtrusionType",
        "section": "ExtrusionType",
        "text": "Extrusion method used in a section cut.\nExtrusionType.WIRE_FRAME\n\nExtrusionType.SURFACE_NORMAL\n\nExtrusionType.SURFACE_SWEEP_BASED\n\nExtrusionType\nExtrusionType.WIRE_FRAME\nExtrusionType.SURFACE_NORMAL\nExtrusionType.SURFACE_SWEEP_BASED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.html#ansys.acp.core.ExtrusionType",
        "title": "ExtrusionType > ExtrusionType > ExtrusionType",
        "section": "ExtrusionType > ExtrusionType",
        "text": "class ansys.acp.core.ExtrusionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion method used in a section cut.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nExtrusionType.WIRE_FRAME\n\n\n\nExtrusionType.SURFACE_NORMAL\n\n\n\nExtrusionType.SURFACE_SWEEP_BASED\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.MASS",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.MASS.html#mass",
        "title": "MASS",
        "section": "MASS",
        "text": "MASS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.MASS",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.MASS.html#ansys.acp.core.ElementalDataType.MASS",
        "title": "MASS > MASS > MASS",
        "section": "MASS > MASS",
        "text": "ElementalDataType.MASS = 'mass'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.id",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.id",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.id.html#ansys.acp.core.ProductionPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ProductionPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_material.html#cut_off_material",
        "title": "cut_off_material",
        "section": "cut_off_material",
        "text": "cut_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_material.html#ansys.acp.core.ImportedSolidModel.cut_off_material",
        "title": "cut_off_material > cut_off_material > cut_off_material",
        "section": "cut_off_material > cut_off_material",
        "text": "property ImportedSolidModel.cut_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.clone",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored PrimaryPly with the same properties.\nSelf\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.clone",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.clone.html#ansys.acp.core.PrimaryPly.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "PrimaryPly.clone()\n\nCreate a new unstored PrimaryPly with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSelf"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh.html#solid_mesh",
        "title": "solid_mesh",
        "section": "solid_mesh",
        "text": "Solid mesh associated with the object.\nsolid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh.html#ansys.acp.core.AnalysisPly.solid_mesh",
        "title": "solid_mesh > solid_mesh > solid_mesh",
        "section": "solid_mesh > solid_mesh",
        "text": "property AnalysisPly.solid_mesh: MeshData\n\nSolid mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh.html#examples-using-analysisplysolid_mesh",
        "title": "solid_mesh > Examples using AnalysisPly.solid_mesh",
        "section": "Examples using AnalysisPly.solid_mesh",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using AnalysisPly.solid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.name",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.name",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.name.html#ansys.acp.core.SamplingPoint.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SamplingPoint.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export_settings",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export_settings.html#export_settings",
        "title": "export_settings",
        "section": "export_settings",
        "text": "export_settings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export_settings",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export_settings.html#ansys.acp.core.SolidModel.export_settings",
        "title": "export_settings > export_settings > export_settings",
        "section": "export_settings > export_settings",
        "text": "property SolidModel.export_settings: AttribT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.store",
        "href": "api/_autosummary/ansys.acp.core.Material.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.store",
        "href": "api/_autosummary/ansys.acp.core.Material.store.html#ansys.acp.core.Material.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "Material.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae.html#export_hdf5_composite_cae",
        "title": "export_hdf5_composite_cae",
        "section": "export_hdf5_composite_cae",
        "text": "Export the lay-up to the HDF5 Composite CAE format.\npath (str | PathLike[str]) – File path.\nremove_midside_nodes (bool) – If True, remove mid-side nodes from the exported mesh. This increases the\noverall performance.\nlayup_representation_3d (bool) – If True, the 3D representation of the lay-up is computed, and the offset ply\nsurfaces are exported.\noffset_type (OffsetType) – Defines if the bottom, mid, or top surface of the plies is exported.\nOnly used if layup_representation_3d is True.\nall_elements (bool) – Whether to limit the export to some user-defined element sets or not.\nelement_sets (Sequence[ElementSet | OrientedSelectionSet]) – Only plies defined on the selected element sets or oriented selection\nsets will be exported.\nUsed only if all_elements is False.\nall_plies (bool) – Whether to export all plies or a user-defined set.\nplies (Sequence[ModelingGroup | ModelingPly]) – User-defined set of Modeling Plies and/or Modeling Groups.\nUsed only if all_plies is False.\nascii_encoding (bool) – If True, use ASCII encoding when writing text attributes to the HDF5 CAE\nfile. This may be needed for compatibility with programs that don’t fully\nsupport unicode when reading the file.\nexport_hdf5_composite_cae\nlayup_representation_3d\nall_elements\nall_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae.html#ansys.acp.core.Model.export_hdf5_composite_cae",
        "title": "export_hdf5_composite_cae > export_hdf5_composite_cae > export_hdf5_composite_cae",
        "section": "export_hdf5_composite_cae > export_hdf5_composite_cae",
        "text": "Model.export_hdf5_composite_cae(path, *, remove_midside_nodes=True, layup_representation_3d=False, offset_type='bottom_offset', all_elements=True, element_sets=(), all_plies=True, plies=(), ascii_encoding=False)\n\nExport the lay-up to the HDF5 Composite CAE format.\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nremove_midside_nodes (bool) – If True, remove mid-side nodes from the exported mesh. This increases the\noverall performance.\n\nlayup_representation_3d (bool) – If True, the 3D representation of the lay-up is computed, and the offset ply\nsurfaces are exported.\n\noffset_type (OffsetType) – Defines if the bottom, mid, or top surface of the plies is exported.\nOnly used if layup_representation_3d is True.\n\nall_elements (bool) – Whether to limit the export to some user-defined element sets or not.\n\nelement_sets (Sequence[ElementSet | OrientedSelectionSet]) – Only plies defined on the selected element sets or oriented selection\nsets will be exported.\nUsed only if all_elements is False.\n\nall_plies (bool) – Whether to export all plies or a user-defined set.\n\nplies (Sequence[ModelingGroup | ModelingPly]) – User-defined set of Modeling Plies and/or Modeling Groups.\nUsed only if all_plies is False.\n\nascii_encoding (bool) – If True, use ASCII encoding when writing text attributes to the HDF5 CAE\nfile. This may be needed for compatibility with programs that don’t fully\nsupport unicode when reading the file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae",
        "href": "api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae.html#examples-using-modelexport_hdf5_composite_cae",
        "title": "export_hdf5_composite_cae > Examples using Model.export_hdf5_composite_cae",
        "section": "Examples using Model.export_hdf5_composite_cae",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.export_hdf5_composite_cae"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2.html#g23_2",
        "title": "G23_2",
        "section": "G23_2",
        "text": "G23_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2",
        "title": "G23_2 > G23_2 > G23_2",
        "section": "G23_2 > G23_2",
        "text": "property VariableWovenCharacterization.G23_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.html#analysisply",
        "title": "AnalysisPly",
        "section": "AnalysisPly",
        "text": "Instantiate an Analysis Ply.\nname (str) – The name of the Analysis Ply.\nmaterial (Material) – Material of the Analysis ply.\nangle (float) – Angle of the Analysis ply in degrees.\nthickness (float) – Thickness of the Analysis ply\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\nAdded in ACP server version 24.2.\nAnalysisPly.active_in_post_mode\n\nAnalysisPly.angle\n\nAnalysisPly.elemental_data\n\nAnalysisPly.id\nIdentifier of the object, used for example as key in maps.\nAnalysisPly.material\n\nAnalysisPly.mesh\nFull mesh associated with the object.\nAnalysisPly.name\nThe name of the object.\nAnalysisPly.nodal_data\n\nAnalysisPly.parent\nThe parent of the object.\nAnalysisPly.shell_mesh\nShell mesh associated with the object.\nAnalysisPly.solid_mesh\nSolid mesh associated with the object.\nAnalysisPly.status\n\nAnalysisPly.thickness\n\nAnalysisPly\nAnalysisPly.active_in_post_mode\nAnalysisPly.angle\nAnalysisPly.elemental_data\nAnalysisPly.id\nAnalysisPly.material\nAnalysisPly.mesh\nAnalysisPly.name\nAnalysisPly.nodal_data\nAnalysisPly.parent\nAnalysisPly.shell_mesh\nAnalysisPly.solid_mesh\nAnalysisPly.status\nAnalysisPly.thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.html#ansys.acp.core.AnalysisPly",
        "title": "AnalysisPly > AnalysisPly > AnalysisPly",
        "section": "AnalysisPly > AnalysisPly",
        "text": "class ansys.acp.core.AnalysisPly\n\nInstantiate an Analysis Ply.\n\nParameters\n\nname (str) – The name of the Analysis Ply.\n\nmaterial (Material) – Material of the Analysis ply.\n\nangle (float) – Angle of the Analysis ply in degrees.\n\nthickness (float) – Thickness of the Analysis ply\n\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nAnalysisPly.active_in_post_mode\n\n\n\nAnalysisPly.angle\n\n\n\nAnalysisPly.elemental_data\n\n\n\nAnalysisPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nAnalysisPly.material\n\n\n\nAnalysisPly.mesh\n\nFull mesh associated with the object.\n\nAnalysisPly.name\n\nThe name of the object.\n\nAnalysisPly.nodal_data\n\n\n\nAnalysisPly.parent\n\nThe parent of the object.\n\nAnalysisPly.shell_mesh\n\nShell mesh associated with the object.\n\nAnalysisPly.solid_mesh\n\nSolid mesh associated with the object.\n\nAnalysisPly.status\n\n\n\nAnalysisPly.thickness\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.html#examples-using-analysisply",
        "title": "AnalysisPly > Examples using AnalysisPly",
        "section": "Examples using AnalysisPly",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using AnalysisPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.angle",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "Orientation angle in degree of the fabric with respect to the reference direction.\nangle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.angle",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.angle.html#ansys.acp.core.FabricWithAngle.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property FabricWithAngle.angle: float\n\nOrientation angle in degree of the fabric with respect to the reference direction.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.full_mapping",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.full_mapping.html#full_mapping",
        "title": "full_mapping",
        "section": "full_mapping",
        "text": "full_mapping"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.full_mapping",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.full_mapping.html#ansys.acp.core.FieldDefinition.full_mapping",
        "title": "full_mapping > full_mapping > full_mapping",
        "section": "full_mapping > full_mapping",
        "text": "property FieldDefinition.full_mapping: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle.html#shear_angle",
        "title": "shear_angle",
        "section": "shear_angle",
        "text": "shear_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle",
        "title": "shear_angle > shear_angle > shear_angle",
        "section": "shear_angle > shear_angle",
        "text": "ProductionPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz.html#esxz",
        "title": "eSxz",
        "section": "eSxz",
        "text": "eSxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz",
        "title": "eSxz > eSxz > eSxz",
        "section": "eSxz > eSxz",
        "text": "property VariableStrainLimits.eSxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.parent.html#ansys.acp.core.VariableOffsetSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property VariableOffsetSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.Material.fabric_fiber_angle.html#fabric_fiber_angle",
        "title": "fabric_fiber_angle",
        "section": "fabric_fiber_angle",
        "text": "fabric_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.fabric_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.Material.fabric_fiber_angle.html#ansys.acp.core.Material.fabric_fiber_angle",
        "title": "fabric_fiber_angle > fabric_fiber_angle > fabric_fiber_angle",
        "section": "fabric_fiber_angle > fabric_fiber_angle",
        "text": "property Material.fabric_fiber_angle: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.html#constantstresslimits",
        "title": "ConstantStressLimits",
        "section": "ConstantStressLimits",
        "text": "Constant stress limits material property set.\nAdded in ACP server version 24.2.\nConstantStressLimits.from_isotropic_constants(*)\nCreate an isotropic stress limits property set.\nConstantStressLimits.from_orthotropic_constants(*)\nCreate an orthotropic stress limits property set.\nConstantStressLimits.Sxy\n\nConstantStressLimits.Sxz\n\nConstantStressLimits.Syz\n\nConstantStressLimits.Xc\n\nConstantStressLimits.Xt\n\nConstantStressLimits.Yc\n\nConstantStressLimits.Yt\n\nConstantStressLimits.Zc\n\nConstantStressLimits.Zt\n\nConstantStressLimits.effective_stress\n\nConstantStressLimits\nConstantStressLimits.from_isotropic_constants\nConstantStressLimits.from_orthotropic_constants\nConstantStressLimits.Sxy\nConstantStressLimits.Sxz\nConstantStressLimits.Syz\nConstantStressLimits.Xc\nConstantStressLimits.Xt\nConstantStressLimits.Yc\nConstantStressLimits.Yt\nConstantStressLimits.Zc\nConstantStressLimits.Zt\nConstantStressLimits.effective_stress"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.html#ansys.acp.core.material_property_sets.ConstantStressLimits",
        "title": "ConstantStressLimits > ConstantStressLimits > ConstantStressLimits",
        "section": "ConstantStressLimits > ConstantStressLimits",
        "text": "class ansys.acp.core.material_property_sets.ConstantStressLimits(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant stress limits material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nConstantStressLimits.from_isotropic_constants(*)\n\nCreate an isotropic stress limits property set.\n\nConstantStressLimits.from_orthotropic_constants(*)\n\nCreate an orthotropic stress limits property set.\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantStressLimits.Sxy\n\n\n\nConstantStressLimits.Sxz\n\n\n\nConstantStressLimits.Syz\n\n\n\nConstantStressLimits.Xc\n\n\n\nConstantStressLimits.Xt\n\n\n\nConstantStressLimits.Yc\n\n\n\nConstantStressLimits.Yt\n\n\n\nConstantStressLimits.Zc\n\n\n\nConstantStressLimits.Zt\n\n\n\nConstantStressLimits.effective_stress\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete_bad_elements",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete_bad_elements.html#delete_bad_elements",
        "title": "delete_bad_elements",
        "section": "delete_bad_elements",
        "text": "delete_bad_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete_bad_elements",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.delete_bad_elements.html#ansys.acp.core.ImportedSolidModel.delete_bad_elements",
        "title": "delete_bad_elements > delete_bad_elements > delete_bad_elements",
        "section": "delete_bad_elements > delete_bad_elements",
        "text": "property ImportedSolidModel.delete_bad_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zt.html#zt",
        "title": "Zt",
        "section": "Zt",
        "text": "Zt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zt.html#ansys.acp.core.material_property_sets.VariableStressLimits.Zt",
        "title": "Zt > Zt > Zt",
        "section": "Zt > Zt",
        "text": "property VariableStressLimits.Zt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.name.html#ansys.acp.core.ImportedAnalysisPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ImportedAnalysisPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_node_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_node_index.html#use_default_node_index",
        "title": "use_default_node_index",
        "section": "use_default_node_index",
        "text": "use_default_node_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_node_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_node_index.html#ansys.acp.core.SolidModelExportSettings.use_default_node_index",
        "title": "use_default_node_index > use_default_node_index > use_default_node_index",
        "section": "use_default_node_index > use_default_node_index",
        "text": "property SolidModelExportSettings.use_default_node_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.variable_offset_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.variable_offset_selection_rules.html#variable_offset_selection_rules",
        "title": "variable_offset_selection_rules",
        "section": "variable_offset_selection_rules",
        "text": "variable_offset_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.variable_offset_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.variable_offset_selection_rules.html#ansys.acp.core.Model.variable_offset_selection_rules",
        "title": "variable_offset_selection_rules > variable_offset_selection_rules > variable_offset_selection_rules",
        "section": "variable_offset_selection_rules > variable_offset_selection_rules",
        "text": "property Model.variable_offset_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.area_price",
        "href": "api/_autosummary/ansys.acp.core.Fabric.area_price.html#area_price",
        "title": "area_price",
        "section": "area_price",
        "text": "area_price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.area_price",
        "href": "api/_autosummary/ansys.acp.core.Fabric.area_price.html#ansys.acp.core.Fabric.area_price",
        "title": "area_price > area_price > area_price",
        "section": "area_price > area_price",
        "text": "property Fabric.area_price: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.active_in_post_mode",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.active_in_post_mode.html#active_in_post_mode",
        "title": "active_in_post_mode",
        "section": "active_in_post_mode",
        "text": "active_in_post_mode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.active_in_post_mode",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.active_in_post_mode.html#ansys.acp.core.ImportedAnalysisPly.active_in_post_mode",
        "title": "active_in_post_mode > active_in_post_mode > active_in_post_mode",
        "section": "active_in_post_mode > active_in_post_mode",
        "text": "property ImportedAnalysisPly.active_in_post_mode: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_direction",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_direction.html#radius_direction",
        "title": "radius_direction",
        "section": "radius_direction",
        "text": "radius_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_direction",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_direction.html#ansys.acp.core.VariableOffsetSelectionRule.radius_direction",
        "title": "radius_direction > radius_direction > radius_direction",
        "section": "radius_direction > radius_direction",
        "text": "property VariableOffsetSelectionRule.radius_direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML.html#materials_xml",
        "title": "MATERIALS_XML",
        "section": "MATERIALS_XML",
        "text": "MATERIALS_XML"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML.html#ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML",
        "title": "MATERIALS_XML > MATERIALS_XML > MATERIALS_XML",
        "section": "MATERIALS_XML > MATERIALS_XML",
        "text": "ExampleKeys.MATERIALS_XML = 14\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "SphericalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.rho",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.rho.html#rho",
        "title": "rho",
        "section": "rho",
        "text": "rho"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.rho",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.rho.html#ansys.acp.core.material_property_sets.VariableDensity.rho",
        "title": "rho > rho > rho",
        "section": "rho > rho",
        "text": "property VariableDensity.rho: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE.html#from_table",
        "title": "FROM_TABLE",
        "section": "FROM_TABLE",
        "text": "FROM_TABLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE.html#ansys.acp.core.ThicknessType.FROM_TABLE",
        "title": "FROM_TABLE > FROM_TABLE > FROM_TABLE",
        "section": "FROM_TABLE > FROM_TABLE",
        "text": "ThicknessType.FROM_TABLE = 'from_table'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE",
        "href": "api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE.html#examples-using-thicknesstypefrom_table",
        "title": "FROM_TABLE > Examples using ThicknessType.FROM_TABLE",
        "section": "Examples using ThicknessType.FROM_TABLE",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ThicknessType.FROM_TABLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12.html#nu12",
        "title": "nu12",
        "section": "nu12",
        "text": "nu12"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12",
        "title": "nu12 > nu12 > nu12",
        "section": "nu12 > nu12",
        "text": "property ConstantEngineeringConstants.nu12: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.UNDEFINED",
        "href": "api/_autosummary/ansys.acp.core.PlyType.UNDEFINED.html#undefined",
        "title": "UNDEFINED",
        "section": "UNDEFINED",
        "text": "UNDEFINED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.UNDEFINED",
        "href": "api/_autosummary/ansys.acp.core.PlyType.UNDEFINED.html#ansys.acp.core.PlyType.UNDEFINED",
        "title": "UNDEFINED > UNDEFINED > UNDEFINED",
        "section": "UNDEFINED > UNDEFINED",
        "text": "PlyType.UNDEFINED = 'undefined'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.status.html#ansys.acp.core.GeometricalSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property GeometricalSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.shell_mesh.html#ansys.acp.core.ModelingPly.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property ModelingPly.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette",
        "href": "api/_autosummary/ansys.acp.core.Rosette.html#rosette",
        "title": "Rosette",
        "section": "Rosette",
        "text": "Instantiate a Rosette.\nname (str) – Name of the rosette.\nrosette_type (RosetteType) – Type of the rosette.\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\nAdded in ACP server version 24.2.\nRosette.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nRosette.delete()\nDelete the object.\nRosette.store(parent)\nStore the object on the server.\nRosette.dir1\n\nRosette.dir2\n\nRosette.edge_set\n\nRosette.id\nIdentifier of the object, used for example as key in maps.\nRosette.locked\n\nRosette.name\nThe name of the object.\nRosette.origin\n\nRosette.parent\nThe parent of the object.\nRosette.rosette_type\n\nRosette.status\n\nRosette\nRosetteType.EDGE_WISE\nRosette.clone\nRosette.delete\nRosette.store\nRosette.dir1\nRosette.dir2\nRosette.edge_set\nRosette.id\nRosette.locked\nRosette.name\nRosette.origin\nRosette.parent\nRosette.rosette_type\nRosette.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette",
        "href": "api/_autosummary/ansys.acp.core.Rosette.html#ansys.acp.core.Rosette",
        "title": "Rosette > Rosette > Rosette",
        "section": "Rosette > Rosette",
        "text": "class ansys.acp.core.Rosette(*, name='Rosette', rosette_type='parallel', origin=(0.0, 0.0, 0.0), dir1=(1.0, 0.0, 0.0), dir2=(0.0, 1.0, 0.0), edge_set=None)\n\nInstantiate a Rosette.\n\nParameters\n\nname (str) – Name of the rosette.\n\nrosette_type (RosetteType) – Type of the rosette.\n\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\n\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\n\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\n\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nRosette.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nRosette.delete()\n\nDelete the object.\n\nRosette.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nRosette.dir1\n\n\n\nRosette.dir2\n\n\n\nRosette.edge_set\n\n\n\nRosette.id\n\nIdentifier of the object, used for example as key in maps.\n\nRosette.locked\n\n\n\nRosette.name\n\nThe name of the object.\n\nRosette.origin\n\n\n\nRosette.parent\n\nThe parent of the object.\n\nRosette.rosette_type\n\n\n\nRosette.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette",
        "href": "api/_autosummary/ansys.acp.core.Rosette.html#examples-using-rosette",
        "title": "Rosette > Examples using Rosette",
        "section": "Examples using Rosette",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction.html#transverse_direction",
        "title": "transverse_direction",
        "section": "transverse_direction",
        "text": "transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction",
        "title": "transverse_direction > transverse_direction > transverse_direction",
        "section": "transverse_direction > transverse_direction",
        "text": "ProductionPlyElementalData.transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.entities",
        "href": "api/_autosummary/ansys.acp.core.Sensor.entities.html#entities",
        "title": "entities",
        "section": "entities",
        "text": "entities"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.entities",
        "href": "api/_autosummary/ansys.acp.core.Sensor.entities.html#ansys.acp.core.Sensor.entities",
        "title": "entities > entities > entities",
        "section": "entities > entities",
        "text": "property Sensor.entities: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.entities",
        "href": "api/_autosummary/ansys.acp.core.Sensor.entities.html#examples-using-sensorentities",
        "title": "entities > Examples using Sensor.entities",
        "section": "Examples using Sensor.entities",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using Sensor.entities"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.component_name",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.component_name.html#component_name",
        "title": "component_name",
        "section": "component_name",
        "text": "Name of the component.\ncomponent_name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.component_name",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.component_name.html#ansys.acp.core.mesh_data.ScalarData.component_name",
        "title": "component_name > component_name > component_name",
        "section": "component_name > component_name",
        "text": "property ScalarData.component_name: str\n\nName of the component.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.NOTUPTODATE",
        "href": "api/_autosummary/ansys.acp.core.Status.NOTUPTODATE.html#notuptodate",
        "title": "NOTUPTODATE",
        "section": "NOTUPTODATE",
        "text": "NOTUPTODATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.NOTUPTODATE",
        "href": "api/_autosummary/ansys.acp.core.Status.NOTUPTODATE.html#ansys.acp.core.Status.NOTUPTODATE",
        "title": "NOTUPTODATE > NOTUPTODATE > NOTUPTODATE",
        "section": "NOTUPTODATE > NOTUPTODATE",
        "text": "Status.NOTUPTODATE = 'NOTUPTODATE'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.name",
        "href": "api/_autosummary/ansys.acp.core.Stackup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.name",
        "href": "api/_autosummary/ansys.acp.core.Stackup.name.html#ansys.acp.core.Stackup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Stackup.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.solid_mesh.html#solid_mesh",
        "title": "solid_mesh",
        "section": "solid_mesh",
        "text": "Solid mesh associated with the object.\nsolid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.solid_mesh.html#ansys.acp.core.Model.solid_mesh",
        "title": "solid_mesh > solid_mesh > solid_mesh",
        "section": "solid_mesh > solid_mesh",
        "text": "property Model.solid_mesh: MeshData\n\nSolid mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.solid_mesh.html#examples-using-modelsolid_mesh",
        "title": "solid_mesh > Examples using Model.solid_mesh",
        "section": "Examples using Model.solid_mesh",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.solid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.html#layupmappingobject",
        "title": "LayupMappingObject",
        "section": "LayupMappingObject",
        "text": "Instantiate a layup mapping object.\nname (str) – Name of the layup mapping object.\nactive (bool) – Inactive layup mapping objects are not used.\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\nDetermines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.\nIf use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\nDetermines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.\nIf use_imported_plies is False, modeling groups and modeling\nplies are allowed\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\nAdded in ACP server version 25.1.\nLayupMappingObject.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nLayupMappingObject.delete()\nDelete the object.\nLayupMappingObject.store(parent)\nStore the object on the server.\nLayupMappingObject.active\n\nLayupMappingObject.base_element_material_handling\n\nLayupMappingObject.base_element_rosette_selection_method\n\nLayupMappingObject.base_element_rosettes\n\nLayupMappingObject.base_material\n\nLayupMappingObject.delete_lost_elements\n\nLayupMappingObject.element_technology\n\nLayupMappingObject.entire_solid_mesh\n\nLayupMappingObject.filler_material\n\nLayupMappingObject.id\nIdentifier of the object, used for example as key in maps.\nLayupMappingObject.minimum_void_material_thickness\n\nLayupMappingObject.name\nThe name of the object.\nLayupMappingObject.parent\nThe parent of the object.\nLayupMappingObject.reinforcing_behavior\n\nLayupMappingObject.rosette_selection_method\n\nLayupMappingObject.rosettes\n\nLayupMappingObject.scale_ply_thicknesses\n\nLayupMappingObject.select_all_plies\n\nLayupMappingObject.sequences\n\nLayupMappingObject.shell_element_sets\n\nLayupMappingObject.solid_element_sets\n\nLayupMappingObject.status\n\nLayupMappingObject.stress_state\n\nLayupMappingObject.use_imported_plies\n\nLayupMappingObject.void_material\n\nLayupMappingObject\n\"layered_element\"\n\"reinforcing\"\nuse_imported_plies\nsequences\nuse_imported_plies\nselect_all_plies\nuse_imported_plies\nselect_all_plies\nuse_imported_plies\nuse_imported_plies\nsolid_element_sets\nelement_technology\n\"layered_element\"\nscale_ply_thicknesses\nelement_technology\n\"layered_element\"\nscale_ply_thicknesses\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\ndelete_lost_elements\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\nelement_technology\n\"layered_element\"\nelement_technology\n\"reinforcing\"\n\"remove\"\n\"retain\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nelement_technology\n\"reinforcing\"\nLayupMappingObject.clone\nLayupMappingObject.delete\nLayupMappingObject.store\nLayupMappingObject.active\nLayupMappingObject.base_element_material_handling\nLayupMappingObject.base_element_rosette_selection_method\nLayupMappingObject.base_element_rosettes\nLayupMappingObject.base_material\nLayupMappingObject.delete_lost_elements\nLayupMappingObject.element_technology\nLayupMappingObject.entire_solid_mesh\nLayupMappingObject.filler_material\nLayupMappingObject.id\nLayupMappingObject.minimum_void_material_thickness\nLayupMappingObject.name\nLayupMappingObject.parent\nLayupMappingObject.reinforcing_behavior\nLayupMappingObject.rosette_selection_method\nLayupMappingObject.rosettes\nLayupMappingObject.scale_ply_thicknesses\nLayupMappingObject.select_all_plies\nLayupMappingObject.sequences\nLayupMappingObject.shell_element_sets\nLayupMappingObject.solid_element_sets\nLayupMappingObject.status\nLayupMappingObject.stress_state\nLayupMappingObject.use_imported_plies\nLayupMappingObject.void_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.html#ansys.acp.core.LayupMappingObject",
        "title": "LayupMappingObject > LayupMappingObject > LayupMappingObject",
        "section": "LayupMappingObject > LayupMappingObject",
        "text": "class ansys.acp.core.LayupMappingObject(*, name='LayupMappingObject', active=True, element_technology='layered_element', shell_element_sets=(), use_imported_plies=False, select_all_plies=True, sequences=(), entire_solid_mesh=True, solid_element_sets=(), scale_ply_thicknesses=True, void_material=None, minimum_void_material_thickness=1e-06, delete_lost_elements=True, filler_material=None, rosettes=(), rosette_selection_method='minimum_distance', reinforcing_behavior='tension_and_compression', base_element_material_handling='remove', stress_state='plane_stress_state_with_transverse_shear_and_bending_stiffness', base_material=None, base_element_rosettes=(), base_element_rosette_selection_method='minimum_distance')\n\nInstantiate a layup mapping object.\n\nParameters\n\nname (str) – Name of the layup mapping object.\n\nactive (bool) – Inactive layup mapping objects are not used.\n\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\n\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\n\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\n\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\n\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\n\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\n\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\n\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\n\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\n\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\n\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\n\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\n\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLayupMappingObject.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nLayupMappingObject.delete()\n\nDelete the object.\n\nLayupMappingObject.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLayupMappingObject.active\n\n\n\nLayupMappingObject.base_element_material_handling\n\n\n\nLayupMappingObject.base_element_rosette_selection_method\n\n\n\nLayupMappingObject.base_element_rosettes\n\n\n\nLayupMappingObject.base_material\n\n\n\nLayupMappingObject.delete_lost_elements\n\n\n\nLayupMappingObject.element_technology\n\n\n\nLayupMappingObject.entire_solid_mesh\n\n\n\nLayupMappingObject.filler_material\n\n\n\nLayupMappingObject.id\n\nIdentifier of the object, used for example as key in maps.\n\nLayupMappingObject.minimum_void_material_thickness\n\n\n\nLayupMappingObject.name\n\nThe name of the object.\n\nLayupMappingObject.parent\n\nThe parent of the object.\n\nLayupMappingObject.reinforcing_behavior\n\n\n\nLayupMappingObject.rosette_selection_method\n\n\n\nLayupMappingObject.rosettes\n\n\n\nLayupMappingObject.scale_ply_thicknesses\n\n\n\nLayupMappingObject.select_all_plies\n\n\n\nLayupMappingObject.sequences\n\n\n\nLayupMappingObject.shell_element_sets\n\n\n\nLayupMappingObject.solid_element_sets\n\n\n\nLayupMappingObject.status\n\n\n\nLayupMappingObject.stress_state\n\n\n\nLayupMappingObject.use_imported_plies\n\n\n\nLayupMappingObject.void_material\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.store",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.store",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.store.html#ansys.acp.core.SamplingPoint.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SamplingPoint.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.delete",
        "href": "api/_autosummary/ansys.acp.core.Model.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.delete",
        "href": "api/_autosummary/ansys.acp.core.Model.delete.html#ansys.acp.core.Model.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Model.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.html#hdf5compositecaeprojectionmode",
        "title": "HDF5CompositeCAEProjectionMode",
        "section": "HDF5CompositeCAEProjectionMode",
        "text": "Options for the projection mode of the HDF5 Composite CAE file.\nHDF5CompositeCAEProjectionMode.SHELL\n\nHDF5CompositeCAEProjectionMode.SOLID\n\nHDF5CompositeCAEProjectionMode\nHDF5CompositeCAEProjectionMode.SHELL\nHDF5CompositeCAEProjectionMode.SOLID"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.html#ansys.acp.core.HDF5CompositeCAEProjectionMode",
        "title": "HDF5CompositeCAEProjectionMode > HDF5CompositeCAEProjectionMode > HDF5CompositeCAEProjectionMode",
        "section": "HDF5CompositeCAEProjectionMode > HDF5CompositeCAEProjectionMode",
        "text": "class ansys.acp.core.HDF5CompositeCAEProjectionMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the projection mode of the HDF5 Composite CAE file.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nHDF5CompositeCAEProjectionMode.SHELL\n\n\n\nHDF5CompositeCAEProjectionMode.SOLID\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.html#examples-using-hdf5compositecaeprojectionmode",
        "title": "HDF5CompositeCAEProjectionMode > Examples using HDF5CompositeCAEProjectionMode",
        "section": "Examples using HDF5CompositeCAEProjectionMode",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using HDF5CompositeCAEProjectionMode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.price.html#price",
        "title": "price",
        "section": "price",
        "text": "price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.price.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.price",
        "title": "price > price > price",
        "section": "price > price",
        "text": "AnalysisPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "TubeSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED.html#minimum_angle_superposed",
        "title": "MINIMUM_ANGLE_SUPERPOSED",
        "section": "MINIMUM_ANGLE_SUPERPOSED",
        "text": "MINIMUM_ANGLE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED.html#ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED",
        "title": "MINIMUM_ANGLE_SUPERPOSED > MINIMUM_ANGLE_SUPERPOSED > MINIMUM_ANGLE_SUPERPOSED",
        "section": "MINIMUM_ANGLE_SUPERPOSED > MINIMUM_ANGLE_SUPERPOSED",
        "text": "RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED = 'minimum_angle_superposed'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.reference_direction_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.reference_direction_field.html#reference_direction_field",
        "title": "reference_direction_field",
        "section": "reference_direction_field",
        "text": "reference_direction_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.reference_direction_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.reference_direction_field.html#ansys.acp.core.ImportedModelingPly.reference_direction_field",
        "title": "reference_direction_field > reference_direction_field > reference_direction_field",
        "section": "reference_direction_field > reference_direction_field",
        "text": "property ImportedModelingPly.reference_direction_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry.html#create_cad_geometry",
        "title": "create_cad_geometry",
        "section": "create_cad_geometry",
        "text": "Instantiate a CAD Geometry.\nname (str) – Name of the CAD Geometry.\nexternal_path (str) – Path to the CAD file.\nscale_factor (float) – Scale factor applied to the CAD geometry.\nuse_default_precision (bool) – Whether to use the default precision value.\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\nuse_default_offset (bool) – Whether to use the default offset value.\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\nCADGeometry\nAdded in ACP server version 24.2.\ncreate_cad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry.html#ansys.acp.core.Model.create_cad_geometry",
        "title": "create_cad_geometry > create_cad_geometry > create_cad_geometry",
        "section": "create_cad_geometry > create_cad_geometry",
        "text": "Model.create_cad_geometry(*, name='CADGeometry', external_path='', scale_factor=1.0, use_default_precision=True, precision=0.001, use_default_offset=True, offset=0.0)\n\nInstantiate a CAD Geometry.\n\nParameters\n\nname (str) – Name of the CAD Geometry.\n\nexternal_path (str) – Path to the CAD file.\n\nscale_factor (float) – Scale factor applied to the CAD geometry.\n\nuse_default_precision (bool) – Whether to use the default precision value.\n\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\n\nuse_default_offset (bool) – Whether to use the default offset value.\n\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\n\nReturn type\n\nCADGeometry\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cad_geometry.html#examples-using-modelcreate_cad_geometry",
        "title": "create_cad_geometry > Examples using Model.create_cad_geometry",
        "section": "Examples using Model.create_cad_geometry",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using Model.create_cad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.html#cutoffselectionrulenodaldata",
        "title": "CutOffSelectionRuleNodalData",
        "section": "CutOffSelectionRuleNodalData",
        "text": "Represents nodal data for a Cut-Off Selection Rule.\nCutOffSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nCutOffSelectionRuleNodalData.node_labels\n\nCutOffSelectionRuleNodalData\nCutOffSelectionRuleNodalData.get_pyvista_mesh\nCutOffSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.html#ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData",
        "title": "CutOffSelectionRuleNodalData > CutOffSelectionRuleNodalData > CutOffSelectionRuleNodalData",
        "section": "CutOffSelectionRuleNodalData > CutOffSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Cut-Off Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCutOffSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCutOffSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._model_printer.Node",
        "href": "api/_autosummary/ansys.acp.core._model_printer.Node.html#node",
        "title": "Node",
        "section": "Node",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nA node in a tree representation of the model.\nlabel (str) – Label of the node.\nchildren (list[Node] | None) – Children of the node.\nNode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._model_printer.Node",
        "href": "api/_autosummary/ansys.acp.core._model_printer.Node.html#ansys.acp.core._model_printer.Node",
        "title": "Node > Node > Node",
        "section": "Node > Node",
        "text": "class ansys.acp.core._model_printer.Node(label, children=None)\n\nA node in a tree representation of the model.\n\nParameters\n\nlabel (str) – Label of the node.\n\nchildren (list[Node] | None) – Children of the node.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.clone",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.clone",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.clone.html#ansys.acp.core.FieldDefinition.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "FieldDefinition.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ModelingPlyElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.html#solidmodelimportformat",
        "title": "SolidModelImportFormat",
        "section": "SolidModelImportFormat",
        "text": "Options for the file format when importing a solid model.\nSolidModelImportFormat.ANSYS_H5\n\nSolidModelImportFormat.ANSYS_CDB\n\nSolidModelImportFormat.ANSYS_DAT\n\nSolidModelImportFormat\nSolidModelImportFormat.ANSYS_H5\nSolidModelImportFormat.ANSYS_CDB\nSolidModelImportFormat.ANSYS_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.html#ansys.acp.core.SolidModelImportFormat",
        "title": "SolidModelImportFormat > SolidModelImportFormat > SolidModelImportFormat",
        "section": "SolidModelImportFormat > SolidModelImportFormat",
        "text": "class ansys.acp.core.SolidModelImportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the file format when importing a solid model.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolidModelImportFormat.ANSYS_H5\n\n\n\nSolidModelImportFormat.ANSYS_CDB\n\n\n\nSolidModelImportFormat.ANSYS_DAT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB.html#basic_flat_plate_solid_mesh_cdb",
        "title": "BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "section": "BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "text": "BASIC_FLAT_PLATE_SOLID_MESH_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB.html#ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "title": "BASIC_FLAT_PLATE_SOLID_MESH_CDB > BASIC_FLAT_PLATE_SOLID_MESH_CDB > BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "section": "BASIC_FLAT_PLATE_SOLID_MESH_CDB > BASIC_FLAT_PLATE_SOLID_MESH_CDB",
        "text": "ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB = 4\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.html#launchmode",
        "title": "LaunchMode",
        "section": "LaunchMode",
        "text": "Available launch modes for ACP.\nLaunchMode.encode(/[, encoding, errors])\nEncode the string using the codec registered for encoding.\nLaunchMode.replace(old, new[, count])\nReturn a copy with all occurrences of substring old replaced by new.\nLaunchMode.split(/[, sep, maxsplit])\nReturn a list of the substrings in the string, using sep as the separator string.\nLaunchMode.rsplit(/[, sep, maxsplit])\nReturn a list of the substrings in the string, using sep as the separator string.\nLaunchMode.join(iterable, /)\nConcatenate any number of strings.\nLaunchMode.capitalize(/)\nReturn a capitalized version of the string.\nLaunchMode.casefold(/)\nReturn a version of the string suitable for caseless comparisons.\nLaunchMode.title(/)\nReturn a version of the string where each word is titlecased.\nLaunchMode.center(width[, fillchar])\nReturn a centered string of length width.\nLaunchMode.count(sub[, start[, end]])\nReturn the number of non-overlapping occurrences of substring sub in string S[start:end].\nLaunchMode.expandtabs(/[, tabsize])\nReturn a copy where all tab characters are expanded using spaces.\nLaunchMode.find(sub[, start[, end]])\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\nLaunchMode.partition(sep, /)\nPartition the string into three parts using the given separator.\nLaunchMode.index(sub[, start[, end]])\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\nLaunchMode.ljust(width[, fillchar])\nReturn a left-justified string of length width.\nLaunchMode.lower(/)\nReturn a copy of the string converted to lowercase.\nLaunchMode.lstrip([chars])\nReturn a copy of the string with leading whitespace removed.\nLaunchMode.rfind(sub[, start[, end]])\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\nLaunchMode.rindex(sub[, start[, end]])\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\nLaunchMode.rjust(width[, fillchar])\nReturn a right-justified string of length width.\nLaunchMode.rstrip([chars])\nReturn a copy of the string with trailing whitespace removed.\nLaunchMode.rpartition(sep, /)\nPartition the string into three parts using the given separator.\nLaunchMode.splitlines(/[, keepends])\nReturn a list of the lines in the string, breaking at line boundaries.\nLaunchMode.strip([chars])\nReturn a copy of the string with leading and trailing whitespace removed.\nLaunchMode.swapcase(/)\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\nLaunchMode.translate(table, /)\nReplace each character in the string using the given translation table.\nLaunchMode.upper(/)\nReturn a copy of the string converted to uppercase.\nLaunchMode.startswith(prefix[, start[, end]])\nReturn True if S starts with the specified prefix, False otherwise.\nLaunchMode.endswith(suffix[, start[, end]])\nReturn True if S ends with the specified suffix, False otherwise.\nLaunchMode.removeprefix(prefix, /)\nReturn a str with the given prefix string removed if present.\nLaunchMode.removesuffix(suffix, /)\nReturn a str with the given suffix string removed if present.\nLaunchMode.isascii(/)\nReturn True if all characters in the string are ASCII, False otherwise.\nLaunchMode.islower(/)\nReturn True if the string is a lowercase string, False otherwise.\nLaunchMode.isupper(/)\nReturn True if the string is an uppercase string, False otherwise.\nLaunchMode.istitle(/)\nReturn True if the string is a title-cased string, False otherwise.\nLaunchMode.isspace(/)\nReturn True if the string is a whitespace string, False otherwise.\nLaunchMode.isdecimal(/)\nReturn True if the string is a decimal string, False otherwise.\nLaunchMode.isdigit(/)\nReturn True if the string is a digit string, False otherwise.\nLaunchMode.isnumeric(/)\nReturn True if the string is a numeric string, False otherwise.\nLaunchMode.isalpha(/)\nReturn True if the string is an alphabetic string, False otherwise.\nLaunchMode.isalnum(/)\nReturn True if the string is an alpha-numeric string, False otherwise.\nLaunchMode.isidentifier(/)\nReturn True if the string is a valid Python identifier, False otherwise.\nLaunchMode.isprintable(/)\nReturn True if all characters in the string are printable, False otherwise.\nLaunchMode.zfill(width, /)\nPad a numeric string with zeros on the left, to fill a field of the given width.\nLaunchMode.format(*args, **kwargs)\nReturn a formatted version of S, using substitutions from args and kwargs.\nLaunchMode.format_map(mapping)\nReturn a formatted version of S, using substitutions from mapping.\nLaunchMode.maketrans(x[, y, z])\nReturn a translation table usable for str.translate().\nLaunchMode.DIRECT\n\nLaunchMode.DOCKER_COMPOSE\n\nLaunchMode.CONNECT\n\nLaunchMode\nLaunchMode.encode\nLaunchMode.replace\nLaunchMode.split\nLaunchMode.rsplit\nLaunchMode.join\nLaunchMode.capitalize\nLaunchMode.casefold\nLaunchMode.title\nLaunchMode.center\nLaunchMode.count\nLaunchMode.expandtabs\nLaunchMode.find\nLaunchMode.partition\nLaunchMode.index\nLaunchMode.ljust\nLaunchMode.lower\nLaunchMode.lstrip\nLaunchMode.rfind\nLaunchMode.rindex\nLaunchMode.rjust\nLaunchMode.rstrip\nLaunchMode.rpartition\nLaunchMode.splitlines\nLaunchMode.strip\nLaunchMode.swapcase\nLaunchMode.translate\nLaunchMode.upper\nLaunchMode.startswith\nLaunchMode.endswith\nLaunchMode.removeprefix\nLaunchMode.removesuffix\nLaunchMode.isascii\nLaunchMode.islower\nLaunchMode.isupper\nLaunchMode.istitle\nLaunchMode.isspace\nLaunchMode.isdecimal\nLaunchMode.isdigit\nLaunchMode.isnumeric\nLaunchMode.isalpha\nLaunchMode.isalnum\nLaunchMode.isidentifier\nLaunchMode.isprintable\nLaunchMode.zfill\nLaunchMode.format\nLaunchMode.format_map\nLaunchMode.maketrans\nLaunchMode.DIRECT\nLaunchMode.DOCKER_COMPOSE\nLaunchMode.CONNECT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.html#ansys.acp.core.LaunchMode",
        "title": "LaunchMode > LaunchMode > LaunchMode",
        "section": "LaunchMode > LaunchMode",
        "text": "class ansys.acp.core.LaunchMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nAvailable launch modes for ACP.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLaunchMode.encode(/[, encoding, errors])\n\nEncode the string using the codec registered for encoding.\n\nLaunchMode.replace(old, new[, count])\n\nReturn a copy with all occurrences of substring old replaced by new.\n\nLaunchMode.split(/[, sep, maxsplit])\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nLaunchMode.rsplit(/[, sep, maxsplit])\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nLaunchMode.join(iterable, /)\n\nConcatenate any number of strings.\n\nLaunchMode.capitalize(/)\n\nReturn a capitalized version of the string.\n\nLaunchMode.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons.\n\nLaunchMode.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nLaunchMode.center(width[, fillchar])\n\nReturn a centered string of length width.\n\nLaunchMode.count(sub[, start[, end]])\n\nReturn the number of non-overlapping occurrences of substring sub in string S[start:end].\n\nLaunchMode.expandtabs(/[, tabsize])\n\nReturn a copy where all tab characters are expanded using spaces.\n\nLaunchMode.find(sub[, start[, end]])\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nLaunchMode.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nLaunchMode.index(sub[, start[, end]])\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nLaunchMode.ljust(width[, fillchar])\n\nReturn a left-justified string of length width.\n\nLaunchMode.lower(/)\n\nReturn a copy of the string converted to lowercase.\n\nLaunchMode.lstrip([chars])\n\nReturn a copy of the string with leading whitespace removed.\n\nLaunchMode.rfind(sub[, start[, end]])\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nLaunchMode.rindex(sub[, start[, end]])\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S[start:end].\n\nLaunchMode.rjust(width[, fillchar])\n\nReturn a right-justified string of length width.\n\nLaunchMode.rstrip([chars])\n\nReturn a copy of the string with trailing whitespace removed.\n\nLaunchMode.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nLaunchMode.splitlines(/[, keepends])\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLaunchMode.strip([chars])\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nLaunchMode.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\nLaunchMode.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\nLaunchMode.upper(/)\n\nReturn a copy of the string converted to uppercase.\n\nLaunchMode.startswith(prefix[, start[, end]])\n\nReturn True if S starts with the specified prefix, False otherwise.\n\nLaunchMode.endswith(suffix[, start[, end]])\n\nReturn True if S ends with the specified suffix, False otherwise.\n\nLaunchMode.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nLaunchMode.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nLaunchMode.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nLaunchMode.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nLaunchMode.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nLaunchMode.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nLaunchMode.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nLaunchMode.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nLaunchMode.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nLaunchMode.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nLaunchMode.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nLaunchMode.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nLaunchMode.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nLaunchMode.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nLaunchMode.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nLaunchMode.format(*args, **kwargs)\n\nReturn a formatted version of S, using substitutions from args and kwargs.\n\nLaunchMode.format_map(mapping)\n\nReturn a formatted version of S, using substitutions from mapping.\n\nLaunchMode.maketrans(x[, y, z])\n\nReturn a translation table usable for str.translate().\n\n\n\nAttributes\n\n\n\n\n\n\n\nLaunchMode.DIRECT\n\n\n\nLaunchMode.DOCKER_COMPOSE\n\n\n\nLaunchMode.CONNECT\n\n\n\n"
    },
    {
        "objectID": "api/tree_objects",
        "href": "api/tree_objects.html#acp-objects",
        "title": "ACP objects",
        "section": "ACP objects",
        "text": "AnalysisPly()\nInstantiate an Analysis Ply.\nBooleanSelectionRule(*[, name, ...])\nInstantiate a Boolean Selection Rule.\nButtJointSequence(*[, name, active, ...])\nInstantiate a ButtJointSequence.\nCADComponent()\nInstantiate a CAD Component.\nCADGeometry(*[, name, external_path, ...])\nInstantiate a CAD Geometry.\nCutOffGeometry(*[, name, active, ...])\nInstantiate a cut-off geometry.\nCutOffSelectionRule(*[, name, ...])\nInstantiate a Cut-Off Selection Rule.\nCylindricalSelectionRule(*[, name, ...])\nInstantiate a Cylindrical Selection Rule.\nEdgeSet(*[, name, edge_set_type, ...])\nInstantiate an edge set.\nElementSet(*[, name, middle_offset, ...])\nInstantiate an Element Set.\nExtrusionGuide(*[, name, active, edge_set, ...])\nInstantiate an Extrusion Guide of a Solid Model.\nFabric(*[, name, material, thickness, ...])\nInstantiate a Fabric.\nFieldDefinition(*[, name, active, ...])\nInstantiate a Field Definition.\nGeometricalSelectionRule(*[, name, ...])\nInstantiate a Geometrical Selection Rule.\nImportedAnalysisPly()\nInstantiate an Imported Analysis Ply.\nImportedModelingGroup(*[, name])\nInstantiate an imported modeling group.\nImportedModelingPly(*[, name, active, ...])\nInstantiate an Imported Modeling Ply.\nImportedProductionPly()\nInstantiate an Imported Production Ply.\nImportedSolidModel(*[, name, active, ...])\nInstantiate an imported solid model.\nInterfaceLayer(*[, name, global_ply_nr, ...])\nInstantiate an interface layer.\nLayupMappingObject(*[, name, active, ...])\nInstantiate a layup mapping object.\nLookUpTable1D(*[, name, origin, direction])\nInstantiate a 1D Look-Up Table.\nLookUpTable1DColumn(*[, name, value_type, ...])\nInstantiate a Column of a 1D Look-Up Table.\nLookUpTable3D(*[, name, ...])\nInstantiate a 3D Look-Up Table.\nLookUpTable3DColumn(*[, name, value_type, ...])\nInstantiate a Column of a 3D Look-Up Table.\nMaterial(*[, name, ply_type, density, ...])\nInstantiate a Material.\nModel(*[, name, use_nodal_thicknesses, ...])\nDefines an ACP Model.\nModelingGroup(*[, name])\nInstantiate a modeling group.\nModelingPly(*[, name, ply_material, ...])\nInstantiate a Modeling Ply.\nOrientedSelectionSet(*[, name, ...])\nInstantiate an Oriented Selection Set.\nParallelSelectionRule(*[, name, ...])\nInstantiate a Parallel Selection Rule.\nProductionPly()\nInstantiate a Production Ply.\nRosette(*[, name, rosette_type, origin, ...])\nInstantiate a Rosette.\nSamplingPoint(*[, name, point, direction, ...])\nInstantiate a Sampling Point.\nSectionCut(*[, name, active, origin, ...])\nInstantiate a Section Cut.\nSensor(*[, name, sensor_type, active, entities])\nInstantiate a Sensor.\nSnapToGeometry(*[, name, active, ...])\nInstantiate a snap-to geometry.\nSolidElementSet()\nInstantiate a Solid Element Set.\nSolidModel(*[, name, active, element_sets, ...])\nInstantiate a solid model.\nSphericalSelectionRule(*[, name, ...])\nInstantiate a Spherical Selection Rule.\nStackup(*[, name, symmetry, topdown, ...])\nInstantiate a Stackup.\nSubLaminate(*[, name, symmetry, topdown, ...])\nInstantiate a SubLaminate.\nTubeSelectionRule(*[, name, edge_set, ...])\nInstantiate a Tube Selection Rule.\nVariableOffsetSelectionRule(*[, name, ...])\nInstantiate a Variable Offset Selection Rule.\nVirtualGeometry(*[, name, cad_components, ...])\nInstantiate a Virtual Geometry.\nACP objects\nAnalysisPly\nBooleanSelectionRule\nButtJointSequence\nCADComponent\nCADGeometry\nCutOffGeometry\nCutOffSelectionRule\nCylindricalSelectionRule\nEdgeSet\nElementSet\nExtrusionGuide\nFabric\nFieldDefinition\nGeometricalSelectionRule\nImportedAnalysisPly\nImportedModelingGroup\nImportedModelingPly\nImportedProductionPly\nImportedSolidModel\nInterfaceLayer\nLayupMappingObject\nLookUpTable1D\nLookUpTable1DColumn\nLookUpTable3D\nLookUpTable3DColumn\nMaterial\nModel\nModelingGroup\nModelingPly\nOrientedSelectionSet\nParallelSelectionRule\nProductionPly\nRosette\nSamplingPoint\nSectionCut\nSensor\nSnapToGeometry\nSolidElementSet\nSolidModel\nSphericalSelectionRule\nStackup\nSubLaminate\nTubeSelectionRule\nVariableOffsetSelectionRule\nVirtualGeometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableWovenStressLimits.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.intersection_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.intersection_type.html#intersection_type",
        "title": "intersection_type",
        "section": "intersection_type",
        "text": "intersection_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.intersection_type",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.intersection_type.html#ansys.acp.core.SectionCut.intersection_type",
        "title": "intersection_type > intersection_type > intersection_type",
        "section": "intersection_type > intersection_type",
        "text": "property SectionCut.intersection_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "AnalysisPlyElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.nodal_data.html#ansys.acp.core.OrientedSelectionSet.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property OrientedSelectionSet.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD.html#add",
        "title": "ADD",
        "section": "ADD",
        "text": "ADD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD.html#ansys.acp.core.BooleanOperationType.ADD",
        "title": "ADD > ADD > ADD",
        "section": "ADD > ADD",
        "text": "BooleanOperationType.ADD = 'add'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.ADD.html#examples-using-booleanoperationtypeadd",
        "title": "ADD > Examples using BooleanOperationType.ADD",
        "section": "Examples using BooleanOperationType.ADD",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using BooleanOperationType.ADD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.mesh.html#ansys.acp.core.ModelingPly.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property ModelingPly.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.mesh.html#examples-using-modelingplymesh",
        "title": "mesh > Examples using ModelingPly.mesh",
        "section": "Examples using ModelingPly.mesh",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using ModelingPly.mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.stackups",
        "href": "api/_autosummary/ansys.acp.core.Model.stackups.html#stackups",
        "title": "stackups",
        "section": "stackups",
        "text": "stackups"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.stackups",
        "href": "api/_autosummary/ansys.acp.core.Model.stackups.html#ansys.acp.core.Model.stackups",
        "title": "stackups > stackups > stackups",
        "section": "stackups > stackups",
        "text": "property Model.stackups: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants.html#from_isotropic_constants",
        "title": "from_isotropic_constants",
        "section": "from_isotropic_constants",
        "text": "Create an isotropic stress limits property set.\neffective_stress (float) – Effective stress limit.\nAn isotropic stress limits property set.\nSelf\nfrom_isotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants.html#ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants",
        "title": "from_isotropic_constants > from_isotropic_constants > from_isotropic_constants",
        "section": "from_isotropic_constants > from_isotropic_constants",
        "text": "classmethod ConstantStressLimits.from_isotropic_constants(*, effective_stress=0.0)\n\nCreate an isotropic stress limits property set.\n\nParameters\n\neffective_stress (float) – Effective stress limit.\n\nReturns\n\nAn isotropic stress limits property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SolidElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.parent",
        "href": "api/_autosummary/ansys.acp.core.Sensor.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.parent",
        "href": "api/_autosummary/ansys.acp.core.Sensor.parent.html#ansys.acp.core.Sensor.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Sensor.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.solid_element_sets.html#solid_element_sets",
        "title": "solid_element_sets",
        "section": "solid_element_sets",
        "text": "solid_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.solid_element_sets.html#ansys.acp.core.LayupMappingObject.solid_element_sets",
        "title": "solid_element_sets > solid_element_sets > solid_element_sets",
        "section": "solid_element_sets > solid_element_sets",
        "text": "property LayupMappingObject.solid_element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "CutOffSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2.html#nu12_2",
        "title": "nu12_2",
        "section": "nu12_2",
        "text": "nu12_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2",
        "title": "nu12_2 > nu12_2 > nu12_2",
        "section": "nu12_2 > nu12_2",
        "text": "property ConstantWovenCharacterization.nu12_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType.INSIDE_PLY",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.INSIDE_PLY.html#inside_ply",
        "title": "INSIDE_PLY",
        "section": "INSIDE_PLY",
        "text": "INSIDE_PLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType.INSIDE_PLY",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.INSIDE_PLY.html#ansys.acp.core.DropOffType.INSIDE_PLY",
        "title": "INSIDE_PLY > INSIDE_PLY > INSIDE_PLY",
        "section": "INSIDE_PLY > INSIDE_PLY",
        "text": "DropOffType.INSIDE_PLY = 'inside_ply'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.title",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.title.html#title",
        "title": "title",
        "section": "title",
        "text": "Return a version of the string where each word is titlecased.\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case.\ntitle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.title",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.title.html#ansys.acp.core.material_property_sets.PuckMaterialType.title",
        "title": "title > title > title",
        "section": "title > title",
        "text": "PuckMaterialType.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.delete",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.delete",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.delete.html#ansys.acp.core.InterfaceLayer.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "InterfaceLayer.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2.html#orientation_2",
        "title": "orientation_2",
        "section": "orientation_2",
        "text": "orientation_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2",
        "title": "orientation_2 > orientation_2 > orientation_2",
        "section": "orientation_2 > orientation_2",
        "text": "property VariableWovenCharacterization.orientation_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.IGES",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.IGES.html#iges",
        "title": "IGES",
        "section": "IGES",
        "text": "IGES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.IGES",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.IGES.html#ansys.acp.core.PlyGeometryExportFormat.IGES",
        "title": "IGES > IGES > IGES",
        "section": "IGES > IGES",
        "text": "PlyGeometryExportFormat.IGES = 'iges'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.html#cutoffselectionruleelementaldata",
        "title": "CutOffSelectionRuleElementalData",
        "section": "CutOffSelectionRuleElementalData",
        "text": "Represents elemental data for a Cut-Off Selection Rule.\nCutOffSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nCutOffSelectionRuleElementalData.normal\n\nCutOffSelectionRuleElementalData.element_labels\n\nCutOffSelectionRuleElementalData\nCutOffSelectionRuleElementalData.get_pyvista_mesh\nCutOffSelectionRuleElementalData.normal\nCutOffSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.html#ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData",
        "title": "CutOffSelectionRuleElementalData > CutOffSelectionRuleElementalData > CutOffSelectionRuleElementalData",
        "section": "CutOffSelectionRuleElementalData > CutOffSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Cut-Off Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCutOffSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCutOffSelectionRuleElementalData.normal\n\n\n\nCutOffSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.delete.html#ansys.acp.core.LookUpTable3DColumn.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "LookUpTable3DColumn.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos.html#p_21_pos",
        "title": "p_21_pos",
        "section": "p_21_pos",
        "text": "p_21_pos"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos",
        "title": "p_21_pos > p_21_pos > p_21_pos",
        "section": "p_21_pos > p_21_pos",
        "text": "property ConstantPuckConstants.p_21_pos: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.modeling_groups.html#modeling_groups",
        "title": "modeling_groups",
        "section": "modeling_groups",
        "text": "modeling_groups"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.modeling_groups.html#ansys.acp.core.Model.modeling_groups",
        "title": "modeling_groups > modeling_groups > modeling_groups",
        "section": "modeling_groups > modeling_groups",
        "text": "property Model.modeling_groups: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.modeling_groups.html#examples-using-modelmodeling_groups",
        "title": "modeling_groups > Examples using Model.modeling_groups",
        "section": "Examples using Model.modeling_groups",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.modeling_groups"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.shell_mesh.html#ansys.acp.core.VariableOffsetSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property VariableOffsetSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.oriented_selection_sets.html#oriented_selection_sets",
        "title": "oriented_selection_sets",
        "section": "oriented_selection_sets",
        "text": "oriented_selection_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.oriented_selection_sets",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.oriented_selection_sets.html#ansys.acp.core.InterfaceLayer.oriented_selection_sets",
        "title": "oriented_selection_sets > oriented_selection_sets > oriented_selection_sets",
        "section": "oriented_selection_sets > oriented_selection_sets",
        "text": "property InterfaceLayer.oriented_selection_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.include_rule.html#ansys.acp.core.ParallelSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property ParallelSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/plot_utils",
        "href": "api/plot_utils.html#plot-utilities",
        "title": "Plot utilities",
        "section": "Plot utilities",
        "text": "get_directions_plotter(*, model[, mesh, ...])\nGet a pyvista plotter that shows the specified directions on the mesh.\nPlot utilities\nget_directions_plotter"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos.html#p_22_pos",
        "title": "p_22_pos",
        "section": "p_22_pos",
        "text": "p_22_pos"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos",
        "title": "p_22_pos > p_22_pos > p_22_pos",
        "section": "p_22_pos > p_22_pos",
        "text": "property ConstantPuckConstants.p_22_pos: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.APPEND",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.APPEND.html#append",
        "title": "APPEND",
        "section": "APPEND",
        "text": "APPEND"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.APPEND",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.APPEND.html#ansys.acp.core.HDF5CompositeCAEImportMode.APPEND",
        "title": "APPEND > APPEND > APPEND",
        "section": "APPEND > APPEND",
        "text": "HDF5CompositeCAEImportMode.APPEND = 'append'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_fabric",
        "href": "api/_autosummary/ansys.acp.core.Model.create_fabric.html#create_fabric",
        "title": "create_fabric",
        "section": "create_fabric",
        "text": "Instantiate a Fabric.\nname (str) – Name of the fabric.\nmaterial (Material | None) – Material of the fabric.\nthickness (float) – Thickness of the fabric.\narea_price (float) – Price per area of the fabric.\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\narea_weight – Weight per area of the fabric. Read only.\nFabric\nAdded in ACP server version 24.2.\ncreate_fabric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_fabric",
        "href": "api/_autosummary/ansys.acp.core.Model.create_fabric.html#ansys.acp.core.Model.create_fabric",
        "title": "create_fabric > create_fabric > create_fabric",
        "section": "create_fabric > create_fabric",
        "text": "Model.create_fabric(*, name='Fabric', material=None, thickness=0.0, area_price=0.0, ignore_for_postprocessing=False, drop_off_material_handling='global', drop_off_material=None, cut_off_material_handling='computed', cut_off_material=None, draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Fabric.\n\nParameters\n\nname (str) – Name of the fabric.\n\nmaterial (Material | None) – Material of the fabric.\n\nthickness (float) – Thickness of the fabric.\n\narea_price (float) – Price per area of the fabric.\n\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\narea_weight – Weight per area of the fabric. Read only.\n\nReturn type\n\nFabric\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_fabric",
        "href": "api/_autosummary/ansys.acp.core.Model.create_fabric.html#examples-using-modelcreate_fabric",
        "title": "create_fabric > Examples using Model.create_fabric",
        "section": "Examples using Model.create_fabric",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.create_fabric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_y",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_y.html#rotation_angle_y",
        "title": "rotation_angle_y",
        "section": "rotation_angle_y",
        "text": "rotation_angle_y"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_y",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_y.html#ansys.acp.core.CoordinateTransformation.rotation_angle_y",
        "title": "rotation_angle_y > rotation_angle_y > rotation_angle_y",
        "section": "rotation_angle_y > rotation_angle_y",
        "text": "CoordinateTransformation.rotation_angle_y: float = 0.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.id",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.id",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.id.html#ansys.acp.core.CADComponent.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CADComponent.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.name.html#ansys.acp.core.ImportedProductionPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ImportedProductionPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.clone.html#ansys.acp.core.LookUpTable1D.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LookUpTable1D.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.html#constantengineeringconstants",
        "title": "ConstantEngineeringConstants",
        "section": "ConstantEngineeringConstants",
        "text": "Constant engineering constants material property set.\nAdded in ACP server version 24.2.\nConstantEngineeringConstants.from_isotropic_constants(*)\nCreate an isotropic engineering constants property set.\nConstantEngineeringConstants.from_orthotropic_constants(*)\nCreate an orthotropic engineering constants property set.\nConstantEngineeringConstants.E\n\nConstantEngineeringConstants.E1\n\nConstantEngineeringConstants.E2\n\nConstantEngineeringConstants.E3\n\nConstantEngineeringConstants.G12\n\nConstantEngineeringConstants.G23\n\nConstantEngineeringConstants.G31\n\nConstantEngineeringConstants.nu\n\nConstantEngineeringConstants.nu12\n\nConstantEngineeringConstants.nu13\n\nConstantEngineeringConstants.nu23\n\nConstantEngineeringConstants\nConstantEngineeringConstants.from_isotropic_constants\nConstantEngineeringConstants.from_orthotropic_constants\nConstantEngineeringConstants.E\nConstantEngineeringConstants.E1\nConstantEngineeringConstants.E2\nConstantEngineeringConstants.E3\nConstantEngineeringConstants.G12\nConstantEngineeringConstants.G23\nConstantEngineeringConstants.G31\nConstantEngineeringConstants.nu\nConstantEngineeringConstants.nu12\nConstantEngineeringConstants.nu13\nConstantEngineeringConstants.nu23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants",
        "title": "ConstantEngineeringConstants > ConstantEngineeringConstants > ConstantEngineeringConstants",
        "section": "ConstantEngineeringConstants > ConstantEngineeringConstants",
        "text": "class ansys.acp.core.material_property_sets.ConstantEngineeringConstants(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant engineering constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nConstantEngineeringConstants.from_isotropic_constants(*)\n\nCreate an isotropic engineering constants property set.\n\nConstantEngineeringConstants.from_orthotropic_constants(*)\n\nCreate an orthotropic engineering constants property set.\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantEngineeringConstants.E\n\n\n\nConstantEngineeringConstants.E1\n\n\n\nConstantEngineeringConstants.E2\n\n\n\nConstantEngineeringConstants.E3\n\n\n\nConstantEngineeringConstants.G12\n\n\n\nConstantEngineeringConstants.G23\n\n\n\nConstantEngineeringConstants.G31\n\n\n\nConstantEngineeringConstants.nu\n\n\n\nConstantEngineeringConstants.nu12\n\n\n\nConstantEngineeringConstants.nu13\n\n\n\nConstantEngineeringConstants.nu23\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg.html#p_21_neg",
        "title": "p_21_neg",
        "section": "p_21_neg",
        "text": "p_21_neg"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg",
        "title": "p_21_neg > p_21_neg > p_21_neg",
        "section": "p_21_neg > p_21_neg",
        "text": "property ConstantPuckConstants.p_21_neg: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.parent",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.parent",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.parent.html#ansys.acp.core.SolidElementSet.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SolidElementSet.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina",
        "href": "api/_autosummary/ansys.acp.core.Lamina.html#lamina",
        "title": "Lamina",
        "section": "Lamina",
        "text": "Class to link a material with a sub-laminate.\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\nAdded in ACP server version 24.2.\nLamina.clone()\nCreate a new unstored Lamina with the same properties.\nLamina.angle\nOrientation angle in degree of the material with respect to the reference direction.\nLamina.material\nLink to an existing fabric or stackup.\nLamina\nLamina.clone\nLamina.angle\nLamina.material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina",
        "href": "api/_autosummary/ansys.acp.core.Lamina.html#ansys.acp.core.Lamina",
        "title": "Lamina > Lamina > Lamina",
        "section": "Lamina > Lamina",
        "text": "class ansys.acp.core.Lamina(material, angle=0.0)\n\nClass to link a material with a sub-laminate.\n\nParameters\n\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\n\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLamina.clone()\n\nCreate a new unstored Lamina with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLamina.angle\n\nOrientation angle in degree of the material with respect to the reference direction.\n\nLamina.material\n\nLink to an existing fabric or stackup.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina",
        "href": "api/_autosummary/ansys.acp.core.Lamina.html#examples-using-lamina",
        "title": "Lamina > Examples using Lamina",
        "section": "Examples using Lamina",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using Lamina"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL.html#surface_normal",
        "title": "SURFACE_NORMAL",
        "section": "SURFACE_NORMAL",
        "text": "SURFACE_NORMAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL.html#ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL",
        "title": "SURFACE_NORMAL > SURFACE_NORMAL > SURFACE_NORMAL",
        "section": "SURFACE_NORMAL > SURFACE_NORMAL",
        "text": "SolidModelOffsetDirectionType.SURFACE_NORMAL = 'surface_normal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.global_ply_nr.html#global_ply_nr",
        "title": "global_ply_nr",
        "section": "global_ply_nr",
        "text": "global_ply_nr"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.global_ply_nr.html#ansys.acp.core.ButtJointSequence.global_ply_nr",
        "title": "global_ply_nr > global_ply_nr > global_ply_nr",
        "section": "global_ply_nr > global_ply_nr",
        "text": "property ButtJointSequence.global_ply_nr: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.thickness.html#ansys.acp.core.ProductionPly.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property ProductionPly.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.angle",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.angle",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.angle.html#ansys.acp.core.CutOffSelectionRule.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property CutOffSelectionRule.angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.NO_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.NO_OFFSET.html#no_offset",
        "title": "NO_OFFSET",
        "section": "NO_OFFSET",
        "text": "NO_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.NO_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.NO_OFFSET.html#ansys.acp.core.OffsetType.NO_OFFSET",
        "title": "NO_OFFSET > NO_OFFSET > NO_OFFSET",
        "section": "NO_OFFSET > NO_OFFSET",
        "text": "OffsetType.NO_OFFSET = 'no_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.name",
        "href": "api/_autosummary/ansys.acp.core.Rosette.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.name",
        "href": "api/_autosummary/ansys.acp.core.Rosette.name.html#ansys.acp.core.Rosette.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Rosette.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.COMPUTED",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.COMPUTED.html#computed",
        "title": "COMPUTED",
        "section": "COMPUTED",
        "text": "COMPUTED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.COMPUTED",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.COMPUTED.html#ansys.acp.core.CutOffMaterialHandling.COMPUTED",
        "title": "COMPUTED > COMPUTED > COMPUTED",
        "section": "COMPUTED > COMPUTED",
        "text": "CutOffMaterialHandling.COMPUTED = 'computed'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.puck_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.puck_constants.html#puck_constants",
        "title": "puck_constants",
        "section": "puck_constants",
        "text": "puck_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.puck_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.puck_constants.html#ansys.acp.core.Material.puck_constants",
        "title": "puck_constants > puck_constants > puck_constants",
        "section": "puck_constants > puck_constants",
        "text": "property Material.puck_constants: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.boolean_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.boolean_selection_rules.html#boolean_selection_rules",
        "title": "boolean_selection_rules",
        "section": "boolean_selection_rules",
        "text": "boolean_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.boolean_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.boolean_selection_rules.html#ansys.acp.core.Model.boolean_selection_rules",
        "title": "boolean_selection_rules > boolean_selection_rules > boolean_selection_rules",
        "section": "boolean_selection_rules > boolean_selection_rules",
        "text": "property Model.boolean_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.html#constantstrainlimits",
        "title": "ConstantStrainLimits",
        "section": "ConstantStrainLimits",
        "text": "Constant strain limits material property set.\nAdded in ACP server version 24.2.\nConstantStrainLimits.from_isotropic_constants(*)\nCreate an isotropic strain limits property set.\nConstantStrainLimits.from_orthotropic_constants(*)\nCreate an orthotropic strain limits property set.\nConstantStrainLimits.eSxy\n\nConstantStrainLimits.eSxz\n\nConstantStrainLimits.eSyz\n\nConstantStrainLimits.eXc\n\nConstantStrainLimits.eXt\n\nConstantStrainLimits.eYc\n\nConstantStrainLimits.eYt\n\nConstantStrainLimits.eZc\n\nConstantStrainLimits.eZt\n\nConstantStrainLimits.effective_strain\n\nConstantStrainLimits\nConstantStrainLimits.from_isotropic_constants\nConstantStrainLimits.from_orthotropic_constants\nConstantStrainLimits.eSxy\nConstantStrainLimits.eSxz\nConstantStrainLimits.eSyz\nConstantStrainLimits.eXc\nConstantStrainLimits.eXt\nConstantStrainLimits.eYc\nConstantStrainLimits.eYt\nConstantStrainLimits.eZc\nConstantStrainLimits.eZt\nConstantStrainLimits.effective_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.html#ansys.acp.core.material_property_sets.ConstantStrainLimits",
        "title": "ConstantStrainLimits > ConstantStrainLimits > ConstantStrainLimits",
        "section": "ConstantStrainLimits > ConstantStrainLimits",
        "text": "class ansys.acp.core.material_property_sets.ConstantStrainLimits(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant strain limits material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nConstantStrainLimits.from_isotropic_constants(*)\n\nCreate an isotropic strain limits property set.\n\nConstantStrainLimits.from_orthotropic_constants(*)\n\nCreate an orthotropic strain limits property set.\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantStrainLimits.eSxy\n\n\n\nConstantStrainLimits.eSxz\n\n\n\nConstantStrainLimits.eSyz\n\n\n\nConstantStrainLimits.eXc\n\n\n\nConstantStrainLimits.eXt\n\n\n\nConstantStrainLimits.eYc\n\n\n\nConstantStrainLimits.eYt\n\n\n\nConstantStrainLimits.eZc\n\n\n\nConstantStrainLimits.eZt\n\n\n\nConstantStrainLimits.effective_strain\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.lower_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.lower_limit.html#lower_limit",
        "title": "lower_limit",
        "section": "lower_limit",
        "text": "lower_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.lower_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.lower_limit.html#ansys.acp.core.material_property_sets.FieldVariable.lower_limit",
        "title": "lower_limit > lower_limit > lower_limit",
        "section": "lower_limit > lower_limit",
        "text": "FieldVariable.lower_limit: float\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.name.html#ansys.acp.core.VirtualGeometry.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property VirtualGeometry.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS.html#dimensionless",
        "title": "DIMENSIONLESS",
        "section": "DIMENSIONLESS",
        "text": "DIMENSIONLESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS.html#ansys.acp.core.PhysicalDimension.DIMENSIONLESS",
        "title": "DIMENSIONLESS > DIMENSIONLESS > DIMENSIONLESS",
        "section": "DIMENSIONLESS > DIMENSIONLESS",
        "text": "PhysicalDimension.DIMENSIONLESS = 'dimensionless'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS.html#examples-using-physicaldimensiondimensionless",
        "title": "DIMENSIONLESS > Examples using PhysicalDimension.DIMENSIONLESS",
        "section": "Examples using PhysicalDimension.DIMENSIONLESS",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using PhysicalDimension.DIMENSIONLESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.html#cutoffgeometry",
        "title": "CutOffGeometry",
        "section": "CutOffGeometry",
        "text": "Instantiate a cut-off geometry.\nname (str) – Name of the cut-off geometry.\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\nAdded in ACP server version 25.1.\nCutOffGeometry.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nCutOffGeometry.delete()\nDelete the object.\nCutOffGeometry.store(parent)\nStore the object on the server.\nCutOffGeometry.active\n\nCutOffGeometry.cad_geometry\n\nCutOffGeometry.id\nIdentifier of the object, used for example as key in maps.\nCutOffGeometry.name\nThe name of the object.\nCutOffGeometry.orientation_type\n\nCutOffGeometry.parent\nThe parent of the object.\nCutOffGeometry.relative_merge_tolerance\n\nCutOffGeometry.status\n\nCutOffGeometry\nCutOffGeometry.clone\nCutOffGeometry.delete\nCutOffGeometry.store\nCutOffGeometry.active\nCutOffGeometry.cad_geometry\nCutOffGeometry.id\nCutOffGeometry.name\nCutOffGeometry.orientation_type\nCutOffGeometry.parent\nCutOffGeometry.relative_merge_tolerance\nCutOffGeometry.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.html#ansys.acp.core.CutOffGeometry",
        "title": "CutOffGeometry > CutOffGeometry > CutOffGeometry",
        "section": "CutOffGeometry > CutOffGeometry",
        "text": "class ansys.acp.core.CutOffGeometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCutOffGeometry.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nCutOffGeometry.delete()\n\nDelete the object.\n\nCutOffGeometry.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCutOffGeometry.active\n\n\n\nCutOffGeometry.cad_geometry\n\n\n\nCutOffGeometry.id\n\nIdentifier of the object, used for example as key in maps.\n\nCutOffGeometry.name\n\nThe name of the object.\n\nCutOffGeometry.orientation_type\n\n\n\nCutOffGeometry.parent\n\nThe parent of the object.\n\nCutOffGeometry.relative_merge_tolerance\n\n\n\nCutOffGeometry.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.refresh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.refresh.html#refresh",
        "title": "refresh",
        "section": "refresh",
        "text": "Reload the geometry from its external source.\npath (str | PathLike[str]) – Path of the new input file.\nrefresh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.refresh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.refresh.html#ansys.acp.core.CADGeometry.refresh",
        "title": "refresh > refresh > refresh",
        "section": "refresh > refresh",
        "text": "CADGeometry.refresh(path)\n\nReload the geometry from its external source.\n\nParameters\n\npath (str | PathLike[str]) – Path of the new input file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.refresh",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.refresh.html#examples-using-cadgeometryrefresh",
        "title": "refresh > Examples using CADGeometry.refresh",
        "section": "Examples using CADGeometry.refresh",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using CADGeometry.refresh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.element_labels.html#ansys.acp.core.mesh_data.ElementSetElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "ElementSetElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.NORMAL",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.NORMAL.html#normal",
        "title": "NORMAL",
        "section": "NORMAL",
        "text": "NORMAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.NORMAL",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.NORMAL.html#ansys.acp.core.ElementalDataType.NORMAL",
        "title": "NORMAL > NORMAL > NORMAL",
        "section": "NORMAL > NORMAL",
        "text": "ElementalDataType.NORMAL = 'normal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.active",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.active",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.active.html#ansys.acp.core.SolidModel.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property SolidModel.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.materials",
        "href": "api/_autosummary/ansys.acp.core.Model.materials.html#materials",
        "title": "materials",
        "section": "materials",
        "text": "materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.materials",
        "href": "api/_autosummary/ansys.acp.core.Model.materials.html#ansys.acp.core.Model.materials",
        "title": "materials > materials > materials",
        "section": "materials > materials",
        "text": "property Model.materials: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.materials",
        "href": "api/_autosummary/ansys.acp.core.Model.materials.html#examples-using-modelmaterials",
        "title": "materials > Examples using Model.materials",
        "section": "Examples using Model.materials",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Model.materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC.html#isotropic",
        "title": "ISOTROPIC",
        "section": "ISOTROPIC",
        "text": "ISOTROPIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC.html#ansys.acp.core.PlyType.ISOTROPIC",
        "title": "ISOTROPIC > ISOTROPIC > ISOTROPIC",
        "section": "ISOTROPIC > ISOTROPIC",
        "text": "PlyType.ISOTROPIC = 'isotropic'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC.html#examples-using-plytypeisotropic",
        "title": "ISOTROPIC > Examples using PlyType.ISOTROPIC",
        "section": "Examples using PlyType.ISOTROPIC",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using PlyType.ISOTROPIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.html#variablefabricfiberangle",
        "title": "VariableFabricFiberAngle",
        "section": "VariableFabricFiberAngle",
        "text": "Variable fabric fiber angle material property set.\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\nAdded in ACP server version 24.2.\nVariableFabricFiberAngle.fabric_fiber_angle\n\nVariableFabricFiberAngle.field_variables\n\nVariableFabricFiberAngle.interpolation_options\n\nVariableFabricFiberAngle\nVariableFabricFiberAngle.fabric_fiber_angle\nVariableFabricFiberAngle.field_variables\nVariableFabricFiberAngle.interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.html#ansys.acp.core.material_property_sets.VariableFabricFiberAngle",
        "title": "VariableFabricFiberAngle > VariableFabricFiberAngle > VariableFabricFiberAngle",
        "section": "VariableFabricFiberAngle > VariableFabricFiberAngle",
        "text": "class ansys.acp.core.material_property_sets.VariableFabricFiberAngle(*, _parent_object=None, _attribute_path=None)\n\nVariable fabric fiber angle material property set.\n\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableFabricFiberAngle.fabric_fiber_angle\n\n\n\nVariableFabricFiberAngle.field_variables\n\n\n\nVariableFabricFiberAngle.interpolation_options\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.startswith",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.startswith.html#startswith",
        "title": "startswith",
        "section": "startswith",
        "text": "Return True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.\nstartswith"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.startswith",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.startswith.html#ansys.acp.core.LaunchMode.startswith",
        "title": "startswith > startswith > startswith",
        "section": "startswith > startswith",
        "text": "LaunchMode.startswith(prefix, [start, [end]]) -> bool\n\nReturn True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.html#dropofftype",
        "title": "DropOffType",
        "section": "DropOffType",
        "text": "Determines whether the drop off in solid models is inside or outside the ply boundary.\nDropOffType.INSIDE_PLY\n\nDropOffType.OUTSIDE_PLY\n\nDropOffType\nDropOffType.INSIDE_PLY\nDropOffType.OUTSIDE_PLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffType",
        "href": "api/_autosummary/ansys.acp.core.DropOffType.html#ansys.acp.core.DropOffType",
        "title": "DropOffType > DropOffType > DropOffType",
        "section": "DropOffType > DropOffType",
        "text": "class ansys.acp.core.DropOffType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines whether the drop off in solid models is inside or outside the ply boundary.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDropOffType.INSIDE_PLY\n\n\n\nDropOffType.OUTSIDE_PLY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.CGS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.CGS.html#cgs",
        "title": "CGS",
        "section": "CGS",
        "text": "CGS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.CGS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.CGS.html#ansys.acp.core.UnitSystemType.CGS",
        "title": "CGS > CGS > CGS",
        "section": "CGS > CGS",
        "text": "UnitSystemType.CGS = 'cgs'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.removesuffix",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.removesuffix.html#removesuffix",
        "title": "removesuffix",
        "section": "removesuffix",
        "text": "Return a str with the given suffix string removed if present.\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.\nremovesuffix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.removesuffix",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.removesuffix.html#ansys.acp.core.LaunchMode.removesuffix",
        "title": "removesuffix > removesuffix > removesuffix",
        "section": "removesuffix > removesuffix",
        "text": "LaunchMode.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.status.html#ansys.acp.core.VirtualGeometry.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property VirtualGeometry.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidMappingProperties",
        "href": "api/_autosummary/ansys.acp.core.SolidMappingProperties.html#solidmappingproperties",
        "title": "SolidMappingProperties",
        "section": "SolidMappingProperties",
        "text": "Properties for importing HDF5 Composite CAE files as imported plies.\nSolidMappingProperties.offset_type\n\nSolidMappingProperties\nSolidMappingProperties.offset_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidMappingProperties",
        "href": "api/_autosummary/ansys.acp.core.SolidMappingProperties.html#ansys.acp.core.SolidMappingProperties",
        "title": "SolidMappingProperties > SolidMappingProperties > SolidMappingProperties",
        "section": "SolidMappingProperties > SolidMappingProperties",
        "text": "class ansys.acp.core.SolidMappingProperties(offset_type='bottom_offset')\n\nProperties for importing HDF5 Composite CAE files as imported plies.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidMappingProperties.offset_type\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.html#cadcomponent",
        "title": "CADComponent",
        "section": "CADComponent",
        "text": "Instantiate a CAD Component.\nname – Name of the CAD component.\npath – Path of the CAD component.\nAdded in ACP server version 24.2.\nCADComponent.id\nIdentifier of the object, used for example as key in maps.\nCADComponent.name\nThe name of the object.\nCADComponent.parent\nThe parent of the object.\nCADComponent.path\n\nCADComponent.status\n\nCADComponent\nCADComponent.id\nCADComponent.name\nCADComponent.parent\nCADComponent.path\nCADComponent.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.html#ansys.acp.core.CADComponent",
        "title": "CADComponent > CADComponent > CADComponent",
        "section": "CADComponent > CADComponent",
        "text": "class ansys.acp.core.CADComponent\n\nInstantiate a CAD Component.\n\nParameters\n\nname – Name of the CAD component.\n\npath – Path of the CAD component.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nCADComponent.id\n\nIdentifier of the object, used for example as key in maps.\n\nCADComponent.name\n\nThe name of the object.\n\nCADComponent.parent\n\nThe parent of the object.\n\nCADComponent.path\n\n\n\nCADComponent.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2.html#orientation_2",
        "title": "orientation_2",
        "section": "orientation_2",
        "text": "orientation_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2",
        "title": "orientation_2 > orientation_2 > orientation_2",
        "section": "orientation_2 > orientation_2",
        "text": "property ConstantWovenCharacterization.orientation_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.status.html#ansys.acp.core.SphericalSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SphericalSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.store.html#ansys.acp.core.CADGeometry.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "CADGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.mesh.html#ansys.acp.core.ParallelSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property ParallelSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.elemental_data.html#ansys.acp.core.SolidModel.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property SolidModel.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.normal.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "ModelingPlyElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.startswith",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.startswith.html#startswith",
        "title": "startswith",
        "section": "startswith",
        "text": "Return True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.\nstartswith"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.startswith",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.startswith.html#ansys.acp.core.material_property_sets.PuckMaterialType.startswith",
        "title": "startswith > startswith > startswith",
        "section": "startswith > startswith",
        "text": "PuckMaterialType.startswith(prefix, [start, [end]]) -> bool\n\nReturn True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/sg_execution_times",
        "href": "examples/modeling_features/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "01:35.209 total execution time for 12 files from examples/modeling_features:\nExample\nTime\nMem (MB)\nsphx_glr_examples_modeling_features_007-sensor.py (007-sensor.py)\n00:23.748\n0.0\nsphx_glr_examples_modeling_features_031-imported-solid-model.py (031-imported-solid-model.py)\n00:18.759\n0.0\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py (002-rosettes-ply-directions.py)\n00:09.300\n0.0\nsphx_glr_examples_modeling_features_001-materials.py (001-materials.py)\n00:08.918\n0.0\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py (004-advanced-selection-rules.py)\n00:05.001\n0.0\nsphx_glr_examples_modeling_features_020-solid_model.py (020-solid_model.py)\n00:04.830\n0.0\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py (010-sandwich-panel-layup.py)\n00:04.771\n0.0\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py (003-simple-selection-rules.py)\n00:04.311\n0.0\nsphx_glr_examples_modeling_features_030-imported-plies.py (030-imported-plies.py)\n00:04.227\n0.0\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py (050-composite_cae_h5.py)\n00:04.121\n0.0\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py (006-layup-thickness-definitions.py)\n00:03.670\n0.0\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py (005-ply-direction-lookup-table.py)\n00:03.553\n0.0\nComputation times\n007-sensor.py\n031-imported-solid-model.py\n002-rosettes-ply-directions.py\n001-materials.py\n004-advanced-selection-rules.py\n020-solid_model.py\n010-sandwich-panel-layup.py\n003-simple-selection-rules.py\n030-imported-plies.py\n050-composite_cae_h5.py\n006-layup-thickness-definitions.py\n005-ply-direction-lookup-table.py"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.topdown",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.topdown.html#topdown",
        "title": "topdown",
        "section": "topdown",
        "text": "topdown"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.topdown",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.topdown.html#ansys.acp.core.SubLaminate.topdown",
        "title": "topdown > topdown > topdown",
        "section": "topdown > topdown",
        "text": "property SubLaminate.topdown: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA.html#sensor_by_area",
        "title": "SENSOR_BY_AREA",
        "section": "SENSOR_BY_AREA",
        "text": "SENSOR_BY_AREA"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA.html#ansys.acp.core.SensorType.SENSOR_BY_AREA",
        "title": "SENSOR_BY_AREA > SENSOR_BY_AREA > SENSOR_BY_AREA",
        "section": "SENSOR_BY_AREA > SENSOR_BY_AREA",
        "text": "SensorType.SENSOR_BY_AREA = 'sensor_by_area'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA.html#examples-using-sensortypesensor_by_area",
        "title": "SENSOR_BY_AREA > Examples using SensorType.SENSOR_BY_AREA",
        "section": "Examples using SensorType.SENSOR_BY_AREA",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using SensorType.SENSOR_BY_AREA"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal.html#isdecimal",
        "title": "isdecimal",
        "section": "isdecimal",
        "text": "Return True if the string is a decimal string, False otherwise.\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.\nisdecimal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal.html#ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal",
        "title": "isdecimal > isdecimal > isdecimal",
        "section": "isdecimal > isdecimal",
        "text": "PuckMaterialType.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP.html#race_car_nose_step",
        "title": "RACE_CAR_NOSE_STEP",
        "section": "RACE_CAR_NOSE_STEP",
        "text": "RACE_CAR_NOSE_STEP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP.html#ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP",
        "title": "RACE_CAR_NOSE_STEP > RACE_CAR_NOSE_STEP > RACE_CAR_NOSE_STEP",
        "section": "RACE_CAR_NOSE_STEP > RACE_CAR_NOSE_STEP",
        "text": "ExampleKeys.RACE_CAR_NOSE_STEP = 6\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping.html#draping",
        "title": "draping",
        "section": "draping",
        "text": "draping"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping.html#ansys.acp.core.OrientedSelectionSet.draping",
        "title": "draping > draping > draping",
        "section": "draping > draping",
        "text": "property OrientedSelectionSet.draping: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.offset_is_middle",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.offset_is_middle.html#offset_is_middle",
        "title": "offset_is_middle",
        "section": "offset_is_middle",
        "text": "offset_is_middle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.offset_is_middle",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.offset_is_middle.html#ansys.acp.core.SamplingPoint.offset_is_middle",
        "title": "offset_is_middle > offset_is_middle > offset_is_middle",
        "section": "offset_is_middle > offset_is_middle",
        "text": "property SamplingPoint.offset_is_middle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType.GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.GEOMETRY.html#geometry",
        "title": "GEOMETRY",
        "section": "GEOMETRY",
        "text": "GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalRuleType.GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.GeometricalRuleType.GEOMETRY.html#ansys.acp.core.GeometricalRuleType.GEOMETRY",
        "title": "GEOMETRY > GEOMETRY > GEOMETRY",
        "section": "GEOMETRY > GEOMETRY",
        "text": "GeometricalRuleType.GEOMETRY = 'geometry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.outer_radius",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.outer_radius.html#outer_radius",
        "title": "outer_radius",
        "section": "outer_radius",
        "text": "outer_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.outer_radius",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.outer_radius.html#ansys.acp.core.TubeSelectionRule.outer_radius",
        "title": "outer_radius > outer_radius > outer_radius",
        "section": "outer_radius > outer_radius",
        "text": "property TubeSelectionRule.outer_radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.clone",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.clone",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.clone.html#ansys.acp.core.ButtJointSequence.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ButtJointSequence.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lower",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lower.html#lower",
        "title": "lower",
        "section": "lower",
        "text": "Return a copy of the string converted to lowercase.\nlower"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lower",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lower.html#ansys.acp.core.material_property_sets.PuckMaterialType.lower",
        "title": "lower > lower > lower",
        "section": "lower > lower",
        "text": "PuckMaterialType.lower(/)\n\nReturn a copy of the string converted to lowercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.active",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.active",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.active.html#ansys.acp.core.CutOffGeometry.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property CutOffGeometry.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ProductionPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rjust",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rjust.html#rjust",
        "title": "rjust",
        "section": "rjust",
        "text": "Return a right-justified string of length width.\nPadding is done using the specified fill character (default is a space).\nrjust"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rjust",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rjust.html#ansys.acp.core.LaunchMode.rjust",
        "title": "rjust > rjust > rjust",
        "section": "rjust > rjust",
        "text": "LaunchMode.rjust(width, fillchar=' ', /)\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.encode",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.encode.html#encode",
        "title": "encode",
        "section": "encode",
        "text": "Encode the string using the codec registered for encoding.\nThe encoding in which to encode the string.\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors.\nencode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.encode",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.encode.html#ansys.acp.core.material_property_sets.PuckMaterialType.encode",
        "title": "encode > encode > encode",
        "section": "encode > encode",
        "text": "PuckMaterialType.encode(/, encoding='utf-8', errors='strict')\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.status",
        "href": "api/_autosummary/ansys.acp.core.Sensor.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.status",
        "href": "api/_autosummary/ansys.acp.core.Sensor.status.html#ansys.acp.core.Sensor.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property Sensor.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.direction.html#ansys.acp.core.SphericalSelectionRule.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property SphericalSelectionRule.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.name",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.name",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.name.html#ansys.acp.core.ProductionPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ProductionPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/concepts/index",
        "href": "user_guide/concepts/index.html#concepts",
        "title": "Concepts",
        "section": "Concepts",
        "text": "These guides explain the PyACP concepts.\nConcepts"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.html#layupmappingrosetteselectionmethod",
        "title": "LayupMappingRosetteSelectionMethod",
        "section": "LayupMappingRosetteSelectionMethod",
        "text": "Options for how the rosette is selected in the layup mapping.\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE\n\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n\nLayupMappingRosetteSelectionMethod\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.html#ansys.acp.core.LayupMappingRosetteSelectionMethod",
        "title": "LayupMappingRosetteSelectionMethod > LayupMappingRosetteSelectionMethod > LayupMappingRosetteSelectionMethod",
        "section": "LayupMappingRosetteSelectionMethod > LayupMappingRosetteSelectionMethod",
        "text": "class ansys.acp.core.LayupMappingRosetteSelectionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how the rosette is selected in the layup mapping.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE\n\n\n\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.html#examples-using-layupmappingrosetteselectionmethod",
        "title": "LayupMappingRosetteSelectionMethod > Examples using LayupMappingRosetteSelectionMethod",
        "section": "Examples using LayupMappingRosetteSelectionMethod",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using LayupMappingRosetteSelectionMethod"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STL.html#stl",
        "title": "STL",
        "section": "STL",
        "text": "STL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STL",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STL.html#ansys.acp.core.SolidModelSkinExportFormat.STL",
        "title": "STL > STL > STL",
        "section": "STL > STL",
        "text": "SolidModelSkinExportFormat.STL = 'stl'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.add_material",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.add_material.html#add_material",
        "title": "add_material",
        "section": "add_material",
        "text": "Add a Lamina to the SubLaminate.\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\nLamina\nAdded in ACP server version 24.2.\nadd_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.add_material",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.add_material.html#ansys.acp.core.SubLaminate.add_material",
        "title": "add_material > add_material > add_material",
        "section": "add_material > add_material",
        "text": "SubLaminate.add_material(material, angle=0.0)\n\nAdd a Lamina to the SubLaminate.\n\nParameters\n\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\n\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\n\nReturn type\n\nLamina\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.delete",
        "href": "api/_autosummary/ansys.acp.core.Fabric.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.delete",
        "href": "api/_autosummary/ansys.acp.core.Fabric.delete.html#ansys.acp.core.Fabric.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Fabric.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.NOMINAL",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.NOMINAL.html#nominal",
        "title": "NOMINAL",
        "section": "NOMINAL",
        "text": "NOMINAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.NOMINAL",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.NOMINAL.html#ansys.acp.core.ImportedPlyThicknessType.NOMINAL",
        "title": "NOMINAL > NOMINAL > NOMINAL",
        "section": "NOMINAL > NOMINAL",
        "text": "ImportedPlyThicknessType.NOMINAL = 'nominal'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.offset",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.offset",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.offset.html#ansys.acp.core.CutOffSelectionRule.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "property CutOffSelectionRule.offset: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_1_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_1_field.html#draping_angle_1_field",
        "title": "draping_angle_1_field",
        "section": "draping_angle_1_field",
        "text": "draping_angle_1_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_1_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_1_field.html#ansys.acp.core.ModelingPly.draping_angle_1_field",
        "title": "draping_angle_1_field > draping_angle_1_field > draping_angle_1_field",
        "section": "draping_angle_1_field > draping_angle_1_field",
        "text": "property ModelingPly.draping_angle_1_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.id",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.id.html#ansys.acp.core.CADGeometry.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CADGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.elemental_data.html#ansys.acp.core.InterfaceLayer.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property InterfaceLayer.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix.html#use_solid_model_prefix",
        "title": "use_solid_model_prefix",
        "section": "use_solid_model_prefix",
        "text": "use_solid_model_prefix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix.html#ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix",
        "title": "use_solid_model_prefix > use_solid_model_prefix > use_solid_model_prefix",
        "section": "use_solid_model_prefix > use_solid_model_prefix",
        "text": "property SolidModelExportSettings.use_solid_model_prefix: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy.html#esxy",
        "title": "eSxy",
        "section": "eSxy",
        "text": "eSxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy",
        "title": "eSxy > eSxy > eSxy",
        "section": "eSxy > eSxy",
        "text": "property ConstantStrainLimits.eSxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.materials",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.materials.html#materials",
        "title": "materials",
        "section": "materials",
        "text": "materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.materials",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.materials.html#ansys.acp.core.SubLaminate.materials",
        "title": "materials > materials > materials",
        "section": "materials > materials",
        "text": "property SubLaminate.materials: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit.html#thin_ply_thickness_limit",
        "title": "thin_ply_thickness_limit",
        "section": "thin_ply_thickness_limit",
        "text": "thin_ply_thickness_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit",
        "title": "thin_ply_thickness_limit > thin_ply_thickness_limit > thin_ply_thickness_limit",
        "section": "thin_ply_thickness_limit > thin_ply_thickness_limit",
        "text": "property VariableLaRCConstants.thin_ply_thickness_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ.html#yz",
        "title": "YZ",
        "section": "YZ",
        "text": "YZ"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ.html#ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ",
        "title": "YZ > YZ > YZ",
        "section": "YZ > YZ",
        "text": "property ConstantTsaiWuConstants.YZ: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index.html#coordinate_system_index",
        "title": "coordinate_system_index",
        "section": "coordinate_system_index",
        "text": "coordinate_system_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index.html#ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index",
        "title": "coordinate_system_index > coordinate_system_index > coordinate_system_index",
        "section": "coordinate_system_index > coordinate_system_index",
        "text": "property ImportedSolidModelExportSettings.coordinate_system_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.scope_entities",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.scope_entities.html#scope_entities",
        "title": "scope_entities",
        "section": "scope_entities",
        "text": "scope_entities"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.scope_entities",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.scope_entities.html#ansys.acp.core.FieldDefinition.scope_entities",
        "title": "scope_entities > scope_entities > scope_entities",
        "section": "scope_entities > scope_entities",
        "text": "property FieldDefinition.scope_entities: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_skin",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_skin.html#export_skin",
        "title": "export_skin",
        "section": "export_skin",
        "text": "Export the skin of the solid model to a file.\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\".\nexport_skin\n\"ansys:cdb\"\n\"step\"\n\"iges\"\n\"stl\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_skin",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export_skin.html#ansys.acp.core.ImportedSolidModel.export_skin",
        "title": "export_skin > export_skin > export_skin",
        "section": "export_skin > export_skin",
        "text": "ImportedSolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\n\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\".\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.parent.html#ansys.acp.core.BooleanSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property BooleanSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "TubeSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.section_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.section_index.html#section_index",
        "title": "section_index",
        "section": "section_index",
        "text": "section_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.section_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.section_index.html#ansys.acp.core.ImportedSolidModelExportSettings.section_index",
        "title": "section_index > section_index > section_index",
        "section": "section_index > section_index",
        "text": "property ImportedSolidModelExportSettings.section_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression.html#fracture_angle_under_compression",
        "title": "fracture_angle_under_compression",
        "section": "fracture_angle_under_compression",
        "text": "fracture_angle_under_compression"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression",
        "title": "fracture_angle_under_compression > fracture_angle_under_compression > fracture_angle_under_compression",
        "section": "fracture_angle_under_compression > fracture_angle_under_compression",
        "text": "property VariableLaRCConstants.fracture_angle_under_compression: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry.html#create_virtual_geometry",
        "title": "create_virtual_geometry",
        "section": "create_virtual_geometry",
        "text": "Instantiate a Virtual Geometry.\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\nname (str) – Name of the Virtual Geometry.\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\nVirtualGeometry\nAdded in ACP server version 24.2.\ncreate_virtual_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry.html#ansys.acp.core.Model.create_virtual_geometry",
        "title": "create_virtual_geometry > create_virtual_geometry > create_virtual_geometry",
        "section": "create_virtual_geometry > create_virtual_geometry",
        "text": "Model.create_virtual_geometry(*, name='VirtualGeometry', cad_components=None, sub_shapes=None)\n\nInstantiate a Virtual Geometry.\n\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\n\nParameters\n\nname (str) – Name of the Virtual Geometry.\n\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\n\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\n\nReturn type\n\nVirtualGeometry\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry",
        "href": "api/_autosummary/ansys.acp.core.Model.create_virtual_geometry.html#examples-using-modelcreate_virtual_geometry",
        "title": "create_virtual_geometry > Examples using Model.create_virtual_geometry",
        "section": "Examples using Model.create_virtual_geometry",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using Model.create_virtual_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "BooleanSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb.html#import_acp_mesh_from_cdb",
        "title": "import_acp_mesh_from_cdb",
        "section": "import_acp_mesh_from_cdb",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nImport an ACP CDB mesh into Mechanical.\nImport a mesh exported from ACP in CDB format into Mechanical. This function\ndoes not import the ACP layup definition, use import_acp_composite_definitions()\nfor this purpose.\nThe named selections exported from ACP are only partially imported.\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\ncdb_path (str | PathLike[str]) – The path of the CDB file to import. The extension must be ‘.cdb’.\nimport_acp_mesh_from_cdb\nimport_acp_composite_definitions()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb.html#ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb",
        "title": "import_acp_mesh_from_cdb > import_acp_mesh_from_cdb > import_acp_mesh_from_cdb",
        "section": "import_acp_mesh_from_cdb > import_acp_mesh_from_cdb",
        "text": "ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb(*, mechanical, cdb_path)\n\nImport an ACP CDB mesh into Mechanical.\n\nImport a mesh exported from ACP in CDB format into Mechanical. This function\ndoes not import the ACP layup definition, use import_acp_composite_definitions()\nfor this purpose.\n\nThe named selections exported from ACP are only partially imported.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\ncdb_path (str | PathLike[str]) – The path of the CDB file to import. The extension must be ‘.cdb’.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export_skin",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export_skin.html#export_skin",
        "title": "export_skin",
        "section": "export_skin",
        "text": "Export the skin of the solid model to a file.\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\".\nexport_skin\n\"ansys:cdb\"\n\"step\"\n\"iges\"\n\"stl\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export_skin",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export_skin.html#ansys.acp.core.SolidModel.export_skin",
        "title": "export_skin > export_skin > export_skin",
        "section": "export_skin > export_skin",
        "text": "SolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\n\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\".\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.center",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.center.html#center",
        "title": "center",
        "section": "center",
        "text": "Return a centered string of length width.\nPadding is done using the specified fill character (default is a space).\ncenter"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.center",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.center.html#ansys.acp.core.LaunchMode.center",
        "title": "center > center > center",
        "section": "center > center",
        "text": "LaunchMode.center(width, fillchar=' ', /)\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE.html#from_h5_composite_cae",
        "title": "FROM_H5_COMPOSITE_CAE",
        "section": "FROM_H5_COMPOSITE_CAE",
        "text": "FROM_H5_COMPOSITE_CAE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE",
        "href": "api/_autosummary/ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE.html#ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE",
        "title": "FROM_H5_COMPOSITE_CAE > FROM_H5_COMPOSITE_CAE > FROM_H5_COMPOSITE_CAE",
        "section": "FROM_H5_COMPOSITE_CAE > FROM_H5_COMPOSITE_CAE",
        "text": "MeshImportType.FROM_H5_COMPOSITE_CAE = 'from_h5_composite_cae'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.ignore_for_postprocessing",
        "href": "api/_autosummary/ansys.acp.core.Fabric.ignore_for_postprocessing.html#ignore_for_postprocessing",
        "title": "ignore_for_postprocessing",
        "section": "ignore_for_postprocessing",
        "text": "ignore_for_postprocessing"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.ignore_for_postprocessing",
        "href": "api/_autosummary/ansys.acp.core.Fabric.ignore_for_postprocessing.html#ansys.acp.core.Fabric.ignore_for_postprocessing",
        "title": "ignore_for_postprocessing > ignore_for_postprocessing > ignore_for_postprocessing",
        "section": "ignore_for_postprocessing > ignore_for_postprocessing",
        "text": "property Fabric.ignore_for_postprocessing: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rpartition",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rpartition.html#rpartition",
        "title": "rpartition",
        "section": "rpartition",
        "text": "Partition the string into three parts using the given separator.\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.\nrpartition"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rpartition",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rpartition.html#ansys.acp.core.LaunchMode.rpartition",
        "title": "rpartition > rpartition > rpartition",
        "section": "rpartition > rpartition",
        "text": "LaunchMode.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isdecimal",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isdecimal.html#isdecimal",
        "title": "isdecimal",
        "section": "isdecimal",
        "text": "Return True if the string is a decimal string, False otherwise.\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.\nisdecimal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isdecimal",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isdecimal.html#ansys.acp.core.LaunchMode.isdecimal",
        "title": "isdecimal > isdecimal > isdecimal",
        "section": "isdecimal > isdecimal",
        "text": "LaunchMode.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc.html#exc",
        "title": "eXc",
        "section": "eXc",
        "text": "eXc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc",
        "title": "eXc > eXc > eXc",
        "section": "eXc > eXc",
        "text": "property ConstantStrainLimits.eXc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.direction",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.direction",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.direction.html#ansys.acp.core.ExtrusionGuide.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property ExtrusionGuide.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.get_example_file",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.get_example_file.html#get_example_file",
        "title": "get_example_file",
        "section": "get_example_file",
        "text": "Download an example file from the example-data repo to the working directory.\nexample_key (ExampleKeys) – Key for the example file.\nworking_directory (Path) – Working directory to download the example file to.\nPath\nget_example_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.get_example_file",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.get_example_file.html#ansys.acp.core.extras.example_helpers.get_example_file",
        "title": "get_example_file > get_example_file > get_example_file",
        "section": "get_example_file > get_example_file",
        "text": "ansys.acp.core.extras.example_helpers.get_example_file(example_key, working_directory)\n\nDownload an example file from the example-data repo to the working directory.\n\nParameters\n\nexample_key (ExampleKeys) – Key for the example file.\n\nworking_directory (Path) – Working directory to download the example file to.\n\nReturn type\n\nPath\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.extend_endings",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.extend_endings.html#extend_endings",
        "title": "extend_endings",
        "section": "extend_endings",
        "text": "extend_endings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.extend_endings",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.extend_endings.html#ansys.acp.core.TubeSelectionRule.extend_endings",
        "title": "extend_endings > extend_endings > extend_endings",
        "section": "extend_endings > extend_endings",
        "text": "property TubeSelectionRule.extend_endings: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset.html#ply_offset",
        "title": "ply_offset",
        "section": "ply_offset",
        "text": "ply_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset.html#ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset",
        "title": "ply_offset > ply_offset > ply_offset",
        "section": "ply_offset > ply_offset",
        "text": "ModelingPlyNodalData.ply_offset: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.mesh",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.mesh",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.mesh.html#ansys.acp.core.ElementSet.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property ElementSet.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.mesh",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.mesh.html#examples-using-elementsetmesh",
        "title": "mesh > Examples using ElementSet.mesh",
        "section": "Examples using ElementSet.mesh",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using ElementSet.mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export.html#export",
        "title": "export",
        "section": "export",
        "text": "Export the solid model to a file.\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\".\nexport\n\"ansys:h5\"\n\"ansys:cdb\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.export",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.export.html#ansys.acp.core.SolidModel.export",
        "title": "export > export > export",
        "section": "export > export",
        "text": "SolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\n\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\".\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.clone",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.clone",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.clone.html#ansys.acp.core.SolidModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SolidModel.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.parent.html#ansys.acp.core.CylindricalSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property CylindricalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.thickness.html#ansys.acp.core.AnalysisPly.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property AnalysisPly.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.html#rosettetype",
        "title": "RosetteType",
        "section": "RosetteType",
        "text": "Options for the type of a rosette.\nRosetteType.PARALLEL\n\nRosetteType.RADIAL\n\nRosetteType.CYLINDRICAL\n\nRosetteType.SPHERICAL\n\nRosetteType.EDGE_WISE\n\nRosetteType\nRosetteType.PARALLEL\nRosetteType.RADIAL\nRosetteType.CYLINDRICAL\nRosetteType.SPHERICAL\nRosetteType.EDGE_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.html#ansys.acp.core.RosetteType",
        "title": "RosetteType > RosetteType > RosetteType",
        "section": "RosetteType > RosetteType",
        "text": "class ansys.acp.core.RosetteType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of a rosette.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nRosetteType.PARALLEL\n\n\n\nRosetteType.RADIAL\n\n\n\nRosetteType.CYLINDRICAL\n\n\n\nRosetteType.SPHERICAL\n\n\n\nRosetteType.EDGE_WISE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.html#examples-using-rosettetype",
        "title": "RosetteType > Examples using RosetteType",
        "section": "Examples using RosetteType",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.name.html#ansys.acp.core.LookUpTable3DColumn.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LookUpTable3DColumn.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_edge_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_edge_sets.html#transferred_edge_sets",
        "title": "transferred_edge_sets",
        "section": "transferred_edge_sets",
        "text": "transferred_edge_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_edge_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_edge_sets.html#ansys.acp.core.SolidModelExportSettings.transferred_edge_sets",
        "title": "transferred_edge_sets > transferred_edge_sets > transferred_edge_sets",
        "section": "transferred_edge_sets > transferred_edge_sets",
        "text": "property SolidModelExportSettings.transferred_edge_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.elemental_data.html#ansys.acp.core.ModelingGroup.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property ModelingGroup.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.Model.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.Model.elemental_data.html#ansys.acp.core.Model.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property Model.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.Model.elemental_data.html#examples-using-modelelemental_data",
        "title": "elemental_data > Examples using Model.elemental_data",
        "section": "Examples using Model.elemental_data",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Model.elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.html#taperedge",
        "title": "TaperEdge",
        "section": "TaperEdge",
        "text": "Defines a taper edge.\nedge_set (EdgeSet) – Defines the edge along which the ply tapering is applied.\nangle (float) – Defines the angle between the cutting plane and  the reference surface.\noffset (float) – Moves the cutting plane along the out-of-plane direction.\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle).\nAdded in ACP server version 24.2.\nTaperEdge.clone()\nCreate a new unstored TaperEdge with the same properties.\nTaperEdge.angle\nAngle between the cutting plane and  the reference surface.\nTaperEdge.edge_set\nEdge along which the ply tapering is applied.\nTaperEdge.offset\nMove the cutting plane along the out-of-plane direction.\nTaperEdge\n-offset/tan(angle)\nTaperEdge.clone\nTaperEdge.angle\nTaperEdge.edge_set\nTaperEdge.offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.html#ansys.acp.core.TaperEdge",
        "title": "TaperEdge > TaperEdge > TaperEdge",
        "section": "TaperEdge > TaperEdge",
        "text": "class ansys.acp.core.TaperEdge(edge_set, *, angle, offset)\n\nDefines a taper edge.\n\nParameters\n\nedge_set (EdgeSet) – Defines the edge along which the ply tapering is applied.\n\nangle (float) – Defines the angle between the cutting plane and  the reference surface.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction.\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle).\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTaperEdge.clone()\n\nCreate a new unstored TaperEdge with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTaperEdge.angle\n\nAngle between the cutting plane and  the reference surface.\n\nTaperEdge.edge_set\n\nEdge along which the ply tapering is applied.\n\nTaperEdge.offset\n\nMove the cutting plane along the out-of-plane direction.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.topdown",
        "href": "api/_autosummary/ansys.acp.core.Stackup.topdown.html#topdown",
        "title": "topdown",
        "section": "topdown",
        "text": "topdown"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.topdown",
        "href": "api/_autosummary/ansys.acp.core.Stackup.topdown.html#ansys.acp.core.Stackup.topdown",
        "title": "topdown > topdown > topdown",
        "section": "topdown > topdown",
        "text": "property Stackup.topdown: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.SI",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.SI.html#si",
        "title": "SI",
        "section": "SI",
        "text": "SI"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.SI",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.SI.html#ansys.acp.core.UnitSystemType.SI",
        "title": "SI > SI > SI",
        "section": "SI > SI",
        "text": "UnitSystemType.SI = 'si'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.SI",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.SI.html#examples-using-unitsystemtypesi",
        "title": "SI > Examples using UnitSystemType.SI",
        "section": "Examples using UnitSystemType.SI",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using UnitSystemType.SI"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "BooleanSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.field_variable_name",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.field_variable_name.html#field_variable_name",
        "title": "field_variable_name",
        "section": "field_variable_name",
        "text": "field_variable_name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.field_variable_name",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.field_variable_name.html#ansys.acp.core.FieldDefinition.field_variable_name",
        "title": "field_variable_name > field_variable_name > field_variable_name",
        "section": "field_variable_name > field_variable_name",
        "text": "property FieldDefinition.field_variable_name: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.splitlines",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.splitlines.html#splitlines",
        "title": "splitlines",
        "section": "splitlines",
        "text": "Return a list of the lines in the string, breaking at line boundaries.\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.\nsplitlines"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.splitlines",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.splitlines.html#ansys.acp.core.LaunchMode.splitlines",
        "title": "splitlines > splitlines > splitlines",
        "section": "splitlines > splitlines",
        "text": "LaunchMode.splitlines(/, keepends=False)\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "AnalysisPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.html#virtualgeometry",
        "title": "VirtualGeometry",
        "section": "VirtualGeometry",
        "text": "Instantiate a Virtual Geometry.\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\nname (str) – Name of the Virtual Geometry.\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\nAdded in ACP server version 24.2.\nVirtualGeometry.add_sub_shape(cad_geometry, path)\nAdd a SubShape to the VirtualGeometry.\nVirtualGeometry.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nVirtualGeometry.delete()\nDelete the object.\nVirtualGeometry.set_cad_components(...)\nSet the sub-shapes to match the given CADComponents.\nVirtualGeometry.store(parent)\nStore the object on the server.\nVirtualGeometry.dimension\n\nVirtualGeometry.id\nIdentifier of the object, used for example as key in maps.\nVirtualGeometry.name\nThe name of the object.\nVirtualGeometry.parent\nThe parent of the object.\nVirtualGeometry.status\n\nVirtualGeometry.sub_shapes\n\nVirtualGeometry\nVirtualGeometry.add_sub_shape\nVirtualGeometry.clone\nVirtualGeometry.delete\nVirtualGeometry.set_cad_components\nVirtualGeometry.store\nVirtualGeometry.dimension\nVirtualGeometry.id\nVirtualGeometry.name\nVirtualGeometry.parent\nVirtualGeometry.status\nVirtualGeometry.sub_shapes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.html#ansys.acp.core.VirtualGeometry",
        "title": "VirtualGeometry > VirtualGeometry > VirtualGeometry",
        "section": "VirtualGeometry > VirtualGeometry",
        "text": "class ansys.acp.core.VirtualGeometry(*, name='VirtualGeometry', cad_components=None, sub_shapes=None)\n\nInstantiate a Virtual Geometry.\n\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\n\nParameters\n\nname (str) – Name of the Virtual Geometry.\n\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\n\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVirtualGeometry.add_sub_shape(cad_geometry, path)\n\nAdd a SubShape to the VirtualGeometry.\n\nVirtualGeometry.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nVirtualGeometry.delete()\n\nDelete the object.\n\nVirtualGeometry.set_cad_components(...)\n\nSet the sub-shapes to match the given CADComponents.\n\nVirtualGeometry.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVirtualGeometry.dimension\n\n\n\nVirtualGeometry.id\n\nIdentifier of the object, used for example as key in maps.\n\nVirtualGeometry.name\n\nThe name of the object.\n\nVirtualGeometry.parent\n\nThe parent of the object.\n\nVirtualGeometry.status\n\n\n\nVirtualGeometry.sub_shapes\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.html#examples-using-virtualgeometry",
        "title": "VirtualGeometry > Examples using VirtualGeometry",
        "section": "Examples using VirtualGeometry",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using VirtualGeometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3.html#e3",
        "title": "E3",
        "section": "E3",
        "text": "E3"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3",
        "title": "E3 > E3 > E3",
        "section": "E3 > E3",
        "text": "property VariableEngineeringConstants.E3: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.clone.html#ansys.acp.core.ParallelSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ParallelSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field_type.html#thickness_field_type",
        "title": "thickness_field_type",
        "section": "thickness_field_type",
        "text": "thickness_field_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_field_type.html#ansys.acp.core.ModelingPly.thickness_field_type",
        "title": "thickness_field_type > thickness_field_type > thickness_field_type",
        "section": "thickness_field_type > thickness_field_type",
        "text": "property ModelingPly.thickness_field_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.add_sub_shape",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.add_sub_shape.html#add_sub_shape",
        "title": "add_sub_shape",
        "section": "add_sub_shape",
        "text": "Add a SubShape to the VirtualGeometry.\nSee SubShape for the available parameters.\nSubShape\nadd_sub_shape\nSubShape"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.add_sub_shape",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.add_sub_shape.html#ansys.acp.core.VirtualGeometry.add_sub_shape",
        "title": "add_sub_shape > add_sub_shape > add_sub_shape",
        "section": "add_sub_shape > add_sub_shape",
        "text": "VirtualGeometry.add_sub_shape(cad_geometry, path)\n\nAdd a SubShape to the VirtualGeometry.\n\nSee SubShape for the available parameters.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSubShape"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.parent",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.parent",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.parent.html#ansys.acp.core.ButtJointSequence.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ButtJointSequence.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.status.html#ansys.acp.core.ImportedProductionPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ImportedProductionPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.shell_mesh.html#ansys.acp.core.AnalysisPly.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property AnalysisPly.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.status",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.status",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.status.html#ansys.acp.core.SubLaminate.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SubLaminate.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction.html#relative_thickness_correction",
        "title": "relative_thickness_correction",
        "section": "relative_thickness_correction",
        "text": "relative_thickness_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction",
        "title": "relative_thickness_correction > relative_thickness_correction > relative_thickness_correction",
        "section": "relative_thickness_correction > relative_thickness_correction",
        "text": "ProductionPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.status",
        "href": "api/_autosummary/ansys.acp.core.Stackup.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.status",
        "href": "api/_autosummary/ansys.acp.core.Stackup.status.html#ansys.acp.core.Stackup.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property Stackup.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/howto/launch_configuration",
        "href": "user_guide/howto/launch_configuration.html#change-acp-startup",
        "title": "Change ACP startup",
        "section": "Change ACP startup",
        "text": "By default, the launch_acp() function will start ACP from the unified installer, using the latest available version.\nChange ACP startup\nlaunch_acp()"
    },
    {
        "objectID": "user_guide/howto/launch_configuration",
        "href": "user_guide/howto/launch_configuration.html#change-the-default-launch-configuration",
        "title": "Change ACP startup > Change the default launch configuration",
        "section": "Change the default launch configuration",
        "text": "To change this behavior, you can use the ansys-launcher command line tool to configure how ACP is started.\nOn Windows, the executable may be called ansys-launcher.exe.\nAs indicated in the preceding output, three methods are available for starting ACP:\ndirect: Start ACP directly by providing the path to the acp_grpcserver executable.\ndocker_compose: Start ACP using Docker Compose.\nconnect: Connect to an already running ACP server.\nYou may configure any of the three methods with the ansys-launcher tool. For example, to use the\ndirect method, run the following command:\nThe tool prompts you for the required information, providing the default value\nin square brackets. You can accept the default value by pressing the Enter key or input a\nnew value by typing it and then pressing the Enter key.\nThe new configuration is used by the launch_acp() function. Note that you\nmay have to restart your Python session for the changes to take effect.\nChange the default launch configuration\nansys-launcher\nansys-launcher.exe\ndirect\nacp_grpcserver\ndocker_compose\nconnect\nansys-launcher\ndirect\nlaunch_acp()"
    },
    {
        "objectID": "user_guide/howto/launch_configuration",
        "href": "user_guide/howto/launch_configuration.html#choose-the-launch-mode-at-runtime",
        "title": "Change ACP startup > Choose the launch mode at runtime",
        "section": "Choose the launch mode at runtime",
        "text": "To switch between the launch modes, you can specify the launch_mode argument\nwhen calling the launch_acp() function. Note that the selected launch mode must already\nbe configured with the ansys-launcher tool.\nYou may use the config parameter to fully customize the launch of ACP at runtime.\nThis parameter expects a configuration object matching the selected launch_mode:\nDirectLaunchConfig for the direct launch mode.\nDockerComposeLaunchConfig for the docker_compose launch mode.\nConnectLaunchConfig for the connect launch mode.\nChoose the launch mode at runtime\nlaunch_mode\nlaunch_acp()\nansys-launcher\nconfig\nlaunch_mode\nDirectLaunchConfig\ndirect\nDockerComposeLaunchConfig\ndocker_compose\nConnectLaunchConfig\nconnect"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.in_plane_reference_direction1",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.in_plane_reference_direction1.html#in_plane_reference_direction1",
        "title": "in_plane_reference_direction1",
        "section": "in_plane_reference_direction1",
        "text": "in_plane_reference_direction1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.in_plane_reference_direction1",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.in_plane_reference_direction1.html#ansys.acp.core.SectionCut.in_plane_reference_direction1",
        "title": "in_plane_reference_direction1 > in_plane_reference_direction1 > in_plane_reference_direction1",
        "section": "in_plane_reference_direction1 > in_plane_reference_direction1",
        "text": "property SectionCut.in_plane_reference_direction1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.update",
        "href": "api/_autosummary/ansys.acp.core.Model.update.html#update",
        "title": "update",
        "section": "update",
        "text": "Update the model.\nrelations_only (bool) – Whether to update and propagate only the status of all objects.\nupdate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.update",
        "href": "api/_autosummary/ansys.acp.core.Model.update.html#ansys.acp.core.Model.update",
        "title": "update > update > update",
        "section": "update > update",
        "text": "Model.update(*, relations_only=False)\n\nUpdate the model.\n\nParameters\n\nrelations_only (bool) – Whether to update and propagate only the status of all objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.update",
        "href": "api/_autosummary/ansys.acp.core.Model.update.html#examples-using-modelupdate",
        "title": "update > Examples using Model.update",
        "section": "Examples using Model.update",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.update"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.removeprefix",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.removeprefix.html#removeprefix",
        "title": "removeprefix",
        "section": "removeprefix",
        "text": "Return a str with the given prefix string removed if present.\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.\nremoveprefix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.removeprefix",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.removeprefix.html#ansys.acp.core.LaunchMode.removeprefix",
        "title": "removeprefix > removeprefix > removeprefix",
        "section": "removeprefix > removeprefix",
        "text": "LaunchMode.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.html#orientedselectionsetelementaldata",
        "title": "OrientedSelectionSetElementalData",
        "section": "OrientedSelectionSetElementalData",
        "text": "Represents elemental data for an Oriented Selection Set.\nOrientedSelectionSetElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nOrientedSelectionSetElementalData.normal\n\nOrientedSelectionSetElementalData.orientation\n\nOrientedSelectionSetElementalData.reference_direction\n\nOrientedSelectionSetElementalData.element_labels\n\nOrientedSelectionSetElementalData\nOrientedSelectionSetElementalData.get_pyvista_mesh\nOrientedSelectionSetElementalData.normal\nOrientedSelectionSetElementalData.orientation\nOrientedSelectionSetElementalData.reference_direction\nOrientedSelectionSetElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData",
        "title": "OrientedSelectionSetElementalData > OrientedSelectionSetElementalData > OrientedSelectionSetElementalData",
        "section": "OrientedSelectionSetElementalData > OrientedSelectionSetElementalData",
        "text": "class ansys.acp.core.mesh_data.OrientedSelectionSetElementalData(element_labels, normal=None, orientation=None, reference_direction=None)\n\nRepresents elemental data for an Oriented Selection Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nOrientedSelectionSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nOrientedSelectionSetElementalData.normal\n\n\n\nOrientedSelectionSetElementalData.orientation\n\n\n\nOrientedSelectionSetElementalData.reference_direction\n\n\n\nOrientedSelectionSetElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry.html#create_cut_off_geometry",
        "title": "create_cut_off_geometry",
        "section": "create_cut_off_geometry",
        "text": "Instantiate a cut-off geometry.\nname (str) – Name of the cut-off geometry.\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\nCutOffGeometry\nAdded in ACP server version 25.1.\ncreate_cut_off_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry.html#ansys.acp.core.SolidModel.create_cut_off_geometry",
        "title": "create_cut_off_geometry > create_cut_off_geometry > create_cut_off_geometry",
        "section": "create_cut_off_geometry > create_cut_off_geometry",
        "text": "SolidModel.create_cut_off_geometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nReturn type\n\nCutOffGeometry\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry.html#examples-using-solidmodelcreate_cut_off_geometry",
        "title": "create_cut_off_geometry > Examples using SolidModel.create_cut_off_geometry",
        "section": "Examples using SolidModel.create_cut_off_geometry",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SolidModel.create_cut_off_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1.html#g12_1",
        "title": "G12_1",
        "section": "G12_1",
        "text": "G12_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1",
        "title": "G12_1 > G12_1 > G12_1",
        "section": "G12_1 > G12_1",
        "text": "property VariableWovenCharacterization.G12_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.cached",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.cached.html#cached",
        "title": "cached",
        "section": "cached",
        "text": "cached"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.cached",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.cached.html#ansys.acp.core.material_property_sets.InterpolationOptions.cached",
        "title": "cached > cached > cached",
        "section": "cached > cached",
        "text": "InterpolationOptions.cached: bool\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.status",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.status",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.status.html#ansys.acp.core.LayupMappingObject.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property LayupMappingObject.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.find",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.find.html#find",
        "title": "find",
        "section": "find",
        "text": "Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nReturn -1 on failure.\nfind"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.find",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.find.html#ansys.acp.core.LaunchMode.find",
        "title": "find > find > find",
        "section": "find > find",
        "text": "LaunchMode.find(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.parent",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.parent",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.parent.html#ansys.acp.core.OrientedSelectionSet.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property OrientedSelectionSet.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup",
        "href": "api/_autosummary/ansys.acp.core.Stackup.html#stackup",
        "title": "Stackup",
        "section": "Stackup",
        "text": "Instantiate a Stackup.\nname (str) – Name of the stackup.\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\narea_price (float) – Price per area of the stackup.\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\nAdded in ACP server version 24.2.\nStackup.add_fabric(fabric[, angle])\nAdd a FabricWithAngle to the Stackup.\nStackup.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nStackup.delete()\nDelete the object.\nStackup.store(parent)\nStore the object on the server.\nStackup.area_price\n\nStackup.area_weight\n\nStackup.cut_off_material\n\nStackup.cut_off_material_handling\n\nStackup.draping_material_model\n\nStackup.draping_ud_coefficient\n\nStackup.drop_off_material\n\nStackup.drop_off_material_handling\n\nStackup.fabrics\n\nStackup.id\nIdentifier of the object, used for example as key in maps.\nStackup.ignore_for_postprocessing\n\nStackup.locked\n\nStackup.name\nThe name of the object.\nStackup.parent\nThe parent of the object.\nStackup.status\n\nStackup.symmetry\n\nStackup.thickness\n\nStackup.topdown\n\nStackup\nStackup.add_fabric\nStackup.clone\nStackup.delete\nStackup.store\nStackup.area_price\nStackup.area_weight\nStackup.cut_off_material\nStackup.cut_off_material_handling\nStackup.draping_material_model\nStackup.draping_ud_coefficient\nStackup.drop_off_material\nStackup.drop_off_material_handling\nStackup.fabrics\nStackup.id\nStackup.ignore_for_postprocessing\nStackup.locked\nStackup.name\nStackup.parent\nStackup.status\nStackup.symmetry\nStackup.thickness\nStackup.topdown"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup",
        "href": "api/_autosummary/ansys.acp.core.Stackup.html#ansys.acp.core.Stackup",
        "title": "Stackup > Stackup > Stackup",
        "section": "Stackup > Stackup",
        "text": "class ansys.acp.core.Stackup(*, name='Stackup', symmetry='no_symmetry', topdown=True, fabrics=(), area_price=0.0, drop_off_material_handling='global', drop_off_material=None, cut_off_material=None, cut_off_material_handling='computed', draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Stackup.\n\nParameters\n\nname (str) – Name of the stackup.\n\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\n\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\n\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\n\narea_price (float) – Price per area of the stackup.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nStackup.add_fabric(fabric[, angle])\n\nAdd a FabricWithAngle to the Stackup.\n\nStackup.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nStackup.delete()\n\nDelete the object.\n\nStackup.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nStackup.area_price\n\n\n\nStackup.area_weight\n\n\n\nStackup.cut_off_material\n\n\n\nStackup.cut_off_material_handling\n\n\n\nStackup.draping_material_model\n\n\n\nStackup.draping_ud_coefficient\n\n\n\nStackup.drop_off_material\n\n\n\nStackup.drop_off_material_handling\n\n\n\nStackup.fabrics\n\n\n\nStackup.id\n\nIdentifier of the object, used for example as key in maps.\n\nStackup.ignore_for_postprocessing\n\n\n\nStackup.locked\n\n\n\nStackup.name\n\nThe name of the object.\n\nStackup.parent\n\nThe parent of the object.\n\nStackup.status\n\n\n\nStackup.symmetry\n\n\n\nStackup.thickness\n\n\n\nStackup.topdown\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup",
        "href": "api/_autosummary/ansys.acp.core.Stackup.html#examples-using-stackup",
        "title": "Stackup > Examples using Stackup",
        "section": "Examples using Stackup",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using Stackup"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.UD",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.UD.html#ud",
        "title": "UD",
        "section": "UD",
        "text": "UD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.UD",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.UD.html#ansys.acp.core.DrapingMaterialModel.UD",
        "title": "UD > UD > UD",
        "section": "UD > UD",
        "text": "DrapingMaterialModel.UD = 'ud'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.normal.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "ProductionPlyElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.html#cylindricalselectionrulenodaldata",
        "title": "CylindricalSelectionRuleNodalData",
        "section": "CylindricalSelectionRuleNodalData",
        "text": "Represents nodal data for a Cylindrical Selection Rule.\nCylindricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nCylindricalSelectionRuleNodalData.node_labels\n\nCylindricalSelectionRuleNodalData\nCylindricalSelectionRuleNodalData.get_pyvista_mesh\nCylindricalSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData",
        "title": "CylindricalSelectionRuleNodalData > CylindricalSelectionRuleNodalData > CylindricalSelectionRuleNodalData",
        "section": "CylindricalSelectionRuleNodalData > CylindricalSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Cylindrical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nCylindricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nCylindricalSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.material_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.material_index.html#material_index",
        "title": "material_index",
        "section": "material_index",
        "text": "material_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.material_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.material_index.html#ansys.acp.core.SolidModelExportSettings.material_index",
        "title": "material_index > material_index > material_index",
        "section": "material_index > material_index",
        "text": "property SolidModelExportSettings.material_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.splitlines",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.splitlines.html#splitlines",
        "title": "splitlines",
        "section": "splitlines",
        "text": "Return a list of the lines in the string, breaking at line boundaries.\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.\nsplitlines"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.splitlines",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.splitlines.html#ansys.acp.core.material_property_sets.PuckMaterialType.splitlines",
        "title": "splitlines > splitlines > splitlines",
        "section": "splitlines > splitlines",
        "text": "PuckMaterialType.splitlines(/, keepends=False)\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.replace",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.replace.html#replace",
        "title": "replace",
        "section": "replace",
        "text": "Return a copy with all occurrences of substring old replaced by new.\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\nIf the optional argument count is given, only the first count occurrences are\nreplaced.\nreplace"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.replace",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.replace.html#ansys.acp.core.material_property_sets.PuckMaterialType.replace",
        "title": "replace > replace > replace",
        "section": "replace > replace",
        "text": "PuckMaterialType.replace(old, new, count=-1, /)\n\nReturn a copy with all occurrences of substring old replaced by new.\n\ncount\n\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are\nreplaced.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.expandtabs",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.expandtabs.html#expandtabs",
        "title": "expandtabs",
        "section": "expandtabs",
        "text": "Return a copy where all tab characters are expanded using spaces.\nIf tabsize is not given, a tab size of 8 characters is assumed.\nexpandtabs"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.expandtabs",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.expandtabs.html#ansys.acp.core.LaunchMode.expandtabs",
        "title": "expandtabs > expandtabs > expandtabs",
        "section": "expandtabs > expandtabs",
        "text": "LaunchMode.expandtabs(/, tabsize=8)\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ADHESIVE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ADHESIVE.html#adhesive",
        "title": "ADHESIVE",
        "section": "ADHESIVE",
        "text": "ADHESIVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ADHESIVE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ADHESIVE.html#ansys.acp.core.PlyType.ADHESIVE",
        "title": "ADHESIVE > ADHESIVE > ADHESIVE",
        "section": "ADHESIVE > ADHESIVE",
        "text": "PlyType.ADHESIVE = 'adhesive'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.zfill",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.zfill.html#zfill",
        "title": "zfill",
        "section": "zfill",
        "text": "Pad a numeric string with zeros on the left, to fill a field of the given width.\nThe string is never truncated.\nzfill"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.zfill",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.zfill.html#ansys.acp.core.LaunchMode.zfill",
        "title": "zfill > zfill > zfill",
        "section": "zfill > zfill",
        "text": "LaunchMode.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete_lost_elements",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete_lost_elements.html#delete_lost_elements",
        "title": "delete_lost_elements",
        "section": "delete_lost_elements",
        "text": "delete_lost_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete_lost_elements",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.delete_lost_elements.html#ansys.acp.core.LayupMappingObject.delete_lost_elements",
        "title": "delete_lost_elements > delete_lost_elements > delete_lost_elements",
        "section": "delete_lost_elements > delete_lost_elements",
        "text": "property LayupMappingObject.delete_lost_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule.html#create_variable_offset_selection_rule",
        "title": "create_variable_offset_selection_rule",
        "section": "create_variable_offset_selection_rule",
        "text": "Instantiate a Variable Offset Selection Rule.\nname (str) – Name of the Variable Offset Selection Rule.\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\nVariableOffsetSelectionRule\nAdded in ACP server version 24.2.\ncreate_variable_offset_selection_rule\nFalse\ninherit_from_lookup_table\nFalse\ninherit_from_lookup_table\nFalse\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule.html#ansys.acp.core.Model.create_variable_offset_selection_rule",
        "title": "create_variable_offset_selection_rule > create_variable_offset_selection_rule > create_variable_offset_selection_rule",
        "section": "create_variable_offset_selection_rule > create_variable_offset_selection_rule",
        "text": "Model.create_variable_offset_selection_rule(*, name='VariableOffsetSelectionrule', edge_set=None, offsets=None, angles=None, include_rule=True, use_offset_correction=False, element_set=None, inherit_from_lookup_table=True, radius_origin=(0.0, 0.0, 0.0), radius_direction=(1.0, 0.0, 0.0), distance_along_edge=False)\n\nInstantiate a Variable Offset Selection Rule.\n\nParameters\n\nname (str) – Name of the Variable Offset Selection Rule.\n\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\n\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\n\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\n\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\n\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\n\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\n\nReturn type\n\nVariableOffsetSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule.html#examples-using-modelcreate_variable_offset_selection_rule",
        "title": "create_variable_offset_selection_rule > Examples using Model.create_variable_offset_selection_rule",
        "section": "Examples using Model.create_variable_offset_selection_rule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using Model.create_variable_offset_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE.html#edge_wise",
        "title": "EDGE_WISE",
        "section": "EDGE_WISE",
        "text": "EDGE_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE.html#ansys.acp.core.RosetteType.EDGE_WISE",
        "title": "EDGE_WISE > EDGE_WISE > EDGE_WISE",
        "section": "EDGE_WISE > EDGE_WISE",
        "text": "RosetteType.EDGE_WISE = 'edge_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE.html#examples-using-rosettetypeedge_wise",
        "title": "EDGE_WISE > Examples using RosetteType.EDGE_WISE",
        "section": "Examples using RosetteType.EDGE_WISE",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType.EDGE_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.clone",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.clone",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.clone.html#ansys.acp.core.ModelingGroup.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ModelingGroup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rjust",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rjust.html#rjust",
        "title": "rjust",
        "section": "rjust",
        "text": "Return a right-justified string of length width.\nPadding is done using the specified fill character (default is a space).\nrjust"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rjust",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rjust.html#ansys.acp.core.material_property_sets.PuckMaterialType.rjust",
        "title": "rjust > rjust > rjust",
        "section": "rjust > rjust",
        "text": "PuckMaterialType.rjust(width, fillchar=' ', /)\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.write_degenerated_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.write_degenerated_elements.html#write_degenerated_elements",
        "title": "write_degenerated_elements",
        "section": "write_degenerated_elements",
        "text": "write_degenerated_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.write_degenerated_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.write_degenerated_elements.html#ansys.acp.core.SolidModelExportSettings.write_degenerated_elements",
        "title": "write_degenerated_elements > write_degenerated_elements > write_degenerated_elements",
        "section": "write_degenerated_elements > write_degenerated_elements",
        "text": "property SolidModelExportSettings.write_degenerated_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cylindrical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.cylindrical_selection_rules.html#cylindrical_selection_rules",
        "title": "cylindrical_selection_rules",
        "section": "cylindrical_selection_rules",
        "text": "cylindrical_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cylindrical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.cylindrical_selection_rules.html#ansys.acp.core.Model.cylindrical_selection_rules",
        "title": "cylindrical_selection_rules > cylindrical_selection_rules > cylindrical_selection_rules",
        "section": "cylindrical_selection_rules > cylindrical_selection_rules",
        "text": "property Model.cylindrical_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.mesh.html#ansys.acp.core.TubeSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property TubeSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt.html#yt",
        "title": "Yt",
        "section": "Yt",
        "text": "Yt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt",
        "title": "Yt > Yt > Yt",
        "section": "Yt > Yt",
        "text": "property ConstantWovenStressLimits.Yt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.name",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.name",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.name.html#ansys.acp.core.ExtrusionGuide.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ExtrusionGuide.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_ONLY",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_ONLY.html#tension_only",
        "title": "TENSION_ONLY",
        "section": "TENSION_ONLY",
        "text": "TENSION_ONLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_ONLY",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_ONLY.html#ansys.acp.core.ReinforcingBehavior.TENSION_ONLY",
        "title": "TENSION_ONLY > TENSION_ONLY > TENSION_ONLY",
        "section": "TENSION_ONLY > TENSION_ONLY",
        "text": "ReinforcingBehavior.TENSION_ONLY = 'tension_only'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2.html#e2_2",
        "title": "E2_2",
        "section": "E2_2",
        "text": "E2_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2",
        "title": "E2_2 > E2_2 > E2_2",
        "section": "E2_2 > E2_2",
        "text": "property ConstantWovenCharacterization.E2_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.include_rule.html#ansys.acp.core.SphericalSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property SphericalSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.clone.html#ansys.acp.core.SnapToGeometry.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SnapToGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction.html#fiber_direction",
        "title": "fiber_direction",
        "section": "fiber_direction",
        "text": "fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction",
        "title": "fiber_direction > fiber_direction > fiber_direction",
        "section": "fiber_direction > fiber_direction",
        "text": "ProductionPlyElementalData.fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.thickness",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.thickness.html#ansys.acp.core.ImportedProductionPly.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property ImportedProductionPly.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.parent.html#ansys.acp.core.ImportedModelingPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ImportedModelingPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_type.html#draping_type",
        "title": "draping_type",
        "section": "draping_type",
        "text": "draping_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_type.html#ansys.acp.core.ModelingPly.draping_type",
        "title": "draping_type > draping_type > draping_type",
        "section": "draping_type > draping_type",
        "text": "property ModelingPly.draping_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.name",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.name",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.name.html#ansys.acp.core.InterfaceLayer.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property InterfaceLayer.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt.html#zt",
        "title": "Zt",
        "section": "Zt",
        "text": "Zt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt",
        "title": "Zt > Zt > Zt",
        "section": "Zt > Zt",
        "text": "property ConstantWovenStressLimits.Zt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.islower",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.islower.html#islower",
        "title": "islower",
        "section": "islower",
        "text": "Return True if the string is a lowercase string, False otherwise.\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.\nislower"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.islower",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.islower.html#ansys.acp.core.LaunchMode.islower",
        "title": "islower > islower > islower",
        "section": "islower > islower",
        "text": "LaunchMode.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.skip_elements_without_plies",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.skip_elements_without_plies.html#skip_elements_without_plies",
        "title": "skip_elements_without_plies",
        "section": "skip_elements_without_plies",
        "text": "skip_elements_without_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.skip_elements_without_plies",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.skip_elements_without_plies.html#ansys.acp.core.SolidModel.skip_elements_without_plies",
        "title": "skip_elements_without_plies > skip_elements_without_plies > skip_elements_without_plies",
        "section": "skip_elements_without_plies > skip_elements_without_plies",
        "text": "property SolidModel.skip_elements_without_plies: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yc.html#yc",
        "title": "Yc",
        "section": "Yc",
        "text": "Yc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yc.html#ansys.acp.core.material_property_sets.VariableStressLimits.Yc",
        "title": "Yc > Yc > Yc",
        "section": "Yc > Yc",
        "text": "property VariableStressLimits.Yc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.name",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.name",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.name.html#ansys.acp.core.SolidModel.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SolidModel.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.status",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.status",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.status.html#ansys.acp.core.ElementSet.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ElementSet.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt.html#zt",
        "title": "Zt",
        "section": "Zt",
        "text": "Zt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt",
        "title": "Zt > Zt > Zt",
        "section": "Zt > Zt",
        "text": "property VariableWovenStressLimits.Zt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.status",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.status",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.status.html#ansys.acp.core.EdgeSet.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property EdgeSet.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.clone",
        "href": "api/_autosummary/ansys.acp.core.Fabric.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.clone",
        "href": "api/_autosummary/ansys.acp.core.Fabric.clone.html#ansys.acp.core.Fabric.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Fabric.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#cdb-to-pymechanical-shell-workflow",
        "title": "CDB to PyMechanical shell workflow",
        "section": "CDB to PyMechanical shell workflow",
        "text": "This example shows how to define a composite lay-up in PyACP based on a mesh\nfrom a CDB file, import the model into PyMechanical for defining the load and\nboundary conditions, and run a failure analysis with PyDPF - Composites.\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\nCDB to PyMechanical shell workflow"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#import-modules-and-start-the-ansys-products",
        "title": "CDB to PyMechanical shell workflow > Import modules and start the Ansys products",
        "section": "Import modules and start the Ansys products",
        "text": "Import the standard library and third-party dependencies.\nImport PyACP, PyMechanical, and PyDPF - Composites.\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel.\nImport modules and start the Ansys products\nThreadPoolExecutor"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#get-example-input-files",
        "title": "CDB to PyMechanical shell workflow > Get example input files",
        "section": "Get example input files",
        "text": "Create a temporary working directory, and download the example input files\nto this directory.\nGet example input files"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#set-up-the-acp-model",
        "title": "CDB to PyMechanical shell workflow > Set up the ACP model",
        "section": "Set up the ACP model",
        "text": "Setup basic ACP lay-up based on the CDB file.\nVisualize the loaded mesh.\nSet up the ACP model"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#define-the-composite-lay-up",
        "title": "CDB to PyMechanical shell workflow > Define the composite lay-up",
        "section": "Define the composite lay-up",
        "text": "Create an orthotropic material and fabric including strain limits, which are later\nused to postprocess the simulation.\nDefine a rosette and oriented selection set. Plot the orientation.\nCreate various plies with different angles and add them to a modeling group.\nShow the fiber directions of a specific ply.\nFor a quick overview, print the model tree. Note that\nthe model can also be opened in the ACP GUI. For more\ninformation, see view_the_model_in_the_acp_gui.\nDefine the composite lay-up"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#save-the-acp-model",
        "title": "CDB to PyMechanical shell workflow > Save the ACP model",
        "section": "Save the ACP model",
        "text": "Save the ACP model"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#import-mesh-materials-and-plies-into-mechanical",
        "title": "CDB to PyMechanical shell workflow > Import mesh, materials and plies into Mechanical",
        "section": "Import mesh, materials and plies into Mechanical",
        "text": "Import geometry, mesh, and named selections into Mechanical\nImport materials into Mechanical\nImport plies into Mechanical\nImport mesh, materials and plies into Mechanical"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#set-boundary-condition-and-solve",
        "title": "CDB to PyMechanical shell workflow > Set boundary condition and solve",
        "section": "Set boundary condition and solve",
        "text": "Set boundary condition and solve"
    },
    {
        "objectID": "examples/workflows/06-cdb-to-pymechanical-workflow",
        "href": "examples/workflows/06-cdb-to-pymechanical-workflow.html#postprocess-results",
        "title": "CDB to PyMechanical shell workflow > Postprocess results",
        "section": "Postprocess results",
        "text": "Evaluate the failure criteria using the PyDPF - Composites.\nDownload Jupyter notebook: 06-cdb-to-pymechanical-workflow.ipynb\nDownload Python source code: 06-cdb-to-pymechanical-workflow.py\nDownload zipped: 06-cdb-to-pymechanical-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocess results\nDownload Jupyter notebook: 06-cdb-to-pymechanical-workflow.ipynb\nDownload Python source code: 06-cdb-to-pymechanical-workflow.py\nDownload zipped: 06-cdb-to-pymechanical-workflow.zip"
    },
    {
        "objectID": "examples/modeling_features/010-sandwich-panel-layup",
        "href": "examples/modeling_features/010-sandwich-panel-layup.html#sandwich-panel",
        "title": "Sandwich panel",
        "section": "Sandwich panel",
        "text": "This example defines a composite lay-up for a sandwich panel using PyACP.\nIt only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nImport the standard library and third-party dependencies.\nImport the PyACP dependencies.\nSandwich panel"
    },
    {
        "objectID": "examples/modeling_features/010-sandwich-panel-layup",
        "href": "examples/modeling_features/010-sandwich-panel-layup.html#start-acp-and-load-the-model",
        "title": "Sandwich panel > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the ACP server and connect to it.\nDefine the input file and import it into ACP.\nVisualize the loaded mesh.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/010-sandwich-panel-layup",
        "href": "examples/modeling_features/010-sandwich-panel-layup.html#create-the-sandwich-materials",
        "title": "Sandwich panel > Create the sandwich materials",
        "section": "Create the sandwich materials",
        "text": "Create the UD material and  its corresponding fabric.\nCreate a multi-axial stackup and a sublaminate. Stackups and sublaminates help quickly\nbuild repeating laminates.\nCreate the core material and its corresponding fabric.\nCreate the sandwich materials"
    },
    {
        "objectID": "examples/modeling_features/010-sandwich-panel-layup",
        "href": "examples/modeling_features/010-sandwich-panel-layup.html#create-the-lay-up",
        "title": "Sandwich panel > Create the Lay-up",
        "section": "Create the Lay-up",
        "text": "Define a rosette and oriented selection set. Plot the orientations.\nCreate the modeling plies which define the lay-up of the sandwich panel.\nUpdate and print the model.\nTotal running time of the script: (0 minutes 4.771 seconds)\nDownload Jupyter notebook: 010-sandwich-panel-layup.ipynb\nDownload Python source code: 010-sandwich-panel-layup.py\nDownload zipped: 010-sandwich-panel-layup.zip\nGallery generated by Sphinx-Gallery\nCreate the Lay-up\nDownload Jupyter notebook: 010-sandwich-panel-layup.ipynb\nDownload Python source code: 010-sandwich-panel-layup.py\nDownload zipped: 010-sandwich-panel-layup.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_geometry.html#cut_off_geometry",
        "title": "cut_off_geometry",
        "section": "cut_off_geometry",
        "text": "cut_off_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_geometry.html#ansys.acp.core.CutOffSelectionRule.cut_off_geometry",
        "title": "cut_off_geometry > cut_off_geometry > cut_off_geometry",
        "section": "cut_off_geometry > cut_off_geometry",
        "text": "property CutOffSelectionRule.cut_off_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT.html#creatablevaluet",
        "title": "CreatableValueT",
        "section": "CreatableValueT",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nCreatableValueT\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT.html#ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT",
        "title": "CreatableValueT > CreatableValueT > CreatableValueT",
        "section": "CreatableValueT > CreatableValueT",
        "text": "ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT = ~CreatableValueT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain.html#effective_strain",
        "title": "effective_strain",
        "section": "effective_strain",
        "text": "effective_strain"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain",
        "title": "effective_strain > effective_strain > effective_strain",
        "section": "effective_strain > effective_strain",
        "text": "property ConstantStrainLimits.effective_strain: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.html#trianglemesh",
        "title": "TriangleMesh",
        "section": "TriangleMesh",
        "text": "Represents a mesh consisting of triangle faces only.\nTriangleMesh.to_pyvista()\nConvert the mesh data to a PyVista object.\nTriangleMesh.node_coordinates\n\nTriangleMesh.element_nodes\n\nTriangleMesh\nTriangleMesh.to_pyvista\nTriangleMesh.node_coordinates\nTriangleMesh.element_nodes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.html#ansys.acp.core.mesh_data.TriangleMesh",
        "title": "TriangleMesh > TriangleMesh > TriangleMesh",
        "section": "TriangleMesh > TriangleMesh",
        "text": "class ansys.acp.core.mesh_data.TriangleMesh(node_coordinates, element_nodes)\n\nRepresents a mesh consisting of triangle faces only.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTriangleMesh.to_pyvista()\n\nConvert the mesh data to a PyVista object.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTriangleMesh.node_coordinates\n\n\n\nTriangleMesh.element_nodes\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.store",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.store",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.store.html#ansys.acp.core.InterfaceLayer.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "InterfaceLayer.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.parent.html#ansys.acp.core.ModelingPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ModelingPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables.html#ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableStrainLimits.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction.html#draped_transverse_direction",
        "title": "draped_transverse_direction",
        "section": "draped_transverse_direction",
        "text": "draped_transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction",
        "title": "draped_transverse_direction > draped_transverse_direction > draped_transverse_direction",
        "section": "draped_transverse_direction > draped_transverse_direction",
        "text": "ModelingPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.offset.html#ansys.acp.core.mesh_data.ModelElementalData.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "ModelElementalData.offset: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.server_version",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.server_version.html#server_version",
        "title": "server_version",
        "section": "server_version",
        "text": "Version of the connected server.\nserver_version"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.server_version",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.server_version.html#ansys.acp.core.ACPInstance.server_version",
        "title": "server_version > server_version > server_version",
        "section": "server_version > server_version",
        "text": "property ACPInstance.server_version: str\n\nVersion of the connected server.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.parent",
        "href": "api/_autosummary/ansys.acp.core.Material.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.parent",
        "href": "api/_autosummary/ansys.acp.core.Material.parent.html#ansys.acp.core.Material.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Material.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.solid_element_sets.html#solid_element_sets",
        "title": "solid_element_sets",
        "section": "solid_element_sets",
        "text": "solid_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.solid_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.solid_element_sets.html#ansys.acp.core.SolidModel.solid_element_sets",
        "title": "solid_element_sets > solid_element_sets > solid_element_sets",
        "section": "solid_element_sets > solid_element_sets",
        "text": "property SolidModel.solid_element_sets: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.field_variables.html#ansys.acp.core.material_property_sets.VariableDensity.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableDensity.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2.html#e2",
        "title": "E2",
        "section": "E2",
        "text": "E2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2",
        "title": "E2 > E2 > E2",
        "section": "E2 > E2",
        "text": "property ConstantEngineeringConstants.E2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.html#lookuptablecolumnvaluetype",
        "title": "LookUpTableColumnValueType",
        "section": "LookUpTableColumnValueType",
        "text": "Options for the column type (data location, scalar data, directional data) of look-up table columns.\nLookUpTableColumnValueType.SCALAR\n\nLookUpTableColumnValueType.DIRECTION\n\nLookUpTableColumnValueType.LOCATION\n\nLookUpTableColumnValueType\nLookUpTableColumnValueType.SCALAR\nLookUpTableColumnValueType.DIRECTION\nLookUpTableColumnValueType.LOCATION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.html#ansys.acp.core.LookUpTableColumnValueType",
        "title": "LookUpTableColumnValueType > LookUpTableColumnValueType > LookUpTableColumnValueType",
        "section": "LookUpTableColumnValueType > LookUpTableColumnValueType",
        "text": "class ansys.acp.core.LookUpTableColumnValueType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the column type (data location, scalar data, directional data) of look-up table columns.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLookUpTableColumnValueType.SCALAR\n\n\n\nLookUpTableColumnValueType.DIRECTION\n\n\n\nLookUpTableColumnValueType.LOCATION\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.html#examples-using-lookuptablecolumnvaluetype",
        "title": "LookUpTableColumnValueType > Examples using LookUpTableColumnValueType",
        "section": "Examples using LookUpTableColumnValueType",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using LookUpTableColumnValueType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT.html#layered_element",
        "title": "LAYERED_ELEMENT",
        "section": "LAYERED_ELEMENT",
        "text": "LAYERED_ELEMENT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT.html#ansys.acp.core.ElementTechnology.LAYERED_ELEMENT",
        "title": "LAYERED_ELEMENT > LAYERED_ELEMENT > LAYERED_ELEMENT",
        "section": "LAYERED_ELEMENT > LAYERED_ELEMENT",
        "text": "ElementTechnology.LAYERED_ELEMENT = 'layered_element'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT",
        "href": "api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT.html#examples-using-elementtechnologylayered_element",
        "title": "LAYERED_ELEMENT > Examples using ElementTechnology.LAYERED_ELEMENT",
        "section": "Examples using ElementTechnology.LAYERED_ELEMENT",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using ElementTechnology.LAYERED_ELEMENT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.offset_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.offset_type.html#offset_type",
        "title": "offset_type",
        "section": "offset_type",
        "text": "offset_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.offset_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.offset_type.html#ansys.acp.core.ImportedModelingPly.offset_type",
        "title": "offset_type > offset_type > offset_type",
        "section": "offset_type > offset_type",
        "text": "property ImportedModelingPly.offset_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.shell_mesh.html#ansys.acp.core.ProductionPly.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property ProductionPly.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.name",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.name",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.name.html#ansys.acp.core.ButtJointSequence.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ButtJointSequence.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.name.html#ansys.acp.core.ImportedModelingGroup.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ImportedModelingGroup.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.fabrics",
        "href": "api/_autosummary/ansys.acp.core.Stackup.fabrics.html#fabrics",
        "title": "fabrics",
        "section": "fabrics",
        "text": "fabrics"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.fabrics",
        "href": "api/_autosummary/ansys.acp.core.Stackup.fabrics.html#ansys.acp.core.Stackup.fabrics",
        "title": "fabrics > fabrics > fabrics",
        "section": "fabrics > fabrics",
        "text": "property Stackup.fabrics: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_element_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_element_set.html#create_element_set",
        "title": "create_element_set",
        "section": "create_element_set",
        "text": "Instantiate an Element Set.\nname (str) – The name of the Element Set.\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\nElementSet\nAdded in ACP server version 24.2.\ncreate_element_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_element_set",
        "href": "api/_autosummary/ansys.acp.core.Model.create_element_set.html#ansys.acp.core.Model.create_element_set",
        "title": "create_element_set > create_element_set > create_element_set",
        "section": "create_element_set > create_element_set",
        "text": "Model.create_element_set(*, name='ElementSet', middle_offset=False, element_labels=())\n\nInstantiate an Element Set.\n\nParameters\n\nname (str) – The name of the Element Set.\n\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\n\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\n\nReturn type\n\nElementSet\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "intro",
        "href": "intro.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "Getting started"
    },
    {
        "objectID": "intro",
        "href": "intro.html#installation",
        "title": "Getting started > Installation",
        "section": "Installation",
        "text": "PyACP supports Ansys 2024 R2 and later. To install PyACP, run the following command:\nYou should use a virtual environment,\nbecause it keeps Python packages isolated from your system Python.\nInstallation"
    },
    {
        "objectID": "intro",
        "href": "intro.html#usage",
        "title": "Getting started > Usage",
        "section": "Usage",
        "text": "Usage"
    },
    {
        "objectID": "intro",
        "href": "intro.html#start-acp",
        "title": "Getting started > Start ACP",
        "section": "Start ACP",
        "text": "Start a Python interpreter and import the PyACP package:\nNext, start an ACP instance:\nStart ACP"
    },
    {
        "objectID": "intro",
        "href": "intro.html#get-a-model",
        "title": "Getting started > Get a model",
        "section": "Get a model",
        "text": "You can resume a model from an existing ACP DB (ACPH5) or built it from\nscratch by importing an FE model (mesh).\nTo load an existing model with PyACP, use the import_model() method:\nTo import an FE model, use the format=\"ansys:cdb\" or format=\"ansys:dat\"\nparameter, respectively.\nThe following example imports a CDB file.\nSee FeFormat for a list of supported FE formats. Check out the\ninput_file_for_pyacp section to see how input files can be created.\nWhen working on Windows, be careful of backslashes in paths: These may correspond to\nescape sequences, resulting in errors.\nTo avoid issues, make sure to quote the backslashes (by using \\\\) or use a\nraw string literal by prefixing your string with r,\nlike model = acp.import_model(r\"path\\to\\your\\model.acph5\").\nGet a model\nimport_model()\nformat=\"ansys:cdb\"\nformat=\"ansys:dat\"\nFeFormat\n\\\\\nmodel = acp.import_model(r\"path\\to\\your\\model.acph5\")"
    },
    {
        "objectID": "intro",
        "href": "intro.html#start-modelling",
        "title": "Getting started > Start modelling",
        "section": "Start modelling",
        "text": "Start defining new objects in the model. For example, to create a ply and all its dependencies:\nThese create_* methods take additional parameters, which can be used to immediately set the properties of the new object.\nFor example, refer to the documentation of create_modeling_ply.\nAlternatively, you can always set the properties of an object after it has been created:\nWhen using PyACP from an IDE, you can use autocompletion to explore the available methods and properties. PyACP provides type hints to make the autocompletion as helpful as possible.\nStart modelling\ncreate_*\ncreate_modeling_ply"
    },
    {
        "objectID": "intro",
        "href": "intro.html#update-and-plot-the-model",
        "title": "Getting started > Update and plot the model",
        "section": "Update and plot the model",
        "text": "The lay-up is not automatically updated. So data such as ply thicknesses\nand fiber directions are only available after updating the model.\nTo perform the update, use the update method:\nMany PyACP objects provide data which can be plotted. For example, to show the mesh:\nOr to show the thickness of a modeling ply or fiber directions:\nThe model can also be opened in the ACP GUI. See view_the_model_in_the_acp_gui.\nUpdate and plot the model\nupdate"
    },
    {
        "objectID": "intro",
        "href": "intro.html#continue-exploring",
        "title": "Getting started > Continue exploring",
        "section": "Continue exploring",
        "text": "This is just a brief introduction to PyACP. To learn more:\nCheck out the examples to see complete examples of how to use PyACP.\nThe how-to guides provide instructions on how to perform specific tasks.\nThe API reference provides detailed information on all available classes and methods.\nContinue exploring"
    },
    {
        "objectID": "api/mesh_data",
        "href": "api/mesh_data.html#mesh-data-objects",
        "title": "Mesh data objects",
        "section": "Mesh data objects",
        "text": "AnalysisPlyElementalData(element_labels[, ...])\nRepresents elemental data for a Analysis Ply.\nAnalysisPlyNodalData(node_labels[, ply_offset])\nRepresents nodal data for an Analysis Ply.\nBooleanSelectionRuleElementalData(element_labels)\nRepresents elemental data for a Boolean Selection Rule.\nBooleanSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Boolean Selection Rule.\nCutOffSelectionRuleElementalData(element_labels)\nRepresents elemental data for a Cut-Off Selection Rule.\nCutOffSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Cut-Off Selection Rule.\nCylindricalSelectionRuleElementalData(...[, ...])\nRepresents elemental data for a Cylindrical Selection Rule.\nCylindricalSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Cylindrical Selection Rule.\nElementSetElementalData(element_labels[, normal])\nRepresents elemental data for an Element Set.\nElementSetNodalData(node_labels)\nRepresents nodal data for an Element Set.\nGeometricalSelectionRuleElementalData(...[, ...])\nRepresents elemental data for a Geometrical Selection Rule.\nGeometricalSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Geometrical Selection Rule.\nImportedSolidModelElementalData(element_labels)\nRepresents elemental data for an imported solid model.\nImportedSolidModelNodalData(node_labels)\nRepresents nodal data for an imported solid model.\nMeshData(node_labels, node_coordinates, ...)\nContainer for the mesh data of an ACP Model.\nModelElementalData(element_labels[, normal, ...])\nRepresents elemental data for a Model.\nModelingPlyElementalData(element_labels[, ...])\nRepresents elemental data for a Modeling Ply.\nModelingPlyNodalData(node_labels[, ply_offset])\nRepresents nodal data for a Modeling Ply.\nModelNodalData(node_labels)\nRepresents nodal data for a Model.\nOrientedSelectionSetElementalData(element_labels)\nRepresents elemental data for an Oriented Selection Set.\nOrientedSelectionSetNodalData(node_labels)\nRepresents nodal data for an Oriented Selection Set.\nParallelSelectionRuleElementalData(...[, normal])\nRepresents elemental data for a Parallel Selection Rule.\nParallelSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Parallel Selection Rule.\nProductionPlyElementalData(element_labels[, ...])\nRepresents elemental data for a Production Ply.\nProductionPlyNodalData(node_labels, ply_offset)\nRepresents nodal data for a Production Ply.\nScalarData(field_names, labels, values, ...)\nClass that encapsulates scalar data.\nSolidElementSetElementalData(element_labels)\nRepresents elemental data for a Solid Element Set.\nSolidElementSetNodalData(node_labels)\nRepresents nodal data for a Solid Element Set.\nSolidModelElementalData(element_labels[, normal])\nRepresents elemental data for a Solid Model.\nSolidModelNodalData(node_labels)\nRepresents nodal data for a Solid Model.\nSphericalSelectionRuleElementalData(...[, ...])\nRepresents elemental data for a Spherical Selection Rule.\nSphericalSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Spherical Selection Rule.\nTriangleMesh(node_coordinates, element_nodes)\nRepresents a mesh consisting of triangle faces only.\nTubeSelectionRuleElementalData(element_labels)\nRepresents elemental data for a Tube Selection Rule.\nTubeSelectionRuleNodalData(node_labels)\nRepresents nodal data for a Tube Selection Rule.\nVariableOffsetSelectionRuleElementalData(...)\nRepresents elemental data for a VariableOffset Selection Rule.\nVariableOffsetSelectionRuleNodalData(node_labels)\nRepresents nodal data for a VariableOffset Selection Rule.\nVectorData(field_names, labels, values, ...)\nClass that encapsulates vector data.\nMesh data objects\nAnalysisPlyElementalData\nAnalysisPlyNodalData\nBooleanSelectionRuleElementalData\nBooleanSelectionRuleNodalData\nCutOffSelectionRuleElementalData\nCutOffSelectionRuleNodalData\nCylindricalSelectionRuleElementalData\nCylindricalSelectionRuleNodalData\nElementSetElementalData\nElementSetNodalData\nGeometricalSelectionRuleElementalData\nGeometricalSelectionRuleNodalData\nImportedSolidModelElementalData\nImportedSolidModelNodalData\nMeshData\nModelElementalData\nModelingPlyElementalData\nModelingPlyNodalData\nModelNodalData\nOrientedSelectionSetElementalData\nOrientedSelectionSetNodalData\nParallelSelectionRuleElementalData\nParallelSelectionRuleNodalData\nProductionPlyElementalData\nProductionPlyNodalData\nScalarData\nSolidElementSetElementalData\nSolidElementSetNodalData\nSolidModelElementalData\nSolidModelNodalData\nSphericalSelectionRuleElementalData\nSphericalSelectionRuleNodalData\nTriangleMesh\nTubeSelectionRuleElementalData\nTubeSelectionRuleNodalData\nVariableOffsetSelectionRuleElementalData\nVariableOffsetSelectionRuleNodalData\nVectorData"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.html#variablepuckconstants",
        "title": "VariablePuckConstants",
        "section": "VariablePuckConstants",
        "text": "Variable Puck constants material property set.\nAdded in ACP server version 24.2.\nVariablePuckConstants.M\n\nVariablePuckConstants.field_variables\n\nVariablePuckConstants.interface_weakening_factor\n\nVariablePuckConstants.interpolation_options\n\nVariablePuckConstants.mat_type\n\nVariablePuckConstants.p_21_neg\n\nVariablePuckConstants.p_21_pos\n\nVariablePuckConstants.p_22_neg\n\nVariablePuckConstants.p_22_pos\n\nVariablePuckConstants.s\n\nVariablePuckConstants\nVariablePuckConstants.M\nVariablePuckConstants.field_variables\nVariablePuckConstants.interface_weakening_factor\nVariablePuckConstants.interpolation_options\nVariablePuckConstants.mat_type\nVariablePuckConstants.p_21_neg\nVariablePuckConstants.p_21_pos\nVariablePuckConstants.p_22_neg\nVariablePuckConstants.p_22_pos\nVariablePuckConstants.s"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.html#ansys.acp.core.material_property_sets.VariablePuckConstants",
        "title": "VariablePuckConstants > VariablePuckConstants > VariablePuckConstants",
        "section": "VariablePuckConstants > VariablePuckConstants",
        "text": "class ansys.acp.core.material_property_sets.VariablePuckConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable Puck constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariablePuckConstants.M\n\n\n\nVariablePuckConstants.field_variables\n\n\n\nVariablePuckConstants.interface_weakening_factor\n\n\n\nVariablePuckConstants.interpolation_options\n\n\n\nVariablePuckConstants.mat_type\n\n\n\nVariablePuckConstants.p_21_neg\n\n\n\nVariablePuckConstants.p_21_pos\n\n\n\nVariablePuckConstants.p_22_neg\n\n\n\nVariablePuckConstants.p_22_pos\n\n\n\nVariablePuckConstants.s\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xt.html#xt",
        "title": "Xt",
        "section": "Xt",
        "text": "Xt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xt.html#ansys.acp.core.material_property_sets.VariableStressLimits.Xt",
        "title": "Xt > Xt > Xt",
        "section": "Xt > Xt",
        "text": "property VariableStressLimits.Xt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.offset.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "ModelingPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.delete",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.delete.html#ansys.acp.core.ImportedModelingPly.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ImportedModelingPly.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB.html#class40_agdb",
        "title": "CLASS40_AGDB",
        "section": "CLASS40_AGDB",
        "text": "CLASS40_AGDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB.html#ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB",
        "title": "CLASS40_AGDB > CLASS40_AGDB > CLASS40_AGDB",
        "section": "CLASS40_AGDB > CLASS40_AGDB",
        "text": "ExampleKeys.CLASS40_AGDB = 12\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB.html#examples-using-examplekeysclass40_agdb",
        "title": "CLASS40_AGDB > Examples using ExampleKeys.CLASS40_AGDB",
        "section": "Examples using ExampleKeys.CLASS40_AGDB",
        "text": "sphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nExamples using ExampleKeys.CLASS40_AGDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.html#interpolationoptions",
        "title": "InterpolationOptions",
        "section": "InterpolationOptions",
        "text": "Defines the interpolation options for variable materials.\nInterpolationOptions.algorithm\n\nInterpolationOptions.cached\n\nInterpolationOptions.normalized\n\nInterpolationOptions\nInterpolationOptions.algorithm\nInterpolationOptions.cached\nInterpolationOptions.normalized"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.html#ansys.acp.core.material_property_sets.InterpolationOptions",
        "title": "InterpolationOptions > InterpolationOptions > InterpolationOptions",
        "section": "InterpolationOptions > InterpolationOptions",
        "text": "class ansys.acp.core.material_property_sets.InterpolationOptions(algorithm, cached, normalized)\n\nDefines the interpolation options for variable materials.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nInterpolationOptions.algorithm\n\n\n\nInterpolationOptions.cached\n\n\n\nInterpolationOptions.normalized\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType",
        "href": "api/_autosummary/ansys.acp.core.SensorType.html#sensortype",
        "title": "SensorType",
        "section": "SensorType",
        "text": "Options for the type of sensor.\nSensorType.SENSOR_BY_AREA\n\nSensorType.SENSOR_BY_MATERIAL\n\nSensorType.SENSOR_BY_PLIES\n\nSensorType.SENSOR_BY_SOLID_MODEL\n\nSensorType\nSensorType.SENSOR_BY_AREA\nSensorType.SENSOR_BY_MATERIAL\nSensorType.SENSOR_BY_PLIES\nSensorType.SENSOR_BY_SOLID_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType",
        "href": "api/_autosummary/ansys.acp.core.SensorType.html#ansys.acp.core.SensorType",
        "title": "SensorType > SensorType > SensorType",
        "section": "SensorType > SensorType",
        "text": "class ansys.acp.core.SensorType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of sensor.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSensorType.SENSOR_BY_AREA\n\n\n\nSensorType.SENSOR_BY_MATERIAL\n\n\n\nSensorType.SENSOR_BY_PLIES\n\n\n\nSensorType.SENSOR_BY_SOLID_MODEL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType",
        "href": "api/_autosummary/ansys.acp.core.SensorType.html#examples-using-sensortype",
        "title": "SensorType > Examples using SensorType",
        "section": "Examples using SensorType",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using SensorType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.extrusion_guide_type",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.extrusion_guide_type.html#extrusion_guide_type",
        "title": "extrusion_guide_type",
        "section": "extrusion_guide_type",
        "text": "extrusion_guide_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.extrusion_guide_type",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.extrusion_guide_type.html#ansys.acp.core.ExtrusionGuide.extrusion_guide_type",
        "title": "extrusion_guide_type > extrusion_guide_type > extrusion_guide_type",
        "section": "extrusion_guide_type > extrusion_guide_type",
        "text": "property ExtrusionGuide.extrusion_guide_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.parent",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.parent",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.parent.html#ansys.acp.core.LayupMappingObject.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property LayupMappingObject.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.selection_rules.html#selection_rules",
        "title": "selection_rules",
        "section": "selection_rules",
        "text": "selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.selection_rules.html#ansys.acp.core.BooleanSelectionRule.selection_rules",
        "title": "selection_rules > selection_rules > selection_rules",
        "section": "selection_rules > selection_rules",
        "text": "property BooleanSelectionRule.selection_rules: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rfind",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rfind.html#rfind",
        "title": "rfind",
        "section": "rfind",
        "text": "Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nReturn -1 on failure.\nrfind"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rfind",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rfind.html#ansys.acp.core.LaunchMode.rfind",
        "title": "rfind > rfind > rfind",
        "section": "rfind > rfind",
        "text": "LaunchMode.rfind(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.delete",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.delete",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.delete.html#ansys.acp.core.ExtrusionGuide.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "ExtrusionGuide.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.MASS",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.MASS.html#mass",
        "title": "MASS",
        "section": "MASS",
        "text": "MASS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.MASS",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.MASS.html#ansys.acp.core.PhysicalDimension.MASS",
        "title": "MASS > MASS > MASS",
        "section": "MASS > MASS",
        "text": "PhysicalDimension.MASS = 'mass'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_material.html#base_material",
        "title": "base_material",
        "section": "base_material",
        "text": "base_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_material",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_material.html#ansys.acp.core.LayupMappingObject.base_material",
        "title": "base_material > base_material > base_material",
        "section": "base_material > base_material",
        "text": "property LayupMappingObject.base_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.launch_acp",
        "href": "api/_autosummary/ansys.acp.core.launch_acp.html#launch_acp",
        "title": "launch_acp",
        "section": "launch_acp",
        "text": "Launch an ACP instance.\nLaunch the ACP gRPC server with the given configuration. If no\nconfiguration is provided, the configured default is used.\nDo not execute this function with untrusted input parameters.\nSee the security guide for details.\nconfig (DirectLaunchConfig | DockerComposeLaunchConfig | None) – The configuration used for launching ACP. If unspecified, the\ndefault for the given launch mode is used.\nlaunch_mode (LaunchMode | None) – Specifies which ACP launcher is used. One of direct,\ndocker_compose, or connect. If unspecified, the\nconfigured default is used. If no default is configured,\ndirect is used.\ntimeout (float | None) – Timeout to wait until ACP responds. If None is specified,\nthe check that ACP has started is skipped.\nauto_transfer_files (bool) – Determines whether input and output files are automatically\ntransferred (up- or downloaded) to the server. If True,\nfiles are automatically transferred, and all paths in the\nimport or export methods are local paths. If False,\nfile transfer needs to be handled manually, and the paths\nare relative to the server working directory.\nIf the launch_mode is \"direct\", this only has an\neffect if the current working directory is changed after\nlaunching the server.\nACP instance which can be used to control the server, and\ninstantiate objects on the server.\nACPInstance[ControllableServerProtocol]\nlaunch_acp\ndirect\ndocker_compose\nconnect\ndirect\nNone\nTrue\nFalse\nlaunch_mode\n\"direct\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.launch_acp",
        "href": "api/_autosummary/ansys.acp.core.launch_acp.html#ansys.acp.core.launch_acp",
        "title": "launch_acp > launch_acp > launch_acp",
        "section": "launch_acp > launch_acp",
        "text": "ansys.acp.core.launch_acp(config=None, launch_mode=None, timeout=30.0, auto_transfer_files=True)\n\nLaunch an ACP instance.\n\nLaunch the ACP gRPC server with the given configuration. If no\nconfiguration is provided, the configured default is used.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide for details.\n\nParameters\n\nconfig (DirectLaunchConfig | DockerComposeLaunchConfig | None) – The configuration used for launching ACP. If unspecified, the\ndefault for the given launch mode is used.\n\nlaunch_mode (LaunchMode | None) – Specifies which ACP launcher is used. One of direct,\ndocker_compose, or connect. If unspecified, the\nconfigured default is used. If no default is configured,\ndirect is used.\n\ntimeout (float | None) – Timeout to wait until ACP responds. If None is specified,\nthe check that ACP has started is skipped.\n\nauto_transfer_files (bool) – Determines whether input and output files are automatically\ntransferred (up- or downloaded) to the server. If True,\nfiles are automatically transferred, and all paths in the\nimport or export methods are local paths. If False,\nfile transfer needs to be handled manually, and the paths\nare relative to the server working directory.\nIf the launch_mode is \"direct\", this only has an\neffect if the current working directory is changed after\nlaunching the server.\n\nReturns\n\nACP instance which can be used to control the server, and\ninstantiate objects on the server.\n\nReturn type\n\nACPInstance[ControllableServerProtocol]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.launch_acp",
        "href": "api/_autosummary/ansys.acp.core.launch_acp.html#examples-using-launch_acp",
        "title": "launch_acp > Examples using launch_acp",
        "section": "Examples using launch_acp",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using launch_acp"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.html#elementsetelementaldata",
        "title": "ElementSetElementalData",
        "section": "ElementSetElementalData",
        "text": "Represents elemental data for an Element Set.\nElementSetElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nElementSetElementalData.normal\n\nElementSetElementalData.element_labels\n\nElementSetElementalData\nElementSetElementalData.get_pyvista_mesh\nElementSetElementalData.normal\nElementSetElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.html#ansys.acp.core.mesh_data.ElementSetElementalData",
        "title": "ElementSetElementalData > ElementSetElementalData > ElementSetElementalData",
        "section": "ElementSetElementalData > ElementSetElementalData",
        "text": "class ansys.acp.core.mesh_data.ElementSetElementalData(element_labels, normal=None)\n\nRepresents elemental data for an Element Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nElementSetElementalData.normal\n\n\n\nElementSetElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL.html#cut_off_geometry_solid_model",
        "title": "CUT_OFF_GEOMETRY_SOLID_MODEL",
        "section": "CUT_OFF_GEOMETRY_SOLID_MODEL",
        "text": "CUT_OFF_GEOMETRY_SOLID_MODEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL.html#ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL",
        "title": "CUT_OFF_GEOMETRY_SOLID_MODEL > CUT_OFF_GEOMETRY_SOLID_MODEL > CUT_OFF_GEOMETRY_SOLID_MODEL",
        "section": "CUT_OFF_GEOMETRY_SOLID_MODEL > CUT_OFF_GEOMETRY_SOLID_MODEL",
        "text": "ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL = 18\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.name",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.name",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.name.html#ansys.acp.core.SubLaminate.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SubLaminate.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.num_min_neighbors",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.num_min_neighbors.html#num_min_neighbors",
        "title": "num_min_neighbors",
        "section": "num_min_neighbors",
        "text": "num_min_neighbors"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.num_min_neighbors",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.num_min_neighbors.html#ansys.acp.core.LookUpTable3D.num_min_neighbors",
        "title": "num_min_neighbors > num_min_neighbors > num_min_neighbors",
        "section": "num_min_neighbors > num_min_neighbors",
        "text": "property LookUpTable3D.num_min_neighbors: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction.html#use_offset_correction",
        "title": "use_offset_correction",
        "section": "use_offset_correction",
        "text": "use_offset_correction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction.html#ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction",
        "title": "use_offset_correction > use_offset_correction > use_offset_correction",
        "section": "use_offset_correction > use_offset_correction",
        "text": "property VariableOffsetSelectionRule.use_offset_correction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rpartition",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rpartition.html#rpartition",
        "title": "rpartition",
        "section": "rpartition",
        "text": "Partition the string into three parts using the given separator.\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.\nrpartition"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rpartition",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rpartition.html#ansys.acp.core.material_property_sets.PuckMaterialType.rpartition",
        "title": "rpartition > rpartition > rpartition",
        "section": "rpartition > rpartition",
        "text": "PuckMaterialType.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.active",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.active",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.active.html#ansys.acp.core.FieldDefinition.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property FieldDefinition.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_2",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_2.html#woven_stress_limits_2",
        "title": "woven_stress_limits_2",
        "section": "woven_stress_limits_2",
        "text": "woven_stress_limits_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_2",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_stress_limits_2.html#ansys.acp.core.Material.woven_stress_limits_2",
        "title": "woven_stress_limits_2 > woven_stress_limits_2 > woven_stress_limits_2",
        "section": "woven_stress_limits_2 > woven_stress_limits_2",
        "text": "property Material.woven_stress_limits_2: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.element_nodes",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.element_nodes.html#element_nodes",
        "title": "element_nodes",
        "section": "element_nodes",
        "text": "element_nodes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.element_nodes",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.element_nodes.html#ansys.acp.core.mesh_data.TriangleMesh.element_nodes",
        "title": "element_nodes > element_nodes > element_nodes",
        "section": "element_nodes > element_nodes",
        "text": "TriangleMesh.element_nodes: ndarray[tuple[int, ...], dtype[int64]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.snap_to_geometries",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.snap_to_geometries.html#snap_to_geometries",
        "title": "snap_to_geometries",
        "section": "snap_to_geometries",
        "text": "snap_to_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.snap_to_geometries",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.snap_to_geometries.html#ansys.acp.core.SolidModel.snap_to_geometries",
        "title": "snap_to_geometries > snap_to_geometries > snap_to_geometries",
        "section": "snap_to_geometries > snap_to_geometries",
        "text": "property SolidModel.snap_to_geometries: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_geometry",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_geometry.html#mesh_geometry",
        "title": "mesh_geometry",
        "section": "mesh_geometry",
        "text": "mesh_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_geometry",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_geometry.html#ansys.acp.core.ImportedModelingPly.mesh_geometry",
        "title": "mesh_geometry > mesh_geometry > mesh_geometry",
        "section": "mesh_geometry > mesh_geometry",
        "text": "property ImportedModelingPly.mesh_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObject",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObject.html#treeobject",
        "title": "TreeObject",
        "section": "TreeObject",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nBase class for ACP objects which can be modified or deleted.\nTreeObject"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObject",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.TreeObject.html#ansys.acp.core._tree_objects.base.TreeObject",
        "title": "TreeObject > TreeObject > TreeObject",
        "section": "TreeObject > TreeObject",
        "text": "class ansys.acp.core._tree_objects.base.TreeObject(name='')\n\nBase class for ACP objects which can be modified or deleted.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.mesh.html#ansys.acp.core.BooleanSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property BooleanSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.store",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.store",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.store.html#ansys.acp.core.ElementSet.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ElementSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12.html#nu12",
        "title": "nu12",
        "section": "nu12",
        "text": "nu12"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12",
        "title": "nu12 > nu12 > nu12",
        "section": "nu12 > nu12",
        "text": "property VariableEngineeringConstants.nu12: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.nodal_data.html#ansys.acp.core.BooleanSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property BooleanSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath.html#creatablefromresourcepath",
        "title": "CreatableFromResourcePath",
        "section": "CreatableFromResourcePath",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nInterface for objects that can be created from a resource path.\nCreatableFromResourcePath"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath.html#ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath",
        "title": "CreatableFromResourcePath > CreatableFromResourcePath > CreatableFromResourcePath",
        "section": "CreatableFromResourcePath > CreatableFromResourcePath",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath(*args, **kwargs)\n\nInterface for objects that can be created from a resource path.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1.html#parameter_1",
        "title": "parameter_1",
        "section": "parameter_1",
        "text": "First template parameter of the selection rule.\nparameter_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1.html#ansys.acp.core.LinkedSelectionRule.parameter_1",
        "title": "parameter_1 > parameter_1 > parameter_1",
        "section": "parameter_1 > parameter_1",
        "text": "property LinkedSelectionRule.parameter_1: float\n\nFirst template parameter of the selection rule.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1.html#examples-using-linkedselectionruleparameter_1",
        "title": "parameter_1 > Examples using LinkedSelectionRule.parameter_1",
        "section": "Examples using LinkedSelectionRule.parameter_1",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LinkedSelectionRule.parameter_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31.html#g31",
        "title": "G31",
        "section": "G31",
        "text": "G31"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31",
        "title": "G31 > G31 > G31",
        "section": "G31 > G31",
        "text": "property VariableEngineeringConstants.G31: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/006-layup-thickness-definitions",
        "href": "examples/modeling_features/006-layup-thickness-definitions.html#thickness-definition",
        "title": "Thickness definition",
        "section": "Thickness definition",
        "text": "This example shows how the thickness of a ply can be defined by a geometry or a lookup table.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nThickness definition"
    },
    {
        "objectID": "examples/modeling_features/006-layup-thickness-definitions",
        "href": "examples/modeling_features/006-layup-thickness-definitions.html#import-modules",
        "title": "Thickness definition > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/006-layup-thickness-definitions",
        "href": "examples/modeling_features/006-layup-thickness-definitions.html#start-acp-and-load-the-model",
        "title": "Thickness definition > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from the input file.\nThis example’s input file contains a flat plate with a single ply.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/006-layup-thickness-definitions",
        "href": "examples/modeling_features/006-layup-thickness-definitions.html#define-the-thickness-from-a-geometry",
        "title": "Thickness definition > Define the thickness from a geometry",
        "section": "Define the thickness from a geometry",
        "text": "Add the solid geometry to the model that defines the thickness.\nCreate a virtual geometry from the CAD geometry.\nSet the thickness type to FROM_GEOMETRY and define the virtual geometry.\nPlot the ply thickness together with the geometry defining the thickness.\nDefine the thickness from a geometry\nFROM_GEOMETRY"
    },
    {
        "objectID": "examples/modeling_features/006-layup-thickness-definitions",
        "href": "examples/modeling_features/006-layup-thickness-definitions.html#define-the-thickness-from-a-lookup-table",
        "title": "Thickness definition > Define the thickness from a lookup table",
        "section": "Define the thickness from a lookup table",
        "text": "Create the data for the lookup table.\nMake a 20x20 grid of points to define a thickness function on. In this example,\nthe mesh of the lookup table is finer than the finite element mesh, and the thickness\nis interpolated onto the finite element mesh.\nNote that the plate lies in the xz plane and the thickness is defined in the y direction.\nCreate a thickness that equals the distance to the center of the plate.\nCreate the point coordinates for the lookup table.\nThe y coordinate is always zero.\nNow you have a list of point coordinates:\nAnd the corresponding thickness values.\nCreate the lookup table and add the coordinates and thickness data.\nSet the thickness type to FROM_TABLE and assign the thickness column.\nPlot the ply thickness.\nTotal running time of the script: (0 minutes 3.670 seconds)\nDownload Jupyter notebook: 006-layup-thickness-definitions.ipynb\nDownload Python source code: 006-layup-thickness-definitions.py\nDownload zipped: 006-layup-thickness-definitions.zip\nGallery generated by Sphinx-Gallery\nDefine the thickness from a lookup table\nFROM_TABLE\nDownload Jupyter notebook: 006-layup-thickness-definitions.ipynb\nDownload Python source code: 006-layup-thickness-definitions.py\nDownload zipped: 006-layup-thickness-definitions.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression.html#fracture_angle_under_compression",
        "title": "fracture_angle_under_compression",
        "section": "fracture_angle_under_compression",
        "text": "fracture_angle_under_compression"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression",
        "title": "fracture_angle_under_compression > fracture_angle_under_compression > fracture_angle_under_compression",
        "section": "fracture_angle_under_compression > fracture_angle_under_compression",
        "text": "property ConstantLaRCConstants.fracture_angle_under_compression: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_field_definition",
        "href": "api/_autosummary/ansys.acp.core.Model.create_field_definition.html#create_field_definition",
        "title": "create_field_definition",
        "section": "create_field_definition",
        "text": "Instantiate a Field Definition.\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\nname (str) – Name of the field definition.\nactive (bool) – Inactive field definitions are ignored.\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\nFieldDefinition\nAdded in ACP server version 25.1.\ncreate_field_definition\nTemperature\nShear Angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_field_definition",
        "href": "api/_autosummary/ansys.acp.core.Model.create_field_definition.html#ansys.acp.core.Model.create_field_definition",
        "title": "create_field_definition > create_field_definition > create_field_definition",
        "section": "create_field_definition > create_field_definition",
        "text": "Model.create_field_definition(*, name='FieldDefinition', active=True, field_variable_name='', scope_entities=(), scalar_field=None, full_mapping=False)\n\nInstantiate a Field Definition.\n\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\n\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\n\nParameters\n\nname (str) – Name of the field definition.\n\nactive (bool) – Inactive field definitions are ignored.\n\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\n\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\n\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\n\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\n\nReturn type\n\nFieldDefinition\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "CylindricalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYt.html#eyt",
        "title": "eYt",
        "section": "eYt",
        "text": "eYt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYt.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eYt",
        "title": "eYt > eYt > eYt",
        "section": "eYt > eYt",
        "text": "property VariableStrainLimits.eYt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.element_set",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.element_set.html#element_set",
        "title": "element_set",
        "section": "element_set",
        "text": "element_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.element_set",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.element_set.html#ansys.acp.core.EdgeSet.element_set",
        "title": "element_set > element_set > element_set",
        "section": "element_set > element_set",
        "text": "property EdgeSet.element_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rindex",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rindex.html#rindex",
        "title": "rindex",
        "section": "rindex",
        "text": "Return the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nRaises ValueError when the substring is not found.\nrindex"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rindex",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rindex.html#ansys.acp.core.material_property_sets.PuckMaterialType.rindex",
        "title": "rindex > rindex > rindex",
        "section": "rindex > rindex",
        "text": "PuckMaterialType.rindex(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle.html#draped_transverse_angle",
        "title": "draped_transverse_angle",
        "section": "draped_transverse_angle",
        "text": "draped_transverse_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle",
        "title": "draped_transverse_angle > draped_transverse_angle > draped_transverse_angle",
        "section": "draped_transverse_angle > draped_transverse_angle",
        "text": "ProductionPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.name",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.name",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.name.html#ansys.acp.core.AnalysisPly.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property AnalysisPly.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.is_remote",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.is_remote.html#is_remote",
        "title": "is_remote",
        "section": "is_remote",
        "text": "Whether the server is remote or local.\nis_remote"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.is_remote",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.is_remote.html#ansys.acp.core.ACPInstance.is_remote",
        "title": "is_remote > is_remote > is_remote",
        "section": "is_remote > is_remote",
        "text": "property ACPInstance.is_remote: bool\n\nWhether the server is remote or local.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle.html#shear_angle",
        "title": "shear_angle",
        "section": "shear_angle",
        "text": "shear_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle",
        "title": "shear_angle > shear_angle > shear_angle",
        "section": "shear_angle > shear_angle",
        "text": "ModelingPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isnumeric",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isnumeric.html#isnumeric",
        "title": "isnumeric",
        "section": "isnumeric",
        "text": "Return True if the string is a numeric string, False otherwise.\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.\nisnumeric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isnumeric",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isnumeric.html#ansys.acp.core.LaunchMode.isnumeric",
        "title": "isnumeric > isnumeric > isnumeric",
        "section": "isnumeric > isnumeric",
        "text": "LaunchMode.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MONOLITHIC",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MONOLITHIC.html#monolithic",
        "title": "MONOLITHIC",
        "section": "MONOLITHIC",
        "text": "MONOLITHIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MONOLITHIC",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MONOLITHIC.html#ansys.acp.core.ExtrusionMethod.MONOLITHIC",
        "title": "MONOLITHIC > MONOLITHIC > MONOLITHIC",
        "section": "MONOLITHIC > MONOLITHIC",
        "text": "ExtrusionMethod.MONOLITHIC = 'monolithic'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.format_map",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.format_map.html#format_map",
        "title": "format_map",
        "section": "format_map",
        "text": "Return a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’).\nformat_map"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.format_map",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.format_map.html#ansys.acp.core.LaunchMode.format_map",
        "title": "format_map > format_map > format_map",
        "section": "format_map > format_map",
        "text": "LaunchMode.format_map(mapping) -> str\n\nReturn a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.interpolation_options.html#ansys.acp.core.material_property_sets.VariableDensity.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableDensity.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index.html#use_default_element_index",
        "title": "use_default_element_index",
        "section": "use_default_element_index",
        "text": "use_default_element_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index.html#ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index",
        "title": "use_default_element_index > use_default_element_index > use_default_element_index",
        "section": "use_default_element_index > use_default_element_index",
        "text": "property ImportedSolidModelExportSettings.use_default_element_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.html#modelnodaldata",
        "title": "ModelNodalData",
        "section": "ModelNodalData",
        "text": "Represents nodal data for a Model.\nModelNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nModelNodalData.node_labels\n\nModelNodalData\nModelNodalData.get_pyvista_mesh\nModelNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.html#ansys.acp.core.mesh_data.ModelNodalData",
        "title": "ModelNodalData > ModelNodalData > ModelNodalData",
        "section": "ModelNodalData > ModelNodalData",
        "text": "class ansys.acp.core.mesh_data.ModelNodalData(node_labels)\n\nRepresents nodal data for a Model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables.html#ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableFabricFiberAngle.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.delete",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.delete",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.delete.html#ansys.acp.core.SubLaminate.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SubLaminate.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.html#cutoffmaterialhandling",
        "title": "CutOffMaterialHandling",
        "section": "CutOffMaterialHandling",
        "text": "Options for how cut-off material is selected.\nCutOffMaterialHandling.COMPUTED\n\nCutOffMaterialHandling.GLOBAL\n\nCutOffMaterialHandling.CUSTOM\n\nCutOffMaterialHandling\nCutOffMaterialHandling.COMPUTED\nCutOffMaterialHandling.GLOBAL\nCutOffMaterialHandling.CUSTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.html#ansys.acp.core.CutOffMaterialHandling",
        "title": "CutOffMaterialHandling > CutOffMaterialHandling > CutOffMaterialHandling",
        "section": "CutOffMaterialHandling > CutOffMaterialHandling",
        "text": "class ansys.acp.core.CutOffMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how cut-off material is selected.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nCutOffMaterialHandling.COMPUTED\n\n\n\nCutOffMaterialHandling.GLOBAL\n\n\n\nCutOffMaterialHandling.CUSTOM\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.precision",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.precision.html#precision",
        "title": "precision",
        "section": "precision",
        "text": "precision"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.precision",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.precision.html#ansys.acp.core.CADGeometry.precision",
        "title": "precision > precision > precision",
        "section": "precision > precision",
        "text": "property CADGeometry.precision: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz.html#sxz",
        "title": "Sxz",
        "section": "Sxz",
        "text": "Sxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz",
        "title": "Sxz > Sxz > Sxz",
        "section": "Sxz > Sxz",
        "text": "property VariableWovenStressLimits.Sxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp.html#export_mesh_for_acp",
        "title": "export_mesh_for_acp",
        "section": "export_mesh_for_acp",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nExport the mesh from PyMechanical for use in PyACP.\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\npath (str | PathLike[str]) – The path to save the mesh to. The extension must be ‘.h5’.\nexport_mesh_for_acp"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp",
        "href": "api/_autosummary/ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp.html#ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp",
        "title": "export_mesh_for_acp > export_mesh_for_acp > export_mesh_for_acp",
        "section": "export_mesh_for_acp > export_mesh_for_acp",
        "text": "ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp(*, mechanical, path)\n\nExport the mesh from PyMechanical for use in PyACP.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\npath (str | PathLike[str]) – The path to save the mesh to. The extension must be ‘.h5’.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.reinforcing_behavior",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.reinforcing_behavior.html#reinforcing_behavior",
        "title": "reinforcing_behavior",
        "section": "reinforcing_behavior",
        "text": "reinforcing_behavior"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.reinforcing_behavior",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.reinforcing_behavior.html#ansys.acp.core.LayupMappingObject.reinforcing_behavior",
        "title": "reinforcing_behavior > reinforcing_behavior > reinforcing_behavior",
        "section": "reinforcing_behavior > reinforcing_behavior",
        "text": "property LayupMappingObject.reinforcing_behavior: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.store",
        "href": "api/_autosummary/ansys.acp.core.Sensor.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.store",
        "href": "api/_autosummary/ansys.acp.core.Sensor.store.html#ansys.acp.core.Sensor.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "Sensor.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdigit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdigit.html#isdigit",
        "title": "isdigit",
        "section": "isdigit",
        "text": "Return True if the string is a digit string, False otherwise.\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string.\nisdigit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdigit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdigit.html#ansys.acp.core.material_property_sets.PuckMaterialType.isdigit",
        "title": "isdigit > isdigit > isdigit",
        "section": "isdigit > isdigit",
        "text": "PuckMaterialType.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.elemental_data.html#ansys.acp.core.VariableOffsetSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property VariableOffsetSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "This section provides a general overview of PyACP and its usage. The how-to\nguides provide step-by-step instructions for common tasks, while the concepts\nsection provides in-depth explanations.\nUser guide"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.rosette_type",
        "href": "api/_autosummary/ansys.acp.core.Rosette.rosette_type.html#rosette_type",
        "title": "rosette_type",
        "section": "rosette_type",
        "text": "rosette_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.rosette_type",
        "href": "api/_autosummary/ansys.acp.core.Rosette.rosette_type.html#ansys.acp.core.Rosette.rosette_type",
        "title": "rosette_type > rosette_type > rosette_type",
        "section": "rosette_type > rosette_type",
        "text": "property Rosette.rosette_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.clone.html#ansys.acp.core.ImportedModelingPly.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ImportedModelingPly.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.status.html#ansys.acp.core.VariableOffsetSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property VariableOffsetSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.solid_mesh.html#solid_mesh",
        "title": "solid_mesh",
        "section": "solid_mesh",
        "text": "Solid mesh associated with the object.\nsolid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.solid_mesh.html#ansys.acp.core.SolidElementSet.solid_mesh",
        "title": "solid_mesh > solid_mesh > solid_mesh",
        "section": "solid_mesh > solid_mesh",
        "text": "property SolidElementSet.solid_mesh: MeshData\n\nSolid mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.defining_node_labels",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.defining_node_labels.html#defining_node_labels",
        "title": "defining_node_labels",
        "section": "defining_node_labels",
        "text": "defining_node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.defining_node_labels",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.defining_node_labels.html#ansys.acp.core.EdgeSet.defining_node_labels",
        "title": "defining_node_labels > defining_node_labels > defining_node_labels",
        "section": "defining_node_labels > defining_node_labels",
        "text": "property EdgeSet.defining_node_labels: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.lstrip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.lstrip.html#lstrip",
        "title": "lstrip",
        "section": "lstrip",
        "text": "Return a copy of the string with leading whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nlstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.lstrip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.lstrip.html#ansys.acp.core.LaunchMode.lstrip",
        "title": "lstrip > lstrip > lstrip",
        "section": "lstrip > lstrip",
        "text": "LaunchMode.lstrip(chars=None, /)\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.html#booleanselectionruleelementaldata",
        "title": "BooleanSelectionRuleElementalData",
        "section": "BooleanSelectionRuleElementalData",
        "text": "Represents elemental data for a Boolean Selection Rule.\nBooleanSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nBooleanSelectionRuleElementalData.normal\n\nBooleanSelectionRuleElementalData.element_labels\n\nBooleanSelectionRuleElementalData\nBooleanSelectionRuleElementalData.get_pyvista_mesh\nBooleanSelectionRuleElementalData.normal\nBooleanSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.html#ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData",
        "title": "BooleanSelectionRuleElementalData > BooleanSelectionRuleElementalData > BooleanSelectionRuleElementalData",
        "section": "BooleanSelectionRuleElementalData > BooleanSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Boolean Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nBooleanSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nBooleanSelectionRuleElementalData.normal\n\n\n\nBooleanSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.shell_mesh.html#ansys.acp.core.CylindricalSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property CylindricalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL.html#cylindrical",
        "title": "CYLINDRICAL",
        "section": "CYLINDRICAL",
        "text": "CYLINDRICAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL.html#ansys.acp.core.RosetteType.CYLINDRICAL",
        "title": "CYLINDRICAL > CYLINDRICAL > CYLINDRICAL",
        "section": "CYLINDRICAL > CYLINDRICAL",
        "text": "RosetteType.CYLINDRICAL = 'cylindrical'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL.html#examples-using-rosettetypecylindrical",
        "title": "CYLINDRICAL > Examples using RosetteType.CYLINDRICAL",
        "section": "Examples using RosetteType.CYLINDRICAL",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType.CYLINDRICAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.warping_limit",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.warping_limit.html#warping_limit",
        "title": "warping_limit",
        "section": "warping_limit",
        "text": "warping_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.warping_limit",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.warping_limit.html#ansys.acp.core.SolidModel.warping_limit",
        "title": "warping_limit > warping_limit > warping_limit",
        "section": "warping_limit > warping_limit",
        "text": "property SolidModel.warping_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_guides",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_guides.html#extrusion_guides",
        "title": "extrusion_guides",
        "section": "extrusion_guides",
        "text": "extrusion_guides"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_guides",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.extrusion_guides.html#ansys.acp.core.SolidModel.extrusion_guides",
        "title": "extrusion_guides > extrusion_guides > extrusion_guides",
        "section": "extrusion_guides > extrusion_guides",
        "text": "property SolidModel.extrusion_guides: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "OrientedSelectionSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.istitle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.istitle.html#istitle",
        "title": "istitle",
        "section": "istitle",
        "text": "Return True if the string is a title-cased string, False otherwise.\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.\nistitle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.istitle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.istitle.html#ansys.acp.core.material_property_sets.PuckMaterialType.istitle",
        "title": "istitle > istitle > istitle",
        "section": "istitle > istitle",
        "text": "PuckMaterialType.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_rule_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_rule_type.html#cut_off_rule_type",
        "title": "cut_off_rule_type",
        "section": "cut_off_rule_type",
        "text": "cut_off_rule_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_rule_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_rule_type.html#ansys.acp.core.CutOffSelectionRule.cut_off_rule_type",
        "title": "cut_off_rule_type > cut_off_rule_type > cut_off_rule_type",
        "section": "cut_off_rule_type > cut_off_rule_type",
        "text": "property CutOffSelectionRule.cut_off_rule_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE.html#minimum_distance",
        "title": "MINIMUM_DISTANCE",
        "section": "MINIMUM_DISTANCE",
        "text": "MINIMUM_DISTANCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE.html#ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "title": "MINIMUM_DISTANCE > MINIMUM_DISTANCE > MINIMUM_DISTANCE",
        "section": "MINIMUM_DISTANCE > MINIMUM_DISTANCE",
        "text": "LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE = 'minimum_distance'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE.html#examples-using-layupmappingrosetteselectionmethodminimum_distance",
        "title": "MINIMUM_DISTANCE > Examples using LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "section": "Examples using LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE",
        "text": "sphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cut_off_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.cut_off_selection_rules.html#cut_off_selection_rules",
        "title": "cut_off_selection_rules",
        "section": "cut_off_selection_rules",
        "text": "cut_off_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cut_off_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.cut_off_selection_rules.html#ansys.acp.core.Model.cut_off_selection_rules",
        "title": "cut_off_selection_rules > cut_off_selection_rules > cut_off_selection_rules",
        "section": "cut_off_selection_rules > cut_off_selection_rules",
        "text": "property Model.cut_off_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants.html#from_isotropic_constants",
        "title": "from_isotropic_constants",
        "section": "from_isotropic_constants",
        "text": "Create an isotropic engineering constants property set.\nE (float) – Young’s modulus.\nnu (float) – Poisson’s ratio.\nAn isotropic engineering constants property set.\nSelf\nfrom_isotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants",
        "title": "from_isotropic_constants > from_isotropic_constants > from_isotropic_constants",
        "section": "from_isotropic_constants > from_isotropic_constants",
        "text": "classmethod ConstantEngineeringConstants.from_isotropic_constants(*, E=0.0, nu=0.0)\n\nCreate an isotropic engineering constants property set.\n\nParameters\n\nE (float) – Young’s modulus.\n\nnu (float) – Poisson’s ratio.\n\nReturns\n\nAn isotropic engineering constants property set.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants.html#examples-using-constantengineeringconstantsfrom_isotropic_constants",
        "title": "from_isotropic_constants > Examples using ConstantEngineeringConstants.from_isotropic_constants",
        "section": "Examples using ConstantEngineeringConstants.from_isotropic_constants",
        "text": "sphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ConstantEngineeringConstants.from_isotropic_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.offsets",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.offsets.html#offsets",
        "title": "offsets",
        "section": "offsets",
        "text": "offsets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.offsets",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.offsets.html#ansys.acp.core.VariableOffsetSelectionRule.offsets",
        "title": "offsets > offsets > offsets",
        "section": "offsets > offsets",
        "text": "property VariableOffsetSelectionRule.offsets: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.clone.html#ansys.acp.core.VirtualGeometry.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "VirtualGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.delete",
        "href": "api/_autosummary/ansys.acp.core.Rosette.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.delete",
        "href": "api/_autosummary/ansys.acp.core.Rosette.delete.html#ansys.acp.core.Rosette.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "Rosette.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_offset",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_offset.html#use_default_offset",
        "title": "use_default_offset",
        "section": "use_default_offset",
        "text": "use_default_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_offset",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.use_default_offset.html#ansys.acp.core.CADGeometry.use_default_offset",
        "title": "use_default_offset > use_default_offset > use_default_offset",
        "section": "use_default_offset > use_default_offset",
        "text": "property CADGeometry.use_default_offset: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.id",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.id",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.id.html#ansys.acp.core.SolidModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SolidModel.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT.html#basic_flat_plate_refined_dat",
        "title": "BASIC_FLAT_PLATE_REFINED_DAT",
        "section": "BASIC_FLAT_PLATE_REFINED_DAT",
        "text": "BASIC_FLAT_PLATE_REFINED_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT.html#ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT",
        "title": "BASIC_FLAT_PLATE_REFINED_DAT > BASIC_FLAT_PLATE_REFINED_DAT > BASIC_FLAT_PLATE_REFINED_DAT",
        "section": "BASIC_FLAT_PLATE_REFINED_DAT > BASIC_FLAT_PLATE_REFINED_DAT",
        "text": "ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT = 2\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.html#ignorableentity",
        "title": "IgnorableEntity",
        "section": "IgnorableEntity",
        "text": "Options for the entities to ignore when loading an FE file.\nIgnorableEntity.MESH\n\nIgnorableEntity.ELEMENT_SETS\n\nIgnorableEntity.MATERIALS\n\nIgnorableEntity.COORDINATE_SYSTEMS\n\nIgnorableEntity.SHELL_SECTIONS\n\nIgnorableEntity\nIgnorableEntity.MESH\nIgnorableEntity.ELEMENT_SETS\nIgnorableEntity.MATERIALS\nIgnorableEntity.COORDINATE_SYSTEMS\nIgnorableEntity.SHELL_SECTIONS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.html#ansys.acp.core.IgnorableEntity",
        "title": "IgnorableEntity > IgnorableEntity > IgnorableEntity",
        "section": "IgnorableEntity > IgnorableEntity",
        "text": "class ansys.acp.core.IgnorableEntity(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the entities to ignore when loading an FE file.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nIgnorableEntity.MESH\n\n\n\nIgnorableEntity.ELEMENT_SETS\n\n\n\nIgnorableEntity.MATERIALS\n\n\n\nIgnorableEntity.COORDINATE_SYSTEMS\n\n\n\nIgnorableEntity.SHELL_SECTIONS\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.id.html#ansys.acp.core.LookUpTable1D.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LookUpTable1D.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#pymapdl-workflow",
        "title": "PyMAPDL workflow",
        "section": "PyMAPDL workflow",
        "text": "This example shows how to define a composite lay-up with PyACP, solve the resulting model with PyMAPDL, and\nrun a failure analysis with PyDPF - Composites.\nPyMAPDL workflow"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#description",
        "title": "PyMAPDL workflow > Description",
        "section": "Description",
        "text": "In a basic PyACP workflow, you begin with an MAPDL DAT file containing the mesh, material data, and\nboundary conditions. For more information on creating input files, see input_file_for_pyacp.\nThen, you import the DAT file into PyACP to define the composite lay-up. Finally, you export the\nresulting model from PyACP to PyMAPDL. Once the results are available, the RST file is loaded in\nPyDPF - Composites for analysis. The additional input files (material.xml and\nACPCompositeDefinitions.h5) can also be stored with PyACP and passed to PyDPF - Composites.\nDescription\nmaterial.xml\nACPCompositeDefinitions.h5"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#import-modules",
        "title": "PyMAPDL workflow > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#launch-pyacp",
        "title": "PyMAPDL workflow > Launch PyACP",
        "section": "Launch PyACP",
        "text": "Download the example input file.\nLaunch the PyACP server and connect to it.\nLaunch PyACP"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#create-an-acp-workflow-instance-and-load-the-model",
        "title": "PyMAPDL workflow > Create an ACP workflow instance and load the model",
        "section": "Create an ACP workflow instance and load the model",
        "text": "Import the model from the input file.\nVisualize the loaded mesh.\nCreate an ACP workflow instance and load the model"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#define-the-composite-lay-up",
        "title": "PyMAPDL workflow > Define the composite lay-up",
        "section": "Define the composite lay-up",
        "text": "Create an orthotropic material and fabric including strain limits, which are later\nused to postprocess the simulation.\nDefine a rosette and oriented selection set. Plot the orientation.\nCreate various plies with different angles and add them to a modeling group.\nShow the fiber directions of a specific ply.\nFor a quick overview, print the model tree. Note that\nthe model can also be opened in the ACP GUI. For more\ninformation, see view_the_model_in_the_acp_gui.\nDefine the composite lay-up"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#solve-the-model-with-pymapdl",
        "title": "PyMAPDL workflow > Solve the model with PyMAPDL",
        "section": "Solve the model with PyMAPDL",
        "text": "Launch the PyMAPDL instance.\nLoad the CDB file into PyMAPDL.\nSolve the model.\nShow the displacements in postprocessing.\nDownload the RST file for composite-specific postprocessing.\nSolve the model with PyMAPDL"
    },
    {
        "objectID": "examples/workflows/01-pymapdl-workflow",
        "href": "examples/workflows/01-pymapdl-workflow.html#postprocessing-with-pydpf---composites",
        "title": "PyMAPDL workflow > Postprocessing with PyDPF - Composites",
        "section": "Postprocessing with PyDPF - Composites",
        "text": "To postprocess the results, you must configure the imports, connect to the\nPyDPF - Composites server, and load its plugin.\nConnect to the server. The connect_to_or_start_server function\nautomatically loads the composites plugin.\nSpecify the combined failure criterion.\nCreate the composite model and configure its input.\nEvaluate and plot the failure criteria.\nRelease the composite model to close the open streams to the result file.\nTotal running time of the script: (0 minutes 6.331 seconds)\nDownload Jupyter notebook: 01-pymapdl-workflow.ipynb\nDownload Python source code: 01-pymapdl-workflow.py\nDownload zipped: 01-pymapdl-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocessing with PyDPF - Composites\nconnect_to_or_start_server\nDownload Jupyter notebook: 01-pymapdl-workflow.ipynb\nDownload Python source code: 01-pymapdl-workflow.py\nDownload zipped: 01-pymapdl-workflow.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_element_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_element_index.html#use_default_element_index",
        "title": "use_default_element_index",
        "section": "use_default_element_index",
        "text": "use_default_element_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_element_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_element_index.html#ansys.acp.core.SolidModelExportSettings.use_default_element_index",
        "title": "use_default_element_index > use_default_element_index > use_default_element_index",
        "section": "use_default_element_index > use_default_element_index",
        "text": "property SolidModelExportSettings.use_default_element_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.html#importedplythicknesstype",
        "title": "ImportedPlyThicknessType",
        "section": "ImportedPlyThicknessType",
        "text": "Options for how ply thickness is defined.\nImportedPlyThicknessType.NOMINAL\n\nImportedPlyThicknessType.FROM_TABLE\n\nImportedPlyThicknessType\nImportedPlyThicknessType.NOMINAL\nImportedPlyThicknessType.FROM_TABLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.html#ansys.acp.core.ImportedPlyThicknessType",
        "title": "ImportedPlyThicknessType > ImportedPlyThicknessType > ImportedPlyThicknessType",
        "section": "ImportedPlyThicknessType > ImportedPlyThicknessType",
        "text": "class ansys.acp.core.ImportedPlyThicknessType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply thickness is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nImportedPlyThicknessType.NOMINAL\n\n\n\nImportedPlyThicknessType.FROM_TABLE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.maketrans",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.maketrans.html#maketrans",
        "title": "maketrans",
        "section": "maketrans",
        "text": "Return a translation table usable for str.translate().\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.\nmaketrans"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.maketrans",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.maketrans.html#ansys.acp.core.LaunchMode.maketrans",
        "title": "maketrans > maketrans > maketrans",
        "section": "maketrans > maketrans",
        "text": "static LaunchMode.maketrans(x, y=<unrepresentable>, z=<unrepresentable>, /)\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table.html#inherit_from_lookup_table",
        "title": "inherit_from_lookup_table",
        "section": "inherit_from_lookup_table",
        "text": "inherit_from_lookup_table"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table.html#ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table",
        "title": "inherit_from_lookup_table > inherit_from_lookup_table > inherit_from_lookup_table",
        "section": "inherit_from_lookup_table > inherit_from_lookup_table",
        "text": "property VariableOffsetSelectionRule.inherit_from_lookup_table: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "VariableOffsetSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12.html#g12",
        "title": "G12",
        "section": "G12",
        "text": "G12"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12",
        "title": "G12 > G12 > G12",
        "section": "G12 > G12",
        "text": "property ConstantEngineeringConstants.G12: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/server",
        "href": "api/server.html#server-management",
        "title": "Server management",
        "section": "Server management",
        "text": "ACPInstance(*, server, channel, ...)\nControl an ACP instance.\nConnectLaunchConfig([url_acp, url_filetransfer])\nConfiguration options for attaching to an existing ACP server.\nDirectLaunchConfig([binary_path, ...])\nConfiguration options for launching ACP as a sub-process.\nDockerComposeLaunchConfig([image_name_acp, ...])\nConfiguration options for launching ACP through docker compose.\nlaunch_acp([config, launch_mode, timeout, ...])\nLaunch an ACP instance.\nLaunchMode(cls, value[, names, module, ...])\nAvailable launch modes for ACP.\nServer management\nACPInstance\nConnectLaunchConfig\nDirectLaunchConfig\nDockerComposeLaunchConfig\nlaunch_acp\nLaunchMode"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scope_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scope_element_sets.html#scope_element_sets",
        "title": "scope_element_sets",
        "section": "scope_element_sets",
        "text": "scope_element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scope_element_sets",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scope_element_sets.html#ansys.acp.core.SectionCut.scope_element_sets",
        "title": "scope_element_sets > scope_element_sets > scope_element_sets",
        "section": "scope_element_sets > scope_element_sets",
        "text": "property SectionCut.scope_element_sets: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos.html#p_22_pos",
        "title": "p_22_pos",
        "section": "p_22_pos",
        "text": "p_22_pos"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos.html#ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos",
        "title": "p_22_pos > p_22_pos > p_22_pos",
        "section": "p_22_pos > p_22_pos",
        "text": "property VariablePuckConstants.p_22_pos: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_material.html#cut_off_material",
        "title": "cut_off_material",
        "section": "cut_off_material",
        "text": "cut_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.cut_off_material.html#ansys.acp.core.SolidModel.cut_off_material",
        "title": "cut_off_material > cut_off_material > cut_off_material",
        "section": "cut_off_material > cut_off_material",
        "text": "property SolidModel.cut_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest.html#createrequest",
        "title": "CreateRequest",
        "section": "CreateRequest",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nInterface definition for CreateRequest messages.\nThe CreateRequest message is used to create a new object in a collection.\nCreateRequest"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest.html#ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest",
        "title": "CreateRequest > CreateRequest > CreateRequest",
        "section": "CreateRequest > CreateRequest",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest(collection_path, name, properties)\n\nInterface definition for CreateRequest messages.\n\nThe CreateRequest message is used to create a new object in a collection.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID.html#solid",
        "title": "SOLID",
        "section": "SOLID",
        "text": "SOLID"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID.html#ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID",
        "title": "SOLID > SOLID > SOLID",
        "section": "SOLID > SOLID",
        "text": "HDF5CompositeCAEProjectionMode.SOLID = 'solid'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID.html#examples-using-hdf5compositecaeprojectionmodesolid",
        "title": "SOLID > Examples using HDF5CompositeCAEProjectionMode.SOLID",
        "section": "Examples using HDF5CompositeCAEProjectionMode.SOLID",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using HDF5CompositeCAEProjectionMode.SOLID"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES.html#tabular_values",
        "title": "TABULAR_VALUES",
        "section": "TABULAR_VALUES",
        "text": "TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES.html#ansys.acp.core.DrapingType.TABULAR_VALUES",
        "title": "TABULAR_VALUES > TABULAR_VALUES > TABULAR_VALUES",
        "section": "TABULAR_VALUES > TABULAR_VALUES",
        "text": "DrapingType.TABULAR_VALUES = 'tabular_values'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES.html#examples-using-drapingtypetabular_values",
        "title": "TABULAR_VALUES > Examples using DrapingType.TABULAR_VALUES",
        "section": "Examples using DrapingType.TABULAR_VALUES",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using DrapingType.TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.clone.html#ansys.acp.core.ImportedModelingGroup.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ImportedModelingGroup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.id",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.id",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.id.html#ansys.acp.core.SectionCut.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SectionCut.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.elemental_data.html#ansys.acp.core.CylindricalSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property CylindricalSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_cut_off_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_cut_off_type.html#ply_cut_off_type",
        "title": "ply_cut_off_type",
        "section": "ply_cut_off_type",
        "text": "ply_cut_off_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_cut_off_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_cut_off_type.html#ansys.acp.core.CutOffSelectionRule.ply_cut_off_type",
        "title": "ply_cut_off_type > ply_cut_off_type > ply_cut_off_type",
        "section": "ply_cut_off_type > ply_cut_off_type",
        "text": "property CutOffSelectionRule.ply_cut_off_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.html#modelingplyelementaldata",
        "title": "ModelingPlyElementalData",
        "section": "ModelingPlyElementalData",
        "text": "Represents elemental data for a Modeling Ply.\nModelingPlyElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nModelingPlyElementalData.area\n\nModelingPlyElementalData.cog\n\nModelingPlyElementalData.design_angle\n\nModelingPlyElementalData.draped_fiber_angle\n\nModelingPlyElementalData.draped_fiber_direction\n\nModelingPlyElementalData.draped_transverse_angle\n\nModelingPlyElementalData.draped_transverse_direction\n\nModelingPlyElementalData.fiber_direction\n\nModelingPlyElementalData.mass\n\nModelingPlyElementalData.normal\n\nModelingPlyElementalData.offset\n\nModelingPlyElementalData.orientation\n\nModelingPlyElementalData.price\n\nModelingPlyElementalData.reference_direction\n\nModelingPlyElementalData.relative_thickness_correction\n\nModelingPlyElementalData.shear_angle\n\nModelingPlyElementalData.thickness\n\nModelingPlyElementalData.transverse_direction\n\nModelingPlyElementalData.volume\n\nModelingPlyElementalData.element_labels\n\nModelingPlyElementalData\nModelingPlyElementalData.get_pyvista_mesh\nModelingPlyElementalData.area\nModelingPlyElementalData.cog\nModelingPlyElementalData.design_angle\nModelingPlyElementalData.draped_fiber_angle\nModelingPlyElementalData.draped_fiber_direction\nModelingPlyElementalData.draped_transverse_angle\nModelingPlyElementalData.draped_transverse_direction\nModelingPlyElementalData.fiber_direction\nModelingPlyElementalData.mass\nModelingPlyElementalData.normal\nModelingPlyElementalData.offset\nModelingPlyElementalData.orientation\nModelingPlyElementalData.price\nModelingPlyElementalData.reference_direction\nModelingPlyElementalData.relative_thickness_correction\nModelingPlyElementalData.shear_angle\nModelingPlyElementalData.thickness\nModelingPlyElementalData.transverse_direction\nModelingPlyElementalData.volume\nModelingPlyElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.html#ansys.acp.core.mesh_data.ModelingPlyElementalData",
        "title": "ModelingPlyElementalData > ModelingPlyElementalData > ModelingPlyElementalData",
        "section": "ModelingPlyElementalData > ModelingPlyElementalData",
        "text": "class ansys.acp.core.mesh_data.ModelingPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Modeling Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelingPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelingPlyElementalData.area\n\n\n\nModelingPlyElementalData.cog\n\n\n\nModelingPlyElementalData.design_angle\n\n\n\nModelingPlyElementalData.draped_fiber_angle\n\n\n\nModelingPlyElementalData.draped_fiber_direction\n\n\n\nModelingPlyElementalData.draped_transverse_angle\n\n\n\nModelingPlyElementalData.draped_transverse_direction\n\n\n\nModelingPlyElementalData.fiber_direction\n\n\n\nModelingPlyElementalData.mass\n\n\n\nModelingPlyElementalData.normal\n\n\n\nModelingPlyElementalData.offset\n\n\n\nModelingPlyElementalData.orientation\n\n\n\nModelingPlyElementalData.price\n\n\n\nModelingPlyElementalData.reference_direction\n\n\n\nModelingPlyElementalData.relative_thickness_correction\n\n\n\nModelingPlyElementalData.shear_angle\n\n\n\nModelingPlyElementalData.thickness\n\n\n\nModelingPlyElementalData.transverse_direction\n\n\n\nModelingPlyElementalData.volume\n\n\n\nModelingPlyElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.print_model",
        "href": "api/_autosummary/ansys.acp.core.print_model.html#print_model",
        "title": "print_model",
        "section": "print_model",
        "text": "Print a tree representation of the model.\nmodel (Model) – pyACP model\nhide_empty (bool) – Whether to hide empty collections.\nprint_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.print_model",
        "href": "api/_autosummary/ansys.acp.core.print_model.html#ansys.acp.core.print_model",
        "title": "print_model > print_model > print_model",
        "section": "print_model > print_model",
        "text": "ansys.acp.core.print_model(model, *, hide_empty=True)\n\nPrint a tree representation of the model.\n\nParameters\n\nmodel (Model) – pyACP model\n\nhide_empty (bool) – Whether to hide empty collections.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.print_model",
        "href": "api/_autosummary/ansys.acp.core.print_model.html#examples-using-print_model",
        "title": "print_model > Examples using print_model",
        "section": "Examples using print_model",
        "text": "sphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nExamples using print_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType.TAPER",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.TAPER.html#taper",
        "title": "TAPER",
        "section": "TAPER",
        "text": "TAPER"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType.TAPER",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.TAPER.html#ansys.acp.core.CutOffRuleType.TAPER",
        "title": "TAPER > TAPER > TAPER",
        "section": "TAPER > TAPER",
        "text": "CutOffRuleType.TAPER = 'taper'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.M",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.M.html#m",
        "title": "M",
        "section": "M",
        "text": "M"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.M",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.M.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.M",
        "title": "M > M > M",
        "section": "M > M",
        "text": "property ConstantPuckConstants.M: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.html#productionplynodaldata",
        "title": "ProductionPlyNodalData",
        "section": "ProductionPlyNodalData",
        "text": "Represents nodal data for a Production Ply.\nProductionPlyNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nProductionPlyNodalData.ply_offset\n\nProductionPlyNodalData.node_labels\n\nProductionPlyNodalData\nProductionPlyNodalData.get_pyvista_mesh\nProductionPlyNodalData.ply_offset\nProductionPlyNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.html#ansys.acp.core.mesh_data.ProductionPlyNodalData",
        "title": "ProductionPlyNodalData > ProductionPlyNodalData > ProductionPlyNodalData",
        "section": "ProductionPlyNodalData > ProductionPlyNodalData",
        "text": "class ansys.acp.core.mesh_data.ProductionPlyNodalData(node_labels, ply_offset)\n\nRepresents nodal data for a Production Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nProductionPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nProductionPlyNodalData.ply_offset\n\n\n\nProductionPlyNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type.html#thickness_type",
        "title": "thickness_type",
        "section": "thickness_type",
        "text": "thickness_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type.html#ansys.acp.core.ModelingPly.thickness_type",
        "title": "thickness_type > thickness_type > thickness_type",
        "section": "thickness_type > thickness_type",
        "text": "property ModelingPly.thickness_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.thickness_type.html#examples-using-modelingplythickness_type",
        "title": "thickness_type > Examples using ModelingPly.thickness_type",
        "section": "Examples using ModelingPly.thickness_type",
        "text": "sphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using ModelingPly.thickness_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.mesh.html#ansys.acp.core.ProductionPly.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property ProductionPly.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.id.html#ansys.acp.core.VariableOffsetSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property VariableOffsetSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.name.html#ansys.acp.core.VariableOffsetSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property VariableOffsetSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.status",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly.status",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.status.html#ansys.acp.core.ProductionPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ProductionPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle.html#draped_fiber_angle",
        "title": "draped_fiber_angle",
        "section": "draped_fiber_angle",
        "text": "draped_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle",
        "title": "draped_fiber_angle > draped_fiber_angle > draped_fiber_angle",
        "section": "draped_fiber_angle > draped_fiber_angle",
        "text": "ModelingPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.nodal_data.html#ansys.acp.core.AnalysisPly.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property AnalysisPly.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.nodal_data.html#ansys.acp.core.SphericalSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property SphericalSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ.html#xz",
        "title": "XZ",
        "section": "XZ",
        "text": "XZ"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ.html#ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ",
        "title": "XZ > XZ > XZ",
        "section": "XZ > XZ",
        "text": "property ConstantTsaiWuConstants.XZ: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.mass.html#mass",
        "title": "mass",
        "section": "mass",
        "text": "mass"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.mass",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.mass.html#ansys.acp.core.mesh_data.ModelElementalData.mass",
        "title": "mass > mass > mass",
        "section": "mass > mass",
        "text": "ModelElementalData.mass: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#compatibility",
        "title": "Compatibility",
        "section": "Compatibility",
        "text": "Compatibility"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#server-version-compatibility",
        "title": "Compatibility > Server version compatibility",
        "section": "Server version compatibility",
        "text": "PyACP is compatible with all versions of the ACP gRPC server since version 2024R2.\nHowever, some features are not available when using older versions of the server.\nVersion 2025R1 is the first full release of the ACP gRPC server, which makes\nalmost all features of ACP available through PyACP.\nServer version compatibility"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#added-in-2025r1",
        "title": "Compatibility > Added in 2025R1",
        "section": "Added in 2025R1",
        "text": "The following features were added in version 2025R1 of the ACP gRPC server.\nAdded in 2025R1"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#tree-objects",
        "title": "Compatibility > Tree objects",
        "section": "Tree objects",
        "text": "ButtJointSequence\nCutOffGeometry\nExtrusionGuide\nFieldDefinition\nImportedAnalysisPly\nImportedModelingPly\nImportedProductionPly\nImportedSolidModel\nInterfaceLayer\nLayupMappingObject\nSamplingPoint\nSectionCut\nSnapToGeometry\nSolidElementSet\nSolidModel\nTree objects\nButtJointSequence\nCutOffGeometry\nExtrusionGuide\nFieldDefinition\nImportedAnalysisPly\nImportedModelingPly\nImportedProductionPly\nImportedSolidModel\nInterfaceLayer\nLayupMappingObject\nSamplingPoint\nSectionCut\nSnapToGeometry\nSolidElementSet\nSolidModel"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#methods",
        "title": "Compatibility > Methods",
        "section": "Methods",
        "text": "Model.import_hdf5_composite_cae()\nModel.export_hdf5_composite_cae()\nModel.import_materials()\nModel.export_modeling_ply_geometries()\nMethods\nModel.import_hdf5_composite_cae()\nModel.export_hdf5_composite_cae()\nModel.import_materials()\nModel.export_modeling_ply_geometries()"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#other-features",
        "title": "Compatibility > Other features",
        "section": "Other features",
        "text": "Mesh attributes for classes other than the Model class.\nThe .shell_mesh and .solid_mesh attributes.\nOther features\nModel\n.shell_mesh\n.solid_mesh"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#upgrading-pyacp",
        "title": "Compatibility > Upgrading PyACP",
        "section": "Upgrading PyACP",
        "text": "The following section describes how to upgrade to newer versions of PyACP.\nUpgrading PyACP"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#upgrading-from-the-beta-version",
        "title": "Compatibility > Upgrading from the beta version",
        "section": "Upgrading from the beta version",
        "text": "The beta version of PyACP did not yet provide a stable API. Consequently, some\nbackwards-incompatible changes were made in the first stable release to improve\nthe API.\nIf you encounter any difficulties upgrading from the beta version, feel free to\nopen an issue on the PyACP GitHub\nrepository.\nUpgrading from the beta version"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#removed-features",
        "title": "Compatibility > Removed features",
        "section": "Removed features",
        "text": "The ACPWorkflow class for managing file up- and download was removed. Instead,\nfile up- and download is now managed automatically by default. You can directly\nuse the ACPInstance.import_model() method for importing models, and methods\nsuch as Model.save(), Model.export_analysis_model(), or\nModel.export_hdf5_composite_cae() for saving / exporting data.\nSee the file management section for more information.\nThe get_composite_post_processing_files function was removed, since it only\ncovered the shell workflow. Instead, you can directly use the ansys.dpf.composites\nAPI, as shown in the workflow examples.\nRemoved features\nACPWorkflow\nACPInstance.import_model()\nModel.save()\nModel.export_analysis_model()\nModel.export_hdf5_composite_cae()\nget_composite_post_processing_files\nansys.dpf.composites"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#new-submodules",
        "title": "Compatibility > New submodules",
        "section": "New submodules",
        "text": "Some features were moved into submodules instead of being exposed at the top level\nansys.acp.core module:\nElemental, nodal, and mesh data types were moved to the ansys.acp.core.mesh_data submodule.\nThe example_helpers submodule was moved to the ansys.acp.core.extras submodule.\nThe get_dpf_unit_system function was moved to the ansys.acp.core.dpf_integration_helpers submodule.\nNew submodules\nansys.acp.core\nansys.acp.core.mesh_data\nexample_helpers\nansys.acp.core.extras\nget_dpf_unit_system\nansys.acp.core.dpf_integration_helpers"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#renamed-classes",
        "title": "Compatibility > Renamed classes",
        "section": "Renamed classes",
        "text": "The following classes were renamed:\nACP renamed to ACPInstance.\nDrapingMaterialType renamed to DrapingMaterialModel.\nStatusType renamed to Status.\nDimensionType renamed to PhysicalDimension.\nCutoffMaterialType renamed to CutOffMaterialType.\nCutoffRuleType renamed to CutOffRuleType.\nCutoffSelectionRule renamed to CutOffSelectionRule.\nCutoffSelectionRuleElementalData renamed to CutOffSelectionRuleElementalData and moved to  ansys.acp.core.mesh_data.\nCutoffSelectionRuleNodalData renamed to CutOffSelectionRuleNodalData and moved to  ansys.acp.core.mesh_data.\nPlyCutoffType renamed to PlyCutOffType.\nDropoffMaterialType renamed to DropOffMaterialType.\nRenamed classes\nACP\nACPInstance\nDrapingMaterialType\nDrapingMaterialModel\nStatusType\nStatus\nDimensionType\nPhysicalDimension\nCutoffMaterialType\nCutOffMaterialType\nCutoffRuleType\nCutOffRuleType\nCutoffSelectionRule\nCutOffSelectionRule\nCutoffSelectionRuleElementalData\nCutOffSelectionRuleElementalData\nansys.acp.core.mesh_data\nCutoffSelectionRuleNodalData\nCutOffSelectionRuleNodalData\nansys.acp.core.mesh_data\nPlyCutoffType\nPlyCutOffType\nDropoffMaterialType\nDropOffMaterialType"
    },
    {
        "objectID": "user_guide/compatibility",
        "href": "user_guide/compatibility.html#renamed-attributes",
        "title": "Compatibility > Renamed attributes",
        "section": "Renamed attributes",
        "text": "The following attributes were renamed:\ndimension_type renamed to physical_dimension on the LookUpTable1DColumn and LookUpTable3DColumn classes.\ndraping_type renamed to draping on the ModelingPly class.\ninclude_rule_type renamed to include_rule on all selection rule classes.\nrelative_rule_type renamed to relative_rule on all selection rule classes.\nRenamed attributes\ndimension_type\nphysical_dimension\nLookUpTable1DColumn\nLookUpTable3DColumn\ndraping_type\ndraping\nModelingPly\ninclude_rule_type\ninclude_rule\nrelative_rule_type\nrelative_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5.html#imported_solid_model_acph5",
        "title": "IMPORTED_SOLID_MODEL_ACPH5",
        "section": "IMPORTED_SOLID_MODEL_ACPH5",
        "text": "IMPORTED_SOLID_MODEL_ACPH5"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5.html#ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5",
        "title": "IMPORTED_SOLID_MODEL_ACPH5 > IMPORTED_SOLID_MODEL_ACPH5 > IMPORTED_SOLID_MODEL_ACPH5",
        "section": "IMPORTED_SOLID_MODEL_ACPH5 > IMPORTED_SOLID_MODEL_ACPH5",
        "text": "ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5 = 15\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION.html#draped_transverse_direction",
        "title": "DRAPED_TRANSVERSE_DIRECTION",
        "section": "DRAPED_TRANSVERSE_DIRECTION",
        "text": "DRAPED_TRANSVERSE_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION.html#ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION",
        "title": "DRAPED_TRANSVERSE_DIRECTION > DRAPED_TRANSVERSE_DIRECTION > DRAPED_TRANSVERSE_DIRECTION",
        "section": "DRAPED_TRANSVERSE_DIRECTION > DRAPED_TRANSVERSE_DIRECTION",
        "text": "ElementalDataType.DRAPED_TRANSVERSE_DIRECTION = 'draped_transverse_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data.html#ansys.acp.core.AnalysisPly.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property AnalysisPly.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data.html#examples-using-analysisplyelemental_data",
        "title": "elemental_data > Examples using AnalysisPly.elemental_data",
        "section": "Examples using AnalysisPly.elemental_data",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nExamples using AnalysisPly.elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.use_default_tolerance",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.use_default_tolerance.html#use_default_tolerance",
        "title": "use_default_tolerance",
        "section": "use_default_tolerance",
        "text": "use_default_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.use_default_tolerance",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.use_default_tolerance.html#ansys.acp.core.SectionCut.use_default_tolerance",
        "title": "use_default_tolerance > use_default_tolerance > use_default_tolerance",
        "section": "use_default_tolerance > use_default_tolerance",
        "text": "property SectionCut.use_default_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.GLASS",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.GLASS.html#glass",
        "title": "GLASS",
        "section": "GLASS",
        "text": "GLASS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.GLASS",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.GLASS.html#ansys.acp.core.material_property_sets.PuckMaterialType.GLASS",
        "title": "GLASS > GLASS > GLASS",
        "section": "GLASS > GLASS",
        "text": "PuckMaterialType.GLASS = 'glass'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.UPTODATE",
        "href": "api/_autosummary/ansys.acp.core.Status.UPTODATE.html#uptodate",
        "title": "UPTODATE",
        "section": "UPTODATE",
        "text": "UPTODATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status.UPTODATE",
        "href": "api/_autosummary/ansys.acp.core.Status.UPTODATE.html#ansys.acp.core.Status.UPTODATE",
        "title": "UPTODATE > UPTODATE > UPTODATE",
        "section": "UPTODATE > UPTODATE",
        "text": "Status.UPTODATE = 'UPTODATE'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.id",
        "href": "api/_autosummary/ansys.acp.core.Stackup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.id",
        "href": "api/_autosummary/ansys.acp.core.Stackup.id.html#ansys.acp.core.Stackup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Stackup.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ.html#yz",
        "title": "YZ",
        "section": "YZ",
        "text": "YZ"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ",
        "title": "YZ > YZ > YZ",
        "section": "YZ > YZ",
        "text": "property VariableTsaiWuConstants.YZ: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric.html#isnumeric",
        "title": "isnumeric",
        "section": "isnumeric",
        "text": "Return True if the string is a numeric string, False otherwise.\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.\nisnumeric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric.html#ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric",
        "title": "isnumeric > isnumeric > isnumeric",
        "section": "isnumeric > isnumeric",
        "text": "PuckMaterialType.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.dir2",
        "href": "api/_autosummary/ansys.acp.core.Rosette.dir2.html#dir2",
        "title": "dir2",
        "section": "dir2",
        "text": "dir2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.dir2",
        "href": "api/_autosummary/ansys.acp.core.Rosette.dir2.html#ansys.acp.core.Rosette.dir2",
        "title": "dir2 > dir2 > dir2",
        "section": "dir2 > dir2",
        "text": "property Rosette.dir2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups.html#imported_modeling_groups",
        "title": "imported_modeling_groups",
        "section": "imported_modeling_groups",
        "text": "imported_modeling_groups"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups.html#ansys.acp.core.Model.imported_modeling_groups",
        "title": "imported_modeling_groups > imported_modeling_groups > imported_modeling_groups",
        "section": "imported_modeling_groups > imported_modeling_groups",
        "text": "property Model.imported_modeling_groups: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups",
        "href": "api/_autosummary/ansys.acp.core.Model.imported_modeling_groups.html#examples-using-modelimported_modeling_groups",
        "title": "imported_modeling_groups > Examples using Model.imported_modeling_groups",
        "section": "Examples using Model.imported_modeling_groups",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.imported_modeling_groups"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.html#constantlarcconstants",
        "title": "ConstantLaRCConstants",
        "section": "ConstantLaRCConstants",
        "text": "Constant LaRC failure criterion properties.\nAdded in ACP server version 24.2.\nConstantLaRCConstants.fracture_angle_under_compression\n\nConstantLaRCConstants.fracture_toughness_mode_1\n\nConstantLaRCConstants.fracture_toughness_mode_2\n\nConstantLaRCConstants.fracture_toughness_ratio\n\nConstantLaRCConstants.thin_ply_thickness_limit\n\nConstantLaRCConstants\nConstantLaRCConstants.fracture_angle_under_compression\nConstantLaRCConstants.fracture_toughness_mode_1\nConstantLaRCConstants.fracture_toughness_mode_2\nConstantLaRCConstants.fracture_toughness_ratio\nConstantLaRCConstants.thin_ply_thickness_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants",
        "title": "ConstantLaRCConstants > ConstantLaRCConstants > ConstantLaRCConstants",
        "section": "ConstantLaRCConstants > ConstantLaRCConstants",
        "text": "class ansys.acp.core.material_property_sets.ConstantLaRCConstants(*, fracture_angle_under_compression=53.0, fracture_toughness_ratio=0.0, fracture_toughness_mode_1=0.0, fracture_toughness_mode_2=0.0, thin_ply_thickness_limit=0.0, _parent_object=None, _attribute_path=None)\n\nConstant LaRC failure criterion properties.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantLaRCConstants.fracture_angle_under_compression\n\n\n\nConstantLaRCConstants.fracture_toughness_mode_1\n\n\n\nConstantLaRCConstants.fracture_toughness_mode_2\n\n\n\nConstantLaRCConstants.fracture_toughness_ratio\n\n\n\nConstantLaRCConstants.thin_ply_thickness_limit\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.html#constantwovencharacterization",
        "title": "ConstantWovenCharacterization",
        "section": "ConstantWovenCharacterization",
        "text": "Constant woven characterization material property set.\nAdded in ACP server version 24.2.\nConstantWovenCharacterization.E1_1\n\nConstantWovenCharacterization.E1_2\n\nConstantWovenCharacterization.E2_1\n\nConstantWovenCharacterization.E2_2\n\nConstantWovenCharacterization.G12_1\n\nConstantWovenCharacterization.G12_2\n\nConstantWovenCharacterization.G23_1\n\nConstantWovenCharacterization.G23_2\n\nConstantWovenCharacterization.nu12_1\n\nConstantWovenCharacterization.nu12_2\n\nConstantWovenCharacterization.orientation_1\n\nConstantWovenCharacterization.orientation_2\n\nConstantWovenCharacterization\nConstantWovenCharacterization.E1_1\nConstantWovenCharacterization.E1_2\nConstantWovenCharacterization.E2_1\nConstantWovenCharacterization.E2_2\nConstantWovenCharacterization.G12_1\nConstantWovenCharacterization.G12_2\nConstantWovenCharacterization.G23_1\nConstantWovenCharacterization.G23_2\nConstantWovenCharacterization.nu12_1\nConstantWovenCharacterization.nu12_2\nConstantWovenCharacterization.orientation_1\nConstantWovenCharacterization.orientation_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization",
        "title": "ConstantWovenCharacterization > ConstantWovenCharacterization > ConstantWovenCharacterization",
        "section": "ConstantWovenCharacterization > ConstantWovenCharacterization",
        "text": "class ansys.acp.core.material_property_sets.ConstantWovenCharacterization(*, orientation_1=0.0, E1_1=0.0, E2_1=0.0, G12_1=0.0, G23_1=0.0, nu12_1=0.0, orientation_2=0.0, E1_2=0.0, E2_2=0.0, G12_2=0.0, G23_2=0.0, nu12_2=0.0, _parent_object=None, _attribute_path=None)\n\nConstant woven characterization material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantWovenCharacterization.E1_1\n\n\n\nConstantWovenCharacterization.E1_2\n\n\n\nConstantWovenCharacterization.E2_1\n\n\n\nConstantWovenCharacterization.E2_2\n\n\n\nConstantWovenCharacterization.G12_1\n\n\n\nConstantWovenCharacterization.G12_2\n\n\n\nConstantWovenCharacterization.G23_1\n\n\n\nConstantWovenCharacterization.G23_2\n\n\n\nConstantWovenCharacterization.nu12_1\n\n\n\nConstantWovenCharacterization.nu12_2\n\n\n\nConstantWovenCharacterization.orientation_1\n\n\n\nConstantWovenCharacterization.orientation_2\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.delete",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.delete",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.delete.html#ansys.acp.core.OrientedSelectionSet.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "OrientedSelectionSet.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.casefold",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.casefold.html#casefold",
        "title": "casefold",
        "section": "casefold",
        "text": "Return a version of the string suitable for caseless comparisons.\ncasefold"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.casefold",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.casefold.html#ansys.acp.core.material_property_sets.PuckMaterialType.casefold",
        "title": "casefold > casefold > casefold",
        "section": "casefold > casefold",
        "text": "PuckMaterialType.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.selection_rules.html#selection_rules",
        "title": "selection_rules",
        "section": "selection_rules",
        "text": "selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.selection_rules.html#ansys.acp.core.OrientedSelectionSet.selection_rules",
        "title": "selection_rules > selection_rules > selection_rules",
        "section": "selection_rules > selection_rules",
        "text": "property OrientedSelectionSet.selection_rules: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/050-composite_cae_h5",
        "href": "examples/modeling_features/050-composite_cae_h5.html#hdf5-composite-cae",
        "title": "HDF5 Composite CAE",
        "section": "HDF5 Composite CAE",
        "text": "The HDF5 Composite CAE interface of PyACP is demonstrated in\nthis example. It shows how to write (export) and read (import)\nlayup data to and from a HDF5 Composite CAE file, respectively.\nThe HDF5 Composite CAE format is a vendor independent format\nto exchange composite layup information between CAE tools.\nThis examples demonstrates how to:\n- Load and manipulate a model\n- Export data to a HDF5 Composite CAE file\n- Import and map layup from HDF5 Composite CAE onto a different model (mesh)\n- Export data with ply offsets (3D plies)\n- Import a layup as ImportedModelingPly\n- Import HDF5 Composite CAE with 3D plies and map the layup onto an ImportedSolidModel\nImport the standard library and third-party dependencies.\nImport the PyACP dependencies.\nHDF5 Composite CAE\nImportedModelingPly\nImportedSolidModel"
    },
    {
        "objectID": "examples/modeling_features/050-composite_cae_h5",
        "href": "examples/modeling_features/050-composite_cae_h5.html#start-acp-and-load-the-model",
        "title": "HDF5 Composite CAE > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "%%\nGet the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from an acph5 file\nCrop some plies in order to generate a variable laminate\nPlot the thickness distribution\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/050-composite_cae_h5",
        "href": "examples/modeling_features/050-composite_cae_h5.html#write-hdf5-composite-cae-file",
        "title": "HDF5 Composite CAE > Write HDF5 Composite CAE file",
        "section": "Write HDF5 Composite CAE file",
        "text": "Export the entire layup to a HDF5 Composite CAE file.\nWrite HDF5 Composite CAE file"
    },
    {
        "objectID": "examples/modeling_features/050-composite_cae_h5",
        "href": "examples/modeling_features/050-composite_cae_h5.html#load-hdf5-composite-cae-file-into-a-different-model",
        "title": "HDF5 Composite CAE > Load HDF5 Composite CAE file into a different model",
        "section": "Load HDF5 Composite CAE file into a different model",
        "text": "A new acp model is created by importing a refined mesh of the same geometry.\nBoth meshes (initial mesh in blue, refined one in red) are shown below.\nImport the HDF5 Composite CAE file which is then automatically mapped\nonto the refined mesh. In this example, the default settings\n(tolerances, etc.) are used.\nPlot the thickness distribution on the refined model\nLoad HDF5 Composite CAE file into a different model"
    },
    {
        "objectID": "examples/modeling_features/050-composite_cae_h5",
        "href": "examples/modeling_features/050-composite_cae_h5.html#3d-plies-with-ply-offsets",
        "title": "HDF5 Composite CAE > 3D plies with ply-offsets",
        "section": "3D plies with ply-offsets",
        "text": "The HDF5 Composite CAE interface also allows to export the 3D plies\n(plies with offsets) which can then be used to create\nimported modeling plies. The initial model is used to\nwrite a new HDF5 with layup_representation_3d enabled.\nA new acp model is created to properly separate the different workflows.\nAn imported solid model is required for the 3D workflow (with imported modeling plies).\nDetails about ImportedSolidModel and ImportedModelingPly can be found\nin the examples imported_solid_model_example and imported_plies_example.\nThe LayupMappingObject is used to configure the mapping of the imported plies\nonto the imported solid model.\nThe mapped top layer of the imported laminate is shown below.\nNote that the solid elements which do not intersect with the\nlayup are deleted in this example.\nNote that the visualization of imported plies and imported solid model\nis limited. As an alternative, you can save the model and review it\nin ACP standalone.\nTotal running time of the script: (0 minutes 4.121 seconds)\nDownload Jupyter notebook: 050-composite_cae_h5.ipynb\nDownload Python source code: 050-composite_cae_h5.py\nDownload zipped: 050-composite_cae_h5.zip\nGallery generated by Sphinx-Gallery\n3D plies with ply-offsets\nlayup_representation_3d\nImportedSolidModel\nImportedModelingPly\nLayupMappingObject\nDownload Jupyter notebook: 050-composite_cae_h5.ipynb\nDownload Python source code: 050-composite_cae_h5.py\nDownload zipped: 050-composite_cae_h5.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.locked",
        "href": "api/_autosummary/ansys.acp.core.Rosette.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.locked",
        "href": "api/_autosummary/ansys.acp.core.Rosette.locked.html#ansys.acp.core.Rosette.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property Rosette.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#security-considerations",
        "title": "Security considerations",
        "section": "Security considerations",
        "text": "This section provides information on security considerations for the use\nof PyACP. It is important to understand the capabilities which PyACP\nprovides, especially when using it to build apps or scripts that accept\nuntrusted input.\nSecurity considerations"
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#launching-acp",
        "title": "Security considerations > Launching ACP",
        "section": "Launching ACP",
        "text": "The launch_acp() function has different security implications depending\non the launch mode used:\nLaunching ACP\nlaunch_acp()"
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#direct-launch",
        "title": "Security considerations > Direct launch",
        "section": "Direct launch",
        "text": "When using the \"direct\" launch mode:\nThe executable which is launched is configurable either in the function\nparameters, or in the ansys-tools-local-product-launcher configuration\nfile. This may allow an attacker to launch arbitrary executables on the system.\nThe standard output and standard error file paths are configurable. This may\nbe used to overwrite arbitrary files on the system.\nWhen exposing the \"direct\" launch mode to untrusted users, it is important\nto validate that the executable path and file paths are safe, or hard-code\nthem in the app.\nDirect launch\n\"direct\"\nansys-tools-local-product-launcher\n\"direct\""
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#docker-compose-launch",
        "title": "Security considerations > Docker compose launch",
        "section": "Docker compose launch",
        "text": "The \"docker_compose\" launch mode executes the docker or docker-compose\ncommands on the system.\nThis may pose the following risks:\nIf the user can override which container is launched, they may be able to\nlaunch arbitrary containers on the system. This is especially problematic\nif docker is configured to run with elevated privileges.\nIf the user can override the docker or docker-compose executable\nin the environment, they may be able to execute arbitrary commands on the\nsystem.\nWhen exposing the \"docker_compose\" launch mode to untrusted users, it is important\nto validate that the container being launched, and control the environment the\ncommand is executed in.\nDocker compose launch\n\"docker_compose\"\ndocker\ndocker-compose\ndocker\ndocker\ndocker-compose\n\"docker_compose\""
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#connect-launch",
        "title": "Security considerations > Connect launch",
        "section": "Connect launch",
        "text": "The \"connect\" launch mode connects to an existing ACP server. This mode does\nnot pose any particular security risks, besides allowing access to a port on the\nsystem.\nConnect launch\n\"connect\""
    },
    {
        "objectID": "user_guide/security_considerations",
        "href": "user_guide/security_considerations.html#file-up--and-downloads",
        "title": "Security considerations > File up- and downloads",
        "section": "File up- and downloads",
        "text": "The ACPInstance.upload_file() and ACPInstance.download_file() methods create files\non the local or remote machine, without any validation of the file content or path.\nThe same is true for file load / save methods if the auto_transfer_files parameter is set to\nTrue in launch_acp().\nWhen exposing these methods to untrusted users, it is important to validate that\nonly files that are safe to be uploaded or downloaded are processed.\nFile up- and downloads\nACPInstance.upload_file()\nACPInstance.download_file()\nauto_transfer_files\nTrue\nlaunch_acp()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.elemental_data.html#ansys.acp.core.CutOffSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property CutOffSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.parent",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.parent",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.parent.html#ansys.acp.core.InterfaceLayer.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property InterfaceLayer.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.active",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.active",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.active.html#ansys.acp.core.InterfaceLayer.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property InterfaceLayer.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.layup_mapping_objects",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.layup_mapping_objects.html#layup_mapping_objects",
        "title": "layup_mapping_objects",
        "section": "layup_mapping_objects",
        "text": "layup_mapping_objects"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.layup_mapping_objects",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.layup_mapping_objects.html#ansys.acp.core.ImportedSolidModel.layup_mapping_objects",
        "title": "layup_mapping_objects > layup_mapping_objects > layup_mapping_objects",
        "section": "layup_mapping_objects > layup_mapping_objects",
        "text": "property ImportedSolidModel.layup_mapping_objects: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.html#productionply",
        "title": "ProductionPly",
        "section": "ProductionPly",
        "text": "Instantiate a Production Ply.\nname (str) – The name of the production ply.\nmaterial (Material) – Material of the production ply.\nangle (float) – Angle of the production ply in degrees.\nthickness (float) – Thickness of the production ply.\nAdded in ACP server version 24.2.\nProductionPly.analysis_plies\n\nProductionPly.angle\n\nProductionPly.elemental_data\n\nProductionPly.id\nIdentifier of the object, used for example as key in maps.\nProductionPly.material\n\nProductionPly.mesh\nFull mesh associated with the object.\nProductionPly.name\nThe name of the object.\nProductionPly.nodal_data\n\nProductionPly.parent\nThe parent of the object.\nProductionPly.shell_mesh\nShell mesh associated with the object.\nProductionPly.status\n\nProductionPly.thickness\n\nProductionPly\nProductionPly.analysis_plies\nProductionPly.angle\nProductionPly.elemental_data\nProductionPly.id\nProductionPly.material\nProductionPly.mesh\nProductionPly.name\nProductionPly.nodal_data\nProductionPly.parent\nProductionPly.shell_mesh\nProductionPly.status\nProductionPly.thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ProductionPly",
        "href": "api/_autosummary/ansys.acp.core.ProductionPly.html#ansys.acp.core.ProductionPly",
        "title": "ProductionPly > ProductionPly > ProductionPly",
        "section": "ProductionPly > ProductionPly",
        "text": "class ansys.acp.core.ProductionPly\n\nInstantiate a Production Ply.\n\nParameters\n\nname (str) – The name of the production ply.\n\nmaterial (Material) – Material of the production ply.\n\nangle (float) – Angle of the production ply in degrees.\n\nthickness (float) – Thickness of the production ply.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nProductionPly.analysis_plies\n\n\n\nProductionPly.angle\n\n\n\nProductionPly.elemental_data\n\n\n\nProductionPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nProductionPly.material\n\n\n\nProductionPly.mesh\n\nFull mesh associated with the object.\n\nProductionPly.name\n\nThe name of the object.\n\nProductionPly.nodal_data\n\n\n\nProductionPly.parent\n\nThe parent of the object.\n\nProductionPly.shell_mesh\n\nShell mesh associated with the object.\n\nProductionPly.status\n\n\n\nProductionPly.thickness\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance.html#relative_thickness_tolerance",
        "title": "relative_thickness_tolerance",
        "section": "relative_thickness_tolerance",
        "text": "relative_thickness_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance.html#ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance",
        "title": "relative_thickness_tolerance > relative_thickness_tolerance > relative_thickness_tolerance",
        "section": "relative_thickness_tolerance > relative_thickness_tolerance",
        "text": "ShellMappingProperties.relative_thickness_tolerance: float = 0.5\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zt.html#zt",
        "title": "Zt",
        "section": "Zt",
        "text": "Zt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zt.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Zt",
        "title": "Zt > Zt > Zt",
        "section": "Zt > Zt",
        "text": "property ConstantStressLimits.Zt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.unit_system",
        "href": "api/_autosummary/ansys.acp.core.Model.unit_system.html#unit_system",
        "title": "unit_system",
        "section": "unit_system",
        "text": "unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.unit_system",
        "href": "api/_autosummary/ansys.acp.core.Model.unit_system.html#ansys.acp.core.Model.unit_system",
        "title": "unit_system > unit_system > unit_system",
        "section": "unit_system > unit_system",
        "text": "property Model.unit_system: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.unit_system",
        "href": "api/_autosummary/ansys.acp.core.Model.unit_system.html#examples-using-modelunit_system",
        "title": "unit_system > Examples using Model.unit_system",
        "section": "Examples using Model.unit_system",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nExamples using Model.unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE.html#isotropic_homogeneous_core",
        "title": "ISOTROPIC_HOMOGENEOUS_CORE",
        "section": "ISOTROPIC_HOMOGENEOUS_CORE",
        "text": "ISOTROPIC_HOMOGENEOUS_CORE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE.html#ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "title": "ISOTROPIC_HOMOGENEOUS_CORE > ISOTROPIC_HOMOGENEOUS_CORE > ISOTROPIC_HOMOGENEOUS_CORE",
        "section": "ISOTROPIC_HOMOGENEOUS_CORE > ISOTROPIC_HOMOGENEOUS_CORE",
        "text": "PlyType.ISOTROPIC_HOMOGENEOUS_CORE = 'isotropic_homogeneous_core'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "href": "api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE.html#examples-using-plytypeisotropic_homogeneous_core",
        "title": "ISOTROPIC_HOMOGENEOUS_CORE > Examples using PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "section": "Examples using PlyType.ISOTROPIC_HOMOGENEOUS_CORE",
        "text": "sphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using PlyType.ISOTROPIC_HOMOGENEOUS_CORE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.html#sublaminate",
        "title": "SubLaminate",
        "section": "SubLaminate",
        "text": "Instantiate a SubLaminate.\nname (str) – Name of the sub-laminate.\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\nAdded in ACP server version 24.2.\nSubLaminate.add_material(material[, angle])\nAdd a Lamina to the SubLaminate.\nSubLaminate.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSubLaminate.delete()\nDelete the object.\nSubLaminate.store(parent)\nStore the object on the server.\nSubLaminate.area_price\n\nSubLaminate.area_weight\n\nSubLaminate.id\nIdentifier of the object, used for example as key in maps.\nSubLaminate.locked\n\nSubLaminate.materials\n\nSubLaminate.name\nThe name of the object.\nSubLaminate.parent\nThe parent of the object.\nSubLaminate.status\n\nSubLaminate.symmetry\n\nSubLaminate.thickness\n\nSubLaminate.topdown\n\nSubLaminate\nSubLaminate.add_material\nSubLaminate.clone\nSubLaminate.delete\nSubLaminate.store\nSubLaminate.area_price\nSubLaminate.area_weight\nSubLaminate.id\nSubLaminate.locked\nSubLaminate.materials\nSubLaminate.name\nSubLaminate.parent\nSubLaminate.status\nSubLaminate.symmetry\nSubLaminate.thickness\nSubLaminate.topdown"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.html#ansys.acp.core.SubLaminate",
        "title": "SubLaminate > SubLaminate > SubLaminate",
        "section": "SubLaminate > SubLaminate",
        "text": "class ansys.acp.core.SubLaminate(*, name='SubLaminate', symmetry='no_symmetry', topdown=True, materials=())\n\nInstantiate a SubLaminate.\n\nParameters\n\nname (str) – Name of the sub-laminate.\n\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\n\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\n\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSubLaminate.add_material(material[, angle])\n\nAdd a Lamina to the SubLaminate.\n\nSubLaminate.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSubLaminate.delete()\n\nDelete the object.\n\nSubLaminate.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSubLaminate.area_price\n\n\n\nSubLaminate.area_weight\n\n\n\nSubLaminate.id\n\nIdentifier of the object, used for example as key in maps.\n\nSubLaminate.locked\n\n\n\nSubLaminate.materials\n\n\n\nSubLaminate.name\n\nThe name of the object.\n\nSubLaminate.parent\n\nThe parent of the object.\n\nSubLaminate.status\n\n\n\nSubLaminate.symmetry\n\n\n\nSubLaminate.thickness\n\n\n\nSubLaminate.topdown\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.html#examples-using-sublaminate",
        "title": "SubLaminate > Examples using SubLaminate",
        "section": "Examples using SubLaminate",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using SubLaminate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.direction.html#ansys.acp.core.CylindricalSelectionRule.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property CylindricalSelectionRule.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.store.html#ansys.acp.core.ImportedModelingGroup.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ImportedModelingGroup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES.html#directions_from_tabular_values",
        "title": "DIRECTIONS_FROM_TABULAR_VALUES",
        "section": "DIRECTIONS_FROM_TABULAR_VALUES",
        "text": "DIRECTIONS_FROM_TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES.html#ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "title": "DIRECTIONS_FROM_TABULAR_VALUES > DIRECTIONS_FROM_TABULAR_VALUES > DIRECTIONS_FROM_TABULAR_VALUES",
        "section": "DIRECTIONS_FROM_TABULAR_VALUES > DIRECTIONS_FROM_TABULAR_VALUES",
        "text": "RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES = 'directions_from_tabular_values'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES.html#examples-using-rosetteselectionmethoddirections_from_tabular_values",
        "title": "DIRECTIONS_FROM_TABULAR_VALUES > Examples using RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "section": "Examples using RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1.html#e1",
        "title": "E1",
        "section": "E1",
        "text": "E1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1",
        "title": "E1 > E1 > E1",
        "section": "E1 > E1",
        "text": "property ConstantEngineeringConstants.E1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.clone",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.clone",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.clone.html#ansys.acp.core.EdgeSet.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "EdgeSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping.html#mutablemapping",
        "title": "MutableMapping",
        "section": "MutableMapping",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nMutable mapping interface for collections of TreeObjects.\nMutableMapping"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping.html#ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping",
        "title": "MutableMapping > MutableMapping > MutableMapping",
        "section": "MutableMapping > MutableMapping",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping(*, _server_wrapper, _collection_path, _stub, _object_constructor)\n\nMutable mapping interface for collections of TreeObjects.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.clone",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.clone",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.clone.html#ansys.acp.core.SubLaminate.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SubLaminate.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.parent",
        "href": "api/_autosummary/ansys.acp.core.Fabric.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.parent",
        "href": "api/_autosummary/ansys.acp.core.Fabric.parent.html#ansys.acp.core.Fabric.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Fabric.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isalpha",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isalpha.html#isalpha",
        "title": "isalpha",
        "section": "isalpha",
        "text": "Return True if the string is an alphabetic string, False otherwise.\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.\nisalpha"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isalpha",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isalpha.html#ansys.acp.core.LaunchMode.isalpha",
        "title": "isalpha > isalpha > isalpha",
        "section": "isalpha > isalpha",
        "text": "LaunchMode.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.swapcase",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.swapcase.html#swapcase",
        "title": "swapcase",
        "section": "swapcase",
        "text": "Convert uppercase characters to lowercase and lowercase characters to uppercase.\nswapcase"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.swapcase",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.swapcase.html#ansys.acp.core.LaunchMode.swapcase",
        "title": "swapcase > swapcase > swapcase",
        "section": "swapcase > swapcase",
        "text": "LaunchMode.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping.html#mapping",
        "title": "Mapping",
        "section": "Mapping",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nMapping interface for collections of TreeObjects.\nNote: We could derive from collections.abc.Mapping to make sure\nthis class conforms to the Mapping interface.\nMapping"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping.html#ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping",
        "title": "Mapping > Mapping > Mapping",
        "section": "Mapping > Mapping",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping(*, _server_wrapper, _collection_path, _stub, _object_constructor)\n\nMapping interface for collections of TreeObjects.\n\nNote: We could derive from collections.abc.Mapping to make sure\nthis class conforms to the Mapping interface.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.html#constantwovenstresslimits",
        "title": "ConstantWovenStressLimits",
        "section": "ConstantWovenStressLimits",
        "text": "Constant stress limits property set for woven materials.\nAdded in ACP server version 24.2.\nConstantWovenStressLimits.Sxy\n\nConstantWovenStressLimits.Sxz\n\nConstantWovenStressLimits.Syz\n\nConstantWovenStressLimits.Xc\n\nConstantWovenStressLimits.Xt\n\nConstantWovenStressLimits.Yc\n\nConstantWovenStressLimits.Yt\n\nConstantWovenStressLimits.Zc\n\nConstantWovenStressLimits.Zt\n\nConstantWovenStressLimits\nConstantWovenStressLimits.Sxy\nConstantWovenStressLimits.Sxz\nConstantWovenStressLimits.Syz\nConstantWovenStressLimits.Xc\nConstantWovenStressLimits.Xt\nConstantWovenStressLimits.Yc\nConstantWovenStressLimits.Yt\nConstantWovenStressLimits.Zc\nConstantWovenStressLimits.Zt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits",
        "title": "ConstantWovenStressLimits > ConstantWovenStressLimits > ConstantWovenStressLimits",
        "section": "ConstantWovenStressLimits > ConstantWovenStressLimits",
        "text": "class ansys.acp.core.material_property_sets.ConstantWovenStressLimits(*, Xc=0.0, Yc=0.0, Zc=0.0, Xt=0.0, Yt=0.0, Zt=0.0, Sxy=0.0, Syz=0.0, Sxz=0.0, _parent_object=None, _attribute_path=None)\n\nConstant stress limits property set for woven materials.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantWovenStressLimits.Sxy\n\n\n\nConstantWovenStressLimits.Sxz\n\n\n\nConstantWovenStressLimits.Syz\n\n\n\nConstantWovenStressLimits.Xc\n\n\n\nConstantWovenStressLimits.Xt\n\n\n\nConstantWovenStressLimits.Yc\n\n\n\nConstantWovenStressLimits.Yt\n\n\n\nConstantWovenStressLimits.Zc\n\n\n\nConstantWovenStressLimits.Zt\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.COG",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.COG.html#cog",
        "title": "COG",
        "section": "COG",
        "text": "COG"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.COG",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.COG.html#ansys.acp.core.ElementalDataType.COG",
        "title": "COG > COG > COG",
        "section": "COG > COG",
        "text": "ElementalDataType.COG = 'cog'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23.html#g23",
        "title": "G23",
        "section": "G23",
        "text": "G23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23",
        "title": "G23 > G23 > G23",
        "section": "G23 > G23",
        "text": "property VariableEngineeringConstants.G23: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.download_file",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.download_file.html#download_file",
        "title": "download_file",
        "section": "download_file",
        "text": "Download a file from the server.\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\nremote_path (str | PathLike[str]) – The path of the file on the server.\nlocal_path (str | PathLike[str]) – The path of the file to be downloaded to.\ndownload_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.download_file",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.download_file.html#ansys.acp.core.ACPInstance.download_file",
        "title": "download_file > download_file > download_file",
        "section": "download_file > download_file",
        "text": "ACPInstance.download_file(remote_path, local_path)\n\nDownload a file from the server.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\n\nParameters\n\nremote_path (str | PathLike[str]) – The path of the file on the server.\n\nlocal_path (str | PathLike[str]) – The path of the file to be downloaded to.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.html#variabletsaiwuconstants",
        "title": "VariableTsaiWuConstants",
        "section": "VariableTsaiWuConstants",
        "text": "Variable Tsai-Wu constants material property set.\nAdded in ACP server version 24.2.\nVariableTsaiWuConstants.XY\n\nVariableTsaiWuConstants.XZ\n\nVariableTsaiWuConstants.YZ\n\nVariableTsaiWuConstants.field_variables\n\nVariableTsaiWuConstants.interpolation_options\n\nVariableTsaiWuConstants\nVariableTsaiWuConstants.XY\nVariableTsaiWuConstants.XZ\nVariableTsaiWuConstants.YZ\nVariableTsaiWuConstants.field_variables\nVariableTsaiWuConstants.interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants",
        "title": "VariableTsaiWuConstants > VariableTsaiWuConstants > VariableTsaiWuConstants",
        "section": "VariableTsaiWuConstants > VariableTsaiWuConstants",
        "text": "class ansys.acp.core.material_property_sets.VariableTsaiWuConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable Tsai-Wu constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableTsaiWuConstants.XY\n\n\n\nVariableTsaiWuConstants.XZ\n\n\n\nVariableTsaiWuConstants.YZ\n\n\n\nVariableTsaiWuConstants.field_variables\n\n\n\nVariableTsaiWuConstants.interpolation_options\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.relative_thickness_tolerance",
        "href": "api/_autosummary/ansys.acp.core.Model.relative_thickness_tolerance.html#relative_thickness_tolerance",
        "title": "relative_thickness_tolerance",
        "section": "relative_thickness_tolerance",
        "text": "relative_thickness_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.relative_thickness_tolerance",
        "href": "api/_autosummary/ansys.acp.core.Model.relative_thickness_tolerance.html#ansys.acp.core.Model.relative_thickness_tolerance",
        "title": "relative_thickness_tolerance > relative_thickness_tolerance > relative_thickness_tolerance",
        "section": "relative_thickness_tolerance > relative_thickness_tolerance",
        "text": "property Model.relative_thickness_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction.html#reference_direction",
        "title": "reference_direction",
        "section": "reference_direction",
        "text": "reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction",
        "title": "reference_direction > reference_direction > reference_direction",
        "section": "reference_direction > reference_direction",
        "text": "AnalysisPlyElementalData.reference_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.parent",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.parent",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.parent.html#ansys.acp.core.ExtrusionGuide.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ExtrusionGuide.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET.html#bottom_offset",
        "title": "BOTTOM_OFFSET",
        "section": "BOTTOM_OFFSET",
        "text": "BOTTOM_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET.html#ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET",
        "title": "BOTTOM_OFFSET > BOTTOM_OFFSET > BOTTOM_OFFSET",
        "section": "BOTTOM_OFFSET > BOTTOM_OFFSET",
        "text": "ImportedPlyOffsetType.BOTTOM_OFFSET = 'bottom_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET.html#examples-using-importedplyoffsettypebottom_offset",
        "title": "BOTTOM_OFFSET > Examples using ImportedPlyOffsetType.BOTTOM_OFFSET",
        "section": "Examples using ImportedPlyOffsetType.BOTTOM_OFFSET",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedPlyOffsetType.BOTTOM_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.values",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.values.html#values",
        "title": "values",
        "section": "values",
        "text": "Vector data values as a numpy array.\nvalues"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.values",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.values.html#ansys.acp.core.mesh_data.VectorData.values",
        "title": "values > values > values",
        "section": "values > values",
        "text": "property VectorData.values: ndarray[tuple[int, ...], dtype[float64]]\n\nVector data values as a numpy array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.node_coordinates",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.node_coordinates.html#node_coordinates",
        "title": "node_coordinates",
        "section": "node_coordinates",
        "text": "node_coordinates"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.node_coordinates",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.node_coordinates.html#ansys.acp.core.mesh_data.TriangleMesh.node_coordinates",
        "title": "node_coordinates > node_coordinates > node_coordinates",
        "section": "node_coordinates > node_coordinates",
        "text": "TriangleMesh.node_coordinates: ndarray[tuple[int, ...], dtype[float64]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stderr_file",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stderr_file.html#stderr_file",
        "title": "stderr_file",
        "section": "stderr_file",
        "text": "stderr_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stderr_file",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stderr_file.html#ansys.acp.core.DirectLaunchConfig.stderr_file",
        "title": "stderr_file > stderr_file > stderr_file",
        "section": "stderr_file > stderr_file",
        "text": "DirectLaunchConfig.stderr_file: str = '/dev/null'\n\n"
    },
    {
        "objectID": "api/linked_object_definitions",
        "href": "api/linked_object_definitions.html#linked-object-definitions",
        "title": "Linked object definitions",
        "section": "Linked object definitions",
        "text": "FabricWithAngle(fabric[, angle])\nDefines a fabric of a stackup.\nLamina(material[, angle])\nClass to link a material with a sub-laminate.\nLinkedSelectionRule(selection_rule, *[, ...])\nDefines selection rules linked to a Boolean Selection Rule or Modeling Ply.\nPrimaryPly(sequence[, level])\nDefines a primary ply of a butt joint sequence.\nSubShape(cad_geometry, path)\nRepresents a sub-shape of a virtual geometry.\nTaperEdge(edge_set, *, angle, offset)\nDefines a taper edge.\nLinked object definitions\nFabricWithAngle\nLamina\nLinkedSelectionRule\nPrimaryPly\nSubShape\nTaperEdge"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31.html#g31",
        "title": "G31",
        "section": "G31",
        "text": "G31"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31",
        "title": "G31 > G31 > G31",
        "section": "G31 > G31",
        "text": "property ConstantEngineeringConstants.G31: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.values",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.values.html#values",
        "title": "values",
        "section": "values",
        "text": "Scalar data values as a numpy array.\nvalues"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.values",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.values.html#ansys.acp.core.mesh_data.ScalarData.values",
        "title": "values > values > values",
        "section": "values > values",
        "text": "property ScalarData.values: ndarray[tuple[int, ...], dtype[ScalarDataT]]\n\nScalar data values as a numpy array.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2.html#e1_2",
        "title": "E1_2",
        "section": "E1_2",
        "text": "E1_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2",
        "title": "E1_2 > E1_2 > E1_2",
        "section": "E1_2 > E1_2",
        "text": "property VariableWovenCharacterization.E1_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.parent",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.parent",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.parent.html#ansys.acp.core.FieldDefinition.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property FieldDefinition.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes.html#drop_hanging_nodes",
        "title": "drop_hanging_nodes",
        "section": "drop_hanging_nodes",
        "text": "drop_hanging_nodes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes.html#ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes",
        "title": "drop_hanging_nodes > drop_hanging_nodes > drop_hanging_nodes",
        "section": "drop_hanging_nodes > drop_hanging_nodes",
        "text": "property ImportedSolidModelExportSettings.drop_hanging_nodes: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.area_price",
        "href": "api/_autosummary/ansys.acp.core.Stackup.area_price.html#area_price",
        "title": "area_price",
        "section": "area_price",
        "text": "area_price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.area_price",
        "href": "api/_autosummary/ansys.acp.core.Stackup.area_price.html#ansys.acp.core.Stackup.area_price",
        "title": "area_price > area_price > area_price",
        "section": "area_price > area_price",
        "text": "property Stackup.area_price: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.MKS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.MKS.html#mks",
        "title": "MKS",
        "section": "MKS",
        "text": "MKS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.MKS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.MKS.html#ansys.acp.core.UnitSystemType.MKS",
        "title": "MKS > MKS > MKS",
        "section": "MKS > MKS",
        "text": "UnitSystemType.MKS = 'mks'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.html#cutoffruletype",
        "title": "CutOffRuleType",
        "section": "CutOffRuleType",
        "text": "Options for how a cut off rule is defined.\nCutOffRuleType.GEOMETRY\n\nCutOffRuleType.TAPER\n\nCutOffRuleType\nCutOffRuleType.GEOMETRY\nCutOffRuleType.TAPER"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.html#ansys.acp.core.CutOffRuleType",
        "title": "CutOffRuleType > CutOffRuleType > CutOffRuleType",
        "section": "CutOffRuleType > CutOffRuleType",
        "text": "class ansys.acp.core.CutOffRuleType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how a cut off rule is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nCutOffRuleType.GEOMETRY\n\n\n\nCutOffRuleType.TAPER\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns.html#columns",
        "title": "columns",
        "section": "columns",
        "text": "columns"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns.html#ansys.acp.core.LookUpTable3D.columns",
        "title": "columns > columns > columns",
        "section": "columns > columns",
        "text": "property LookUpTable3D.columns: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.columns.html#examples-using-lookuptable3dcolumns",
        "title": "columns > Examples using LookUpTable3D.columns",
        "section": "Examples using LookUpTable3D.columns",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using LookUpTable3D.columns"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.nodal_data.html#ansys.acp.core.ParallelSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ParallelSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometry",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometry.html#geometry",
        "title": "geometry",
        "section": "geometry",
        "text": "geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometry",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometry.html#ansys.acp.core.GeometricalSelectionRule.geometry",
        "title": "geometry > geometry > geometry",
        "section": "geometry > geometry",
        "text": "property GeometricalSelectionRule.geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "GeometricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes.html#element_nodes",
        "title": "element_nodes",
        "section": "element_nodes",
        "text": "element_nodes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes.html#ansys.acp.core.mesh_data.MeshData.element_nodes",
        "title": "element_nodes > element_nodes > element_nodes",
        "section": "element_nodes > element_nodes",
        "text": "MeshData.element_nodes: ndarray[tuple[int, ...], dtype[int32]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.store",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.store",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.store.html#ansys.acp.core.SectionCut.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SectionCut.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material.html#drop_off_material",
        "title": "drop_off_material",
        "section": "drop_off_material",
        "text": "drop_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material.html#ansys.acp.core.Fabric.drop_off_material",
        "title": "drop_off_material > drop_off_material > drop_off_material",
        "section": "drop_off_material > drop_off_material",
        "text": "property Fabric.drop_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.status.html#ansys.acp.core.CutOffSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property CutOffSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.density",
        "href": "api/_autosummary/ansys.acp.core.Material.density.html#density",
        "title": "density",
        "section": "density",
        "text": "density"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.density",
        "href": "api/_autosummary/ansys.acp.core.Material.density.html#ansys.acp.core.Material.density",
        "title": "density > density > density",
        "section": "density > density",
        "text": "property Material.density: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.html#baseelementmaterialhandling",
        "title": "BaseElementMaterialHandling",
        "section": "BaseElementMaterialHandling",
        "text": "Determines how the base material is handled where it intersects with a reinforcing element.\nBaseElementMaterialHandling.RETAIN\n\nBaseElementMaterialHandling.REMOVE\n\nBaseElementMaterialHandling\nBaseElementMaterialHandling.RETAIN\nBaseElementMaterialHandling.REMOVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.html#ansys.acp.core.BaseElementMaterialHandling",
        "title": "BaseElementMaterialHandling > BaseElementMaterialHandling > BaseElementMaterialHandling",
        "section": "BaseElementMaterialHandling > BaseElementMaterialHandling",
        "text": "class ansys.acp.core.BaseElementMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the base material is handled where it intersects with a reinforcing element.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBaseElementMaterialHandling.RETAIN\n\n\n\nBaseElementMaterialHandling.REMOVE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.clone.html#ansys.acp.core.CutOffSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "CutOffSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index.html#use_default_material_index",
        "title": "use_default_material_index",
        "section": "use_default_material_index",
        "text": "use_default_material_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index.html#ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index",
        "title": "use_default_material_index > use_default_material_index > use_default_material_index",
        "section": "use_default_material_index > use_default_material_index",
        "text": "property ImportedSolidModelExportSettings.use_default_material_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.Fabric.draping_ud_coefficient.html#draping_ud_coefficient",
        "title": "draping_ud_coefficient",
        "section": "draping_ud_coefficient",
        "text": "draping_ud_coefficient"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.Fabric.draping_ud_coefficient.html#ansys.acp.core.Fabric.draping_ud_coefficient",
        "title": "draping_ud_coefficient > draping_ud_coefficient > draping_ud_coefficient",
        "section": "draping_ud_coefficient > draping_ud_coefficient",
        "text": "property Fabric.draping_ud_coefficient: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.COPY",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.COPY.html#copy",
        "title": "COPY",
        "section": "COPY",
        "text": "COPY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.COPY",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.COPY.html#ansys.acp.core.LinkedObjectHandling.COPY",
        "title": "COPY > COPY > COPY",
        "section": "COPY > COPY",
        "text": "LinkedObjectHandling.COPY = 'copy'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle.html#design_angle",
        "title": "design_angle",
        "section": "design_angle",
        "text": "design_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle",
        "title": "design_angle > design_angle > design_angle",
        "section": "design_angle > design_angle",
        "text": "ProductionPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.DOWN",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.DOWN.html#down",
        "title": "DOWN",
        "section": "DOWN",
        "text": "DOWN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.DOWN",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.DOWN.html#ansys.acp.core.CutOffGeometryOrientationType.DOWN",
        "title": "DOWN > DOWN > DOWN",
        "section": "DOWN > DOWN",
        "text": "CutOffGeometryOrientationType.DOWN = 'down'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier.html#isidentifier",
        "title": "isidentifier",
        "section": "isidentifier",
        "text": "Return True if the string is a valid Python identifier, False otherwise.\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”.\nisidentifier"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier.html#ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier",
        "title": "isidentifier > isidentifier > isidentifier",
        "section": "isidentifier > isidentifier",
        "text": "PuckMaterialType.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.name",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.name.html#name",
        "title": "name",
        "section": "name",
        "text": "name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.name",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.name.html#ansys.acp.core.material_property_sets.FieldVariable.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "FieldVariable.name: str\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS.html#plane_stress_state_with_transverse_shear_stiffness",
        "title": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "section": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "text": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "href": "api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS.html#ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "title": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "section": "PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS > PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS",
        "text": "StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS = 'plane_stress_state_with_transverse_shear_stiffness'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.level",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.level.html#level",
        "title": "level",
        "section": "level",
        "text": "Level of the primary ply.\nPlies with a higher level inherit the thickness from adjacent plies with a lower level.\nlevel"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.level",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.level.html#ansys.acp.core.PrimaryPly.level",
        "title": "level > level > level",
        "section": "level > level",
        "text": "property PrimaryPly.level: int\n\nLevel of the primary ply.\n\nPlies with a higher level inherit the thickness from adjacent plies with a lower level.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.material",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.material.html#material",
        "title": "material",
        "section": "material",
        "text": "material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.material",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.material.html#ansys.acp.core.AnalysisPly.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property AnalysisPly.material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STEP",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STEP.html#step",
        "title": "STEP",
        "section": "STEP",
        "text": "STEP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STEP",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STEP.html#ansys.acp.core.SolidModelSkinExportFormat.STEP",
        "title": "STEP > STEP > STEP",
        "section": "STEP > STEP",
        "text": "SolidModelSkinExportFormat.STEP = 'step'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.origin",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.origin.html#origin",
        "title": "origin",
        "section": "origin",
        "text": "origin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.origin",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.origin.html#ansys.acp.core.LookUpTable1D.origin",
        "title": "origin > origin > origin",
        "section": "origin > origin",
        "text": "property LookUpTable1D.origin: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin.html#solidmodelexportmixin",
        "title": "SolidModelExportMixin",
        "section": "SolidModelExportMixin",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nMixin class for adding export functionality to the solid model and imported solid model classes.\nSolidModelExportMixin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin.html#ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin",
        "title": "SolidModelExportMixin > SolidModelExportMixin > SolidModelExportMixin",
        "section": "SolidModelExportMixin > SolidModelExportMixin",
        "text": "class ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin(name='')\n\nMixin class for adding export functionality to the solid model and imported solid model classes.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.thickness",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.thickness",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.thickness.html#ansys.acp.core.SubLaminate.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property SubLaminate.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "AnalysisPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule.html#create_parallel_selection_rule",
        "title": "create_parallel_selection_rule",
        "section": "create_parallel_selection_rule",
        "text": "Instantiate a Parallel Selection Rule.\nname (str) – Name of the Parallel Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nParallelSelectionRule\nAdded in ACP server version 24.2.\ncreate_parallel_selection_rule\nuse_global_coordinate_system\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule.html#ansys.acp.core.Model.create_parallel_selection_rule",
        "title": "create_parallel_selection_rule > create_parallel_selection_rule > create_parallel_selection_rule",
        "section": "create_parallel_selection_rule > create_parallel_selection_rule",
        "text": "Model.create_parallel_selection_rule(*, name='ParallelSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(1.0, 0.0, 0.0), lower_limit=0.0, upper_limit=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Parallel Selection Rule.\n\nParameters\n\nname (str) – Name of the Parallel Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\n\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\n\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nParallelSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule.html#examples-using-modelcreate_parallel_selection_rule",
        "title": "create_parallel_selection_rule > Examples using Model.create_parallel_selection_rule",
        "section": "Examples using Model.create_parallel_selection_rule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.create_parallel_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_material_handling",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_material_handling.html#base_element_material_handling",
        "title": "base_element_material_handling",
        "section": "base_element_material_handling",
        "text": "base_element_material_handling"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_material_handling",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_material_handling.html#ansys.acp.core.LayupMappingObject.base_element_material_handling",
        "title": "base_element_material_handling > base_element_material_handling > base_element_material_handling",
        "section": "base_element_material_handling > base_element_material_handling",
        "text": "property LayupMappingObject.base_element_material_handling: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.html#geometricalselectionrulenodaldata",
        "title": "GeometricalSelectionRuleNodalData",
        "section": "GeometricalSelectionRuleNodalData",
        "text": "Represents nodal data for a Geometrical Selection Rule.\nGeometricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nGeometricalSelectionRuleNodalData.node_labels\n\nGeometricalSelectionRuleNodalData\nGeometricalSelectionRuleNodalData.get_pyvista_mesh\nGeometricalSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData",
        "title": "GeometricalSelectionRuleNodalData > GeometricalSelectionRuleNodalData > GeometricalSelectionRuleNodalData",
        "section": "GeometricalSelectionRuleNodalData > GeometricalSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Geometrical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nGeometricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nGeometricalSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.store.html#ansys.acp.core.ImportedModelingPly.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ImportedModelingPly.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.angle",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "Angle between the cutting plane and  the reference surface.\nangle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TaperEdge.angle",
        "href": "api/_autosummary/ansys.acp.core.TaperEdge.angle.html#ansys.acp.core.TaperEdge.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property TaperEdge.angle: float\n\nAngle between the cutting plane and  the reference surface.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.id",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.id",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.id.html#ansys.acp.core.LayupMappingObject.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LayupMappingObject.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt.html#eyt",
        "title": "eYt",
        "section": "eYt",
        "text": "eYt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt",
        "title": "eYt > eYt > eYt",
        "section": "eYt > eYt",
        "text": "property ConstantStrainLimits.eYt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_type.html#thickness_type",
        "title": "thickness_type",
        "section": "thickness_type",
        "text": "thickness_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_type",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_type.html#ansys.acp.core.ImportedModelingPly.thickness_type",
        "title": "thickness_type > thickness_type > thickness_type",
        "section": "thickness_type > thickness_type",
        "text": "property ImportedModelingPly.thickness_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.REGULAR",
        "href": "api/_autosummary/ansys.acp.core.PlyType.REGULAR.html#regular",
        "title": "REGULAR",
        "section": "REGULAR",
        "text": "REGULAR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.REGULAR",
        "href": "api/_autosummary/ansys.acp.core.PlyType.REGULAR.html#ansys.acp.core.PlyType.REGULAR",
        "title": "REGULAR > REGULAR > REGULAR",
        "section": "REGULAR > REGULAR",
        "text": "PlyType.REGULAR = 'regular'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyType.REGULAR",
        "href": "api/_autosummary/ansys.acp.core.PlyType.REGULAR.html#examples-using-plytyperegular",
        "title": "REGULAR > Examples using PlyType.REGULAR",
        "section": "Examples using PlyType.REGULAR",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nExamples using PlyType.REGULAR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.html#variableoffsetselectionruleelementaldata",
        "title": "VariableOffsetSelectionRuleElementalData",
        "section": "VariableOffsetSelectionRuleElementalData",
        "text": "Represents elemental data for a VariableOffset Selection Rule.\nVariableOffsetSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nVariableOffsetSelectionRuleElementalData.normal\n\nVariableOffsetSelectionRuleElementalData.element_labels\n\nVariableOffsetSelectionRuleElementalData\nVariableOffsetSelectionRuleElementalData.get_pyvista_mesh\nVariableOffsetSelectionRuleElementalData.normal\nVariableOffsetSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData",
        "title": "VariableOffsetSelectionRuleElementalData > VariableOffsetSelectionRuleElementalData > VariableOffsetSelectionRuleElementalData",
        "section": "VariableOffsetSelectionRuleElementalData > VariableOffsetSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a VariableOffset Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVariableOffsetSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableOffsetSelectionRuleElementalData.normal\n\n\n\nVariableOffsetSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.delete",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.delete",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.delete.html#ansys.acp.core.FieldDefinition.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "FieldDefinition.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType.html#genericedgepropertytype",
        "title": "GenericEdgePropertyType",
        "section": "GenericEdgePropertyType",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nProtocol for the definition of ACP edge properties such as FabricWithAngle.\nGenericEdgePropertyType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType.html#ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType",
        "title": "GenericEdgePropertyType > GenericEdgePropertyType > GenericEdgePropertyType",
        "section": "GenericEdgePropertyType > GenericEdgePropertyType",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType(*kwargs)\n\nProtocol for the definition of ACP edge properties such as FabricWithAngle.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.html#lookuptable3dinterpolationalgorithm",
        "title": "LookUpTable3DInterpolationAlgorithm",
        "section": "LookUpTable3DInterpolationAlgorithm",
        "text": "Options for the interpolation algorithm used for 3D look-up tables.\nLookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR\n\nLookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR\n\nLookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION\n\nLookUpTable3DInterpolationAlgorithm\nLookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR\nLookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR\nLookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.html#ansys.acp.core.LookUpTable3DInterpolationAlgorithm",
        "title": "LookUpTable3DInterpolationAlgorithm > LookUpTable3DInterpolationAlgorithm > LookUpTable3DInterpolationAlgorithm",
        "section": "LookUpTable3DInterpolationAlgorithm > LookUpTable3DInterpolationAlgorithm",
        "text": "class ansys.acp.core.LookUpTable3DInterpolationAlgorithm(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the interpolation algorithm used for 3D look-up tables.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nLookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR\n\n\n\nLookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR\n\n\n\nLookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.id",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.id",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.id.html#ansys.acp.core.FieldDefinition.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property FieldDefinition.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule.html#create_tube_selection_rule",
        "title": "create_tube_selection_rule",
        "section": "create_tube_selection_rule",
        "text": "Instantiate a Tube Selection Rule.\nname (str) – Name of the Tube Selection Rule.\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\nouter_radius (float) – Outer radius of the tube.\ninner_radius (float) – Inner radius of the tube.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nextend_endings (bool) – Enable this option to extend the endings of the tube.\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\nTubeSelectionRule\nAdded in ACP server version 24.2.\ncreate_tube_selection_rule\nFalse"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule.html#ansys.acp.core.Model.create_tube_selection_rule",
        "title": "create_tube_selection_rule > create_tube_selection_rule > create_tube_selection_rule",
        "section": "create_tube_selection_rule > create_tube_selection_rule",
        "text": "Model.create_tube_selection_rule(*, name='TubeSelectionrule', edge_set=None, outer_radius=1.0, inner_radius=0.0, include_rule=True, extend_endings=False, symmetrical_extension=True, head=(0.0, 0.0, 0.0), head_extension=0.0, tail_extension=0.0)\n\nInstantiate a Tube Selection Rule.\n\nParameters\n\nname (str) – Name of the Tube Selection Rule.\n\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\n\nouter_radius (float) – Outer radius of the tube.\n\ninner_radius (float) – Inner radius of the tube.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nextend_endings (bool) – Enable this option to extend the endings of the tube.\n\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\n\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\n\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\n\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\n\nReturn type\n\nTubeSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule.html#examples-using-modelcreate_tube_selection_rule",
        "title": "create_tube_selection_rule > Examples using Model.create_tube_selection_rule",
        "section": "Examples using Model.create_tube_selection_rule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nExamples using Model.create_tube_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.delete.html#ansys.acp.core.LookUpTable1D.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "LookUpTable1D.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.include_rule.html#include_rule",
        "title": "include_rule",
        "section": "include_rule",
        "text": "include_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.include_rule",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.include_rule.html#ansys.acp.core.CylindricalSelectionRule.include_rule",
        "title": "include_rule > include_rule > include_rule",
        "section": "include_rule > include_rule",
        "text": "property CylindricalSelectionRule.include_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.symmetrical_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.symmetrical_extension.html#symmetrical_extension",
        "title": "symmetrical_extension",
        "section": "symmetrical_extension",
        "text": "symmetrical_extension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.symmetrical_extension",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.symmetrical_extension.html#ansys.acp.core.TubeSelectionRule.symmetrical_extension",
        "title": "symmetrical_extension > symmetrical_extension > symmetrical_extension",
        "section": "symmetrical_extension > symmetrical_extension",
        "text": "property TubeSelectionRule.symmetrical_extension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "GeometricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export.html#export",
        "title": "export",
        "section": "export",
        "text": "Export the solid model to a file.\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\".\nexport\n\"ansys:h5\"\n\"ansys:cdb\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.export.html#ansys.acp.core.ImportedSolidModel.export",
        "title": "export > export > export",
        "section": "export > export",
        "text": "ImportedSolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\n\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\".\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.parent",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.parent",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.parent.html#ansys.acp.core.EdgeSet.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property EdgeSet.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL.html#parallel",
        "title": "PARALLEL",
        "section": "PARALLEL",
        "text": "PARALLEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL.html#ansys.acp.core.RosetteType.PARALLEL",
        "title": "PARALLEL > PARALLEL > PARALLEL",
        "section": "PARALLEL > PARALLEL",
        "text": "RosetteType.PARALLEL = 'parallel'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL",
        "href": "api/_autosummary/ansys.acp.core.RosetteType.PARALLEL.html#examples-using-rosettetypeparallel",
        "title": "PARALLEL > Examples using RosetteType.PARALLEL",
        "section": "Examples using RosetteType.PARALLEL",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteType.PARALLEL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle.html#draped_transverse_angle",
        "title": "draped_transverse_angle",
        "section": "draped_transverse_angle",
        "text": "draped_transverse_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle",
        "title": "draped_transverse_angle > draped_transverse_angle > draped_transverse_angle",
        "section": "draped_transverse_angle > draped_transverse_angle",
        "text": "AnalysisPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.html#variableoffsetselectionrulenodaldata",
        "title": "VariableOffsetSelectionRuleNodalData",
        "section": "VariableOffsetSelectionRuleNodalData",
        "text": "Represents nodal data for a VariableOffset Selection Rule.\nVariableOffsetSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nVariableOffsetSelectionRuleNodalData.node_labels\n\nVariableOffsetSelectionRuleNodalData\nVariableOffsetSelectionRuleNodalData.get_pyvista_mesh\nVariableOffsetSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData",
        "title": "VariableOffsetSelectionRuleNodalData > VariableOffsetSelectionRuleNodalData > VariableOffsetSelectionRuleNodalData",
        "section": "VariableOffsetSelectionRuleNodalData > VariableOffsetSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a VariableOffset Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nVariableOffsetSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableOffsetSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/other_types",
        "href": "api/other_types.html#other-types",
        "title": "Other types",
        "section": "Other types",
        "text": "CoordinateTransformation([rotation_angle_x, ...])\nDefines a coordinate transformation via rotation angles and translations.\nImportedSolidModelExportSettings(*[, ...])\nDefines the settings for exporting an imported solid model.\nShellMappingProperties([all_elements, ...])\nProperties for mapping to the shell on importing HDF5 Composite CAE files.\nSolidMappingProperties([offset_type])\nProperties for importing HDF5 Composite CAE files as imported plies.\nSolidModelExportSettings(*[, ...])\nDefines the settings for exporting a solid model.\nDropOffSettings(*[, drop_off_type, ...])\nDefines the drop-off settings for a solid model.\nOther types\nCoordinateTransformation\nImportedSolidModelExportSettings\nShellMappingProperties\nSolidMappingProperties\nSolidModelExportSettings\nDropOffSettings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.name",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.name.html#ansys.acp.core.ImportedSolidModel.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property ImportedSolidModel.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material.html#cut_off_material",
        "title": "cut_off_material",
        "section": "cut_off_material",
        "text": "cut_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material",
        "href": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material.html#ansys.acp.core.Fabric.cut_off_material",
        "title": "cut_off_material > cut_off_material > cut_off_material",
        "section": "cut_off_material > cut_off_material",
        "text": "property Fabric.cut_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.delete.html#ansys.acp.core.CADGeometry.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "CADGeometry.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.clone",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.clone",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.clone.html#ansys.acp.core.ExtrusionGuide.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ExtrusionGuide.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.element_labels.html#ansys.acp.core.mesh_data.SolidModelElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "SolidModelElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt.html#ext",
        "title": "eXt",
        "section": "eXt",
        "text": "eXt"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt",
        "title": "eXt > eXt > eXt",
        "section": "eXt > eXt",
        "text": "property ConstantStrainLimits.eXt: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options.html#ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableTsaiWuConstants.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_settings",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_settings.html#drop_off_settings",
        "title": "drop_off_settings",
        "section": "drop_off_settings",
        "text": "drop_off_settings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_settings",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_settings.html#ansys.acp.core.SolidModel.drop_off_settings",
        "title": "drop_off_settings > drop_off_settings > drop_off_settings",
        "section": "drop_off_settings > drop_off_settings",
        "text": "property SolidModel.drop_off_settings: AttribT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.id.html#ansys.acp.core.ImportedModelingGroup.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ImportedModelingGroup.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "TubeSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#rosette",
        "title": "Rosette",
        "section": "Rosette",
        "text": "This example illustrates how you can use rosettes to define the reference directions of a ply.\nIt only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nRosette"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#import-modules",
        "title": "Rosette > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#start-acp-and-load-the-model",
        "title": "Rosette > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nImport the model from the input file.\nThis example’s input file contains a flat plate.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-parallel-rosette",
        "title": "Rosette > Define directions with a parallel rosette",
        "section": "Define directions with a parallel rosette",
        "text": "Create a material and fabric.\nCreate a parallel rosette where the first direction is rotated by 45 degrees around the y axis.\nCreate an oriented selection set (OSS) and assign the rosette.\nPlot the orientation and reference directions of the OSS.\nCreate a ply that uses the reference directions defined by the rosette.\nThe ply angle is set to 20 degrees, which means that the fiber direction is rotated by 20 degrees\nfrom the reference direction.\nPlot the reference directions, fiber directions, and transverse directions of the ply.\nDefine directions with a parallel rosette"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-radial-rosette",
        "title": "Rosette > Define directions with a radial rosette",
        "section": "Define directions with a radial rosette",
        "text": "Create a radial rosette and plot the resulting reference directions.\nFor a radial rosette, a line is constructed that goes through the origin. Its\ndirection vector is normal to a plane spanned by dir1 and dir2.\nTherefore, the reference directions are parallel to the shortest connection from the line to\neach point for which it is computed.\nDefine directions with a radial rosette\ndir1\ndir2"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-cylindrical-rosette",
        "title": "Rosette > Define directions with a cylindrical rosette",
        "section": "Define directions with a cylindrical rosette",
        "text": "Create a cylindrical rosette and plot the resulting reference directions.\nFor a cylindrical rosette, the reference directions are tangential to the circles around the origin\nthat lie in a plane spanned by dir1 and dir2.\nDefine directions with a cylindrical rosette\ndir1\ndir2"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-spherical-rosette",
        "title": "Rosette > Define directions with a spherical rosette",
        "section": "Define directions with a spherical rosette",
        "text": "Create a spherical rosette and plot the resulting reference directions.\nFor a spherical rosette, the reference directions are tangential to a sphere around the origin.\nNote that for this example, the reference directions of the spherical rosette are the same as\nthose of the cylindrical rosette.\nDefine directions with a spherical rosette"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-an-edge-wise-rosette",
        "title": "Rosette > Define directions with an edge-wise rosette",
        "section": "Define directions with an edge-wise rosette",
        "text": "Create an edge-wise rosette and plot the resulting reference directions.\nThe reference directions are given by a projection of dir1\nand the path of the edge set. dir1 of the rosette is projected onto the point\non the edge that is closest to the rosette’s origin. This determines the reference directions\nalong the edge set.\nYou can reverse the reference directions by inverting dir1.\nAn element within an OSS gets its reference directions from the direction\nof the point on the edge that is closest to the element centroid.\nCreate the edge set from the “All_Elements” element set. Because you assigned\n120 degrees to the limit angle, all the edges are selected.\nDefine directions with an edge-wise rosette\ndir1\ndir1\ndir1"
    },
    {
        "objectID": "examples/modeling_features/002-rosettes-ply-directions",
        "href": "examples/modeling_features/002-rosettes-ply-directions.html#combine-rosettes",
        "title": "Rosette > Combine rosettes",
        "section": "Combine rosettes",
        "text": "Create an additional parallel rosette that points along the x direction and has its origin\nat (0.01, 0, 0.01).\nAssign both rosettes to the OSS and set the rosette selection method to\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED. This implies that the reference directions\nare weighted by the inverse distance to each rosette. Note that the origin of\nthe rotated rosette is at (0,0,0).\nPlot the resulting reference directions.\nTotal running time of the script: (0 minutes 9.300 seconds)\nDownload Jupyter notebook: 002-rosettes-ply-directions.ipynb\nDownload Python source code: 002-rosettes-ply-directions.py\nDownload zipped: 002-rosettes-ply-directions.zip\nGallery generated by Sphinx-Gallery\nCombine rosettes\n(0.01, 0, 0.01)\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n(0,0,0)\nDownload Jupyter notebook: 002-rosettes-ply-directions.ipynb\nDownload Python source code: 002-rosettes-ply-directions.py\nDownload zipped: 002-rosettes-ply-directions.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets.html#drop_off_disabled_on_bottom_sets",
        "title": "drop_off_disabled_on_bottom_sets",
        "section": "drop_off_disabled_on_bottom_sets",
        "text": "drop_off_disabled_on_bottom_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets.html#ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets",
        "title": "drop_off_disabled_on_bottom_sets > drop_off_disabled_on_bottom_sets > drop_off_disabled_on_bottom_sets",
        "section": "drop_off_disabled_on_bottom_sets > drop_off_disabled_on_bottom_sets",
        "text": "property DropOffSettings.drop_off_disabled_on_bottom_sets: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_seed_point",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_seed_point.html#draping_seed_point",
        "title": "draping_seed_point",
        "section": "draping_seed_point",
        "text": "draping_seed_point"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_seed_point",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_seed_point.html#ansys.acp.core.OrientedSelectionSet.draping_seed_point",
        "title": "draping_seed_point > draping_seed_point > draping_seed_point",
        "section": "draping_seed_point > draping_seed_point",
        "text": "property OrientedSelectionSet.draping_seed_point: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableWovenCharacterization.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET.html#bottom_offset",
        "title": "BOTTOM_OFFSET",
        "section": "BOTTOM_OFFSET",
        "text": "BOTTOM_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET.html#ansys.acp.core.OffsetType.BOTTOM_OFFSET",
        "title": "BOTTOM_OFFSET > BOTTOM_OFFSET > BOTTOM_OFFSET",
        "section": "BOTTOM_OFFSET > BOTTOM_OFFSET",
        "text": "OffsetType.BOTTOM_OFFSET = 'bottom_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET.html#examples-using-offsettypebottom_offset",
        "title": "BOTTOM_OFFSET > Examples using OffsetType.BOTTOM_OFFSET",
        "section": "Examples using OffsetType.BOTTOM_OFFSET",
        "text": "sphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using OffsetType.BOTTOM_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options.html#ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariableStressLimits.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.store",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.store",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.store.html#ansys.acp.core.EdgeSet.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "EdgeSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.thickness",
        "href": "api/_autosummary/ansys.acp.core.Fabric.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.thickness",
        "href": "api/_autosummary/ansys.acp.core.Fabric.thickness.html#ansys.acp.core.Fabric.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "property Fabric.thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.count",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.count.html#count",
        "title": "count",
        "section": "count",
        "text": "Return the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.\ncount"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.count",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.count.html#ansys.acp.core.LaunchMode.count",
        "title": "count > count > count",
        "section": "count > count",
        "text": "LaunchMode.count(sub, [start, [end]]) -> int\n\nReturn the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.path",
        "href": "api/_autosummary/ansys.acp.core.SubShape.path.html#path",
        "title": "path",
        "section": "path",
        "text": "Topological path of the sub-shape within the CAD geometry.\npath"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubShape.path",
        "href": "api/_autosummary/ansys.acp.core.SubShape.path.html#ansys.acp.core.SubShape.path",
        "title": "path > path > path",
        "section": "path > path",
        "text": "property SubShape.path: str\n\nTopological path of the sub-shape within the CAD geometry.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.status.html#ansys.acp.core.ParallelSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ParallelSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.html#analysisplyelementaldata",
        "title": "AnalysisPlyElementalData",
        "section": "AnalysisPlyElementalData",
        "text": "Represents elemental data for a Analysis Ply.\nAnalysisPlyElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nAnalysisPlyElementalData.area\n\nAnalysisPlyElementalData.cog\n\nAnalysisPlyElementalData.design_angle\n\nAnalysisPlyElementalData.draped_fiber_angle\n\nAnalysisPlyElementalData.draped_fiber_direction\n\nAnalysisPlyElementalData.draped_transverse_angle\n\nAnalysisPlyElementalData.draped_transverse_direction\n\nAnalysisPlyElementalData.fiber_direction\n\nAnalysisPlyElementalData.mass\n\nAnalysisPlyElementalData.material_1_direction\n\nAnalysisPlyElementalData.normal\n\nAnalysisPlyElementalData.offset\n\nAnalysisPlyElementalData.orientation\n\nAnalysisPlyElementalData.price\n\nAnalysisPlyElementalData.reference_direction\n\nAnalysisPlyElementalData.relative_thickness_correction\n\nAnalysisPlyElementalData.shear_angle\n\nAnalysisPlyElementalData.thickness\n\nAnalysisPlyElementalData.transverse_direction\n\nAnalysisPlyElementalData.volume\n\nAnalysisPlyElementalData.element_labels\n\nAnalysisPlyElementalData\nAnalysisPlyElementalData.get_pyvista_mesh\nAnalysisPlyElementalData.area\nAnalysisPlyElementalData.cog\nAnalysisPlyElementalData.design_angle\nAnalysisPlyElementalData.draped_fiber_angle\nAnalysisPlyElementalData.draped_fiber_direction\nAnalysisPlyElementalData.draped_transverse_angle\nAnalysisPlyElementalData.draped_transverse_direction\nAnalysisPlyElementalData.fiber_direction\nAnalysisPlyElementalData.mass\nAnalysisPlyElementalData.material_1_direction\nAnalysisPlyElementalData.normal\nAnalysisPlyElementalData.offset\nAnalysisPlyElementalData.orientation\nAnalysisPlyElementalData.price\nAnalysisPlyElementalData.reference_direction\nAnalysisPlyElementalData.relative_thickness_correction\nAnalysisPlyElementalData.shear_angle\nAnalysisPlyElementalData.thickness\nAnalysisPlyElementalData.transverse_direction\nAnalysisPlyElementalData.volume\nAnalysisPlyElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData",
        "title": "AnalysisPlyElementalData > AnalysisPlyElementalData > AnalysisPlyElementalData",
        "section": "AnalysisPlyElementalData > AnalysisPlyElementalData",
        "text": "class ansys.acp.core.mesh_data.AnalysisPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, material_1_direction=None, cog=None)\n\nRepresents elemental data for a Analysis Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nAnalysisPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nAnalysisPlyElementalData.area\n\n\n\nAnalysisPlyElementalData.cog\n\n\n\nAnalysisPlyElementalData.design_angle\n\n\n\nAnalysisPlyElementalData.draped_fiber_angle\n\n\n\nAnalysisPlyElementalData.draped_fiber_direction\n\n\n\nAnalysisPlyElementalData.draped_transverse_angle\n\n\n\nAnalysisPlyElementalData.draped_transverse_direction\n\n\n\nAnalysisPlyElementalData.fiber_direction\n\n\n\nAnalysisPlyElementalData.mass\n\n\n\nAnalysisPlyElementalData.material_1_direction\n\n\n\nAnalysisPlyElementalData.normal\n\n\n\nAnalysisPlyElementalData.offset\n\n\n\nAnalysisPlyElementalData.orientation\n\n\n\nAnalysisPlyElementalData.price\n\n\n\nAnalysisPlyElementalData.reference_direction\n\n\n\nAnalysisPlyElementalData.relative_thickness_correction\n\n\n\nAnalysisPlyElementalData.shear_angle\n\n\n\nAnalysisPlyElementalData.thickness\n\n\n\nAnalysisPlyElementalData.transverse_direction\n\n\n\nAnalysisPlyElementalData.volume\n\n\n\nAnalysisPlyElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_section_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_section_index.html#use_default_section_index",
        "title": "use_default_section_index",
        "section": "use_default_section_index",
        "text": "use_default_section_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_section_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_section_index.html#ansys.acp.core.SolidModelExportSettings.use_default_section_index",
        "title": "use_default_section_index > use_default_section_index > use_default_section_index",
        "section": "use_default_section_index > use_default_section_index",
        "text": "property SolidModelExportSettings.use_default_section_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction.html#reference_direction",
        "title": "reference_direction",
        "section": "reference_direction",
        "text": "reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction",
        "title": "reference_direction > reference_direction > reference_direction",
        "section": "reference_direction > reference_direction",
        "text": "OrientedSelectionSetElementalData.reference_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.shell_mesh.html#ansys.acp.core.ParallelSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property ParallelSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets.html#drop_off_disabled_on_top_sets",
        "title": "drop_off_disabled_on_top_sets",
        "section": "drop_off_disabled_on_top_sets",
        "text": "drop_off_disabled_on_top_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets.html#ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets",
        "title": "drop_off_disabled_on_top_sets > drop_off_disabled_on_top_sets > drop_off_disabled_on_top_sets",
        "section": "drop_off_disabled_on_top_sets > drop_off_disabled_on_top_sets",
        "text": "property DropOffSettings.drop_off_disabled_on_top_sets: LinkedObjectList[Any]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.use_default_tolerances",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.use_default_tolerances.html#use_default_tolerances",
        "title": "use_default_tolerances",
        "section": "use_default_tolerances",
        "text": "use_default_tolerances"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.use_default_tolerances",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.use_default_tolerances.html#ansys.acp.core.GeometricalSelectionRule.use_default_tolerances",
        "title": "use_default_tolerances > use_default_tolerances > use_default_tolerances",
        "section": "use_default_tolerances > use_default_tolerances",
        "text": "property GeometricalSelectionRule.use_default_tolerances: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.nodal_data.html#ansys.acp.core.ModelingGroup.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ModelingGroup.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.delete_bad_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.delete_bad_elements.html#delete_bad_elements",
        "title": "delete_bad_elements",
        "section": "delete_bad_elements",
        "text": "delete_bad_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.delete_bad_elements",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.delete_bad_elements.html#ansys.acp.core.SolidModel.delete_bad_elements",
        "title": "delete_bad_elements > delete_bad_elements > delete_bad_elements",
        "section": "delete_bad_elements > delete_bad_elements",
        "text": "property SolidModel.delete_bad_elements: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.clone",
        "href": "api/_autosummary/ansys.acp.core.Lamina.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored Lamina with the same properties.\nSelf\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.clone",
        "href": "api/_autosummary/ansys.acp.core.Lamina.clone.html#ansys.acp.core.Lamina.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Lamina.clone()\n\nCreate a new unstored Lamina with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSelf"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_1",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_1.html#woven_puck_constants_1",
        "title": "woven_puck_constants_1",
        "section": "woven_puck_constants_1",
        "text": "woven_puck_constants_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_1",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_puck_constants_1.html#ansys.acp.core.Material.woven_puck_constants_1",
        "title": "woven_puck_constants_1 > woven_puck_constants_1 > woven_puck_constants_1",
        "section": "woven_puck_constants_1 > woven_puck_constants_1",
        "text": "property Material.woven_puck_constants_1: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.spherical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.spherical_selection_rules.html#spherical_selection_rules",
        "title": "spherical_selection_rules",
        "section": "spherical_selection_rules",
        "text": "spherical_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.spherical_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.spherical_selection_rules.html#ansys.acp.core.Model.spherical_selection_rules",
        "title": "spherical_selection_rules > spherical_selection_rules > spherical_selection_rules",
        "section": "spherical_selection_rules > spherical_selection_rules",
        "text": "property Model.spherical_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.parent.html#ansys.acp.core.LookUpTable1DColumn.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property LookUpTable1DColumn.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.WIRE_FRAME",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.WIRE_FRAME.html#wire_frame",
        "title": "WIRE_FRAME",
        "section": "WIRE_FRAME",
        "text": "WIRE_FRAME"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionType.WIRE_FRAME",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionType.WIRE_FRAME.html#ansys.acp.core.ExtrusionType.WIRE_FRAME",
        "title": "WIRE_FRAME > WIRE_FRAME > WIRE_FRAME",
        "section": "WIRE_FRAME > WIRE_FRAME",
        "text": "ExtrusionType.WIRE_FRAME = 'wire_frame'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_coordinates",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_coordinates.html#node_coordinates",
        "title": "node_coordinates",
        "section": "node_coordinates",
        "text": "node_coordinates"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_coordinates",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_coordinates.html#ansys.acp.core.mesh_data.MeshData.node_coordinates",
        "title": "node_coordinates > node_coordinates > node_coordinates",
        "section": "node_coordinates > node_coordinates",
        "text": "MeshData.node_coordinates: ndarray[tuple[int, ...], dtype[float64]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.shell_mesh.html#ansys.acp.core.CutOffSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property CutOffSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.material_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.material_index.html#material_index",
        "title": "material_index",
        "section": "material_index",
        "text": "material_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.material_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.material_index.html#ansys.acp.core.ImportedSolidModelExportSettings.material_index",
        "title": "material_index > material_index > material_index",
        "section": "material_index > material_index",
        "text": "property ImportedSolidModelExportSettings.material_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.html#analysisplynodaldata",
        "title": "AnalysisPlyNodalData",
        "section": "AnalysisPlyNodalData",
        "text": "Represents nodal data for an Analysis Ply.\nAnalysisPlyNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nAnalysisPlyNodalData.ply_offset\n\nAnalysisPlyNodalData.node_labels\n\nAnalysisPlyNodalData\nAnalysisPlyNodalData.get_pyvista_mesh\nAnalysisPlyNodalData.ply_offset\nAnalysisPlyNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.html#ansys.acp.core.mesh_data.AnalysisPlyNodalData",
        "title": "AnalysisPlyNodalData > AnalysisPlyNodalData > AnalysisPlyNodalData",
        "section": "AnalysisPlyNodalData > AnalysisPlyNodalData",
        "text": "class ansys.acp.core.mesh_data.AnalysisPlyNodalData(node_labels, ply_offset=None)\n\nRepresents nodal data for an Analysis Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nAnalysisPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nAnalysisPlyNodalData.ply_offset\n\n\n\nAnalysisPlyNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix.html#use_solid_model_prefix",
        "title": "use_solid_model_prefix",
        "section": "use_solid_model_prefix",
        "text": "use_solid_model_prefix"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix.html#ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix",
        "title": "use_solid_model_prefix > use_solid_model_prefix > use_solid_model_prefix",
        "section": "use_solid_model_prefix > use_solid_model_prefix",
        "text": "property ImportedSolidModelExportSettings.use_solid_model_prefix: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.ELEMENT_SETS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.ELEMENT_SETS.html#element_sets",
        "title": "ELEMENT_SETS",
        "section": "ELEMENT_SETS",
        "text": "ELEMENT_SETS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.ELEMENT_SETS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.ELEMENT_SETS.html#ansys.acp.core.IgnorableEntity.ELEMENT_SETS",
        "title": "ELEMENT_SETS > ELEMENT_SETS > ELEMENT_SETS",
        "section": "ELEMENT_SETS > ELEMENT_SETS",
        "text": "IgnorableEntity.ELEMENT_SETS = 'element_sets'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.store",
        "href": "api/_autosummary/ansys.acp.core.Stackup.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.store",
        "href": "api/_autosummary/ansys.acp.core.Stackup.store.html#ansys.acp.core.Stackup.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "Stackup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_x",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_x.html#translation_x",
        "title": "translation_x",
        "section": "translation_x",
        "text": "translation_x"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_x",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_x.html#ansys.acp.core.CoordinateTransformation.translation_x",
        "title": "translation_x > translation_x > translation_x",
        "section": "translation_x > translation_x",
        "text": "CoordinateTransformation.translation_x: float = 0.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction.html#draped_fiber_direction",
        "title": "draped_fiber_direction",
        "section": "draped_fiber_direction",
        "text": "draped_fiber_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction",
        "title": "draped_fiber_direction > draped_fiber_direction > draped_fiber_direction",
        "section": "draped_fiber_direction > draped_fiber_direction",
        "text": "ProductionPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system",
        "title": "use_global_coordinate_system",
        "section": "use_global_coordinate_system",
        "text": "use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system.html#ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system",
        "title": "use_global_coordinate_system > use_global_coordinate_system > use_global_coordinate_system",
        "section": "use_global_coordinate_system > use_global_coordinate_system",
        "text": "property SphericalSelectionRule.use_global_coordinate_system: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.store",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FieldDefinition.store",
        "href": "api/_autosummary/ansys.acp.core.FieldDefinition.store.html#ansys.acp.core.FieldDefinition.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "FieldDefinition.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.edge_set",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.edge_set.html#edge_set",
        "title": "edge_set",
        "section": "edge_set",
        "text": "edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.edge_set",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.edge_set.html#ansys.acp.core.ExtrusionGuide.edge_set",
        "title": "edge_set > edge_set > edge_set",
        "section": "edge_set > edge_set",
        "text": "property ExtrusionGuide.edge_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.edge_set",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.edge_set.html#edge_set",
        "title": "edge_set",
        "section": "edge_set",
        "text": "edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.edge_set",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.edge_set.html#ansys.acp.core.VariableOffsetSelectionRule.edge_set",
        "title": "edge_set > edge_set > edge_set",
        "section": "edge_set > edge_set",
        "text": "property VariableOffsetSelectionRule.edge_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23.html#nu23",
        "title": "nu23",
        "section": "nu23",
        "text": "nu23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23",
        "title": "nu23 > nu23 > nu23",
        "section": "nu23 > nu23",
        "text": "property VariableEngineeringConstants.nu23: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.parent",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.parent.html#ansys.acp.core.SphericalSelectionRule.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SphericalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "CylindricalSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.html#edgeset",
        "title": "EdgeSet",
        "section": "EdgeSet",
        "text": "Instantiate an edge set.\nname (str) – Name of the edge set.\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\nDetermines how the edge set is defined. Can be one of:\nEdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\nAdded in ACP server version 24.2.\nEdgeSet.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nEdgeSet.delete()\nDelete the object.\nEdgeSet.store(parent)\nStore the object on the server.\nEdgeSet.defining_node_labels\n\nEdgeSet.edge_set_type\n\nEdgeSet.element_set\n\nEdgeSet.id\nIdentifier of the object, used for example as key in maps.\nEdgeSet.limit_angle\n\nEdgeSet.locked\n\nEdgeSet.name\nThe name of the object.\nEdgeSet.origin\n\nEdgeSet.parent\nThe parent of the object.\nEdgeSet.status\n\nEdgeSet\nEdgeSetType.BY_REFERENCE\nElementSet\nEdgeSetType.BY_NODES\nedge_set_type\nEdgeSetType.BY_NODES\nedge_set_type\nEdgeSetType.BY_REFERENCE\n-1.\nedge_set_type\nEdgeSetType.BY_REFERENCE\nedge_set_type\nEdgeSetType.BY_REFERENCE\nEdgeSet.clone\nEdgeSet.delete\nEdgeSet.store\nEdgeSet.defining_node_labels\nEdgeSet.edge_set_type\nEdgeSet.element_set\nEdgeSet.id\nEdgeSet.limit_angle\nEdgeSet.locked\nEdgeSet.name\nEdgeSet.origin\nEdgeSet.parent\nEdgeSet.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.html#ansys.acp.core.EdgeSet",
        "title": "EdgeSet > EdgeSet > EdgeSet",
        "section": "EdgeSet > EdgeSet",
        "text": "class ansys.acp.core.EdgeSet(*, name='EdgeSet', edge_set_type='by_reference', defining_node_labels=(), element_set=None, limit_angle=-1.0, origin=(0.0, 0.0, 0.0))\n\nInstantiate an edge set.\n\nParameters\n\nname (str) – Name of the edge set.\n\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\n\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\n\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nEdgeSet.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nEdgeSet.delete()\n\nDelete the object.\n\nEdgeSet.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nEdgeSet.defining_node_labels\n\n\n\nEdgeSet.edge_set_type\n\n\n\nEdgeSet.element_set\n\n\n\nEdgeSet.id\n\nIdentifier of the object, used for example as key in maps.\n\nEdgeSet.limit_angle\n\n\n\nEdgeSet.locked\n\n\n\nEdgeSet.name\n\nThe name of the object.\n\nEdgeSet.origin\n\n\n\nEdgeSet.parent\n\nThe parent of the object.\n\nEdgeSet.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.html#examples-using-edgeset",
        "title": "EdgeSet > Examples using EdgeSet",
        "section": "Examples using EdgeSet",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using EdgeSet"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sampling_point",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sampling_point.html#create_sampling_point",
        "title": "create_sampling_point",
        "section": "create_sampling_point",
        "text": "Instantiate a Sampling Point.\nname (str) – Name of the sampling point.\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\ndirection (tuple[float, float, float]) – Direction of the sampling point.\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\nSamplingPoint\nAdded in ACP server version 25.1.\ncreate_sampling_point\nuse_default_reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sampling_point",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sampling_point.html#ansys.acp.core.Model.create_sampling_point",
        "title": "create_sampling_point > create_sampling_point > create_sampling_point",
        "section": "create_sampling_point > create_sampling_point",
        "text": "Model.create_sampling_point(*, name='SamplingPoint', point=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0), use_default_reference_direction=True, rosette=None, offset_is_middle=True, consider_coupling_effect=True)\n\nInstantiate a Sampling Point.\n\nParameters\n\nname (str) – Name of the sampling point.\n\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\n\ndirection (tuple[float, float, float]) – Direction of the sampling point.\n\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\n\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\n\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\n\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\n\nReturn type\n\nSamplingPoint\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ModelingPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.status",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.status.html#ansys.acp.core.SnapToGeometry.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property SnapToGeometry.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_modeling_ply_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.export_modeling_ply_geometries.html#export_modeling_ply_geometries",
        "title": "export_modeling_ply_geometries",
        "section": "export_modeling_ply_geometries",
        "text": "Write ply geometries to a STEP, IGES, or STL file.\npath (str | PathLike[str]) – File path to save the geometries to.\nmodeling_plies (Iterable[ModelingPly] | None) – List of modeling plies whose geometries should be exported. If not\nprovided, the geometries of all modeling plies in the model are exported.\nformat (PlyGeometryExportFormat) – Format of the created file. Can be one of \"STEP\", \"IGES\",\nor \"STL\".\noffset_type (OffsetType) – Determines how the ply offset is calculated. Can be one of\n\"NO_OFFSET\", \"BOTTOM_OFFSET\", \"MIDDLE_OFFSET\", or\n\"TOP_OFFSET\".\ninclude_surface (bool) – Whether to include the ply surface in the exported geometry.\ninclude_boundary (bool) – Whether to include the ply boundary in the exported geometry.\ninclude_first_material_direction (bool) – Whether to include the first material direction in the exported geometry.\ninclude_second_material_direction (bool) – Whether to include the second material direction in the exported geometry.\narrow_length (float | None) – Size of the arrow used to represent the material directions. By default, the\nsquare root of the average element area is used.\narrow_type (ArrowType) – Type of the arrow used to represent the material directions. Can be\none of \"NO_ARROW\", \"HALF_ARROW\", or \"STANDARD_ARROW\".\nexport_modeling_ply_geometries\n\"STEP\"\n\"IGES\"\n\"STL\"\n\"NO_OFFSET\"\n\"BOTTOM_OFFSET\"\n\"MIDDLE_OFFSET\"\n\"TOP_OFFSET\"\n\"NO_ARROW\"\n\"HALF_ARROW\"\n\"STANDARD_ARROW\""
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_modeling_ply_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.export_modeling_ply_geometries.html#ansys.acp.core.Model.export_modeling_ply_geometries",
        "title": "export_modeling_ply_geometries > export_modeling_ply_geometries > export_modeling_ply_geometries",
        "section": "export_modeling_ply_geometries > export_modeling_ply_geometries",
        "text": "Model.export_modeling_ply_geometries(path, *, modeling_plies=None, format='step', offset_type='middle_offset', include_surface=True, include_boundary=True, include_first_material_direction=True, include_second_material_direction=True, arrow_length=None, arrow_type='no_arrow')\n\nWrite ply geometries to a STEP, IGES, or STL file.\n\nParameters\n\npath (str | PathLike[str]) – File path to save the geometries to.\n\nmodeling_plies (Iterable[ModelingPly] | None) – List of modeling plies whose geometries should be exported. If not\nprovided, the geometries of all modeling plies in the model are exported.\n\nformat (PlyGeometryExportFormat) – Format of the created file. Can be one of \"STEP\", \"IGES\",\nor \"STL\".\n\noffset_type (OffsetType) – Determines how the ply offset is calculated. Can be one of\n\"NO_OFFSET\", \"BOTTOM_OFFSET\", \"MIDDLE_OFFSET\", or\n\"TOP_OFFSET\".\n\ninclude_surface (bool) – Whether to include the ply surface in the exported geometry.\n\ninclude_boundary (bool) – Whether to include the ply boundary in the exported geometry.\n\ninclude_first_material_direction (bool) – Whether to include the first material direction in the exported geometry.\n\ninclude_second_material_direction (bool) – Whether to include the second material direction in the exported geometry.\n\narrow_length (float | None) – Size of the arrow used to represent the material directions. By default, the\nsquare root of the average element area is used.\n\narrow_type (ArrowType) – Type of the arrow used to represent the material directions. Can be\none of \"NO_ARROW\", \"HALF_ARROW\", or \"STANDARD_ARROW\".\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction.html#draped_transverse_direction",
        "title": "draped_transverse_direction",
        "section": "draped_transverse_direction",
        "text": "draped_transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction",
        "title": "draped_transverse_direction > draped_transverse_direction > draped_transverse_direction",
        "section": "draped_transverse_direction > draped_transverse_direction",
        "text": "AnalysisPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.html#modelingplynodaldata",
        "title": "ModelingPlyNodalData",
        "section": "ModelingPlyNodalData",
        "text": "Represents nodal data for a Modeling Ply.\nModelingPlyNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nModelingPlyNodalData.ply_offset\n\nModelingPlyNodalData.node_labels\n\nModelingPlyNodalData\nModelingPlyNodalData.get_pyvista_mesh\nModelingPlyNodalData.ply_offset\nModelingPlyNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.html#ansys.acp.core.mesh_data.ModelingPlyNodalData",
        "title": "ModelingPlyNodalData > ModelingPlyNodalData > ModelingPlyNodalData",
        "section": "ModelingPlyNodalData > ModelingPlyNodalData",
        "text": "class ansys.acp.core.mesh_data.ModelingPlyNodalData(node_labels, ply_offset=None)\n\nRepresents nodal data for a Modeling Ply.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelingPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelingPlyNodalData.ply_offset\n\n\n\nModelingPlyNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.compose_file",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.compose_file.html#compose_file",
        "title": "compose_file",
        "section": "compose_file",
        "text": "compose_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.compose_file",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.compose_file.html#ansys.acp.core.DockerComposeLaunchConfig.compose_file",
        "title": "compose_file > compose_file > compose_file",
        "section": "compose_file > compose_file",
        "text": "DockerComposeLaunchConfig.compose_file: str | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.recursive_copy",
        "href": "api/_autosummary/ansys.acp.core.recursive_copy.html#recursive_copy",
        "title": "recursive_copy",
        "section": "recursive_copy",
        "text": "Recursively copy a tree of ACP objects.\nThis function copies a tree of ACP objects, starting from the given source objects.\nThe copied tree includes all child objects. Linked objects (such as a Fabric linked to\nby a Modeling Ply) can optionally be included, controlled by the\nlinked_object_handling argument.\nTo specify where the new objects should be stored, you must provide a dictionary\nin the parent_mapping argument. The keys of the dictionary are the original\nparent objects, and the values are the new parent objects.\nNote that this mapping may need to contain parent objects that are not direct parents\nof the source objects, if another branch of the tree is included via linked objects.\nThe parent_mapping argument can also include objects which are part of the\nsource_objects list. In this case, the function will not create a new object for\nthe parent, but will use the existing object instead.\nThe function returns a dict mapping the original objects to the newly created\nobjects.\nOnly attributes supported by PyACP are copied to the new objects.\nsource_objects (Iterable[CreatableTreeObject]) – The starting point of the tree to copy.\nparent_mapping (dict[TreeObject, TreeObject]) – A list of tuples defining where the new objects are stored. Each tuple contains\nthe original parent object as the first element and the new parent object as the\nsecond element.\nlinked_object_handling (LinkedObjectHandling | str) – Defines how linked objects are handled. An example of a linked object is a Fabric\nlinked to by a Modeling Ply.The following options are available:\"keep\": Keep linking to the original objects, and do not\ncopy them (unless they are otherwise included in the tree).\n\n\"copy\": Copy the linked objects, and replace the links.\n\n\"discard\": Discard object links.Note that when copying objects between two models, only the \"copy\" and\n\"discard\" options are valid. If you wish to use links to existing objects,\nthe \"copy\" option can be used, specifying how links should be replaced in\nthe parent_mapping argument.\nDefines how linked objects are handled. An example of a linked object is a Fabric\nlinked to by a Modeling Ply.\nThe following options are available:\n\"keep\": Keep linking to the original objects, and do not\ncopy them (unless they are otherwise included in the tree).\n\"copy\": Copy the linked objects, and replace the links.\n\"discard\": Discard object links.\nNote that when copying objects between two models, only the \"copy\" and\n\"discard\" options are valid. If you wish to use links to existing objects,\nthe \"copy\" option can be used, specifying how links should be replaced in\nthe parent_mapping argument.\nA mapping of the newly created objects. The keys are the original objects,\nand the values are the new objects.\ndict[CreatableTreeObject, CreatableTreeObject]\nTo copy all Modeling Groups and associated definitions from one model to another,\nyou can use the following code:\nTo copy all definitions from one model to another, you can use the following code:\nrecursive_copy\nlinked_object_handling\nparent_mapping\nparent_mapping\nsource_objects\ndict\n\"keep\"\n\"copy\"\n\"discard\"\n\"copy\"\n\"discard\"\n\"copy\"\nparent_mapping"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.recursive_copy",
        "href": "api/_autosummary/ansys.acp.core.recursive_copy.html#ansys.acp.core.recursive_copy",
        "title": "recursive_copy > recursive_copy > recursive_copy",
        "section": "recursive_copy > recursive_copy",
        "text": "ansys.acp.core.recursive_copy(*, source_objects, parent_mapping, linked_object_handling='keep')\n\nRecursively copy a tree of ACP objects.\n\nThis function copies a tree of ACP objects, starting from the given source objects.\nThe copied tree includes all child objects. Linked objects (such as a Fabric linked to\nby a Modeling Ply) can optionally be included, controlled by the\nlinked_object_handling argument.\n\nTo specify where the new objects should be stored, you must provide a dictionary\nin the parent_mapping argument. The keys of the dictionary are the original\nparent objects, and the values are the new parent objects.\nNote that this mapping may need to contain parent objects that are not direct parents\nof the source objects, if another branch of the tree is included via linked objects.\n\nThe parent_mapping argument can also include objects which are part of the\nsource_objects list. In this case, the function will not create a new object for\nthe parent, but will use the existing object instead.\n\nThe function returns a dict mapping the original objects to the newly created\nobjects.\n\nOnly attributes supported by PyACP are copied to the new objects.\n\nParameters\n\nsource_objects (Iterable[CreatableTreeObject]) – The starting point of the tree to copy.\n\nparent_mapping (dict[TreeObject, TreeObject]) – A list of tuples defining where the new objects are stored. Each tuple contains\nthe original parent object as the first element and the new parent object as the\nsecond element.\n\nlinked_object_handling (LinkedObjectHandling | str) – Defines how linked objects are handled. An example of a linked object is a Fabric\nlinked to by a Modeling Ply.The following options are available:\"keep\": Keep linking to the original objects, and do not\ncopy them (unless they are otherwise included in the tree).\n\n\"copy\": Copy the linked objects, and replace the links.\n\n\"discard\": Discard object links.Note that when copying objects between two models, only the \"copy\" and\n\"discard\" options are valid. If you wish to use links to existing objects,\nthe \"copy\" option can be used, specifying how links should be replaced in\nthe parent_mapping argument.\n\nReturns\n\nA mapping of the newly created objects. The keys are the original objects,\nand the values are the new objects.\n\nReturn type\n\ndict[CreatableTreeObject, CreatableTreeObject]\n\nExamples\n\nTo copy all Modeling Groups and associated definitions from one model to another,\nyou can use the following code:\n\nimport ansys.acp.core as pyacp\n\nmodel1 = ...  # loaded in some way\nmodel2 = ...  # loaded in some way\n\npyacp.recursive_copy(\n    source_objects=model1.modeling_groups.values(),\n    parent_mapping={model1: model2},\n    linked_object_handling=\"copy\",\n)\n\nTo copy all definitions from one model to another, you can use the following code:\n\nimport ansys.acp.core as pyacp\n\nmodel1 = ...  # loaded in some way\nmodel2 = ...  # loaded in some way\n\npyacp.recursive_copy(\n    source_objects=[model1],\n    parent_mapping={model1: model2},\n    linked_object_handling=\"copy\",\n)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.html#linkedselectionrule",
        "title": "LinkedSelectionRule",
        "section": "LinkedSelectionRule",
        "text": "Defines selection rules linked to a Boolean Selection Rule or Modeling Ply.\nselection_rule (BooleanSelectionRule | CutOffSelectionRule | CylindricalSelectionRule | GeometricalSelectionRule | ParallelSelectionRule | SphericalSelectionRule | TubeSelectionRule | VariableOffsetSelectionRule) – Link to an existing selection rule.\noperation_type (BooleanOperationType) – Determines how the selection rule is combined with other selection rules.\ntemplate_rule (bool) – If True, the selection rule is a template rule. This means the parameter\nvalues are taken from the parameter_1 and parameter_2 attributes,\nnot from the linked selection rule.\nparameter_1 (float) – First parameter value of the selection rule. Only applies if template_rule\nis True.\nparameter_2 (float) – Second parameter value of the selection rule. Only applies if template_rule\nis True.\nThe parameter_1 and parameter_2 attributes determine the values of the\nfollowing parameters, depending on the type of selection rule:\nRule Type\nparameter_1\nparameter_2\nParallelSelectionRule\nlower_limit\nupper_limit\nCylindricalSelectionRule\nradius\n-\nSphericalSelectionRule\nradius\n-\nTubeSelectionRule\nouter_radius\ninner_radius\nGeometricalSelectionRule\nin_plane_capture_tolerance\n-\nVariableOffsetSelectionRule\n-\n-\nBooleanSelectionRule\n-\n-\nNote that CutOffSelectionRule and BooleanSelectionRule objects cannot be linked to\na Boolean Selection Rule, only to a Modeling Ply..\nAdded in ACP server version 24.2.\nLinkedSelectionRule.clone()\nCreate a new unstored LinkedSelectionRule with the same properties.\nLinkedSelectionRule.operation_type\nOperation to combine the selection rule with other selection rules.\nLinkedSelectionRule.parameter_1\nFirst template parameter of the selection rule.\nLinkedSelectionRule.parameter_2\nSecond template parameter of the selection rule.\nLinkedSelectionRule.selection_rule\nLink to an existing selection rule.\nLinkedSelectionRule.template_rule\nWhether the selection rule is a template rule.\nLinkedSelectionRule\nTrue\nparameter_1\nparameter_2\ntemplate_rule\nTrue\ntemplate_rule\nTrue\nparameter_1\nparameter_2\nparameter_1\nparameter_2\nParallelSelectionRule\nlower_limit\nupper_limit\nCylindricalSelectionRule\nradius\nSphericalSelectionRule\nradius\nTubeSelectionRule\nouter_radius\ninner_radius\nGeometricalSelectionRule\nin_plane_capture_tolerance\nVariableOffsetSelectionRule\nBooleanSelectionRule\nCutOffSelectionRule\nBooleanSelectionRule\nLinkedSelectionRule.clone\nLinkedSelectionRule.operation_type\nLinkedSelectionRule.parameter_1\nLinkedSelectionRule.parameter_2\nLinkedSelectionRule.selection_rule\nLinkedSelectionRule.template_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.html#ansys.acp.core.LinkedSelectionRule",
        "title": "LinkedSelectionRule > LinkedSelectionRule > LinkedSelectionRule",
        "section": "LinkedSelectionRule > LinkedSelectionRule",
        "text": "class ansys.acp.core.LinkedSelectionRule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nDefines selection rules linked to a Boolean Selection Rule or Modeling Ply.\n\nParameters\n\nselection_rule (BooleanSelectionRule | CutOffSelectionRule | CylindricalSelectionRule | GeometricalSelectionRule | ParallelSelectionRule | SphericalSelectionRule | TubeSelectionRule | VariableOffsetSelectionRule) – Link to an existing selection rule.\n\noperation_type (BooleanOperationType) – Determines how the selection rule is combined with other selection rules.\n\ntemplate_rule (bool) – If True, the selection rule is a template rule. This means the parameter\nvalues are taken from the parameter_1 and parameter_2 attributes,\nnot from the linked selection rule.\n\nparameter_1 (float) – First parameter value of the selection rule. Only applies if template_rule\nis True.\n\nparameter_2 (float) – Second parameter value of the selection rule. Only applies if template_rule\nis True.\n\nThe parameter_1 and parameter_2 attributes determine the values of the\nfollowing parameters, depending on the type of selection rule:\n\n\n\n\n\n\n\nRule Type\n\nparameter_1\n\nparameter_2\n\nParallelSelectionRule\n\nlower_limit\n\nupper_limit\n\nCylindricalSelectionRule\n\nradius\n\n-\n\nSphericalSelectionRule\n\nradius\n\n-\n\nTubeSelectionRule\n\nouter_radius\n\ninner_radius\n\nGeometricalSelectionRule\n\nin_plane_capture_tolerance\n\n-\n\nVariableOffsetSelectionRule\n\n-\n\n-\n\nBooleanSelectionRule\n\n-\n\n-\n\nNote that CutOffSelectionRule and BooleanSelectionRule objects cannot be linked to\na Boolean Selection Rule, only to a Modeling Ply..\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLinkedSelectionRule.clone()\n\nCreate a new unstored LinkedSelectionRule with the same properties.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLinkedSelectionRule.operation_type\n\nOperation to combine the selection rule with other selection rules.\n\nLinkedSelectionRule.parameter_1\n\nFirst template parameter of the selection rule.\n\nLinkedSelectionRule.parameter_2\n\nSecond template parameter of the selection rule.\n\nLinkedSelectionRule.selection_rule\n\nLink to an existing selection rule.\n\nLinkedSelectionRule.template_rule\n\nWhether the selection rule is a template rule.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.LinkedSelectionRule.html#examples-using-linkedselectionrule",
        "title": "LinkedSelectionRule > Examples using LinkedSelectionRule",
        "section": "Examples using LinkedSelectionRule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using LinkedSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.export_materials.html#export_materials",
        "title": "export_materials",
        "section": "export_materials",
        "text": "Write materials to a XML (MatML) file.\nThe XML file is required for the post-processing with DPF or can be loaded by\nEngineering Data under WB.\npath (str | PathLike[str]) – File path. E.g. /tmp/acp_materials.xml\nexport_materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.export_materials.html#ansys.acp.core.Model.export_materials",
        "title": "export_materials > export_materials > export_materials",
        "section": "export_materials > export_materials",
        "text": "Model.export_materials(path)\n\nWrite materials to a XML (MatML) file.\n\nThe XML file is required for the post-processing with DPF or can be loaded by\nEngineering Data under WB.\n\nParameters\n\npath (str | PathLike[str]) – File path. E.g. /tmp/acp_materials.xml\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.export_materials.html#examples-using-modelexport_materials",
        "title": "export_materials > Examples using Model.export_materials",
        "section": "Examples using Model.export_materials",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.export_materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.scale_factor",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.scale_factor.html#scale_factor",
        "title": "scale_factor",
        "section": "scale_factor",
        "text": "scale_factor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.scale_factor",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.scale_factor.html#ansys.acp.core.CADGeometry.scale_factor",
        "title": "scale_factor > scale_factor > scale_factor",
        "section": "scale_factor > scale_factor",
        "text": "property CADGeometry.scale_factor: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.status",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.status.html#ansys.acp.core.CylindricalSelectionRule.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property CylindricalSelectionRule.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType.GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.GEOMETRY.html#geometry",
        "title": "GEOMETRY",
        "section": "GEOMETRY",
        "text": "GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffRuleType.GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.CutOffRuleType.GEOMETRY.html#ansys.acp.core.CutOffRuleType.GEOMETRY",
        "title": "GEOMETRY > GEOMETRY > GEOMETRY",
        "section": "GEOMETRY > GEOMETRY",
        "text": "CutOffRuleType.GEOMETRY = 'geometry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status",
        "href": "api/_autosummary/ansys.acp.core.Status.html#status",
        "title": "Status",
        "section": "Status",
        "text": "Options for the update status of an object.\nStatus.UNKNOWN\n\nStatus.UPTODATE\n\nStatus.NOTUPTODATE\n\nStatus\nStatus.UNKNOWN\nStatus.UPTODATE\nStatus.NOTUPTODATE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Status",
        "href": "api/_autosummary/ansys.acp.core.Status.html#ansys.acp.core.Status",
        "title": "Status > Status > Status",
        "section": "Status > Status",
        "text": "class ansys.acp.core.Status(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the update status of an object.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nStatus.UNKNOWN\n\n\n\nStatus.UPTODATE\n\n\n\nStatus.NOTUPTODATE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg.html#p_21_neg",
        "title": "p_21_neg",
        "section": "p_21_neg",
        "text": "p_21_neg"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg.html#ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg",
        "title": "p_21_neg > p_21_neg > p_21_neg",
        "section": "p_21_neg > p_21_neg",
        "text": "property VariablePuckConstants.p_21_neg: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.normal.html#ansys.acp.core.mesh_data.ModelElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "ModelElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc.html#yc",
        "title": "Yc",
        "section": "Yc",
        "text": "Yc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc",
        "title": "Yc > Yc > Yc",
        "section": "Yc > Yc",
        "text": "property VariableWovenStressLimits.Yc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.store.html#ansys.acp.core.VariableOffsetSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "VariableOffsetSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_stackup",
        "href": "api/_autosummary/ansys.acp.core.Model.create_stackup.html#create_stackup",
        "title": "create_stackup",
        "section": "create_stackup",
        "text": "Instantiate a Stackup.\nname (str) – Name of the stackup.\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\narea_price (float) – Price per area of the stackup.\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\nStackup\nAdded in ACP server version 24.2.\ncreate_stackup"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_stackup",
        "href": "api/_autosummary/ansys.acp.core.Model.create_stackup.html#ansys.acp.core.Model.create_stackup",
        "title": "create_stackup > create_stackup > create_stackup",
        "section": "create_stackup > create_stackup",
        "text": "Model.create_stackup(*, name='Stackup', symmetry='no_symmetry', topdown=True, fabrics=(), area_price=0.0, drop_off_material_handling='global', drop_off_material=None, cut_off_material=None, cut_off_material_handling='computed', draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Stackup.\n\nParameters\n\nname (str) – Name of the stackup.\n\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\n\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\n\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\n\narea_price (float) – Price per area of the stackup.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\nReturn type\n\nStackup\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_stackup",
        "href": "api/_autosummary/ansys.acp.core.Model.create_stackup.html#examples-using-modelcreate_stackup",
        "title": "create_stackup > Examples using Model.create_stackup",
        "section": "Examples using Model.create_stackup",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nExamples using Model.create_stackup"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.html#feformat",
        "title": "FeFormat",
        "section": "FeFormat",
        "text": "Options for the format of the FE file.\nFeFormat.ANSYS_H5\n\nFeFormat.ANSYS_CDB\n\nFeFormat.ANSYS_DAT\n\nFeFormat\nFeFormat.ANSYS_H5\nFeFormat.ANSYS_CDB\nFeFormat.ANSYS_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.html#ansys.acp.core.FeFormat",
        "title": "FeFormat > FeFormat > FeFormat",
        "section": "FeFormat > FeFormat",
        "text": "class ansys.acp.core.FeFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the format of the FE file.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nFeFormat.ANSYS_H5\n\n\n\nFeFormat.ANSYS_CDB\n\n\n\nFeFormat.ANSYS_DAT\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.clone",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.clone",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.clone.html#ansys.acp.core.ModelingPly.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ModelingPly.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#basic-selection-rules",
        "title": "Basic selection rules",
        "section": "Basic selection rules",
        "text": "This example shows the basic usage of selection rules, which enable you to select elements through\ngeometrical operations and thus to shape plies. The example only shows the PyACP part of the setup.\nFor more advanced selection rule usage, see\nadvanced_selection_rules_example. For a complete composite\nanalysis, see pymapdl_workflow_example.\nBasic selection rules"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#import-modules",
        "title": "Basic selection rules > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#start-acp-and-load-the-model",
        "title": "Basic selection rules > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nLoad the model from the input file.\nVisualize the loaded mesh.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#create-a-parallel-rule",
        "title": "Basic selection rules > Create a Parallel Rule",
        "section": "Create a Parallel Rule",
        "text": "Create parallel selection rule and assign it to the existing ply.\nPlot the ply thickness.\nCreate a Parallel Rule"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#create-a-cylindrical-rule",
        "title": "Basic selection rules > Create a Cylindrical Rule",
        "section": "Create a Cylindrical Rule",
        "text": "Create a cylindrical selection rule and add it to the ply. This will intersect the two rules.\nPlot the ply thickness.\nCreate a Cylindrical Rule"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#create-a-spherical-rule",
        "title": "Basic selection rules > Create a Spherical Rule",
        "section": "Create a Spherical Rule",
        "text": "Create a spherical selection rule and assign it to the ply. Now, only the spherical rule is\nactive.\nPlot the ply thickness.\nCreate a Spherical Rule"
    },
    {
        "objectID": "examples/modeling_features/003-simple-selection-rules",
        "href": "examples/modeling_features/003-simple-selection-rules.html#create-a-tube-rule",
        "title": "Basic selection rules > Create a Tube Rule",
        "section": "Create a Tube Rule",
        "text": "Create a tube selection rule and assign it to the ply. Now, only the tube rule is\nactive.\nPlot the ply thickness.\nTotal running time of the script: (0 minutes 4.311 seconds)\nDownload Jupyter notebook: 003-simple-selection-rules.ipynb\nDownload Python source code: 003-simple-selection-rules.py\nDownload zipped: 003-simple-selection-rules.zip\nGallery generated by Sphinx-Gallery\nCreate a Tube Rule\nDownload Jupyter notebook: 003-simple-selection-rules.ipynb\nDownload Python source code: 003-simple-selection-rules.py\nDownload zipped: 003-simple-selection-rules.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.nodal_data.html#ansys.acp.core.CylindricalSelectionRule.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property CylindricalSelectionRule.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.NodalDataType.PLY_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.NodalDataType.PLY_OFFSET.html#ply_offset",
        "title": "PLY_OFFSET",
        "section": "PLY_OFFSET",
        "text": "PLY_OFFSET"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.NodalDataType.PLY_OFFSET",
        "href": "api/_autosummary/ansys.acp.core.NodalDataType.PLY_OFFSET.html#ansys.acp.core.NodalDataType.PLY_OFFSET",
        "title": "PLY_OFFSET > PLY_OFFSET > PLY_OFFSET",
        "section": "PLY_OFFSET > PLY_OFFSET",
        "text": "NodalDataType.PLY_OFFSET = 'ply_offset'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.path",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.path.html#path",
        "title": "path",
        "section": "path",
        "text": "path"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.path",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.path.html#ansys.acp.core.CADComponent.path",
        "title": "path > path > path",
        "section": "path > path",
        "text": "property CADComponent.path: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model.html#create_imported_solid_model",
        "title": "create_imported_solid_model",
        "section": "create_imported_solid_model",
        "text": "Instantiate an imported solid model.\nname (str) – Name of the imported solid model.\nactive (bool) – Inactive imported solid models are ignored in the analysis.\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\nexternal_path (_PATH) – Path of the file to be imported.\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\nImportedSolidModel\nAdded in ACP server version 25.1.\ncreate_imported_solid_model\ndelete_bad_elements\ndelete_bad_elements\ncut_off_material_handling\nGLOBAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model.html#ansys.acp.core.Model.create_imported_solid_model",
        "title": "create_imported_solid_model > create_imported_solid_model > create_imported_solid_model",
        "section": "create_imported_solid_model > create_imported_solid_model",
        "text": "Model.create_imported_solid_model(*, name='ImportedSolidModel', active=True, format='ansys:cdb', unit_system='from_file', external_path='', delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, cut_off_material=None, export_settings=<ansys.acp.core._tree_objects.imported_solid_model.ImportedSolidModelExportSettings object>)\n\nInstantiate an imported solid model.\n\nParameters\n\nname (str) – Name of the imported solid model.\n\nactive (bool) – Inactive imported solid models are ignored in the analysis.\n\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\n\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\n\nexternal_path (_PATH) – Path of the file to be imported.\n\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\n\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\n\nReturn type\n\nImportedSolidModel\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_solid_model.html#examples-using-modelcreate_imported_solid_model",
        "title": "create_imported_solid_model > Examples using Model.create_imported_solid_model",
        "section": "Examples using Model.create_imported_solid_model",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using Model.create_imported_solid_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#minimum_distance_superposed",
        "title": "MINIMUM_DISTANCE_SUPERPOSED",
        "section": "MINIMUM_DISTANCE_SUPERPOSED",
        "text": "MINIMUM_DISTANCE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "title": "MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED",
        "section": "MINIMUM_DISTANCE_SUPERPOSED > MINIMUM_DISTANCE_SUPERPOSED",
        "text": "RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED = 'minimum_distance_superposed'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#examples-using-rosetteselectionmethodminimum_distance_superposed",
        "title": "MINIMUM_DISTANCE_SUPERPOSED > Examples using RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "section": "Examples using RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nExamples using RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.ply_type",
        "href": "api/_autosummary/ansys.acp.core.Material.ply_type.html#ply_type",
        "title": "ply_type",
        "section": "ply_type",
        "text": "ply_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.ply_type",
        "href": "api/_autosummary/ansys.acp.core.Material.ply_type.html#ansys.acp.core.Material.ply_type",
        "title": "ply_type > ply_type > ply_type",
        "section": "ply_type > ply_type",
        "text": "property Material.ply_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.ply_type",
        "href": "api/_autosummary/ansys.acp.core.Material.ply_type.html#examples-using-materialply_type",
        "title": "ply_type > Examples using Material.ply_type",
        "section": "Examples using Material.ply_type",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Material.ply_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.locked",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.locked",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.locked.html#ansys.acp.core.SolidElementSet.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property SolidElementSet.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.store",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.store",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.store.html#ansys.acp.core.ExtrusionGuide.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ExtrusionGuide.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1.html#e1_1",
        "title": "E1_1",
        "section": "E1_1",
        "text": "E1_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1",
        "title": "E1_1 > E1_1 > E1_1",
        "section": "E1_1 > E1_1",
        "text": "property VariableWovenCharacterization.E1_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.mesh",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.mesh.html#ansys.acp.core.VariableOffsetSelectionRule.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property VariableOffsetSelectionRule.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.elemental_data.html#elemental_data",
        "title": "elemental_data",
        "section": "elemental_data",
        "text": "elemental_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.elemental_data",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.elemental_data.html#ansys.acp.core.GeometricalSelectionRule.elemental_data",
        "title": "elemental_data > elemental_data > elemental_data",
        "section": "elemental_data > elemental_data",
        "text": "property GeometricalSelectionRule.elemental_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.html#plycutofftype",
        "title": "PlyCutOffType",
        "section": "PlyCutOffType",
        "text": "Options for how ply cut-off is computed.\nPlyCutOffType.PRODUCTION_PLY_CUTOFF\n\nPlyCutOffType.ANALYSIS_PLY_CUTOFF\n\nPlyCutOffType\nPlyCutOffType.PRODUCTION_PLY_CUTOFF\nPlyCutOffType.ANALYSIS_PLY_CUTOFF"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.html#ansys.acp.core.PlyCutOffType",
        "title": "PlyCutOffType > PlyCutOffType > PlyCutOffType",
        "section": "PlyCutOffType > PlyCutOffType",
        "text": "class ansys.acp.core.PlyCutOffType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply cut-off is computed.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nPlyCutOffType.PRODUCTION_PLY_CUTOFF\n\n\n\nPlyCutOffType.ANALYSIS_PLY_CUTOFF\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset.html#ply_offset",
        "title": "ply_offset",
        "section": "ply_offset",
        "text": "ply_offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset.html#ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset",
        "title": "ply_offset > ply_offset > ply_offset",
        "section": "ply_offset > ply_offset",
        "text": "AnalysisPlyNodalData.ply_offset: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group.html#create_imported_modeling_group",
        "title": "create_imported_modeling_group",
        "section": "create_imported_modeling_group",
        "text": "Instantiate an imported modeling group.\nname (str) – Name of the imported modeling group.\nImportedModelingGroup\nAdded in ACP server version 25.1.\ncreate_imported_modeling_group"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group.html#ansys.acp.core.Model.create_imported_modeling_group",
        "title": "create_imported_modeling_group > create_imported_modeling_group > create_imported_modeling_group",
        "section": "create_imported_modeling_group > create_imported_modeling_group",
        "text": "Model.create_imported_modeling_group(*, name='ImportedModelingGroup')\n\nInstantiate an imported modeling group.\n\nParameters\n\nname (str) – Name of the imported modeling group.\n\nReturn type\n\nImportedModelingGroup\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group",
        "href": "api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group.html#examples-using-modelcreate_imported_modeling_group",
        "title": "create_imported_modeling_group > Examples using Model.create_imported_modeling_group",
        "section": "Examples using Model.create_imported_modeling_group",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using Model.create_imported_modeling_group"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_material",
        "href": "api/_autosummary/ansys.acp.core.Model.create_material.html#create_material",
        "title": "create_material",
        "section": "create_material",
        "text": "Instantiate a Material.\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\nThe inactive property sets can still be set, but may not be accessible:\nFor stored materials, inactive property sets always return None.\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\nname (str) – Name of the Material.\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\ndensity (ConstantDensity | None) – Define the density of the material.\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\nMaterial\nAdded in ACP server version 24.2.\ncreate_material\nply_type\npuck_constants\nply_type\nPlyType.REGULAR\nPlyType.WOVEN\nNone\nNone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_material",
        "href": "api/_autosummary/ansys.acp.core.Model.create_material.html#ansys.acp.core.Model.create_material",
        "title": "create_material > create_material > create_material",
        "section": "create_material > create_material",
        "text": "Model.create_material(*, name='Material', ply_type='undefined', density=None, engineering_constants=None, stress_limits=None, strain_limits=None, puck_constants=None, woven_characterization=None, woven_puck_constants_1=None, woven_puck_constants_2=None, woven_stress_limits_1=None, woven_stress_limits_2=None, tsai_wu_constants=None, larc_constants=None, fabric_fiber_angle=None)\n\nInstantiate a Material.\n\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\n\nThe inactive property sets can still be set, but may not be accessible:\n\nFor stored materials, inactive property sets always return None.\n\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\n\nParameters\n\nname (str) – Name of the Material.\n\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\n\ndensity (ConstantDensity | None) – Define the density of the material.\n\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\n\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\n\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\n\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\n\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\n\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\n\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nReturn type\n\nMaterial\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_material",
        "href": "api/_autosummary/ansys.acp.core.Model.create_material.html#examples-using-modelcreate_material",
        "title": "create_material > Examples using Model.create_material",
        "section": "Examples using Model.create_material",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.create_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.minimum_analysis_ply_thickness",
        "href": "api/_autosummary/ansys.acp.core.Model.minimum_analysis_ply_thickness.html#minimum_analysis_ply_thickness",
        "title": "minimum_analysis_ply_thickness",
        "section": "minimum_analysis_ply_thickness",
        "text": "minimum_analysis_ply_thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.minimum_analysis_ply_thickness",
        "href": "api/_autosummary/ansys.acp.core.Model.minimum_analysis_ply_thickness.html#ansys.acp.core.Model.minimum_analysis_ply_thickness",
        "title": "minimum_analysis_ply_thickness > minimum_analysis_ply_thickness > minimum_analysis_ply_thickness",
        "section": "minimum_analysis_ply_thickness > minimum_analysis_ply_thickness",
        "text": "property Model.minimum_analysis_ply_thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#advanced-pymapdl-workflow",
        "title": "Advanced PyMAPDL workflow",
        "section": "Advanced PyMAPDL workflow",
        "text": "This example shows how to define a composite lay-up with PyACP, solve the resulting\nmodel with PyMAPDL, and run a failure analysis with PyDPF - Composites.\nBegin with an MAPDL CDB file that contains the mesh, material data, and\nboundary conditions. Import the file to PyACP to define the lay-up, and then export the\nresulting model to PyMAPDL. Once the results are available, the RST file is loaded in\nPyDPF - Composites for postprocessing. The additional input files (material.xml\nand ACPCompositeDefinitions.h5) can also be stored with PyACP and passed to PyDPF - Composites.\nAdvanced PyMAPDL workflow\nmaterial.xml\nACPCompositeDefinitions.h5"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#import-modules-and-start-acp",
        "title": "Advanced PyMAPDL workflow > Import modules and start ACP",
        "section": "Import modules and start ACP",
        "text": "Import the standard library and third-party dependencies.\nImport the Ansys libraries.\nLaunch the PyACP server and connect to it.\nImport modules and start ACP"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#get-example-input-files",
        "title": "Advanced PyMAPDL workflow > Get example input files",
        "section": "Get example input files",
        "text": "Create a temporary working directory, and download the example input files\nto this directory.\nGet example input files"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#load-mesh-and-materials-from-cdb-file",
        "title": "Advanced PyMAPDL workflow > Load mesh and materials from CDB file",
        "section": "Load mesh and materials from CDB file",
        "text": "Load the CDB file into PyACP and set the unit system.\nVisualize the loaded mesh.\nLoad mesh and materials from CDB file"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#build-composite-lay-up",
        "title": "Advanced PyMAPDL workflow > Build Composite Lay-up",
        "section": "Build Composite Lay-up",
        "text": "Create the model (MPA unit system).\nBuild Composite Lay-up"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#materials",
        "title": "Advanced PyMAPDL workflow > Materials",
        "section": "Materials",
        "text": "Materials"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#fabrics",
        "title": "Advanced PyMAPDL workflow > Fabrics",
        "section": "Fabrics",
        "text": "Fabrics"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#rosettes",
        "title": "Advanced PyMAPDL workflow > Rosettes",
        "section": "Rosettes",
        "text": "Rosettes"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#oriented-selection-sets",
        "title": "Advanced PyMAPDL workflow > Oriented Selection Sets",
        "section": "Oriented Selection Sets",
        "text": "Note that the element sets are imported from the initial mesh (CBD file).\nShow the orientations on the hull oriented selection set (OSS).\nNote that the model must be updated before the orientations are available.\nOriented Selection Sets"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#modeling-plies",
        "title": "Advanced PyMAPDL workflow > Modeling Plies",
        "section": "Modeling Plies",
        "text": "Define plies for the hull, deck, and bulkhead.\nAdd plies to the keeltower.\nInspect the number of modeling groups and plies.\nShow the thickness of one of the plies.\nShow the ply offsets that are scaled by a factor of 200.\nShow the thickness of the entire lay-up.\nModeling Plies"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#write-out-acp-model",
        "title": "Advanced PyMAPDL workflow > Write out ACP Model",
        "section": "Write out ACP Model",
        "text": "Update and save the ACP model.\nSave the model as a CDB file for solving with PyMAPDL.\nWrite out ACP Model"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#solve-with-pymapdl",
        "title": "Advanced PyMAPDL workflow > Solve with PyMAPDL",
        "section": "Solve with PyMAPDL",
        "text": "Import PyMAPDL and connect to its server.\nLoad the CDB file into PyMAPDL.\nSolve the model.\nShow the displacements in postprocessing.\nSolve with PyMAPDL"
    },
    {
        "objectID": "examples/workflows/02-advanced-pymapdl-workflow",
        "href": "examples/workflows/02-advanced-pymapdl-workflow.html#postprocessing-with-pydpf---composites",
        "title": "Advanced PyMAPDL workflow > Postprocessing with PyDPF - Composites",
        "section": "Postprocessing with PyDPF - Composites",
        "text": "To postprocess the results, you must configure the imports, connect to the\nPyDPF - Composites server, and load its plugin.\nConnect to the server. The connect_to_or_start_server function\nautomatically loads the composites plugin.\nSpecify the combined failure criterion.\nCreate the composite model and configure its input.\nEvaluate the failure criteria.\nQuery and plot the results.\nTotal running time of the script: (0 minutes 19.088 seconds)\nDownload Jupyter notebook: 02-advanced-pymapdl-workflow.ipynb\nDownload Python source code: 02-advanced-pymapdl-workflow.py\nDownload zipped: 02-advanced-pymapdl-workflow.zip\nGallery generated by Sphinx-Gallery\nPostprocessing with PyDPF - Composites\nconnect_to_or_start_server\nDownload Jupyter notebook: 02-advanced-pymapdl-workflow.ipynb\nDownload Python source code: 02-advanced-pymapdl-workflow.py\nDownload zipped: 02-advanced-pymapdl-workflow.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.parent",
        "href": "api/_autosummary/ansys.acp.core.Rosette.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.parent",
        "href": "api/_autosummary/ansys.acp.core.Rosette.parent.html#ansys.acp.core.Rosette.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property Rosette.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.html#shellmappingproperties",
        "title": "ShellMappingProperties",
        "section": "ShellMappingProperties",
        "text": "Properties for mapping to the shell on importing HDF5 Composite CAE files.\nShellMappingProperties.all_elements\n\nShellMappingProperties.angle_tolerance\n\nShellMappingProperties.element_sets\n\nShellMappingProperties.relative_in_plane_tolerance\n\nShellMappingProperties.relative_thickness_tolerance\n\nShellMappingProperties.small_hole_threshold\n\nShellMappingProperties\nShellMappingProperties.all_elements\nShellMappingProperties.angle_tolerance\nShellMappingProperties.element_sets\nShellMappingProperties.relative_in_plane_tolerance\nShellMappingProperties.relative_thickness_tolerance\nShellMappingProperties.small_hole_threshold"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.html#ansys.acp.core.ShellMappingProperties",
        "title": "ShellMappingProperties > ShellMappingProperties > ShellMappingProperties",
        "section": "ShellMappingProperties > ShellMappingProperties",
        "text": "class ansys.acp.core.ShellMappingProperties(all_elements=True, element_sets=(), relative_thickness_tolerance=0.5, relative_in_plane_tolerance=0.01, angle_tolerance=35.0, small_hole_threshold=0.0)\n\nProperties for mapping to the shell on importing HDF5 Composite CAE files.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nShellMappingProperties.all_elements\n\n\n\nShellMappingProperties.angle_tolerance\n\n\n\nShellMappingProperties.element_sets\n\n\n\nShellMappingProperties.relative_in_plane_tolerance\n\n\n\nShellMappingProperties.relative_thickness_tolerance\n\n\n\nShellMappingProperties.small_hole_threshold\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.price",
        "href": "api/_autosummary/ansys.acp.core.Sensor.price.html#price",
        "title": "price",
        "section": "price",
        "text": "The price for the composite layup of the selected entity. The price per area is defined on the Fabrics or Stackups.\nprice"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.price",
        "href": "api/_autosummary/ansys.acp.core.Sensor.price.html#ansys.acp.core.Sensor.price",
        "title": "price > price > price",
        "section": "price > price",
        "text": "property Sensor.price: Any\n\nThe price for the composite layup of the selected entity. The price per area is defined on the Fabrics or Stackups.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_z",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_z.html#translation_z",
        "title": "translation_z",
        "section": "translation_z",
        "text": "translation_z"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_z",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_z.html#ansys.acp.core.CoordinateTransformation.translation_z",
        "title": "translation_z > translation_z > translation_z",
        "section": "translation_z > translation_z",
        "text": "CoordinateTransformation.translation_z: float = 0.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC.html#ansys_classic",
        "title": "ANSYS_CLASSIC",
        "section": "ANSYS_CLASSIC",
        "text": "ANSYS_CLASSIC"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC.html#ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC",
        "title": "ANSYS_CLASSIC > ANSYS_CLASSIC > ANSYS_CLASSIC",
        "section": "ANSYS_CLASSIC > ANSYS_CLASSIC",
        "text": "RosetteSelectionMethod.ANSYS_CLASSIC = 'ansys_classic'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material_handling.html#cut_off_material_handling",
        "title": "cut_off_material_handling",
        "section": "cut_off_material_handling",
        "text": "cut_off_material_handling"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Fabric.cut_off_material_handling.html#ansys.acp.core.Fabric.cut_off_material_handling",
        "title": "cut_off_material_handling > cut_off_material_handling > cut_off_material_handling",
        "section": "cut_off_material_handling > cut_off_material_handling",
        "text": "property Fabric.cut_off_material_handling: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.virtual_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.virtual_geometries.html#virtual_geometries",
        "title": "virtual_geometries",
        "section": "virtual_geometries",
        "text": "virtual_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.virtual_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.virtual_geometries.html#ansys.acp.core.Model.virtual_geometries",
        "title": "virtual_geometries > virtual_geometries > virtual_geometries",
        "section": "virtual_geometries > virtual_geometries",
        "text": "property Model.virtual_geometries: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION.html#transverse_direction",
        "title": "TRANSVERSE_DIRECTION",
        "section": "TRANSVERSE_DIRECTION",
        "text": "TRANSVERSE_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION.html#ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION",
        "title": "TRANSVERSE_DIRECTION > TRANSVERSE_DIRECTION > TRANSVERSE_DIRECTION",
        "section": "TRANSVERSE_DIRECTION > TRANSVERSE_DIRECTION",
        "text": "ElementalDataType.TRANSVERSE_DIRECTION = 'transverse_direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.html#extrusionmethod",
        "title": "ExtrusionMethod",
        "section": "ExtrusionMethod",
        "text": "Extrusion method used in a solid model.\nExtrusionMethod.ANALYSIS_PLY_WISE\n\nExtrusionMethod.MONOLITHIC\n\nExtrusionMethod.PRODUCTION_PLY_WISE\n\nExtrusionMethod.MODELING_PLY_WISE\n\nExtrusionMethod.SPECIFY_THICKNESS\n\nExtrusionMethod.MATERIAL_WISE\n\nExtrusionMethod.USER_DEFINED\n\nExtrusionMethod.SANDWICH_WISE\n\nExtrusionMethod\nExtrusionMethod.ANALYSIS_PLY_WISE\nExtrusionMethod.MONOLITHIC\nExtrusionMethod.PRODUCTION_PLY_WISE\nExtrusionMethod.MODELING_PLY_WISE\nExtrusionMethod.SPECIFY_THICKNESS\nExtrusionMethod.MATERIAL_WISE\nExtrusionMethod.USER_DEFINED\nExtrusionMethod.SANDWICH_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.html#ansys.acp.core.ExtrusionMethod",
        "title": "ExtrusionMethod > ExtrusionMethod > ExtrusionMethod",
        "section": "ExtrusionMethod > ExtrusionMethod",
        "text": "class ansys.acp.core.ExtrusionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion method used in a solid model.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nExtrusionMethod.ANALYSIS_PLY_WISE\n\n\n\nExtrusionMethod.MONOLITHIC\n\n\n\nExtrusionMethod.PRODUCTION_PLY_WISE\n\n\n\nExtrusionMethod.MODELING_PLY_WISE\n\n\n\nExtrusionMethod.SPECIFY_THICKNESS\n\n\n\nExtrusionMethod.MATERIAL_WISE\n\n\n\nExtrusionMethod.USER_DEFINED\n\n\n\nExtrusionMethod.SANDWICH_WISE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "TubeSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13.html#nu13",
        "title": "nu13",
        "section": "nu13",
        "text": "nu13"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13",
        "title": "nu13 > nu13 > nu13",
        "section": "nu13 > nu13",
        "text": "property ConstantEngineeringConstants.nu13: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.CADGeometry.clone.html#ansys.acp.core.CADGeometry.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "CADGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system",
        "href": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system.html#get_dpf_unit_system",
        "title": "get_dpf_unit_system",
        "section": "get_dpf_unit_system",
        "text": "Convert pyACP unit system to DPF unit system.\nunit_system (UnitSystemType) – The pyACP unit system.\nUnitSystem\nget_dpf_unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system",
        "href": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system.html#ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system",
        "title": "get_dpf_unit_system > get_dpf_unit_system > get_dpf_unit_system",
        "section": "get_dpf_unit_system > get_dpf_unit_system",
        "text": "ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system(unit_system)\n\nConvert pyACP unit system to DPF unit system.\n\nParameters\n\nunit_system (UnitSystemType) – The pyACP unit system.\n\nReturn type\n\nUnitSystem\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system",
        "href": "api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system.html#examples-using-get_dpf_unit_system",
        "title": "get_dpf_unit_system > Examples using get_dpf_unit_system",
        "section": "Examples using get_dpf_unit_system",
        "text": "sphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nExamples using get_dpf_unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosettes",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosettes.html#base_element_rosettes",
        "title": "base_element_rosettes",
        "section": "base_element_rosettes",
        "text": "base_element_rosettes"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosettes",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosettes.html#ansys.acp.core.LayupMappingObject.base_element_rosettes",
        "title": "base_element_rosettes > base_element_rosettes > base_element_rosettes",
        "section": "base_element_rosettes > base_element_rosettes",
        "text": "property LayupMappingObject.base_element_rosettes: LinkedObjectList[ChildT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.price.html#price",
        "title": "price",
        "section": "price",
        "text": "price"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.price",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.price.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.price",
        "title": "price > price > price",
        "section": "price > price",
        "text": "ProductionPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.CutOffSelectionRule.name.html#ansys.acp.core.CutOffSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CutOffSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.shell_mesh.html#ansys.acp.core.TubeSelectionRule.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property TubeSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.html#solidmodel",
        "title": "SolidModel",
        "section": "SolidModel",
        "text": "Instantiate a solid model.\nname (str) – Name of the solid model.\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\nAdded in ACP server version 25.1.\nSolidModel.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSolidModel.create_cut_off_geometry(*[, ...])\nInstantiate a cut-off geometry.\nSolidModel.create_extrusion_guide(*[, name, ...])\nInstantiate an Extrusion Guide of a Solid Model.\nSolidModel.create_snap_to_geometry(*[, ...])\nInstantiate a snap-to geometry.\nSolidModel.delete()\nDelete the object.\nSolidModel.export(path, *, format)\nExport the solid model to a file.\nSolidModel.export_skin(path, *, format)\nExport the skin of the solid model to a file.\nSolidModel.store(parent)\nStore the object on the server.\nSolidModel.active\n\nSolidModel.analysis_plies\n\nSolidModel.cut_off_geometries\n\nSolidModel.cut_off_material\n\nSolidModel.delete_bad_elements\n\nSolidModel.drop_off_material\n\nSolidModel.drop_off_settings\n\nSolidModel.element_sets\n\nSolidModel.elemental_data\n\nSolidModel.export_settings\n\nSolidModel.extrusion_guides\n\nSolidModel.extrusion_method\n\nSolidModel.id\nIdentifier of the object, used for example as key in maps.\nSolidModel.locked\n\nSolidModel.max_element_thickness\n\nSolidModel.minimum_volume\n\nSolidModel.name\nThe name of the object.\nSolidModel.nodal_data\n\nSolidModel.offset_direction_type\n\nSolidModel.parent\nThe parent of the object.\nSolidModel.ply_group_pointers\n\nSolidModel.skip_elements_without_plies\n\nSolidModel.snap_to_geometries\n\nSolidModel.solid_element_sets\n\nSolidModel.status\n\nSolidModel.warping_limit\n\nSolidModel\nextrusion_method\nSPECIFY_THICKNESS\nMATERIAL_WISE\nSANDWICH_WISE\nextrusion_method\nUSER_DEFINED\nSHELL_NORMAL\nSURFACE_NORMAL\ndrop_off_material_handling\nGLOBAL\ncut_off_material_handling\nGLOBAL\ndelete_bad_elements\n0\ndelete_bad_elements\nSolidModel.clone\nSolidModel.create_cut_off_geometry\nSolidModel.create_extrusion_guide\nSolidModel.create_snap_to_geometry\nSolidModel.delete\nSolidModel.export\nSolidModel.export_skin\nSolidModel.store\nSolidModel.active\nSolidModel.analysis_plies\nSolidModel.cut_off_geometries\nSolidModel.cut_off_material\nSolidModel.delete_bad_elements\nSolidModel.drop_off_material\nSolidModel.drop_off_settings\nSolidModel.element_sets\nSolidModel.elemental_data\nSolidModel.export_settings\nSolidModel.extrusion_guides\nSolidModel.extrusion_method\nSolidModel.id\nSolidModel.locked\nSolidModel.max_element_thickness\nSolidModel.minimum_volume\nSolidModel.name\nSolidModel.nodal_data\nSolidModel.offset_direction_type\nSolidModel.parent\nSolidModel.ply_group_pointers\nSolidModel.skip_elements_without_plies\nSolidModel.snap_to_geometries\nSolidModel.solid_element_sets\nSolidModel.status\nSolidModel.warping_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.html#ansys.acp.core.SolidModel",
        "title": "SolidModel > SolidModel > SolidModel",
        "section": "SolidModel > SolidModel",
        "text": "class ansys.acp.core.SolidModel(*, name='SolidModel', active=True, element_sets=(), extrusion_method='analysis_ply_wise', max_element_thickness=1.0, ply_group_pointers=(), offset_direction_type='shell_normal', skip_elements_without_plies=False, drop_off_material=None, cut_off_material=None, delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, drop_off_settings=<ansys.acp.core._tree_objects.solid_model.DropOffSettings object>, export_settings=<ansys.acp.core._tree_objects.solid_model.SolidModelExportSettings object>)\n\nInstantiate a solid model.\n\nParameters\n\nname (str) – Name of the solid model.\n\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\n\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\n\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\n\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\n\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\n\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\n\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\n\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\n\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\n\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\n\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSolidModel.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSolidModel.create_cut_off_geometry(*[, ...])\n\nInstantiate a cut-off geometry.\n\nSolidModel.create_extrusion_guide(*[, name, ...])\n\nInstantiate an Extrusion Guide of a Solid Model.\n\nSolidModel.create_snap_to_geometry(*[, ...])\n\nInstantiate a snap-to geometry.\n\nSolidModel.delete()\n\nDelete the object.\n\nSolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nSolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nSolidModel.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSolidModel.active\n\n\n\nSolidModel.analysis_plies\n\n\n\nSolidModel.cut_off_geometries\n\n\n\nSolidModel.cut_off_material\n\n\n\nSolidModel.delete_bad_elements\n\n\n\nSolidModel.drop_off_material\n\n\n\nSolidModel.drop_off_settings\n\n\n\nSolidModel.element_sets\n\n\n\nSolidModel.elemental_data\n\n\n\nSolidModel.export_settings\n\n\n\nSolidModel.extrusion_guides\n\n\n\nSolidModel.extrusion_method\n\n\n\nSolidModel.id\n\nIdentifier of the object, used for example as key in maps.\n\nSolidModel.locked\n\n\n\nSolidModel.max_element_thickness\n\n\n\nSolidModel.minimum_volume\n\n\n\nSolidModel.name\n\nThe name of the object.\n\nSolidModel.nodal_data\n\n\n\nSolidModel.offset_direction_type\n\n\n\nSolidModel.parent\n\nThe parent of the object.\n\nSolidModel.ply_group_pointers\n\n\n\nSolidModel.skip_elements_without_plies\n\n\n\nSolidModel.snap_to_geometries\n\n\n\nSolidModel.solid_element_sets\n\n\n\nSolidModel.status\n\n\n\nSolidModel.warping_limit\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.html#examples-using-solidmodel",
        "title": "SolidModel > Examples using SolidModel",
        "section": "Examples using SolidModel",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SolidModel"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.production_plies",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.production_plies.html#production_plies",
        "title": "production_plies",
        "section": "production_plies",
        "text": "production_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.production_plies",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.production_plies.html#ansys.acp.core.ModelingPly.production_plies",
        "title": "production_plies > production_plies > production_plies",
        "section": "production_plies > production_plies",
        "text": "property ModelingPly.production_plies: Mapping[ValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.status.html#ansys.acp.core.ImportedAnalysisPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ImportedAnalysisPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.id",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.id",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.id.html#ansys.acp.core.OrientedSelectionSet.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property OrientedSelectionSet.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_cut_off_geometry.html#create_cut_off_geometry",
        "title": "create_cut_off_geometry",
        "section": "create_cut_off_geometry",
        "text": "Instantiate a cut-off geometry.\nname (str) – Name of the cut-off geometry.\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\nCutOffGeometry\nAdded in ACP server version 25.1.\ncreate_cut_off_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_cut_off_geometry",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.create_cut_off_geometry.html#ansys.acp.core.ImportedSolidModel.create_cut_off_geometry",
        "title": "create_cut_off_geometry > create_cut_off_geometry > create_cut_off_geometry",
        "section": "create_cut_off_geometry > create_cut_off_geometry",
        "text": "ImportedSolidModel.create_cut_off_geometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nReturn type\n\nCutOffGeometry\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.html#variableengineeringconstants",
        "title": "VariableEngineeringConstants",
        "section": "VariableEngineeringConstants",
        "text": "Variable engineering constants material property set.\nAdded in ACP server version 24.2.\nVariableEngineeringConstants.E\n\nVariableEngineeringConstants.E1\n\nVariableEngineeringConstants.E2\n\nVariableEngineeringConstants.E3\n\nVariableEngineeringConstants.G12\n\nVariableEngineeringConstants.G23\n\nVariableEngineeringConstants.G31\n\nVariableEngineeringConstants.field_variables\n\nVariableEngineeringConstants.interpolation_options\n\nVariableEngineeringConstants.nu\n\nVariableEngineeringConstants.nu12\n\nVariableEngineeringConstants.nu13\n\nVariableEngineeringConstants.nu23\n\nVariableEngineeringConstants\nVariableEngineeringConstants.E\nVariableEngineeringConstants.E1\nVariableEngineeringConstants.E2\nVariableEngineeringConstants.E3\nVariableEngineeringConstants.G12\nVariableEngineeringConstants.G23\nVariableEngineeringConstants.G31\nVariableEngineeringConstants.field_variables\nVariableEngineeringConstants.interpolation_options\nVariableEngineeringConstants.nu\nVariableEngineeringConstants.nu12\nVariableEngineeringConstants.nu13\nVariableEngineeringConstants.nu23"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants",
        "title": "VariableEngineeringConstants > VariableEngineeringConstants > VariableEngineeringConstants",
        "section": "VariableEngineeringConstants > VariableEngineeringConstants",
        "text": "class ansys.acp.core.material_property_sets.VariableEngineeringConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable engineering constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableEngineeringConstants.E\n\n\n\nVariableEngineeringConstants.E1\n\n\n\nVariableEngineeringConstants.E2\n\n\n\nVariableEngineeringConstants.E3\n\n\n\nVariableEngineeringConstants.G12\n\n\n\nVariableEngineeringConstants.G23\n\n\n\nVariableEngineeringConstants.G31\n\n\n\nVariableEngineeringConstants.field_variables\n\n\n\nVariableEngineeringConstants.interpolation_options\n\n\n\nVariableEngineeringConstants.nu\n\n\n\nVariableEngineeringConstants.nu12\n\n\n\nVariableEngineeringConstants.nu13\n\n\n\nVariableEngineeringConstants.nu23\n\n\n\n\n\n"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#visualize-model",
        "title": "Visualize model",
        "section": "Visualize model",
        "text": "This guide uses a model of a race car’s front wing.\nVisualize model"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#show-the-mesh",
        "title": "Visualize model > Show the mesh",
        "section": "Show the mesh",
        "text": "Access the mesh data using the Model.mesh attribute. This attribute, an instance of the MeshData class, can be converted to a PyVista mesh using the MeshData.to_pyvista() method.\nYou can also access and plot the mesh data for specific tree objects. For example, the following code plots the mesh for a modeling ply.\nShow the mesh\nModel.mesh\nMeshData\nMeshData.to_pyvista()"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#showing-the-directions",
        "title": "Visualize model > Showing the directions",
        "section": "Showing the directions",
        "text": "Show the directions (such as normals, fiber directions, and orientations) of the model by using the get_directions_plotter() helper function. This function takes the model, the components to visualize, and some optional parameters.\nThe following example shows the orientation and fiber direction of a modeling ply.\nThe color scheme used in this plot for the various components matches the ACP GUI.\nThe directions plot can be scoped to a specific region of the model by using the mesh parameter. For example, the following code only plots the part covered by the modeling ply.\nShowing the directions\nget_directions_plotter()\nmesh"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#showing-the-mesh-data",
        "title": "Visualize model > Showing the mesh data",
        "section": "Showing the mesh data",
        "text": "Access the mesh data related to a specific ACP object using the elemental_data and nodal_data attributes. These attributes represent either scalar or vector data.\nShowing the mesh data\nelemental_data\nnodal_data"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#scalar-data",
        "title": "Visualize model > Scalar data",
        "section": "Scalar data",
        "text": "You can convert scalar data to a PyVista mesh using the get_pyvista_mesh method. This method requires the base model mesh.\nFor example, you can plot the total thickness of the model using this code:\nAgain, the mesh parameter can be used to limit the scope of the plot.\nScalar data\nget_pyvista_mesh\nmesh"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#vector-data",
        "title": "Visualize model > Vector data",
        "section": "Vector data",
        "text": "Visualize vector data using the get_directions_plotter() function shown in the preceding section directions_plotter. If you need more fine-grained control over the visualization, you can use the method shown in this section instead.\nVector data can be converted to PyVista glyphs using the get_pyvista_glyphs method. This method requires the base model mesh.\nYou can also choose a scaling factor to change the size of the vector glyphs and a culling factor to reduce the number of glyphs plotted.\nThe base mesh is not shown when plotting vector data using PyVista glyphs. To visualize the mesh, you can combine the mesh and glyphs together using a PyVista plotter.\nVector data\nget_directions_plotter()\nget_pyvista_glyphs"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#showing-geometries",
        "title": "Visualize model > Showing geometries",
        "section": "Showing geometries",
        "text": "You can view CAD geometries using their visualization_mesh attribute. This attribute contains a tessellated (triangular) mesh that represents the geometry.\nFor plotting, the tessellated mesh has a .to_pyvista method that returns a PyVista PolyData object. To see its triangular nature, plot the mesh with the show_edges option set to True.\nShowing geometries\nvisualization_mesh\n.to_pyvista\nPolyData\nshow_edges\nTrue"
    },
    {
        "objectID": "user_guide/howto/visualize_model",
        "href": "user_guide/howto/visualize_model.html#showing-solid-model",
        "title": "Visualize model > Showing solid model",
        "section": "Showing solid model",
        "text": "The visualization of a solid mesh and its elemental data is shown in the example solid_model_example.\nShowing solid model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply.html#create_imported_modeling_ply",
        "title": "create_imported_modeling_ply",
        "section": "create_imported_modeling_ply",
        "text": "Instantiate an Imported Modeling Ply.\nname (str) – The name of the Modeling Ply\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\nImportedModelingPly\nAdded in ACP server version 25.1.\ncreate_imported_modeling_ply\nBOTTOM_OFFSET\nMIDDLE_OFFSET\nTOP_OFFSET\nmesh_import_type\nFROM_GEOMETRY\nNO_DRAPING\ndraping_angle_1_field\nThicknessType.FROM_TABLE\nThicknessType.NOMINAL\nthickness_type\nThicknessType.FROM_TABLE\nthickness_type\nThicknessType.FROM_TABLE\nThicknessFieldType.ABSOLUTE_VALUES\nThicknessFieldType.RELATIVE_SCALING_FACTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply.html#ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply",
        "title": "create_imported_modeling_ply > create_imported_modeling_ply > create_imported_modeling_ply",
        "section": "create_imported_modeling_ply > create_imported_modeling_ply",
        "text": "ImportedModelingGroup.create_imported_modeling_ply(*, name='ModelingPly', active=True, offset_type='middle_offset', mesh_import_type='from_geometry', mesh_geometry=None, rosette_selection_method='minimum_angle', rosettes=(), reference_direction_field=None, rotation_angle=0.0, ply_material=None, ply_angle=0.0, draping_type='no_draping', draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_field=None, thickness_field_type='absolute_values')\n\nInstantiate an Imported Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\n\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\n\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\nReturn type\n\nImportedModelingPly\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply.html#examples-using-importedmodelinggroupcreate_imported_modeling_ply",
        "title": "create_imported_modeling_ply > Examples using ImportedModelingGroup.create_imported_modeling_ply",
        "section": "Examples using ImportedModelingGroup.create_imported_modeling_ply",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nExamples using ImportedModelingGroup.create_imported_modeling_ply"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.engineering_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.engineering_constants.html#engineering_constants",
        "title": "engineering_constants",
        "section": "engineering_constants",
        "text": "engineering_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.engineering_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.engineering_constants.html#ansys.acp.core.Material.engineering_constants",
        "title": "engineering_constants > engineering_constants > engineering_constants",
        "section": "engineering_constants > engineering_constants",
        "text": "property Material.engineering_constants: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.delete.html#ansys.acp.core.CutOffGeometry.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "CutOffGeometry.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType.IN_PLANE",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.IN_PLANE.html#in_plane",
        "title": "IN_PLANE",
        "section": "IN_PLANE",
        "text": "IN_PLANE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IntersectionType.IN_PLANE",
        "href": "api/_autosummary/ansys.acp.core.IntersectionType.IN_PLANE.html#ansys.acp.core.IntersectionType.IN_PLANE",
        "title": "IN_PLANE > IN_PLANE > IN_PLANE",
        "section": "IN_PLANE > IN_PLANE",
        "text": "IntersectionType.IN_PLANE = 'in_plane'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH.html#length",
        "title": "LENGTH",
        "section": "LENGTH",
        "text": "LENGTH"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH.html#ansys.acp.core.PhysicalDimension.LENGTH",
        "title": "LENGTH > LENGTH > LENGTH",
        "section": "LENGTH > LENGTH",
        "text": "PhysicalDimension.LENGTH = 'length'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH.html#examples-using-physicaldimensionlength",
        "title": "LENGTH > Examples using PhysicalDimension.LENGTH",
        "section": "Examples using PhysicalDimension.LENGTH",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using PhysicalDimension.LENGTH"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1.html#nu12_1",
        "title": "nu12_1",
        "section": "nu12_1",
        "text": "nu12_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1",
        "title": "nu12_1 > nu12_1 > nu12_1",
        "section": "nu12_1 > nu12_1",
        "text": "property VariableWovenCharacterization.nu12_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableLaRCConstants.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section describes the API of the public PyACP classes, functions,\nand attributes.\nAPI reference"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.html#solidmodeloffsetdirectiontype",
        "title": "SolidModelOffsetDirectionType",
        "section": "SolidModelOffsetDirectionType",
        "text": "Determines how the offset direction is evaluated in a solid model. With SURFACE_NORMAL, the offset direction is re-evaluated based on the surface of the solid. With SHELL_NORMAL, the direction is based on the shell surface.\nSolidModelOffsetDirectionType.SHELL_NORMAL\n\nSolidModelOffsetDirectionType.SURFACE_NORMAL\n\nSolidModelOffsetDirectionType\nSURFACE_NORMAL\nSHELL_NORMAL\nSolidModelOffsetDirectionType.SHELL_NORMAL\nSolidModelOffsetDirectionType.SURFACE_NORMAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType",
        "href": "api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.html#ansys.acp.core.SolidModelOffsetDirectionType",
        "title": "SolidModelOffsetDirectionType > SolidModelOffsetDirectionType > SolidModelOffsetDirectionType",
        "section": "SolidModelOffsetDirectionType > SolidModelOffsetDirectionType",
        "text": "class ansys.acp.core.SolidModelOffsetDirectionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the offset direction is evaluated in a solid model. With SURFACE_NORMAL, the offset direction is re-evaluated based on the surface of the solid. With SHELL_NORMAL, the direction is based on the shell surface.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nSolidModelOffsetDirectionType.SHELL_NORMAL\n\n\n\nSolidModelOffsetDirectionType.SURFACE_NORMAL\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric",
        "href": "api/_autosummary/ansys.acp.core.Fabric.html#fabric",
        "title": "Fabric",
        "section": "Fabric",
        "text": "Instantiate a Fabric.\nname (str) – Name of the fabric.\nmaterial (Material | None) – Material of the fabric.\nthickness (float) – Thickness of the fabric.\narea_price (float) – Price per area of the fabric.\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\narea_weight – Weight per area of the fabric. Read only.\nAdded in ACP server version 24.2.\nFabric.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nFabric.delete()\nDelete the object.\nFabric.store(parent)\nStore the object on the server.\nFabric.area_price\n\nFabric.area_weight\n\nFabric.cut_off_material\n\nFabric.cut_off_material_handling\n\nFabric.draping_material_model\n\nFabric.draping_ud_coefficient\n\nFabric.drop_off_material\n\nFabric.drop_off_material_handling\n\nFabric.id\nIdentifier of the object, used for example as key in maps.\nFabric.ignore_for_postprocessing\n\nFabric.material\n\nFabric.name\nThe name of the object.\nFabric.parent\nThe parent of the object.\nFabric.status\n\nFabric.thickness\n\nFabric\nFabric.clone\nFabric.delete\nFabric.store\nFabric.area_price\nFabric.area_weight\nFabric.cut_off_material\nFabric.cut_off_material_handling\nFabric.draping_material_model\nFabric.draping_ud_coefficient\nFabric.drop_off_material\nFabric.drop_off_material_handling\nFabric.id\nFabric.ignore_for_postprocessing\nFabric.material\nFabric.name\nFabric.parent\nFabric.status\nFabric.thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric",
        "href": "api/_autosummary/ansys.acp.core.Fabric.html#ansys.acp.core.Fabric",
        "title": "Fabric > Fabric > Fabric",
        "section": "Fabric > Fabric",
        "text": "class ansys.acp.core.Fabric(*, name='Fabric', material=None, thickness=0.0, area_price=0.0, ignore_for_postprocessing=False, drop_off_material_handling='global', drop_off_material=None, cut_off_material_handling='computed', cut_off_material=None, draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Fabric.\n\nParameters\n\nname (str) – Name of the fabric.\n\nmaterial (Material | None) – Material of the fabric.\n\nthickness (float) – Thickness of the fabric.\n\narea_price (float) – Price per area of the fabric.\n\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\narea_weight – Weight per area of the fabric. Read only.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nFabric.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nFabric.delete()\n\nDelete the object.\n\nFabric.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nFabric.area_price\n\n\n\nFabric.area_weight\n\n\n\nFabric.cut_off_material\n\n\n\nFabric.cut_off_material_handling\n\n\n\nFabric.draping_material_model\n\n\n\nFabric.draping_ud_coefficient\n\n\n\nFabric.drop_off_material\n\n\n\nFabric.drop_off_material_handling\n\n\n\nFabric.id\n\nIdentifier of the object, used for example as key in maps.\n\nFabric.ignore_for_postprocessing\n\n\n\nFabric.material\n\n\n\nFabric.name\n\nThe name of the object.\n\nFabric.parent\n\nThe parent of the object.\n\nFabric.status\n\n\n\nFabric.thickness\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric",
        "href": "api/_autosummary/ansys.acp.core.Fabric.html#examples-using-fabric",
        "title": "Fabric > Examples using Fabric",
        "section": "Examples using Fabric",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Fabric"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.clone",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.clone.html#ansys.acp.core.ImportedSolidModel.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "ImportedSolidModel.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.mesh",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.mesh",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.mesh.html#ansys.acp.core.OrientedSelectionSet.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property OrientedSelectionSet.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset.html#offset",
        "title": "offset",
        "section": "offset",
        "text": "offset"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset",
        "title": "offset > offset > offset",
        "section": "offset > offset",
        "text": "AnalysisPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_analysis_model",
        "href": "api/_autosummary/ansys.acp.core.Model.export_analysis_model.html#export_analysis_model",
        "title": "export_analysis_model",
        "section": "export_analysis_model",
        "text": "Save the analysis model to a CDB file.\npath (str | PathLike[str]) – Target file path. E.g. /tmp/ACPAnalysisModel.cdb\nexport_analysis_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_analysis_model",
        "href": "api/_autosummary/ansys.acp.core.Model.export_analysis_model.html#ansys.acp.core.Model.export_analysis_model",
        "title": "export_analysis_model > export_analysis_model > export_analysis_model",
        "section": "export_analysis_model > export_analysis_model",
        "text": "Model.export_analysis_model(path)\n\nSave the analysis model to a CDB file.\n\nParameters\n\npath (str | PathLike[str]) – Target file path. E.g. /tmp/ACPAnalysisModel.cdb\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.export_analysis_model",
        "href": "api/_autosummary/ansys.acp.core.Model.export_analysis_model.html#examples-using-modelexport_analysis_model",
        "title": "export_analysis_model > Examples using Model.export_analysis_model",
        "section": "Examples using Model.export_analysis_model",
        "text": "sphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using Model.export_analysis_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.delete",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.delete",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.delete.html#ansys.acp.core.SolidModel.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "SolidModel.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.IGES",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.IGES.html#iges",
        "title": "IGES",
        "section": "IGES",
        "text": "IGES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.IGES",
        "href": "api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.IGES.html#ansys.acp.core.SolidModelSkinExportFormat.IGES",
        "title": "IGES > IGES > IGES",
        "section": "IGES > IGES",
        "text": "SolidModelSkinExportFormat.IGES = 'iges'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.locked",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSet.locked",
        "href": "api/_autosummary/ansys.acp.core.EdgeSet.locked.html#ansys.acp.core.EdgeSet.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property EdgeSet.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.html#modelingply",
        "title": "ModelingPly",
        "section": "ModelingPly",
        "text": "Instantiate a Modeling Ply.\nname (str) – The name of the Modeling Ply\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\nnumber_of_layers (int) – Number of times the plies are generated.\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\nglobal_ply_nr (int) – Defines the global ply order.\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\ndraping_type (DrapingType) – Chooses between different draping formulations.\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\nseed point is used as draping direction.\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\nAdded in ACP server version 24.2.\nModelingPly.add_selection_rule(selection_rule, *)\nAdd a LinkedSelectionRule to the ModelingPly.\nModelingPly.add_taper_edge(edge_set, *, ...)\nAdd a TaperEdge to the ModelingPly.\nModelingPly.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nModelingPly.delete()\nDelete the object.\nModelingPly.store(parent)\nStore the object on the server.\nModelingPly.active\n\nModelingPly.auto_draping_direction\n\nModelingPly.draping_angle_1_field\n\nModelingPly.draping_angle_2_field\n\nModelingPly.draping_direction\n\nModelingPly.draping_mesh_size\n\nModelingPly.draping_seed_point\n\nModelingPly.draping_thickness_correction\n\nModelingPly.draping_type\n\nModelingPly.elemental_data\n\nModelingPly.global_ply_nr\n\nModelingPly.id\nIdentifier of the object, used for example as key in maps.\nModelingPly.mesh\nFull mesh associated with the object.\nModelingPly.name\nThe name of the object.\nModelingPly.nodal_data\n\nModelingPly.number_of_layers\n\nModelingPly.oriented_selection_sets\n\nModelingPly.parent\nThe parent of the object.\nModelingPly.ply_angle\n\nModelingPly.ply_material\n\nModelingPly.production_plies\n\nModelingPly.selection_rules\n\nModelingPly.shell_mesh\nShell mesh associated with the object.\nModelingPly.status\n\nModelingPly.taper_edges\n\nModelingPly.thickness_field\n\nModelingPly.thickness_field_type\n\nModelingPly.thickness_geometry\n\nModelingPly.thickness_type\n\nModelingPly.use_default_draping_mesh_size\n\nModelingPly\nTrue\nauto_draping_direction\nFalse\n-1.\ndraping_angle_1_field\nThicknessType.FROM_GEOMETRY\nThicknessType.FROM_TABLE\nThicknessType.NOMINAL\nthickness_type\nThicknessType.FROM_GEOMETRY\nthickness_type\nThicknessType.FROM_TABLE\nthickness_type\nThicknessType.FROM_TABLE\nThicknessFieldType.ABSOLUTE_VALUES\nThicknessFieldType.RELATIVE_SCALING_FACTOR\nModelingPly.add_selection_rule\nModelingPly.add_taper_edge\nModelingPly.clone\nModelingPly.delete\nModelingPly.store\nModelingPly.active\nModelingPly.auto_draping_direction\nModelingPly.draping_angle_1_field\nModelingPly.draping_angle_2_field\nModelingPly.draping_direction\nModelingPly.draping_mesh_size\nModelingPly.draping_seed_point\nModelingPly.draping_thickness_correction\nModelingPly.draping_type\nModelingPly.elemental_data\nModelingPly.global_ply_nr\nModelingPly.id\nModelingPly.mesh\nModelingPly.name\nModelingPly.nodal_data\nModelingPly.number_of_layers\nModelingPly.oriented_selection_sets\nModelingPly.parent\nModelingPly.ply_angle\nModelingPly.ply_material\nModelingPly.production_plies\nModelingPly.selection_rules\nModelingPly.shell_mesh\nModelingPly.status\nModelingPly.taper_edges\nModelingPly.thickness_field\nModelingPly.thickness_field_type\nModelingPly.thickness_geometry\nModelingPly.thickness_type\nModelingPly.use_default_draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.html#ansys.acp.core.ModelingPly",
        "title": "ModelingPly > ModelingPly > ModelingPly",
        "section": "ModelingPly > ModelingPly",
        "text": "class ansys.acp.core.ModelingPly(*, name='ModelingPly', ply_material=None, oriented_selection_sets=(), ply_angle=0.0, number_of_layers=1, active=True, global_ply_nr=0, selection_rules=(), draping_type='no_draping', draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(1.0, 0.0, 0.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_thickness_correction=True, draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_geometry=None, thickness_field=None, thickness_field_type='absolute_values', taper_edges=())\n\nInstantiate a Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\nnumber_of_layers (int) – Number of times the plies are generated.\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\nglobal_ply_nr (int) – Defines the global ply order.\n\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\n\ndraping_type (DrapingType) – Chooses between different draping formulations.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nModelingPly.add_selection_rule(selection_rule, *)\n\nAdd a LinkedSelectionRule to the ModelingPly.\n\nModelingPly.add_taper_edge(edge_set, *, ...)\n\nAdd a TaperEdge to the ModelingPly.\n\nModelingPly.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nModelingPly.delete()\n\nDelete the object.\n\nModelingPly.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nModelingPly.active\n\n\n\nModelingPly.auto_draping_direction\n\n\n\nModelingPly.draping_angle_1_field\n\n\n\nModelingPly.draping_angle_2_field\n\n\n\nModelingPly.draping_direction\n\n\n\nModelingPly.draping_mesh_size\n\n\n\nModelingPly.draping_seed_point\n\n\n\nModelingPly.draping_thickness_correction\n\n\n\nModelingPly.draping_type\n\n\n\nModelingPly.elemental_data\n\n\n\nModelingPly.global_ply_nr\n\n\n\nModelingPly.id\n\nIdentifier of the object, used for example as key in maps.\n\nModelingPly.mesh\n\nFull mesh associated with the object.\n\nModelingPly.name\n\nThe name of the object.\n\nModelingPly.nodal_data\n\n\n\nModelingPly.number_of_layers\n\n\n\nModelingPly.oriented_selection_sets\n\n\n\nModelingPly.parent\n\nThe parent of the object.\n\nModelingPly.ply_angle\n\n\n\nModelingPly.ply_material\n\n\n\nModelingPly.production_plies\n\n\n\nModelingPly.selection_rules\n\n\n\nModelingPly.shell_mesh\n\nShell mesh associated with the object.\n\nModelingPly.status\n\n\n\nModelingPly.taper_edges\n\n\n\nModelingPly.thickness_field\n\n\n\nModelingPly.thickness_field_type\n\n\n\nModelingPly.thickness_geometry\n\n\n\nModelingPly.thickness_type\n\n\n\nModelingPly.use_default_draping_mesh_size\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.html#examples-using-modelingply",
        "title": "ModelingPly > Examples using ModelingPly",
        "section": "Examples using ModelingPly",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ModelingPly"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE.html#rule_geometry_triangle",
        "title": "RULE_GEOMETRY_TRIANGLE",
        "section": "RULE_GEOMETRY_TRIANGLE",
        "text": "RULE_GEOMETRY_TRIANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE.html#ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE",
        "title": "RULE_GEOMETRY_TRIANGLE > RULE_GEOMETRY_TRIANGLE > RULE_GEOMETRY_TRIANGLE",
        "section": "RULE_GEOMETRY_TRIANGLE > RULE_GEOMETRY_TRIANGLE",
        "text": "ExampleKeys.RULE_GEOMETRY_TRIANGLE = 8\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system",
        "title": "use_global_coordinate_system",
        "section": "use_global_coordinate_system",
        "text": "use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system.html#ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system",
        "title": "use_global_coordinate_system > use_global_coordinate_system > use_global_coordinate_system",
        "section": "use_global_coordinate_system > use_global_coordinate_system",
        "text": "property CylindricalSelectionRule.use_global_coordinate_system: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.id.html#ansys.acp.core.LookUpTable3D.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LookUpTable3D.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT.html#meshdatat",
        "title": "MeshDataT",
        "section": "MeshDataT",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nMeshDataT\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT.html#ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT",
        "title": "MeshDataT > MeshDataT > MeshDataT",
        "section": "MeshDataT > MeshDataT",
        "text": "ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT = ~MeshDataT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "GeometricalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.html#sectioncut",
        "title": "SectionCut",
        "section": "SectionCut",
        "text": "Instantiate a Section Cut.\nname (str) – Name of the section cut.\nactive (bool) – Inactive section cuts are not evaluated.\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\nscale_factor (float) – Scale factor applied to the ply thicknesses.\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\nAdded in ACP server version 25.1.\nSectionCut.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSectionCut.delete()\nDelete the object.\nSectionCut.store(parent)\nStore the object on the server.\nSectionCut.active\n\nSectionCut.core_scale_factor\n\nSectionCut.extrusion_type\n\nSectionCut.id\nIdentifier of the object, used for example as key in maps.\nSectionCut.in_plane_reference_direction1\n\nSectionCut.intersection_type\n\nSectionCut.locked\n\nSectionCut.name\nThe name of the object.\nSectionCut.normal\n\nSectionCut.number_of_interpolation_points\n\nSectionCut.origin\n\nSectionCut.parent\nThe parent of the object.\nSectionCut.scale_factor\n\nSectionCut.scope_element_sets\n\nSectionCut.scope_entire_model\n\nSectionCut.search_radius\n\nSectionCut.section_cut_type\n\nSectionCut.status\n\nSectionCut.tolerance\n\nSectionCut.use_default_interpolation_settings\n\nSectionCut.use_default_tolerance\n\nSectionCut\nscope_element_sets\nscope_entire_model\nextrusion_type\nExtrusionType.WIRE_FRAME\ntolerance\nextrusion_type\nExtrusionType.SURFACE_NORMAL\nExtrusionType.SURFACE_SWEEP_BASED\nextrusion_type\nExtrusionType.SURFACE_NORMAL\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_tolerance\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_interpolation_settings\nextrusion_type\nExtrusionType.SURFACE_SWEEP_BASED\nuse_default_interpolation_settings\nSectionCut.clone\nSectionCut.delete\nSectionCut.store\nSectionCut.active\nSectionCut.core_scale_factor\nSectionCut.extrusion_type\nSectionCut.id\nSectionCut.in_plane_reference_direction1\nSectionCut.intersection_type\nSectionCut.locked\nSectionCut.name\nSectionCut.normal\nSectionCut.number_of_interpolation_points\nSectionCut.origin\nSectionCut.parent\nSectionCut.scale_factor\nSectionCut.scope_element_sets\nSectionCut.scope_entire_model\nSectionCut.search_radius\nSectionCut.section_cut_type\nSectionCut.status\nSectionCut.tolerance\nSectionCut.use_default_interpolation_settings\nSectionCut.use_default_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.html#ansys.acp.core.SectionCut",
        "title": "SectionCut > SectionCut > SectionCut",
        "section": "SectionCut > SectionCut",
        "text": "class ansys.acp.core.SectionCut(*, name='SectionCut', active=True, origin=(0.0, 0.0, 0.0), normal=(0.0, 0.0, 1.0), in_plane_reference_direction1=(1.0, 0.0, 0.0), scope_entire_model=True, scope_element_sets=(), extrusion_type='wire_frame', scale_factor=1.0, core_scale_factor=1.0, section_cut_type='modeling_ply_wise', intersection_type='normal_to_surface', use_default_tolerance=True, tolerance=0.0, use_default_interpolation_settings=True, search_radius=0.0, number_of_interpolation_points=1)\n\nInstantiate a Section Cut.\n\nParameters\n\nname (str) – Name of the section cut.\n\nactive (bool) – Inactive section cuts are not evaluated.\n\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\n\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\n\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\n\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\n\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\n\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\n\nscale_factor (float) – Scale factor applied to the ply thicknesses.\n\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\n\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\n\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\n\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\n\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\n\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\n\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSectionCut.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSectionCut.delete()\n\nDelete the object.\n\nSectionCut.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSectionCut.active\n\n\n\nSectionCut.core_scale_factor\n\n\n\nSectionCut.extrusion_type\n\n\n\nSectionCut.id\n\nIdentifier of the object, used for example as key in maps.\n\nSectionCut.in_plane_reference_direction1\n\n\n\nSectionCut.intersection_type\n\n\n\nSectionCut.locked\n\n\n\nSectionCut.name\n\nThe name of the object.\n\nSectionCut.normal\n\n\n\nSectionCut.number_of_interpolation_points\n\n\n\nSectionCut.origin\n\n\n\nSectionCut.parent\n\nThe parent of the object.\n\nSectionCut.scale_factor\n\n\n\nSectionCut.scope_element_sets\n\n\n\nSectionCut.scope_entire_model\n\n\n\nSectionCut.search_radius\n\n\n\nSectionCut.section_cut_type\n\n\n\nSectionCut.status\n\n\n\nSectionCut.tolerance\n\n\n\nSectionCut.use_default_interpolation_settings\n\n\n\nSectionCut.use_default_tolerance\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isupper",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isupper.html#isupper",
        "title": "isupper",
        "section": "isupper",
        "text": "Return True if the string is an uppercase string, False otherwise.\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.\nisupper"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isupper",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isupper.html#ansys.acp.core.material_property_sets.PuckMaterialType.isupper",
        "title": "isupper > isupper > isupper",
        "section": "isupper > isupper",
        "text": "PuckMaterialType.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient.html#draping_ud_coefficient",
        "title": "draping_ud_coefficient",
        "section": "draping_ud_coefficient",
        "text": "draping_ud_coefficient"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient.html#ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient",
        "title": "draping_ud_coefficient > draping_ud_coefficient > draping_ud_coefficient",
        "section": "draping_ud_coefficient > draping_ud_coefficient",
        "text": "property OrientedSelectionSet.draping_ud_coefficient: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_angle.html#ply_angle",
        "title": "ply_angle",
        "section": "ply_angle",
        "text": "ply_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_angle.html#ansys.acp.core.ImportedModelingPly.ply_angle",
        "title": "ply_angle > ply_angle > ply_angle",
        "section": "ply_angle > ply_angle",
        "text": "property ImportedModelingPly.ply_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF.html#production_ply_cutoff",
        "title": "PRODUCTION_PLY_CUTOFF",
        "section": "PRODUCTION_PLY_CUTOFF",
        "text": "PRODUCTION_PLY_CUTOFF"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF",
        "href": "api/_autosummary/ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF.html#ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF",
        "title": "PRODUCTION_PLY_CUTOFF > PRODUCTION_PLY_CUTOFF > PRODUCTION_PLY_CUTOFF",
        "section": "PRODUCTION_PLY_CUTOFF > PRODUCTION_PLY_CUTOFF",
        "text": "PlyCutOffType.PRODUCTION_PLY_CUTOFF = 'production_ply_cutoff'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.cog.html#cog",
        "title": "cog",
        "section": "cog",
        "text": "cog"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.cog",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.cog.html#ansys.acp.core.mesh_data.ModelElementalData.cog",
        "title": "cog > cog > cog",
        "section": "cog > cog",
        "text": "ModelElementalData.cog: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle.html#draped_fiber_angle",
        "title": "draped_fiber_angle",
        "section": "draped_fiber_angle",
        "text": "draped_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle",
        "title": "draped_fiber_angle > draped_fiber_angle > draped_fiber_angle",
        "section": "draped_fiber_angle > draped_fiber_angle",
        "text": "ProductionPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.REMOVE",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.REMOVE.html#remove",
        "title": "REMOVE",
        "section": "REMOVE",
        "text": "REMOVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.REMOVE",
        "href": "api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.REMOVE.html#ansys.acp.core.BaseElementMaterialHandling.REMOVE",
        "title": "REMOVE > REMOVE > REMOVE",
        "section": "REMOVE > REMOVE",
        "text": "BaseElementMaterialHandling.REMOVE = 'remove'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.stop",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.stop.html#stop",
        "title": "stop",
        "section": "stop",
        "text": "Stop the product instance.\ntimeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\nRuntimeError – If the instance is already in the stopped state.\nRuntimeError – If the instance does not allow stopping.\nstop"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.stop",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.stop.html#ansys.acp.core.ACPInstance.stop",
        "title": "stop > stop > stop",
        "section": "stop > stop",
        "text": "ACPInstance.stop(*, timeout=None)\n\nStop the product instance.\n\nParameters\n\ntimeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\n\nRaises\n\nRuntimeError – If the instance is already in the stopped state.\n\nRuntimeError – If the instance does not allow stopping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.NO_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.NO_DRAPING.html#no_draping",
        "title": "NO_DRAPING",
        "section": "NO_DRAPING",
        "text": "NO_DRAPING"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingType.NO_DRAPING",
        "href": "api/_autosummary/ansys.acp.core.DrapingType.NO_DRAPING.html#ansys.acp.core.DrapingType.NO_DRAPING",
        "title": "NO_DRAPING > NO_DRAPING > NO_DRAPING",
        "section": "NO_DRAPING > NO_DRAPING",
        "text": "DrapingType.NO_DRAPING = 'no_draping'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies.html#modeling_plies",
        "title": "modeling_plies",
        "section": "modeling_plies",
        "text": "modeling_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies.html#ansys.acp.core.ModelingGroup.modeling_plies",
        "title": "modeling_plies > modeling_plies > modeling_plies",
        "section": "modeling_plies > modeling_plies",
        "text": "property ModelingGroup.modeling_plies: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies.html#examples-using-modelinggroupmodeling_plies",
        "title": "modeling_plies > Examples using ModelingGroup.modeling_plies",
        "section": "Examples using ModelingGroup.modeling_plies",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using ModelingGroup.modeling_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge.html#distance_along_edge",
        "title": "distance_along_edge",
        "section": "distance_along_edge",
        "text": "distance_along_edge"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge",
        "href": "api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge.html#ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge",
        "title": "distance_along_edge > distance_along_edge > distance_along_edge",
        "section": "distance_along_edge > distance_along_edge",
        "text": "property VariableOffsetSelectionRule.distance_along_edge: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.small_hole_threshold",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.small_hole_threshold.html#small_hole_threshold",
        "title": "small_hole_threshold",
        "section": "small_hole_threshold",
        "text": "small_hole_threshold"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.small_hole_threshold",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.small_hole_threshold.html#ansys.acp.core.ShellMappingProperties.small_hole_threshold",
        "title": "small_hole_threshold > small_hole_threshold > small_hole_threshold",
        "section": "small_hole_threshold > small_hole_threshold",
        "text": "ShellMappingProperties.small_hole_threshold: float = 0.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.html#geometricalselectionruleelementaldata",
        "title": "GeometricalSelectionRuleElementalData",
        "section": "GeometricalSelectionRuleElementalData",
        "text": "Represents elemental data for a Geometrical Selection Rule.\nGeometricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nGeometricalSelectionRuleElementalData.normal\n\nGeometricalSelectionRuleElementalData.element_labels\n\nGeometricalSelectionRuleElementalData\nGeometricalSelectionRuleElementalData.get_pyvista_mesh\nGeometricalSelectionRuleElementalData.normal\nGeometricalSelectionRuleElementalData.element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.html#ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData",
        "title": "GeometricalSelectionRuleElementalData > GeometricalSelectionRuleElementalData > GeometricalSelectionRuleElementalData",
        "section": "GeometricalSelectionRuleElementalData > GeometricalSelectionRuleElementalData",
        "text": "class ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Geometrical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nGeometricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nGeometricalSelectionRuleElementalData.normal\n\n\n\nGeometricalSelectionRuleElementalData.element_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2.html#e2",
        "title": "E2",
        "section": "E2",
        "text": "E2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2",
        "title": "E2 > E2 > E2",
        "section": "E2 > E2",
        "text": "property VariableEngineeringConstants.E2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.volume.html#volume",
        "title": "volume",
        "section": "volume",
        "text": "volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.volume",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.volume.html#ansys.acp.core.mesh_data.ModelingPlyElementalData.volume",
        "title": "volume > volume > volume",
        "section": "volume > volume",
        "text": "ModelingPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.id",
        "href": "api/_autosummary/ansys.acp.core.Fabric.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.id",
        "href": "api/_autosummary/ansys.acp.core.Fabric.id.html#ansys.acp.core.Fabric.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property Fabric.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.nodal_data.html#ansys.acp.core.InterfaceLayer.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property InterfaceLayer.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.Stackup.draping_material_model.html#draping_material_model",
        "title": "draping_material_model",
        "section": "draping_material_model",
        "text": "draping_material_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Stackup.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.Stackup.draping_material_model.html#ansys.acp.core.Stackup.draping_material_model",
        "title": "draping_material_model > draping_material_model > draping_material_model",
        "section": "draping_material_model > draping_material_model",
        "text": "property Stackup.draping_material_model: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_CDB.html#ansys_cdb",
        "title": "ANSYS_CDB",
        "section": "ANSYS_CDB",
        "text": "ANSYS_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_CDB.html#ansys.acp.core.SolidModelImportFormat.ANSYS_CDB",
        "title": "ANSYS_CDB > ANSYS_CDB > ANSYS_CDB",
        "section": "ANSYS_CDB > ANSYS_CDB",
        "text": "SolidModelImportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.active",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.active",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.active.html#ansys.acp.core.ImportedSolidModel.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property ImportedSolidModel.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sensors",
        "href": "api/_autosummary/ansys.acp.core.Model.sensors.html#sensors",
        "title": "sensors",
        "section": "sensors",
        "text": "sensors"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.sensors",
        "href": "api/_autosummary/ansys.acp.core.Model.sensors.html#ansys.acp.core.Model.sensors",
        "title": "sensors > sensors > sensors",
        "section": "sensors > sensors",
        "text": "property Model.sensors: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sensor",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sensor.html#create_sensor",
        "title": "create_sensor",
        "section": "create_sensor",
        "text": "Instantiate a Sensor.\nname (str) – Name of the sensor.\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\nactive (bool) – Inactive sensors are not evaluated.\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly]) – List of entities which define the sensor’s scope.\nSensor\nAdded in ACP server version 24.2.\ncreate_sensor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sensor",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sensor.html#ansys.acp.core.Model.create_sensor",
        "title": "create_sensor > create_sensor > create_sensor",
        "section": "create_sensor > create_sensor",
        "text": "Model.create_sensor(*, name='Sensor', sensor_type='sensor_by_area', active=True, entities=())\n\nInstantiate a Sensor.\n\nParameters\n\nname (str) – Name of the sensor.\n\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\n\nactive (bool) – Inactive sensors are not evaluated.\n\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly]) – List of entities which define the sensor’s scope.\n\nReturn type\n\nSensor\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_sensor",
        "href": "api/_autosummary/ansys.acp.core.Model.create_sensor.html#examples-using-modelcreate_sensor",
        "title": "create_sensor > Examples using Model.create_sensor",
        "section": "Examples using Model.create_sensor",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using Model.create_sensor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES.html#sensor_by_plies",
        "title": "SENSOR_BY_PLIES",
        "section": "SENSOR_BY_PLIES",
        "text": "SENSOR_BY_PLIES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES.html#ansys.acp.core.SensorType.SENSOR_BY_PLIES",
        "title": "SENSOR_BY_PLIES > SENSOR_BY_PLIES > SENSOR_BY_PLIES",
        "section": "SENSOR_BY_PLIES > SENSOR_BY_PLIES",
        "text": "SensorType.SENSOR_BY_PLIES = 'sensor_by_plies'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES",
        "href": "api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES.html#examples-using-sensortypesensor_by_plies",
        "title": "SENSOR_BY_PLIES > Examples using SensorType.SENSOR_BY_PLIES",
        "section": "Examples using SensorType.SENSOR_BY_PLIES",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using SensorType.SENSOR_BY_PLIES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR.html#relative_scaling_factor",
        "title": "RELATIVE_SCALING_FACTOR",
        "section": "RELATIVE_SCALING_FACTOR",
        "text": "RELATIVE_SCALING_FACTOR"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR",
        "href": "api/_autosummary/ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR.html#ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR",
        "title": "RELATIVE_SCALING_FACTOR > RELATIVE_SCALING_FACTOR > RELATIVE_SCALING_FACTOR",
        "section": "RELATIVE_SCALING_FACTOR > RELATIVE_SCALING_FACTOR",
        "text": "ThicknessFieldType.RELATIVE_SCALING_FACTOR = 'relative_scaling_factor'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB.html#class40_cdb",
        "title": "CLASS40_CDB",
        "section": "CLASS40_CDB",
        "text": "CLASS40_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB.html#ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB",
        "title": "CLASS40_CDB > CLASS40_CDB > CLASS40_CDB",
        "section": "CLASS40_CDB > CLASS40_CDB",
        "text": "ExampleKeys.CLASS40_CDB = 13\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB.html#examples-using-examplekeysclass40_cdb",
        "title": "CLASS40_CDB > Examples using ExampleKeys.CLASS40_CDB",
        "section": "Examples using ExampleKeys.CLASS40_CDB",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using ExampleKeys.CLASS40_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer.html#image_name_filetransfer",
        "title": "image_name_filetransfer",
        "section": "image_name_filetransfer",
        "text": "image_name_filetransfer"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer.html#ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer",
        "title": "image_name_filetransfer > image_name_filetransfer > image_name_filetransfer",
        "section": "image_name_filetransfer > image_name_filetransfer",
        "text": "DockerComposeLaunchConfig.image_name_filetransfer: str = 'ghcr.io/ansys/tools-filetransfer:latest'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_labels.html#ansys.acp.core.mesh_data.MeshData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "MeshData.node_labels: ndarray[tuple[int, ...], dtype[int32]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_CDB.html#ansys_cdb",
        "title": "ANSYS_CDB",
        "section": "ANSYS_CDB",
        "text": "ANSYS_CDB"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_CDB",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_CDB.html#ansys.acp.core.SolidModelExportFormat.ANSYS_CDB",
        "title": "ANSYS_CDB > ANSYS_CDB > ANSYS_CDB",
        "section": "ANSYS_CDB > ANSYS_CDB",
        "text": "SolidModelExportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.translate",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.translate.html#translate",
        "title": "translate",
        "section": "translate",
        "text": "Replace each character in the string using the given translation table.\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.\ntranslate"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.translate",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.translate.html#ansys.acp.core.material_property_sets.PuckMaterialType.translate",
        "title": "translate > translate > translate",
        "section": "translate > translate",
        "text": "PuckMaterialType.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\ntable\n\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION.html#direction",
        "title": "DIRECTION",
        "section": "DIRECTION",
        "text": "DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION.html#ansys.acp.core.LookUpTableColumnValueType.DIRECTION",
        "title": "DIRECTION > DIRECTION > DIRECTION",
        "section": "DIRECTION > DIRECTION",
        "text": "LookUpTableColumnValueType.DIRECTION = 'direction'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION.html#examples-using-lookuptablecolumnvaluetypedirection",
        "title": "DIRECTION > Examples using LookUpTableColumnValueType.DIRECTION",
        "section": "Examples using LookUpTableColumnValueType.DIRECTION",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nExamples using LookUpTableColumnValueType.DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head.html#head",
        "title": "head",
        "section": "head",
        "text": "head"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.head.html#ansys.acp.core.TubeSelectionRule.head",
        "title": "head > head > head",
        "section": "head > head",
        "text": "property TubeSelectionRule.head: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#optimizing-ply-angles",
        "title": "Optimizing ply angles",
        "section": "Optimizing ply angles",
        "text": "This example demonstrates how to use the ACP, MAPDL, and DPF servers to optimize the ply\nangles in a composite lay-up. The optimization aims to minimize the maximum inverse\nreserve factor (IRF) of the composite structure under two load cases.\nThe example uses the scipy.optimize.minimize() function to perform the optimization.\nWhile the procedure itself is not the focus of this example and could be improved,\nit demonstrates the process of optimizing a composite lay-up with PyACP.\nOptimizing ply angles\nscipy.optimize.minimize()"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#import-modules-and-setup",
        "title": "Optimizing ply angles > Import modules and setup",
        "section": "Import modules and setup",
        "text": "To setup the environment for this optimization example, you must perform these steps which are\ncovered in the subsequent example code:\nImport the required libraries.\nLaunch the ACP, MAPDL, and DPF servers.\nCreate a temporary directory to store the input and output files.\nImport the standard library and third-party dependencies.\nImport Ansys libraries\nLaunch the PyACP server.\nLaunch the MAPDL server.\nLaunch the DPF server.\nCreate a temporary directory to store the input and output files.\nImport modules and setup"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#prepare-the-acp-model",
        "title": "Optimizing ply angles > Prepare the ACP model",
        "section": "Prepare the ACP model",
        "text": "This example uses the optimization_model.dat file, which contains a simple ACP model\nof a rounded square tube.\nThe prepare_acp_model function imports the optimization_model.dat file into a new\nACP model and creates a lay-up with six plies.\nIt returns the Model instance.\nCreate the ACP model and visualize the first ply’s fiber direction.\nPrepare the ACP model\noptimization_model.dat\nprepare_acp_model\noptimization_model.dat\nModel"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#create-functions-for-the-optimization",
        "title": "Optimizing ply angles > Create functions for the optimization",
        "section": "Create functions for the optimization",
        "text": "To optimize the ply angles, you must define functions to update, solve, and postprocess\nthe ACP model for a given set of ply angles.\nThe update_ply_angles() function changes the ply angles in the model to the given values and\nupdates the model.\nThe solve_cdb() function solves the CDB file with MAPDL and returns the path to the RST file.\nThe get_max_irf() function uses PyDPF - Composites to calculate the maximum\ninverse reserve factor (IRF) for a given RST, composite definitions,\nor materials file.\nThis function only considers the maximum stress failure criterion.\nCreate functions for the optimization\nupdate_ply_angles()\nsolve_cdb()\nget_max_irf()"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#optimize-the-ply-angles",
        "title": "Optimizing ply angles > Optimize the ply angles",
        "section": "Optimize the ply angles",
        "text": "For the optimization, you must define a single function that takes the ply angles\nas its input and returns the maximum IRF.\nThe get_max_irf_for_parameters() function combines the previously defined functions\nto perform all the necessary steps for a given set of ply angles.\nTo inject the acp_workflow, mapdl, dpf_server, and workdir arguments into the\nget_max_irf_for_parameters() function, you can use the functools.partial() function.\nFor the optimization, you can use the Nelder-Mead method available in\nthe scipy.optimize.minimize() function. This is a downhill simplex algorithm that\ndoes not require the gradient of the objective function. It is suitable for finding\na local minimum of the objective function.\nTo have the Nelder-Mead method cover a reasonable part of the parameter space,\ndefine an initial simplex (matrix of shape (n+1, n), where n is the number of parameters).\nThe initial simplex is chosen with random ply angles between 0 and 90 degrees. To make\nthe results reproducible, the random seed is fixed.\nTo build this example, the number of function evaluations is limited to 1. In practice, you\nshould increase or remove this limit.\nOptimize the ply angles\nget_max_irf_for_parameters()\nacp_workflow\nmapdl\ndpf_server\nworkdir\nget_max_irf_for_parameters()\nfunctools.partial()\nscipy.optimize.minimize()"
    },
    {
        "objectID": "examples/use_cases/01-optimizing-ply-angles",
        "href": "examples/use_cases/01-optimizing-ply-angles.html#results",
        "title": "Optimizing ply angles > Results",
        "section": "Results",
        "text": "Without the maxfev limit, the optimization would take roughly 30 minutes to complete and\nconverge to the following result:\nThe following code defines the results list as it would be obtained from the full optimization.\nVisualize the evolution of the maximum IRF during the optimization.\nVisualize the resulting fiber directions.\nTotal running time of the script: (0 minutes 41.181 seconds)\nDownload Jupyter notebook: 01-optimizing-ply-angles.ipynb\nDownload Python source code: 01-optimizing-ply-angles.py\nDownload zipped: 01-optimizing-ply-angles.zip\nGallery generated by Sphinx-Gallery\nResults\nmaxfev\nresults\nDownload Jupyter notebook: 01-optimizing-ply-angles.ipynb\nDownload Python source code: 01-optimizing-ply-angles.py\nDownload zipped: 01-optimizing-ply-angles.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules.html#selection_rules",
        "title": "selection_rules",
        "section": "selection_rules",
        "text": "selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules.html#ansys.acp.core.ModelingPly.selection_rules",
        "title": "selection_rules > selection_rules > selection_rules",
        "section": "selection_rules > selection_rules",
        "text": "property ModelingPly.selection_rules: EdgePropertyList[GenericEdgePropertyType]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.selection_rules.html#examples-using-modelingplyselection_rules",
        "title": "selection_rules > Examples using ModelingPly.selection_rules",
        "section": "Examples using ModelingPly.selection_rules",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ModelingPly.selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zc.html#zc",
        "title": "Zc",
        "section": "Zc",
        "text": "Zc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zc.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Zc",
        "title": "Zc > Zc > Zc",
        "section": "Zc > Zc",
        "text": "property ConstantStressLimits.Zc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12.html#g12",
        "title": "G12",
        "section": "G12",
        "text": "G12"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12.html#ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12",
        "title": "G12 > G12 > G12",
        "section": "G12 > G12",
        "text": "property VariableEngineeringConstants.G12: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Convert the mesh data to a PyVista object.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ScalarData.get_pyvista_mesh(mesh)\n\nConvert the mesh data to a PyVista object.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.nodal_data.html#nodal_data",
        "title": "nodal_data",
        "section": "nodal_data",
        "text": "nodal_data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.nodal_data",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.nodal_data.html#ansys.acp.core.ElementSet.nodal_data",
        "title": "nodal_data > nodal_data > nodal_data",
        "section": "nodal_data > nodal_data",
        "text": "property ElementSet.nodal_data: MeshDataT\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_z",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_z.html#rotation_angle_z",
        "title": "rotation_angle_z",
        "section": "rotation_angle_z",
        "text": "rotation_angle_z"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_z",
        "href": "api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_z.html#ansys.acp.core.CoordinateTransformation.rotation_angle_z",
        "title": "rotation_angle_z > rotation_angle_z > rotation_angle_z",
        "section": "rotation_angle_z > rotation_angle_z",
        "text": "CoordinateTransformation.rotation_angle_z: float = 0.0\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.SHELL_SECTIONS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.SHELL_SECTIONS.html#shell_sections",
        "title": "SHELL_SECTIONS",
        "section": "SHELL_SECTIONS",
        "text": "SHELL_SECTIONS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.IgnorableEntity.SHELL_SECTIONS",
        "href": "api/_autosummary/ansys.acp.core.IgnorableEntity.SHELL_SECTIONS.html#ansys.acp.core.IgnorableEntity.SHELL_SECTIONS",
        "title": "SHELL_SECTIONS > SHELL_SECTIONS > SHELL_SECTIONS",
        "section": "SHELL_SECTIONS > SHELL_SECTIONS",
        "text": "IgnorableEntity.SHELL_SECTIONS = 'shell_sections'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.id",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.id",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.id.html#ansys.acp.core.InterfaceLayer.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property InterfaceLayer.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1.html#g23_1",
        "title": "G23_1",
        "section": "G23_1",
        "text": "G23_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1",
        "title": "G23_1 > G23_1 > G23_1",
        "section": "G23_1 > G23_1",
        "text": "property VariableWovenCharacterization.G23_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal.html#ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "ParallelSelectionRuleElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/mechanical_integration_helpers",
        "href": "api/mechanical_integration_helpers.html#mechanical-integration-helpers",
        "title": "Mechanical integration helpers",
        "section": "Mechanical integration helpers",
        "text": "The PyACP / PyMechanical integration is still experimental and will change\nin future releases.\nIt is also limited in the following ways:\nOnly remote Mechanical sessions on Windows are supported.\nOnly one ACP shell or solid model can be imported into Mechanical.\nPyACP currently provides helper functions for integrating with PyMechanical.\nThese functions will be replaced with native PyMechanical functions in the future.\nexport_mesh_for_acp(*, mechanical, path)\nExport the mesh from PyMechanical for use in PyACP.\nimport_acp_composite_definitions(*, ...)\nImport ACP composite definitions HDF5 into Mechanical.\nimport_acp_mesh_from_cdb(*, mechanical, cdb_path)\nImport an ACP CDB mesh into Mechanical.\nMechanical integration helpers\nexport_mesh_for_acp\nimport_acp_composite_definitions\nimport_acp_mesh_from_cdb"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.html#lookuptable3d",
        "title": "LookUpTable3D",
        "section": "LookUpTable3D",
        "text": "Instantiate a 3D Look-Up Table.\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\nhas shape (N, 3), where N is the number of data points (rows)\nis automatically created when the look-up table is instantiated\ncannot be deleted or renamed\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\nAdded in ACP server version 24.2.\nLookUpTable3D.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nLookUpTable3D.create_column(*[, name, ...])\nInstantiate a Column of a 3D Look-Up Table.\nLookUpTable3D.delete()\nDelete the object.\nLookUpTable3D.store(parent)\nStore the object on the server.\nLookUpTable3D.columns\n\nLookUpTable3D.id\nIdentifier of the object, used for example as key in maps.\nLookUpTable3D.interpolation_algorithm\n\nLookUpTable3D.name\nThe name of the object.\nLookUpTable3D.num_min_neighbors\n\nLookUpTable3D.parent\nThe parent of the object.\nLookUpTable3D.search_radius\n\nLookUpTable3D.status\n\nLookUpTable3D.use_default_search_radius\n\nLookUpTable3D\nLocation\n(N, 3)\nN\nLocation\nNaN\nTrue\nLookUpTable3D.clone\nLookUpTable3D.create_column\nLookUpTable3D.delete\nLookUpTable3D.store\nLookUpTable3D.columns\nLookUpTable3D.id\nLookUpTable3D.interpolation_algorithm\nLookUpTable3D.name\nLookUpTable3D.num_min_neighbors\nLookUpTable3D.parent\nLookUpTable3D.search_radius\nLookUpTable3D.status\nLookUpTable3D.use_default_search_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.html#ansys.acp.core.LookUpTable3D",
        "title": "LookUpTable3D > LookUpTable3D > LookUpTable3D",
        "section": "LookUpTable3D > LookUpTable3D",
        "text": "class ansys.acp.core.LookUpTable3D(*, name='LookUpTable3D', interpolation_algorithm='weighted_nearest_neighbor', use_default_search_radius=True, search_radius=0.0, num_min_neighbors=1)\n\nInstantiate a 3D Look-Up Table.\n\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\n\nhas shape (N, 3), where N is the number of data points (rows)\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\n\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\n\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\n\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLookUpTable3D.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nLookUpTable3D.create_column(*[, name, ...])\n\nInstantiate a Column of a 3D Look-Up Table.\n\nLookUpTable3D.delete()\n\nDelete the object.\n\nLookUpTable3D.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLookUpTable3D.columns\n\n\n\nLookUpTable3D.id\n\nIdentifier of the object, used for example as key in maps.\n\nLookUpTable3D.interpolation_algorithm\n\n\n\nLookUpTable3D.name\n\nThe name of the object.\n\nLookUpTable3D.num_min_neighbors\n\n\n\nLookUpTable3D.parent\n\nThe parent of the object.\n\nLookUpTable3D.search_radius\n\n\n\nLookUpTable3D.status\n\n\n\nLookUpTable3D.use_default_search_radius\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.html#examples-using-lookuptable3d",
        "title": "LookUpTable3D > Examples using LookUpTable3D",
        "section": "Examples using LookUpTable3D",
        "text": "sphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nExamples using LookUpTable3D"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.id",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.id",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.id.html#ansys.acp.core.SolidElementSet.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property SolidElementSet.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.select_all_plies",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.select_all_plies.html#select_all_plies",
        "title": "select_all_plies",
        "section": "select_all_plies",
        "text": "select_all_plies"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.select_all_plies",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.select_all_plies.html#ansys.acp.core.LayupMappingObject.select_all_plies",
        "title": "select_all_plies > select_all_plies > select_all_plies",
        "section": "select_all_plies > select_all_plies",
        "text": "property LayupMappingObject.select_all_plies: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2.html#g23_2",
        "title": "G23_2",
        "section": "G23_2",
        "text": "G23_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2",
        "title": "G23_2 > G23_2 > G23_2",
        "section": "G23_2 > G23_2",
        "text": "property ConstantWovenCharacterization.G23_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.replace",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.replace.html#replace",
        "title": "replace",
        "section": "replace",
        "text": "Return a copy with all occurrences of substring old replaced by new.\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\nIf the optional argument count is given, only the first count occurrences are\nreplaced.\nreplace"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.replace",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.replace.html#ansys.acp.core.LaunchMode.replace",
        "title": "replace > replace > replace",
        "section": "replace > replace",
        "text": "LaunchMode.replace(old, new, count=-1, /)\n\nReturn a copy with all occurrences of substring old replaced by new.\n\ncount\n\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are\nreplaced.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2.html#fracture_toughness_mode_2",
        "title": "fracture_toughness_mode_2",
        "section": "fracture_toughness_mode_2",
        "text": "fracture_toughness_mode_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2",
        "title": "fracture_toughness_mode_2 > fracture_toughness_mode_2 > fracture_toughness_mode_2",
        "section": "fracture_toughness_mode_2 > fracture_toughness_mode_2",
        "text": "property VariableLaRCConstants.fracture_toughness_mode_2: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc.html#xc",
        "title": "Xc",
        "section": "Xc",
        "text": "Xc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc",
        "title": "Xc > Xc > Xc",
        "section": "Xc > Xc",
        "text": "property VariableWovenStressLimits.Xc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxz.html#sxz",
        "title": "Sxz",
        "section": "Sxz",
        "text": "Sxz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxz.html#ansys.acp.core.material_property_sets.VariableStressLimits.Sxz",
        "title": "Sxz > Sxz > Sxz",
        "section": "Sxz > Sxz",
        "text": "property VariableStressLimits.Sxz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.wait",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.wait.html#wait",
        "title": "wait",
        "section": "wait",
        "text": "Wait for the ACP instance to respond.\nRepeatedly checks if the ACP instance is running, returning as\nsoon as it is running.\ntimeout (float) – Wait time before raising an exception.\nRuntimeError – In case the server still has not responded after timeout seconds.\nwait\ntimeout"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.wait",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.wait.html#ansys.acp.core.ACPInstance.wait",
        "title": "wait > wait > wait",
        "section": "wait > wait",
        "text": "ACPInstance.wait(timeout)\n\nWait for the ACP instance to respond.\n\nRepeatedly checks if the ACP instance is running, returning as\nsoon as it is running.\n\nParameters\n\ntimeout (float) – Wait time before raising an exception.\n\nRaises\n\nRuntimeError – In case the server still has not responded after timeout seconds.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.html#tubeselectionrule",
        "title": "TubeSelectionRule",
        "section": "TubeSelectionRule",
        "text": "Instantiate a Tube Selection Rule.\nname (str) – Name of the Tube Selection Rule.\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\nouter_radius (float) – Outer radius of the tube.\ninner_radius (float) – Inner radius of the tube.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nextend_endings (bool) – Enable this option to extend the endings of the tube.\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\nAdded in ACP server version 24.2.\nTubeSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nTubeSelectionRule.delete()\nDelete the object.\nTubeSelectionRule.store(parent)\nStore the object on the server.\nTubeSelectionRule.edge_set\n\nTubeSelectionRule.elemental_data\n\nTubeSelectionRule.extend_endings\n\nTubeSelectionRule.head\n\nTubeSelectionRule.head_extension\n\nTubeSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nTubeSelectionRule.include_rule\n\nTubeSelectionRule.inner_radius\n\nTubeSelectionRule.mesh\nFull mesh associated with the object.\nTubeSelectionRule.name\nThe name of the object.\nTubeSelectionRule.nodal_data\n\nTubeSelectionRule.outer_radius\n\nTubeSelectionRule.parent\nThe parent of the object.\nTubeSelectionRule.shell_mesh\nShell mesh associated with the object.\nTubeSelectionRule.status\n\nTubeSelectionRule.symmetrical_extension\n\nTubeSelectionRule.tail_extension\n\nTubeSelectionRule\nFalse\nTubeSelectionRule.clone\nTubeSelectionRule.delete\nTubeSelectionRule.store\nTubeSelectionRule.edge_set\nTubeSelectionRule.elemental_data\nTubeSelectionRule.extend_endings\nTubeSelectionRule.head\nTubeSelectionRule.head_extension\nTubeSelectionRule.id\nTubeSelectionRule.include_rule\nTubeSelectionRule.inner_radius\nTubeSelectionRule.mesh\nTubeSelectionRule.name\nTubeSelectionRule.nodal_data\nTubeSelectionRule.outer_radius\nTubeSelectionRule.parent\nTubeSelectionRule.shell_mesh\nTubeSelectionRule.status\nTubeSelectionRule.symmetrical_extension\nTubeSelectionRule.tail_extension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.html#ansys.acp.core.TubeSelectionRule",
        "title": "TubeSelectionRule > TubeSelectionRule > TubeSelectionRule",
        "section": "TubeSelectionRule > TubeSelectionRule",
        "text": "class ansys.acp.core.TubeSelectionRule(*, name='TubeSelectionrule', edge_set=None, outer_radius=1.0, inner_radius=0.0, include_rule=True, extend_endings=False, symmetrical_extension=True, head=(0.0, 0.0, 0.0), head_extension=0.0, tail_extension=0.0)\n\nInstantiate a Tube Selection Rule.\n\nParameters\n\nname (str) – Name of the Tube Selection Rule.\n\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\n\nouter_radius (float) – Outer radius of the tube.\n\ninner_radius (float) – Inner radius of the tube.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nextend_endings (bool) – Enable this option to extend the endings of the tube.\n\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\n\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\n\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\n\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nTubeSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nTubeSelectionRule.delete()\n\nDelete the object.\n\nTubeSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nTubeSelectionRule.edge_set\n\n\n\nTubeSelectionRule.elemental_data\n\n\n\nTubeSelectionRule.extend_endings\n\n\n\nTubeSelectionRule.head\n\n\n\nTubeSelectionRule.head_extension\n\n\n\nTubeSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nTubeSelectionRule.include_rule\n\n\n\nTubeSelectionRule.inner_radius\n\n\n\nTubeSelectionRule.mesh\n\nFull mesh associated with the object.\n\nTubeSelectionRule.name\n\nThe name of the object.\n\nTubeSelectionRule.nodal_data\n\n\n\nTubeSelectionRule.outer_radius\n\n\n\nTubeSelectionRule.parent\n\nThe parent of the object.\n\nTubeSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nTubeSelectionRule.status\n\n\n\nTubeSelectionRule.symmetrical_extension\n\n\n\nTubeSelectionRule.tail_extension\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.html#examples-using-tubeselectionrule",
        "title": "TubeSelectionRule > Examples using TubeSelectionRule",
        "section": "Examples using TubeSelectionRule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nExamples using TubeSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type.html#mat_type",
        "title": "mat_type",
        "section": "mat_type",
        "text": "mat_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type",
        "title": "mat_type > mat_type > mat_type",
        "section": "mat_type > mat_type",
        "text": "property ConstantPuckConstants.mat_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.all_elements",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.all_elements.html#all_elements",
        "title": "all_elements",
        "section": "all_elements",
        "text": "all_elements"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.all_elements",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.all_elements.html#ansys.acp.core.ShellMappingProperties.all_elements",
        "title": "all_elements > all_elements > all_elements",
        "section": "all_elements > all_elements",
        "text": "ShellMappingProperties.all_elements: bool = True\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.BooleanSelectionRule.name.html#ansys.acp.core.BooleanSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property BooleanSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.html#drapingmaterialmodel",
        "title": "DrapingMaterialModel",
        "section": "DrapingMaterialModel",
        "text": "Options for the material type used in the draping algorithm.\nDrapingMaterialModel.WOVEN\n\nDrapingMaterialModel.UD\n\nDrapingMaterialModel\nDrapingMaterialModel.WOVEN\nDrapingMaterialModel.UD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.html#ansys.acp.core.DrapingMaterialModel",
        "title": "DrapingMaterialModel > DrapingMaterialModel > DrapingMaterialModel",
        "section": "DrapingMaterialModel > DrapingMaterialModel",
        "text": "class ansys.acp.core.DrapingMaterialModel(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the material type used in the draping algorithm.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDrapingMaterialModel.WOVEN\n\n\n\nDrapingMaterialModel.UD\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Syz.html#syz",
        "title": "Syz",
        "section": "Syz",
        "text": "Syz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Syz.html#ansys.acp.core.material_property_sets.VariableStressLimits.Syz",
        "title": "Syz > Syz > Syz",
        "section": "Syz > Syz",
        "text": "property VariableStressLimits.Syz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#manage-input-and-output-files",
        "title": "Manage input and output files",
        "section": "Manage input and output files",
        "text": "When defining your workflow using PyACP and other tools, you may need control\nover where the input and output files are stored. There are two main ways to\nmanage files: auto-transfer mode and manual file management.\nWhen using a local ACP instance (\"direct\" launch mode), the auto-transfer\nand manual modes are identical, as long as the current working directory is\nnot changed after launching the ACP instance.\nManage input and output files\n\"direct\""
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#auto-transfer-mode",
        "title": "Manage input and output files > Auto-transfer mode",
        "section": "Auto-transfer mode",
        "text": "When passing the auto_transfer_files=True parameter to launch_acp()\n(the default behavior), PyACP automatically uploads files to the ACP instance\nand downloads output files to the local machine.\nPaths passed to the PyACP functions are all paths on the local machine. They\ncan be either absolute paths, or relative to the current working directory of\nthe Python instance.\nThe only exception is the external_path attribute of the CADGeometry\nand ImportedSolidModel classes. This attribute refers to a path on the\nserver side. It can again be an absolute path, or relative to the ACP instance’s\nworking directory.\nYou can instead use the CADGeometry.refresh() and\nImportedSolidModel.refresh() methods to define the input file, which also\nhandles the upload automatically.\nOn local ACP instances, the up- and download methods simply convert the\npaths to be relative to the ACP instance’s working directory if needed.\nAuto-transfer mode\nauto_transfer_files=True\nlaunch_acp()\nexternal_path\nCADGeometry\nImportedSolidModel\nCADGeometry.refresh()\nImportedSolidModel.refresh()"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#loading-input-files",
        "title": "Manage input and output files > Loading input files",
        "section": "Loading input files",
        "text": "To load an input file, pass its path on your local machine to the\nimport_model() method:\nLoading input files\nimport_model()"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#getting-output-files",
        "title": "Manage input and output files > Getting output files",
        "section": "Getting output files",
        "text": "When getting output files, pass the desired path on your local machine to the\nexport / save method.\nGetting output files"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#manual-file-management",
        "title": "Manage input and output files > Manual file management",
        "section": "Manual file management",
        "text": "When passing auto_transfer_files=False to launch_acp(), PyACP does not\nautomatically upload or download files.\nIn this case, you need to manually manage the up- and download of files, as\ndescribed in the following sections.\nManual file management\nauto_transfer_files=False\nlaunch_acp()"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#loading-input-files",
        "title": "Manage input and output files > Loading input files",
        "section": "Loading input files",
        "text": "You can manually load the input_file.cdb file to the ACP instance by\nusing the upload_file() method:\nThis method returns the path of the uploaded file on the server. You can\nuse the path to create a model:\nLoading input files\ninput_file.cdb\nupload_file()"
    },
    {
        "objectID": "user_guide/howto/file_management",
        "href": "user_guide/howto/file_management.html#getting-output-files",
        "title": "Manage input and output files > Getting output files",
        "section": "Getting output files",
        "text": "To get the ACPH5 file, it must be stored on the server. You can\nmanually do that using the model’s save() method:\nThen, you can download the file using the download_file() method of the ACP\ninstance:\nGetting output files\nsave()\ndownload_file()"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.id.html#ansys.acp.core.ImportedSolidModel.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ImportedSolidModel.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE.html#modeling_ply_wise",
        "title": "MODELING_PLY_WISE",
        "section": "MODELING_PLY_WISE",
        "text": "MODELING_PLY_WISE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE.html#ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE",
        "title": "MODELING_PLY_WISE > MODELING_PLY_WISE > MODELING_PLY_WISE",
        "section": "MODELING_PLY_WISE > MODELING_PLY_WISE",
        "text": "ExtrusionMethod.MODELING_PLY_WISE = 'modeling_ply_wise'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.name",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.name.html#ansys.acp.core.SnapToGeometry.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SnapToGeometry.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.html#lookuptable1d",
        "title": "LookUpTable1D",
        "section": "LookUpTable1D",
        "text": "Instantiate a 1D Look-Up Table.\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\nis automatically created when the look-up table is instantiated\ncannot be deleted or renamed\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\nAdded in ACP server version 24.2.\nLookUpTable1D.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nLookUpTable1D.create_column(*[, name, ...])\nInstantiate a Column of a 1D Look-Up Table.\nLookUpTable1D.delete()\nDelete the object.\nLookUpTable1D.store(parent)\nStore the object on the server.\nLookUpTable1D.columns\n\nLookUpTable1D.direction\n\nLookUpTable1D.id\nIdentifier of the object, used for example as key in maps.\nLookUpTable1D.name\nThe name of the object.\nLookUpTable1D.origin\n\nLookUpTable1D.parent\nThe parent of the object.\nLookUpTable1D.status\n\nLookUpTable1D\nLocation\nN\n(N, )\nLocation\nNaN\nLookUpTable1D.clone\nLookUpTable1D.create_column\nLookUpTable1D.delete\nLookUpTable1D.store\nLookUpTable1D.columns\nLookUpTable1D.direction\nLookUpTable1D.id\nLookUpTable1D.name\nLookUpTable1D.origin\nLookUpTable1D.parent\nLookUpTable1D.status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.html#ansys.acp.core.LookUpTable1D",
        "title": "LookUpTable1D > LookUpTable1D > LookUpTable1D",
        "section": "LookUpTable1D > LookUpTable1D",
        "text": "class ansys.acp.core.LookUpTable1D(*, name='LookUpTable1D', origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0))\n\nInstantiate a 1D Look-Up Table.\n\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\n\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\n\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nLookUpTable1D.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nLookUpTable1D.create_column(*[, name, ...])\n\nInstantiate a Column of a 1D Look-Up Table.\n\nLookUpTable1D.delete()\n\nDelete the object.\n\nLookUpTable1D.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nLookUpTable1D.columns\n\n\n\nLookUpTable1D.direction\n\n\n\nLookUpTable1D.id\n\nIdentifier of the object, used for example as key in maps.\n\nLookUpTable1D.name\n\nThe name of the object.\n\nLookUpTable1D.origin\n\n\n\nLookUpTable1D.parent\n\nThe parent of the object.\n\nLookUpTable1D.status\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1D",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1D.html#examples-using-lookuptable1d",
        "title": "LookUpTable1D > Examples using LookUpTable1D",
        "section": "Examples using LookUpTable1D",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using LookUpTable1D"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.minimum_volume",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.minimum_volume.html#minimum_volume",
        "title": "minimum_volume",
        "section": "minimum_volume",
        "text": "minimum_volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.minimum_volume",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.minimum_volume.html#ansys.acp.core.SolidModel.minimum_volume",
        "title": "minimum_volume > minimum_volume > minimum_volume",
        "section": "minimum_volume > minimum_volume",
        "text": "property SolidModel.minimum_volume: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance.html#relative_in_plane_tolerance",
        "title": "relative_in_plane_tolerance",
        "section": "relative_in_plane_tolerance",
        "text": "relative_in_plane_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance.html#ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance",
        "title": "relative_in_plane_tolerance > relative_in_plane_tolerance > relative_in_plane_tolerance",
        "section": "relative_in_plane_tolerance > relative_in_plane_tolerance",
        "text": "ShellMappingProperties.relative_in_plane_tolerance: float = 0.01\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.html#arrowtype",
        "title": "ArrowType",
        "section": "ArrowType",
        "text": "Options for the type of arrow to be created for directions in the ply geometry export.\nArrowType.NO_ARROW\n\nArrowType.HALF_ARROW\n\nArrowType.STANDARD_ARROW\n\nArrowType\nArrowType.NO_ARROW\nArrowType.HALF_ARROW\nArrowType.STANDARD_ARROW"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.html#ansys.acp.core.ArrowType",
        "title": "ArrowType > ArrowType > ArrowType",
        "section": "ArrowType > ArrowType",
        "text": "class ansys.acp.core.ArrowType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of arrow to be created for directions in the ply geometry export.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nArrowType.NO_ARROW\n\n\n\nArrowType.HALF_ARROW\n\n\n\nArrowType.STANDARD_ARROW\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.thickness.html#thickness",
        "title": "thickness",
        "section": "thickness",
        "text": "thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.thickness",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.thickness.html#ansys.acp.core.mesh_data.ModelElementalData.thickness",
        "title": "thickness > thickness > thickness",
        "section": "thickness > thickness",
        "text": "ModelElementalData.thickness: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rstrip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rstrip.html#rstrip",
        "title": "rstrip",
        "section": "rstrip",
        "text": "Return a copy of the string with trailing whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nrstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rstrip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rstrip.html#ansys.acp.core.material_property_sets.PuckMaterialType.rstrip",
        "title": "rstrip > rstrip > rstrip",
        "section": "rstrip > rstrip",
        "text": "PuckMaterialType.rstrip(chars=None, /)\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation.html#orientation",
        "title": "orientation",
        "section": "orientation",
        "text": "orientation"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation",
        "title": "orientation > orientation > orientation",
        "section": "orientation > orientation",
        "text": "OrientedSelectionSetElementalData.orientation: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.active",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.active",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.active.html#ansys.acp.core.ImportedModelingPly.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property ImportedModelingPly.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#direction-definition",
        "title": "Direction definition",
        "section": "Direction definition",
        "text": "This example shows how to define directions from lookup tables. They can be either\nreference directions for oriented selection sets or draping angles for modeling plies.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nDirection definition"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#import-modules",
        "title": "Direction definition > Import modules",
        "section": "Import modules",
        "text": "Import the standard library and third-party dependencies.\nImport the PyACP dependencies.\nImport modules"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#start-acp-and-load-the-model",
        "title": "Direction definition > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "Get the example file from the server.\nLaunch the PyACP server and connect to it.\nImport the model from the input file.\nThis example’s input file contains a flat plate.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#setup-materials-and-oriented-selection-set",
        "title": "Direction definition > Setup materials and oriented selection set",
        "section": "Setup materials and oriented selection set",
        "text": "Create a material and fabric.\nCreate a parallel rosette.\nCreate an oriented selection set (OSS) and assign the rosette.\nPlot the orientation and reference direction of the OSS.\nThe reference direction is defined by the rosette.\nSetup materials and oriented selection set"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#define-reference-direction-from-lookup-table",
        "title": "Direction definition > Define reference direction from lookup table",
        "section": "Define reference direction from lookup table",
        "text": "Create a 3D lookup table to store the direction and angle corrections.\nCreate a grid of points on the plate where the lookup table values are stored.\nCompute the directions tangential to circles around the point (0,0,0).\nCreate the lookup table and add the direction data.\nAssign the lookup table to the OSS.\nPlot the orientation and the reference direction of the OSS.\nReset the OSS so that it may use the rosette again for the reference direction.\nDefine reference direction from lookup table"
    },
    {
        "objectID": "examples/modeling_features/005-ply-direction-lookup-table",
        "href": "examples/modeling_features/005-ply-direction-lookup-table.html#define-draping-angles-from-lookup-table",
        "title": "Direction definition > Define draping angles from lookup table",
        "section": "Define draping angles from lookup table",
        "text": "%%\nCompute a correction angle to define circular fiber paths.\nCompute the transverse correction angle, assuming a constant shear angle of -30°.\nCreate a modeling ply with the angle corrections.\nPlot the directions of the modeling ply. First, plot the directions without correction angles.\nNext, plot the draped directions, including the correction angles, from the lookup table.\nTotal running time of the script: (0 minutes 3.553 seconds)\nDownload Jupyter notebook: 005-ply-direction-lookup-table.ipynb\nDownload Python source code: 005-ply-direction-lookup-table.py\nDownload zipped: 005-ply-direction-lookup-table.zip\nGallery generated by Sphinx-Gallery\nDefine draping angles from lookup table\nDownload Jupyter notebook: 005-ply-direction-lookup-table.ipynb\nDownload Python source code: 005-ply-direction-lookup-table.py\nDownload zipped: 005-ply-direction-lookup-table.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.name",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.name.html#ansys.acp.core.SphericalSelectionRule.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SphericalSelectionRule.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.html#reinforcingbehavior",
        "title": "ReinforcingBehavior",
        "section": "ReinforcingBehavior",
        "text": "Specifies whether the reinforcing elements carry tension and compression load, or only one of them.\nReinforcingBehavior.TENSION_AND_COMPRESSION\n\nReinforcingBehavior.TENSION_ONLY\n\nReinforcingBehavior.COMPRESSION_ONLY\n\nReinforcingBehavior\nReinforcingBehavior.TENSION_AND_COMPRESSION\nReinforcingBehavior.TENSION_ONLY\nReinforcingBehavior.COMPRESSION_ONLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.html#ansys.acp.core.ReinforcingBehavior",
        "title": "ReinforcingBehavior > ReinforcingBehavior > ReinforcingBehavior",
        "section": "ReinforcingBehavior > ReinforcingBehavior",
        "text": "class ansys.acp.core.ReinforcingBehavior(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nSpecifies whether the reinforcing elements carry tension and compression load, or only one of them.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nReinforcingBehavior.TENSION_AND_COMPRESSION\n\n\n\nReinforcingBehavior.TENSION_ONLY\n\n\n\nReinforcingBehavior.COMPRESSION_ONLY\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.store",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.store.html#ansys.acp.core.ImportedSolidModel.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ImportedSolidModel.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule.html#create_cut_off_selection_rule",
        "title": "create_cut_off_selection_rule",
        "section": "create_cut_off_selection_rule",
        "text": "Instantiate a Cut-Off Selection Rule.\nname (str) – Name of the Cut-Off Selection Rule.\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\nangle (float) – Defines the angle between the cutting plane and the reference surface.\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\nCutOffSelectionRule\nAdded in ACP server version 24.2.\ncreate_cut_off_selection_rule\ncut_off_rule_type\ncut_off_rule_type\nCutOffRuleType.TAPER\nPlyCutOffType.PRODUCTION_PLY_CUTOFF\nPlyCutOffType.ANALYSIS_PLY_CUTOFF"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule.html#ansys.acp.core.Model.create_cut_off_selection_rule",
        "title": "create_cut_off_selection_rule > create_cut_off_selection_rule > create_cut_off_selection_rule",
        "section": "create_cut_off_selection_rule > create_cut_off_selection_rule",
        "text": "Model.create_cut_off_selection_rule(*, name='CutOffSelectionrule', cut_off_rule_type='geometry', cut_off_geometry=None, taper_edge_set=None, offset=0.0, angle=0.0, ply_cut_off_type='production_ply_cutoff', ply_tapering=False)\n\nInstantiate a Cut-Off Selection Rule.\n\nParameters\n\nname (str) – Name of the Cut-Off Selection Rule.\n\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\n\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\n\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\n\nangle (float) – Defines the angle between the cutting plane and the reference surface.\n\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\n\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\n\nReturn type\n\nCutOffSelectionRule\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule",
        "href": "api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule.html#examples-using-modelcreate_cut_off_selection_rule",
        "title": "create_cut_off_selection_rule > Examples using Model.create_cut_off_selection_rule",
        "section": "Examples using Model.create_cut_off_selection_rule",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using Model.create_cut_off_selection_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.parent.html#ansys.acp.core.ImportedAnalysisPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ImportedAnalysisPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.import_materials.html#import_materials",
        "title": "import_materials",
        "section": "import_materials",
        "text": "Import materials from a MatML file.\nImport materials from a MatML.xml (Engineering Data) file.\nOptionally, a material APDL file can be defined. This is a pre-generated\nsolver snippet, needed in case of variable materials or non-standard\nmaterial models. The snippet is used when exporting solid models or\nsurface section cuts in the CDB format.\nmatml_path (str | PathLike[str]) – File path to the MatML file.\nmaterial_apdl_path (str | PathLike[str] | None) – File path to the material APDL file.\nimport_materials\nMatML.xml"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.import_materials.html#ansys.acp.core.Model.import_materials",
        "title": "import_materials > import_materials > import_materials",
        "section": "import_materials > import_materials",
        "text": "Model.import_materials(matml_path, *, material_apdl_path=None)\n\nImport materials from a MatML file.\n\nImport materials from a MatML.xml (Engineering Data) file.\n\nOptionally, a material APDL file can be defined. This is a pre-generated\nsolver snippet, needed in case of variable materials or non-standard\nmaterial models. The snippet is used when exporting solid models or\nsurface section cuts in the CDB format.\n\nParameters\n\nmatml_path (str | PathLike[str]) – File path to the MatML file.\n\nmaterial_apdl_path (str | PathLike[str] | None) – File path to the material APDL file.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.import_materials",
        "href": "api/_autosummary/ansys.acp.core.Model.import_materials.html#examples-using-modelimport_materials",
        "title": "import_materials > Examples using Model.import_materials",
        "section": "Examples using Model.import_materials",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nExamples using Model.import_materials"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.element_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.element_index.html#element_index",
        "title": "element_index",
        "section": "element_index",
        "text": "element_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.element_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.element_index.html#ansys.acp.core.SolidModelExportSettings.element_index",
        "title": "element_index > element_index > element_index",
        "section": "element_index > element_index",
        "text": "property SolidModelExportSettings.element_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers.html#number_of_layers",
        "title": "number_of_layers",
        "section": "number_of_layers",
        "text": "number_of_layers"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers.html#ansys.acp.core.ModelingPly.number_of_layers",
        "title": "number_of_layers > number_of_layers > number_of_layers",
        "section": "number_of_layers > number_of_layers",
        "text": "property ModelingPly.number_of_layers: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers.html#examples-using-modelingplynumber_of_layers",
        "title": "number_of_layers > Examples using ModelingPly.number_of_layers",
        "section": "Examples using ModelingPly.number_of_layers",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using ModelingPly.number_of_layers"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.LINE",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.LINE.html#line",
        "title": "LINE",
        "section": "LINE",
        "text": "LINE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.LINE",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometryDimension.LINE.html#ansys.acp.core.VirtualGeometryDimension.LINE",
        "title": "LINE > LINE > LINE",
        "section": "LINE > LINE",
        "text": "VirtualGeometryDimension.LINE = 'line'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.html#sphericalselectionrule",
        "title": "SphericalSelectionRule",
        "section": "SphericalSelectionRule",
        "text": "Instantiate a Spherical Selection Rule.\nname (str) – Name of the Spherical Selection Rule.\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\norigin (tuple[float, ...]) – Origin of the sphere.\nradius (float) – Radius of the sphere.\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\nAdded in ACP server version 24.2.\nSphericalSelectionRule.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSphericalSelectionRule.delete()\nDelete the object.\nSphericalSelectionRule.store(parent)\nStore the object on the server.\nSphericalSelectionRule.direction\n\nSphericalSelectionRule.elemental_data\n\nSphericalSelectionRule.id\nIdentifier of the object, used for example as key in maps.\nSphericalSelectionRule.include_rule\n\nSphericalSelectionRule.mesh\nFull mesh associated with the object.\nSphericalSelectionRule.name\nThe name of the object.\nSphericalSelectionRule.nodal_data\n\nSphericalSelectionRule.origin\n\nSphericalSelectionRule.parent\nThe parent of the object.\nSphericalSelectionRule.radius\n\nSphericalSelectionRule.relative_rule\n\nSphericalSelectionRule.rosette\n\nSphericalSelectionRule.shell_mesh\nShell mesh associated with the object.\nSphericalSelectionRule.status\n\nSphericalSelectionRule.use_global_coordinate_system\n\nSphericalSelectionRule\nuse_global_coordinate_system\nFalse\nSphericalSelectionRule.clone\nSphericalSelectionRule.delete\nSphericalSelectionRule.store\nSphericalSelectionRule.direction\nSphericalSelectionRule.elemental_data\nSphericalSelectionRule.id\nSphericalSelectionRule.include_rule\nSphericalSelectionRule.mesh\nSphericalSelectionRule.name\nSphericalSelectionRule.nodal_data\nSphericalSelectionRule.origin\nSphericalSelectionRule.parent\nSphericalSelectionRule.radius\nSphericalSelectionRule.relative_rule\nSphericalSelectionRule.rosette\nSphericalSelectionRule.shell_mesh\nSphericalSelectionRule.status\nSphericalSelectionRule.use_global_coordinate_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.html#ansys.acp.core.SphericalSelectionRule",
        "title": "SphericalSelectionRule > SphericalSelectionRule > SphericalSelectionRule",
        "section": "SphericalSelectionRule > SphericalSelectionRule",
        "text": "class ansys.acp.core.SphericalSelectionRule(*, name='SphericalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Spherical Selection Rule.\n\nParameters\n\nname (str) – Name of the Spherical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the sphere.\n\nradius (float) – Radius of the sphere.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSphericalSelectionRule.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSphericalSelectionRule.delete()\n\nDelete the object.\n\nSphericalSelectionRule.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSphericalSelectionRule.direction\n\n\n\nSphericalSelectionRule.elemental_data\n\n\n\nSphericalSelectionRule.id\n\nIdentifier of the object, used for example as key in maps.\n\nSphericalSelectionRule.include_rule\n\n\n\nSphericalSelectionRule.mesh\n\nFull mesh associated with the object.\n\nSphericalSelectionRule.name\n\nThe name of the object.\n\nSphericalSelectionRule.nodal_data\n\n\n\nSphericalSelectionRule.origin\n\n\n\nSphericalSelectionRule.parent\n\nThe parent of the object.\n\nSphericalSelectionRule.radius\n\n\n\nSphericalSelectionRule.relative_rule\n\n\n\nSphericalSelectionRule.rosette\n\n\n\nSphericalSelectionRule.shell_mesh\n\nShell mesh associated with the object.\n\nSphericalSelectionRule.status\n\n\n\nSphericalSelectionRule.use_global_coordinate_system\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.html#examples-using-sphericalselectionrule",
        "title": "SphericalSelectionRule > Examples using SphericalSelectionRule",
        "section": "Examples using SphericalSelectionRule",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nExamples using SphericalSelectionRule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1.html#g23_1",
        "title": "G23_1",
        "section": "G23_1",
        "text": "G23_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1",
        "title": "G23_1 > G23_1 > G23_1",
        "section": "G23_1 > G23_1",
        "text": "property ConstantWovenCharacterization.G23_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.name",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.name.html#ansys.acp.core.LookUpTable3D.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property LookUpTable3D.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.cad_geometry.html#cad_geometry",
        "title": "cad_geometry",
        "section": "cad_geometry",
        "text": "cad_geometry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.cad_geometry",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.cad_geometry.html#ansys.acp.core.ExtrusionGuide.cad_geometry",
        "title": "cad_geometry > cad_geometry > cad_geometry",
        "section": "cad_geometry > cad_geometry",
        "text": "property ExtrusionGuide.cad_geometry: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_DAT",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_DAT.html#ansys_dat",
        "title": "ANSYS_DAT",
        "section": "ANSYS_DAT",
        "text": "ANSYS_DAT"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_DAT",
        "href": "api/_autosummary/ansys.acp.core.FeFormat.ANSYS_DAT.html#ansys.acp.core.FeFormat.ANSYS_DAT",
        "title": "ANSYS_DAT > ANSYS_DAT > ANSYS_DAT",
        "section": "ANSYS_DAT > ANSYS_DAT",
        "text": "FeFormat.ANSYS_DAT = 'ansys:dat'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.relative_merge_tolerance",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.relative_merge_tolerance.html#relative_merge_tolerance",
        "title": "relative_merge_tolerance",
        "section": "relative_merge_tolerance",
        "text": "relative_merge_tolerance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.relative_merge_tolerance",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.relative_merge_tolerance.html#ansys.acp.core.CutOffGeometry.relative_merge_tolerance",
        "title": "relative_merge_tolerance > relative_merge_tolerance > relative_merge_tolerance",
        "section": "relative_merge_tolerance > relative_merge_tolerance",
        "text": "property CutOffGeometry.relative_merge_tolerance: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.strip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.strip.html#strip",
        "title": "strip",
        "section": "strip",
        "text": "Return a copy of the string with leading and trailing whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.strip",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.strip.html#ansys.acp.core.LaunchMode.strip",
        "title": "strip > strip > strip",
        "section": "strip > strip",
        "text": "LaunchMode.strip(chars=None, /)\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy.html#sxy",
        "title": "Sxy",
        "section": "Sxy",
        "text": "Sxy"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy.html#ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy",
        "title": "Sxy > Sxy > Sxy",
        "section": "Sxy > Sxy",
        "text": "property ConstantStressLimits.Sxy: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.id",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ExtrusionGuide.id",
        "href": "api/_autosummary/ansys.acp.core.ExtrusionGuide.id.html#ansys.acp.core.ExtrusionGuide.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ExtrusionGuide.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.join",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.join.html#join",
        "title": "join",
        "section": "join",
        "text": "Concatenate any number of strings.\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’\njoin"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.join",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.join.html#ansys.acp.core.material_property_sets.PuckMaterialType.join",
        "title": "join > join > join",
        "section": "join > join",
        "text": "PuckMaterialType.join(iterable, /)\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.status.html#ansys.acp.core.ImportedModelingPly.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ImportedModelingPly.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels.html#ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "SolidElementSetElementalData.element_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.NO_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.NO_ARROW.html#no_arrow",
        "title": "NO_ARROW",
        "section": "NO_ARROW",
        "text": "NO_ARROW"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ArrowType.NO_ARROW",
        "href": "api/_autosummary/ansys.acp.core.ArrowType.NO_ARROW.html#ansys.acp.core.ArrowType.NO_ARROW",
        "title": "NO_ARROW > NO_ARROW > NO_ARROW",
        "section": "NO_ARROW > NO_ARROW",
        "text": "ArrowType.NO_ARROW = 'no_arrow'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.clone.html#ansys.acp.core.SphericalSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SphericalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.ORIENTATION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.ORIENTATION.html#orientation",
        "title": "ORIENTATION",
        "section": "ORIENTATION",
        "text": "ORIENTATION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.ORIENTATION",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.ORIENTATION.html#ansys.acp.core.ElementalDataType.ORIENTATION",
        "title": "ORIENTATION > ORIENTATION > ORIENTATION",
        "section": "ORIENTATION > ORIENTATION",
        "text": "ElementalDataType.ORIENTATION = 'orientation'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.orientation_type",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.orientation_type.html#orientation_type",
        "title": "orientation_type",
        "section": "orientation_type",
        "text": "orientation_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.orientation_type",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.orientation_type.html#ansys.acp.core.SnapToGeometry.orientation_type",
        "title": "orientation_type > orientation_type > orientation_type",
        "section": "orientation_type > orientation_type",
        "text": "property SnapToGeometry.orientation_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.relative_rule.html#relative_rule",
        "title": "relative_rule",
        "section": "relative_rule",
        "text": "relative_rule"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.relative_rule",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.relative_rule.html#ansys.acp.core.ParallelSelectionRule.relative_rule",
        "title": "relative_rule > relative_rule > relative_rule",
        "section": "relative_rule > relative_rule",
        "text": "property ParallelSelectionRule.relative_rule: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_material.html#drop_off_material",
        "title": "drop_off_material",
        "section": "drop_off_material",
        "text": "drop_off_material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_material",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.drop_off_material.html#ansys.acp.core.SolidModel.drop_off_material",
        "title": "drop_off_material > drop_off_material > drop_off_material",
        "section": "drop_off_material > drop_off_material",
        "text": "property SolidModel.drop_off_material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable1DColumn.id.html#ansys.acp.core.LookUpTable1DColumn.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LookUpTable1DColumn.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.clone",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.clone.html#ansys.acp.core.LookUpTable3D.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "LookUpTable3D.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.name",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CADComponent.name",
        "href": "api/_autosummary/ansys.acp.core.CADComponent.name.html#ansys.acp.core.CADComponent.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property CADComponent.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariableWovenCharacterization.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_characterization",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_characterization.html#woven_characterization",
        "title": "woven_characterization",
        "section": "woven_characterization",
        "text": "woven_characterization"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.woven_characterization",
        "href": "api/_autosummary/ansys.acp.core.Material.woven_characterization.html#ansys.acp.core.Material.woven_characterization",
        "title": "woven_characterization > woven_characterization > woven_characterization",
        "section": "woven_characterization > woven_characterization",
        "text": "property Material.woven_characterization: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.use_default_draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.use_default_draping_mesh_size.html#use_default_draping_mesh_size",
        "title": "use_default_draping_mesh_size",
        "section": "use_default_draping_mesh_size",
        "text": "use_default_draping_mesh_size"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.use_default_draping_mesh_size",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.use_default_draping_mesh_size.html#ansys.acp.core.ModelingPly.use_default_draping_mesh_size",
        "title": "use_default_draping_mesh_size > use_default_draping_mesh_size > use_default_draping_mesh_size",
        "section": "use_default_draping_mesh_size > use_default_draping_mesh_size",
        "text": "property ModelingPly.use_default_draping_mesh_size: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transfer_all_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transfer_all_sets.html#transfer_all_sets",
        "title": "transfer_all_sets",
        "section": "transfer_all_sets",
        "text": "transfer_all_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transfer_all_sets",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.transfer_all_sets.html#ansys.acp.core.SolidModelExportSettings.transfer_all_sets",
        "title": "transfer_all_sets > transfer_all_sets > transfer_all_sets",
        "section": "transfer_all_sets > transfer_all_sets",
        "text": "property SolidModelExportSettings.transfer_all_sets: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.element_technology",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.element_technology.html#element_technology",
        "title": "element_technology",
        "section": "element_technology",
        "text": "element_technology"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.element_technology",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.element_technology.html#ansys.acp.core.LayupMappingObject.element_technology",
        "title": "element_technology > element_technology > element_technology",
        "section": "element_technology > element_technology",
        "text": "property LayupMappingObject.element_technology: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rotation_angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rotation_angle.html#rotation_angle",
        "title": "rotation_angle",
        "section": "rotation_angle",
        "text": "rotation_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rotation_angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.rotation_angle.html#ansys.acp.core.ImportedModelingPly.rotation_angle",
        "title": "rotation_angle > rotation_angle > rotation_angle",
        "section": "rotation_angle > rotation_angle",
        "text": "property ImportedModelingPly.rotation_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.coordinate_system_index.html#coordinate_system_index",
        "title": "coordinate_system_index",
        "section": "coordinate_system_index",
        "text": "coordinate_system_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.coordinate_system_index",
        "href": "api/_autosummary/ansys.acp.core.SolidModelExportSettings.coordinate_system_index.html#ansys.acp.core.SolidModelExportSettings.coordinate_system_index",
        "title": "coordinate_system_index > coordinate_system_index > coordinate_system_index",
        "section": "coordinate_system_index > coordinate_system_index",
        "text": "property SolidModelExportSettings.coordinate_system_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.html#acpinstance",
        "title": "ACPInstance",
        "section": "ACPInstance",
        "text": "Control an ACP instance.\nSupports the following operations to control an ACP instance:\nLoading and unloading ACP models\nUp- and download of files to the (possibly remote) ACP instance\nCheck if the ACP instance is running\nIn addition, the ACP instance may support starting, stopping,\nand restarting.\nNote that this class is not meant for instantiating directly.\nThe launch_acp() function should be used instead.\nACPInstance.check([timeout])\nCheck if the ACP instance is running.\nACPInstance.clear()\nClose all models.\nACPInstance.download_file(remote_path, ...)\nDownload a file from the server.\nACPInstance.import_model(path, *[, name, format])\nLoad an ACP model from a file.\nACPInstance.restart([stop_timeout])\nStop, then start the product instance.\nACPInstance.start()\nStart the product instance.\nACPInstance.stop(*[, timeout])\nStop the product instance.\nACPInstance.upload_file(local_path)\nUpload a file to the server.\nACPInstance.wait(timeout)\nWait for the ACP instance to respond.\nACPInstance.is_remote\nWhether the server is remote or local.\nACPInstance.models\nModels currently loaded on the server.\nACPInstance.server_version\nVersion of the connected server.\nACPInstance\nlaunch_acp()\nACPInstance.check\nACPInstance.clear\nACPInstance.download_file\nACPInstance.import_model\nACPInstance.restart\nACPInstance.start\nACPInstance.stop\nACPInstance.upload_file\nACPInstance.wait\nACPInstance.is_remote\nACPInstance.models\nACPInstance.server_version"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.html#ansys.acp.core.ACPInstance",
        "title": "ACPInstance > ACPInstance > ACPInstance",
        "section": "ACPInstance > ACPInstance",
        "text": "class ansys.acp.core.ACPInstance(*, server, channel, filetransfer_handler, is_remote)\n\nControl an ACP instance.\n\nSupports the following operations to control an ACP instance:\n\nLoading and unloading ACP models\n\nUp- and download of files to the (possibly remote) ACP instance\n\nCheck if the ACP instance is running\n\nIn addition, the ACP instance may support starting, stopping,\nand restarting.\n\nNote that this class is not meant for instantiating directly.\nThe launch_acp() function should be used instead.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nACPInstance.check([timeout])\n\nCheck if the ACP instance is running.\n\nACPInstance.clear()\n\nClose all models.\n\nACPInstance.download_file(remote_path, ...)\n\nDownload a file from the server.\n\nACPInstance.import_model(path, *[, name, format])\n\nLoad an ACP model from a file.\n\nACPInstance.restart([stop_timeout])\n\nStop, then start the product instance.\n\nACPInstance.start()\n\nStart the product instance.\n\nACPInstance.stop(*[, timeout])\n\nStop the product instance.\n\nACPInstance.upload_file(local_path)\n\nUpload a file to the server.\n\nACPInstance.wait(timeout)\n\nWait for the ACP instance to respond.\n\n\n\nAttributes\n\n\n\n\n\n\n\nACPInstance.is_remote\n\nWhether the server is remote or local.\n\nACPInstance.models\n\nModels currently loaded on the server.\n\nACPInstance.server_version\n\nVersion of the connected server.\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.html#examples-using-acpinstance",
        "title": "ACPInstance > Examples using ACPInstance",
        "section": "Examples using ACPInstance",
        "text": "sphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_001-materials.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using ACPInstance"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SnapToGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.SnapToGeometry.store.html#ansys.acp.core.SnapToGeometry.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "SnapToGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.angle",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.angle.html#ansys.acp.core.ImportedAnalysisPly.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property ImportedAnalysisPly.angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.format",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.format.html#format",
        "title": "format",
        "section": "format",
        "text": "Return a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’).\nformat"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.format",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.format.html#ansys.acp.core.LaunchMode.format",
        "title": "format > format > format",
        "section": "format > format",
        "text": "LaunchMode.format(*args, **kwargs) -> str\n\nReturn a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.element_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.element_index.html#element_index",
        "title": "element_index",
        "section": "element_index",
        "text": "element_index"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.element_index",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.element_index.html#ansys.acp.core.ImportedSolidModelExportSettings.element_index",
        "title": "element_index > element_index > element_index",
        "section": "element_index > element_index",
        "text": "property ImportedSolidModelExportSettings.element_index: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.direction.html#direction",
        "title": "direction",
        "section": "direction",
        "text": "direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.direction",
        "href": "api/_autosummary/ansys.acp.core.ParallelSelectionRule.direction.html#ansys.acp.core.ParallelSelectionRule.direction",
        "title": "direction > direction > direction",
        "section": "direction > direction",
        "text": "property ParallelSelectionRule.direction: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.status",
        "href": "api/_autosummary/ansys.acp.core.Fabric.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.status",
        "href": "api/_autosummary/ansys.acp.core.Fabric.status.html#ansys.acp.core.Fabric.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property Fabric.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.parent",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.parent.html#ansys.acp.core.ImportedProductionPly.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property ImportedProductionPly.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.mesh.html#ansys.acp.core.Model.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property Model.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.mesh",
        "href": "api/_autosummary/ansys.acp.core.Model.mesh.html#examples-using-modelmesh",
        "title": "mesh > Examples using Model.mesh",
        "section": "Examples using Model.mesh",
        "text": "sphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Model.mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_labels.html#ansys.acp.core.mesh_data.MeshData.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "MeshData.element_labels: ndarray[tuple[int, ...], dtype[int32]]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.TIME",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.TIME.html#time",
        "title": "TIME",
        "section": "TIME",
        "text": "TIME"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.TIME",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.TIME.html#ansys.acp.core.PhysicalDimension.TIME",
        "title": "TIME > TIME > TIME",
        "section": "TIME > TIME",
        "text": "PhysicalDimension.TIME = 'time'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format.html#format",
        "title": "format",
        "section": "format",
        "text": "Return a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’).\nformat"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format.html#ansys.acp.core.material_property_sets.PuckMaterialType.format",
        "title": "format > format > format",
        "section": "format > format",
        "text": "PuckMaterialType.format(*args, **kwargs) -> str\n\nReturn a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3.html#e3",
        "title": "E3",
        "section": "E3",
        "text": "E3"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3.html#ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3",
        "title": "E3 > E3 > E3",
        "section": "E3 > E3",
        "text": "property ConstantEngineeringConstants.E3: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.angle",
        "href": "api/_autosummary/ansys.acp.core.Lamina.angle.html#angle",
        "title": "angle",
        "section": "angle",
        "text": "Orientation angle in degree of the material with respect to the reference direction.\nangle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Lamina.angle",
        "href": "api/_autosummary/ansys.acp.core.Lamina.angle.html#ansys.acp.core.Lamina.angle",
        "title": "angle > angle > angle",
        "section": "angle > angle",
        "text": "property Lamina.angle: float\n\nOrientation angle in degree of the material with respect to the reference direction.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_point",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_point.html#orientation_point",
        "title": "orientation_point",
        "section": "orientation_point",
        "text": "orientation_point"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_point",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_point.html#ansys.acp.core.OrientedSelectionSet.orientation_point",
        "title": "orientation_point > orientation_point > orientation_point",
        "section": "orientation_point > orientation_point",
        "text": "property OrientedSelectionSet.orientation_point: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.element_sets",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.element_sets.html#element_sets",
        "title": "element_sets",
        "section": "element_sets",
        "text": "element_sets"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ShellMappingProperties.element_sets",
        "href": "api/_autosummary/ansys.acp.core.ShellMappingProperties.element_sets.html#ansys.acp.core.ShellMappingProperties.element_sets",
        "title": "element_sets > element_sets > element_sets",
        "section": "element_sets > element_sets",
        "text": "ShellMappingProperties.element_sets: Sequence[ElementSet] = ()\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STEP",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STEP.html#step",
        "title": "STEP",
        "section": "STEP",
        "text": "STEP"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STEP",
        "href": "api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STEP.html#ansys.acp.core.PlyGeometryExportFormat.STEP",
        "title": "STEP > STEP > STEP",
        "section": "STEP > STEP",
        "text": "PlyGeometryExportFormat.STEP = 'step'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options.html#interpolation_options",
        "title": "interpolation_options",
        "section": "interpolation_options",
        "text": "interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options.html#ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options",
        "title": "interpolation_options > interpolation_options > interpolation_options",
        "section": "interpolation_options > interpolation_options",
        "text": "property VariablePuckConstants.interpolation_options: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.id",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.id.html#ansys.acp.core.CylindricalSelectionRule.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property CylindricalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.mesh.html#mesh",
        "title": "mesh",
        "section": "mesh",
        "text": "Full mesh associated with the object.\nmesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.AnalysisPly.mesh",
        "href": "api/_autosummary/ansys.acp.core.AnalysisPly.mesh.html#ansys.acp.core.AnalysisPly.mesh",
        "title": "mesh > mesh > mesh",
        "section": "mesh > mesh",
        "text": "property AnalysisPly.mesh: MeshData\n\nFull mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle.html#design_angle",
        "title": "design_angle",
        "section": "design_angle",
        "text": "design_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle",
        "title": "design_angle > design_angle > design_angle",
        "section": "design_angle > design_angle",
        "text": "AnalysisPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "SolidElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scope_entire_model",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scope_entire_model.html#scope_entire_model",
        "title": "scope_entire_model",
        "section": "scope_entire_model",
        "text": "scope_entire_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.scope_entire_model",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.scope_entire_model.html#ansys.acp.core.SectionCut.scope_entire_model",
        "title": "scope_entire_model > scope_entire_model > scope_entire_model",
        "section": "scope_entire_model > scope_entire_model",
        "text": "property SectionCut.scope_entire_model: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.upper",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.upper.html#upper",
        "title": "upper",
        "section": "upper",
        "text": "Return a copy of the string converted to uppercase.\nupper"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.upper",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.upper.html#ansys.acp.core.material_property_sets.PuckMaterialType.upper",
        "title": "upper > upper > upper",
        "section": "upper > upper",
        "text": "PuckMaterialType.upper(/)\n\nReturn a copy of the string converted to uppercase.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.get_directions_plotter",
        "href": "api/_autosummary/ansys.acp.core.get_directions_plotter.html#get_directions_plotter",
        "title": "get_directions_plotter",
        "section": "get_directions_plotter",
        "text": "Get a pyvista plotter that shows the specified directions on the mesh.\nmodel (Model) – ACP model. Determines the average element size used for scaling the\narrows. Unless explicitly specified, the model also determines the\nmesh to plot.\nmesh (MeshData | None) – Mesh defining the scope of the plot. If not provided, the full mesh\nof the model is used.\ncomponents (Sequence[VectorData | None]) – List of components to plot.\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\nlength_factor (float) – Factor to scale the length of the arrows.\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\nPlotter\nget_directions_plotter\n1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.get_directions_plotter",
        "href": "api/_autosummary/ansys.acp.core.get_directions_plotter.html#ansys.acp.core.get_directions_plotter",
        "title": "get_directions_plotter > get_directions_plotter > get_directions_plotter",
        "section": "get_directions_plotter > get_directions_plotter",
        "text": "ansys.acp.core.get_directions_plotter(*, model, mesh=None, components, culling_factor=1, length_factor=1.0, **kwargs)\n\nGet a pyvista plotter that shows the specified directions on the mesh.\n\nParameters\n\nmodel (Model) – ACP model. Determines the average element size used for scaling the\narrows. Unless explicitly specified, the model also determines the\nmesh to plot.\n\nmesh (MeshData | None) – Mesh defining the scope of the plot. If not provided, the full mesh\nof the model is used.\n\ncomponents (Sequence[VectorData | None]) – List of components to plot.\n\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\n\nlength_factor (float) – Factor to scale the length of the arrows.\n\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\n\nReturn type\n\nPlotter\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.get_directions_plotter",
        "href": "api/_autosummary/ansys.acp.core.get_directions_plotter.html#examples-using-get_directions_plotter",
        "title": "get_directions_plotter > Examples using get_directions_plotter",
        "section": "Examples using get_directions_plotter",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\nExamples using get_directions_plotter"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.solid_models",
        "href": "api/_autosummary/ansys.acp.core.Model.solid_models.html#solid_models",
        "title": "solid_models",
        "section": "solid_models",
        "text": "solid_models"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.solid_models",
        "href": "api/_autosummary/ansys.acp.core.Model.solid_models.html#ansys.acp.core.Model.solid_models",
        "title": "solid_models > solid_models > solid_models",
        "section": "solid_models > solid_models",
        "text": "property Model.solid_models: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.clone",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.clone.html#ansys.acp.core.CutOffGeometry.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "CutOffGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.component_name",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.component_name.html#component_name",
        "title": "component_name",
        "section": "component_name",
        "text": "Name of the component.\ncomponent_name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.component_name",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.component_name.html#ansys.acp.core.mesh_data.VectorData.component_name",
        "title": "component_name > component_name > component_name",
        "section": "component_name > component_name",
        "text": "property VectorData.component_name: str\n\nName of the component.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.name",
        "href": "api/_autosummary/ansys.acp.core.Fabric.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.name",
        "href": "api/_autosummary/ansys.acp.core.Fabric.name.html#ansys.acp.core.Fabric.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Fabric.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.name",
        "href": "api/_autosummary/ansys.acp.core.Fabric.name.html#examples-using-fabricname",
        "title": "name > Examples using Fabric.name",
        "section": "Examples using Fabric.name",
        "text": "sphx_glr_examples_workflows_01-pymapdl-workflow.py\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\nExamples using Fabric.name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.html#variablestrainlimits",
        "title": "VariableStrainLimits",
        "section": "VariableStrainLimits",
        "text": "Variable strain limits material property set.\nAdded in ACP server version 24.2.\nVariableStrainLimits.eSxy\n\nVariableStrainLimits.eSxz\n\nVariableStrainLimits.eSyz\n\nVariableStrainLimits.eXc\n\nVariableStrainLimits.eXt\n\nVariableStrainLimits.eYc\n\nVariableStrainLimits.eYt\n\nVariableStrainLimits.eZc\n\nVariableStrainLimits.eZt\n\nVariableStrainLimits.effective_strain\n\nVariableStrainLimits.field_variables\n\nVariableStrainLimits.interpolation_options\n\nVariableStrainLimits\nVariableStrainLimits.eSxy\nVariableStrainLimits.eSxz\nVariableStrainLimits.eSyz\nVariableStrainLimits.eXc\nVariableStrainLimits.eXt\nVariableStrainLimits.eYc\nVariableStrainLimits.eYt\nVariableStrainLimits.eZc\nVariableStrainLimits.eZt\nVariableStrainLimits.effective_strain\nVariableStrainLimits.field_variables\nVariableStrainLimits.interpolation_options"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.html#ansys.acp.core.material_property_sets.VariableStrainLimits",
        "title": "VariableStrainLimits > VariableStrainLimits > VariableStrainLimits",
        "section": "VariableStrainLimits > VariableStrainLimits",
        "text": "class ansys.acp.core.material_property_sets.VariableStrainLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable strain limits material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableStrainLimits.eSxy\n\n\n\nVariableStrainLimits.eSxz\n\n\n\nVariableStrainLimits.eSyz\n\n\n\nVariableStrainLimits.eXc\n\n\n\nVariableStrainLimits.eXt\n\n\n\nVariableStrainLimits.eYc\n\n\n\nVariableStrainLimits.eYt\n\n\n\nVariableStrainLimits.eZc\n\n\n\nVariableStrainLimits.eZt\n\n\n\nVariableStrainLimits.effective_strain\n\n\n\nVariableStrainLimits.field_variables\n\n\n\nVariableStrainLimits.interpolation_options\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.status",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.status",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.status.html#ansys.acp.core.ButtJointSequence.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ButtJointSequence.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.delete",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.delete.html#ansys.acp.core.GeometricalSelectionRule.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "GeometricalSelectionRule.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.DISCARD",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.DISCARD.html#discard",
        "title": "DISCARD",
        "section": "DISCARD",
        "text": "DISCARD"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.DISCARD",
        "href": "api/_autosummary/ansys.acp.core.LinkedObjectHandling.DISCARD.html#ansys.acp.core.LinkedObjectHandling.DISCARD",
        "title": "DISCARD > DISCARD > DISCARD",
        "section": "DISCARD > DISCARD",
        "text": "LinkedObjectHandling.DISCARD = 'discard'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.id",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.id.html#ansys.acp.core.LookUpTable3DColumn.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property LookUpTable3DColumn.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY.html#compression_only",
        "title": "COMPRESSION_ONLY",
        "section": "COMPRESSION_ONLY",
        "text": "COMPRESSION_ONLY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY",
        "href": "api/_autosummary/ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY.html#ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY",
        "title": "COMPRESSION_ONLY > COMPRESSION_ONLY > COMPRESSION_ONLY",
        "section": "COMPRESSION_ONLY > COMPRESSION_ONLY",
        "text": "ReinforcingBehavior.COMPRESSION_ONLY = 'compression_only'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.symmetry",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.symmetry.html#symmetry",
        "title": "symmetry",
        "section": "symmetry",
        "text": "symmetry"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SubLaminate.symmetry",
        "href": "api/_autosummary/ansys.acp.core.SubLaminate.symmetry.html#ansys.acp.core.SubLaminate.symmetry",
        "title": "symmetry > symmetry > symmetry",
        "section": "symmetry > symmetry",
        "text": "property SubLaminate.symmetry: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.value_type",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.value_type.html#value_type",
        "title": "value_type",
        "section": "value_type",
        "text": "value_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.value_type",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.value_type.html#ansys.acp.core.LookUpTable3DColumn.value_type",
        "title": "value_type > value_type > value_type",
        "section": "value_type > value_type",
        "text": "property LookUpTable3DColumn.value_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.id",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ButtJointSequence.id",
        "href": "api/_autosummary/ansys.acp.core.ButtJointSequence.id.html#ansys.acp.core.ButtJointSequence.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ButtJointSequence.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.data",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.data.html#data",
        "title": "data",
        "section": "data",
        "text": "data"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.data",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.data.html#ansys.acp.core.LookUpTable3DColumn.data",
        "title": "data > data > data",
        "section": "data > data",
        "text": "property LookUpTable3DColumn.data: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "BooleanSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.html#booleanoperationtype",
        "title": "BooleanOperationType",
        "section": "BooleanOperationType",
        "text": "Options for combining selection rules.\nBooleanOperationType.INTERSECT\n\nBooleanOperationType.ADD\n\nBooleanOperationType.REMOVE\n\nBooleanOperationType\nBooleanOperationType.INTERSECT\nBooleanOperationType.ADD\nBooleanOperationType.REMOVE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.html#ansys.acp.core.BooleanOperationType",
        "title": "BooleanOperationType > BooleanOperationType > BooleanOperationType",
        "section": "BooleanOperationType > BooleanOperationType",
        "text": "class ansys.acp.core.BooleanOperationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for combining selection rules.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nBooleanOperationType.INTERSECT\n\n\n\nBooleanOperationType.ADD\n\n\n\nBooleanOperationType.REMOVE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.BooleanOperationType",
        "href": "api/_autosummary/ansys.acp.core.BooleanOperationType.html#examples-using-booleanoperationtype",
        "title": "BooleanOperationType > Examples using BooleanOperationType",
        "section": "Examples using BooleanOperationType",
        "text": "sphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nExamples using BooleanOperationType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.save",
        "href": "api/_autosummary/ansys.acp.core.Model.save.html#save",
        "title": "save",
        "section": "save",
        "text": "Save ACP Model (.acph5).\npath (str | PathLike[str]) – File path.\nsave_cache (bool) – Whether to store the update results such as Analysis Plies and solid models.\nsave"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.save",
        "href": "api/_autosummary/ansys.acp.core.Model.save.html#ansys.acp.core.Model.save",
        "title": "save > save > save",
        "section": "save > save",
        "text": "Model.save(path, *, save_cache=True)\n\nSave ACP Model (.acph5).\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nsave_cache (bool) – Whether to store the update results such as Analysis Plies and solid models.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.save",
        "href": "api/_autosummary/ansys.acp.core.Model.save.html#examples-using-modelsave",
        "title": "save > Examples using Model.save",
        "section": "Examples using Model.save",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Model.save"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.modeling_ply_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.modeling_ply_area.html#modeling_ply_area",
        "title": "modeling_ply_area",
        "section": "modeling_ply_area",
        "text": "The surface area of all Modeling Plies of the selected entity.\nmodeling_ply_area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.modeling_ply_area",
        "href": "api/_autosummary/ansys.acp.core.Sensor.modeling_ply_area.html#ansys.acp.core.Sensor.modeling_ply_area",
        "title": "modeling_ply_area > modeling_ply_area > modeling_ply_area",
        "section": "modeling_ply_area > modeling_ply_area",
        "text": "property Sensor.modeling_ply_area: Any\n\nThe surface area of all Modeling Plies of the selected entity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.ply_angle",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.ply_angle.html#ply_angle",
        "title": "ply_angle",
        "section": "ply_angle",
        "text": "ply_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.ply_angle",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.ply_angle.html#ansys.acp.core.ModelingPly.ply_angle",
        "title": "ply_angle > ply_angle > ply_angle",
        "section": "ply_angle > ply_angle",
        "text": "property ModelingPly.ply_angle: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.name",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.name",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.name.html#ansys.acp.core.SolidElementSet.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property SolidElementSet.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "VariableOffsetSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.environment_variables",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.environment_variables.html#environment_variables",
        "title": "environment_variables",
        "section": "environment_variables",
        "text": "environment_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.environment_variables",
        "href": "api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.environment_variables.html#ansys.acp.core.DockerComposeLaunchConfig.environment_variables",
        "title": "environment_variables > environment_variables > environment_variables",
        "section": "environment_variables > environment_variables",
        "text": "DockerComposeLaunchConfig.environment_variables: dict[str, str]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.node_labels.html#node_labels",
        "title": "node_labels",
        "section": "node_labels",
        "text": "node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.node_labels",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.node_labels.html#ansys.acp.core.mesh_data.ElementSetNodalData.node_labels",
        "title": "node_labels > node_labels > node_labels",
        "section": "node_labels > node_labels",
        "text": "ElementSetNodalData.node_labels: ScalarData[np.int32]\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.html#hdf5compositecaeimportmode",
        "title": "HDF5CompositeCAEImportMode",
        "section": "HDF5CompositeCAEImportMode",
        "text": "Options for the import mode of the HDF5 Composite CAE file.\nHDF5CompositeCAEImportMode.APPEND\n\nHDF5CompositeCAEImportMode.OVERWRITE\n\nHDF5CompositeCAEImportMode\nHDF5CompositeCAEImportMode.APPEND\nHDF5CompositeCAEImportMode.OVERWRITE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode",
        "href": "api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.html#ansys.acp.core.HDF5CompositeCAEImportMode",
        "title": "HDF5CompositeCAEImportMode > HDF5CompositeCAEImportMode > HDF5CompositeCAEImportMode",
        "section": "HDF5CompositeCAEImportMode > HDF5CompositeCAEImportMode",
        "text": "class ansys.acp.core.HDF5CompositeCAEImportMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the import mode of the HDF5 Composite CAE file.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nHDF5CompositeCAEImportMode.APPEND\n\n\n\nHDF5CompositeCAEImportMode.OVERWRITE\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.html#sphericalselectionrulenodaldata",
        "title": "SphericalSelectionRuleNodalData",
        "section": "SphericalSelectionRuleNodalData",
        "text": "Represents nodal data for a Spherical Selection Rule.\nSphericalSelectionRuleNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nSphericalSelectionRuleNodalData.node_labels\n\nSphericalSelectionRuleNodalData\nSphericalSelectionRuleNodalData.get_pyvista_mesh\nSphericalSelectionRuleNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.html#ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData",
        "title": "SphericalSelectionRuleNodalData > SphericalSelectionRuleNodalData > SphericalSelectionRuleNodalData",
        "section": "SphericalSelectionRuleNodalData > SphericalSelectionRuleNodalData",
        "text": "class ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Spherical Selection Rule.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSphericalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSphericalSelectionRuleNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rsplit",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rsplit.html#rsplit",
        "title": "rsplit",
        "section": "rsplit",
        "text": "Return a list of the substrings in the string, using sep as the separator string.\nThe separator used to split the string.\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\nMaximum number of splits.\n-1 (the default value) means no limit.\nSplitting starts at the end of the string and works to the front.\nrsplit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.rsplit",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.rsplit.html#ansys.acp.core.LaunchMode.rsplit",
        "title": "rsplit > rsplit > rsplit",
        "section": "rsplit > rsplit",
        "text": "LaunchMode.rsplit(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.start",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.start.html#start",
        "title": "start",
        "section": "start",
        "text": "Start the product instance.\nRuntimeError – If the instance is already in the started state.\nRuntimeError – If the instance does not allow manual starting.\nstart"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.start",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.start.html#ansys.acp.core.ACPInstance.start",
        "title": "start > start > start",
        "section": "start > start",
        "text": "ACPInstance.start()\n\nStart the product instance.\n\nRaises\n\nRuntimeError – If the instance is already in the started state.\n\nRuntimeError – If the instance does not allow manual starting.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stdout_file",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stdout_file.html#stdout_file",
        "title": "stdout_file",
        "section": "stdout_file",
        "text": "stdout_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stdout_file",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.stdout_file.html#ansys.acp.core.DirectLaunchConfig.stdout_file",
        "title": "stdout_file > stdout_file > stdout_file",
        "section": "stdout_file > stdout_file",
        "text": "DirectLaunchConfig.stdout_file: str = '/dev/null'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.unit_system",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.unit_system.html#unit_system",
        "title": "unit_system",
        "section": "unit_system",
        "text": "unit_system"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.unit_system",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.unit_system.html#ansys.acp.core.ImportedSolidModel.unit_system",
        "title": "unit_system > unit_system > unit_system",
        "section": "unit_system > unit_system",
        "text": "property ImportedSolidModel.unit_system: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.global_ply_nr.html#global_ply_nr",
        "title": "global_ply_nr",
        "section": "global_ply_nr",
        "text": "global_ply_nr"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.global_ply_nr",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.global_ply_nr.html#ansys.acp.core.InterfaceLayer.global_ply_nr",
        "title": "global_ply_nr > global_ply_nr > global_ply_nr",
        "section": "global_ply_nr > global_ply_nr",
        "text": "property InterfaceLayer.global_ply_nr: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.clone",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored FabricWithAngle with the same properties.\nSelf\nclone"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.FabricWithAngle.clone",
        "href": "api/_autosummary/ansys.acp.core.FabricWithAngle.clone.html#ansys.acp.core.FabricWithAngle.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "FabricWithAngle.clone()\n\nCreate a new unstored FabricWithAngle with the same properties.\n\n!! processed by numpydoc !!\n\nReturn type\n\nSelf"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION.html#linear_triangulation",
        "title": "LINEAR_TRIANGULATION",
        "section": "LINEAR_TRIANGULATION",
        "text": "LINEAR_TRIANGULATION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION.html#ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION",
        "title": "LINEAR_TRIANGULATION > LINEAR_TRIANGULATION > LINEAR_TRIANGULATION",
        "section": "LINEAR_TRIANGULATION > LINEAR_TRIANGULATION",
        "text": "LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION = 'linear_triangulation'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.ServerWrapper",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.ServerWrapper.html#serverwrapper",
        "title": "ServerWrapper",
        "section": "ServerWrapper",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nWrapper for the connection to an ACP instance.\nThis class contains the representation of the ACP instance needed by tree objects.\nIts purpose is to minimize the dependency of tree objects on the ACP class.\nServerWrapper"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.base.ServerWrapper",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.base.ServerWrapper.html#ansys.acp.core._tree_objects.base.ServerWrapper",
        "title": "ServerWrapper > ServerWrapper > ServerWrapper",
        "section": "ServerWrapper > ServerWrapper",
        "text": "class ansys.acp.core._tree_objects.base.ServerWrapper(channel, version, filetransfer_handler)\n\nWrapper for the connection to an ACP instance.\n\nThis class contains the representation of the ACP instance needed by tree objects.\nIts purpose is to minimize the dependency of tree objects on the ACP class.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE.html#draped_fiber_angle",
        "title": "DRAPED_FIBER_ANGLE",
        "section": "DRAPED_FIBER_ANGLE",
        "text": "DRAPED_FIBER_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE.html#ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE",
        "title": "DRAPED_FIBER_ANGLE > DRAPED_FIBER_ANGLE > DRAPED_FIBER_ANGLE",
        "section": "DRAPED_FIBER_ANGLE > DRAPED_FIBER_ANGLE",
        "text": "ElementalDataType.DRAPED_FIBER_ANGLE = 'draped_fiber_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.store",
        "href": "api/_autosummary/ansys.acp.core.GeometricalSelectionRule.store.html#ansys.acp.core.GeometricalSelectionRule.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "GeometricalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.active",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.active",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.active.html#ansys.acp.core.ModelingPly.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property ModelingPly.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal.html#normal",
        "title": "normal",
        "section": "normal",
        "text": "normal"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal.html#ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal",
        "title": "normal > normal > normal",
        "section": "normal > normal",
        "text": "OrientedSelectionSetElementalData.normal: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.clone",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.clone",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.clone.html#ansys.acp.core.SectionCut.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "SectionCut.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.element_labels",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidElementSet.element_labels",
        "href": "api/_autosummary/ansys.acp.core.SolidElementSet.element_labels.html#ansys.acp.core.SolidElementSet.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "property SolidElementSet.element_labels: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.parent",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.parent.html#ansys.acp.core.CutOffGeometry.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property CutOffGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.TubeSelectionRule.clone",
        "href": "api/_autosummary/ansys.acp.core.TubeSelectionRule.clone.html#ansys.acp.core.TubeSelectionRule.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "TubeSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.search_radius",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.search_radius.html#search_radius",
        "title": "search_radius",
        "section": "search_radius",
        "text": "search_radius"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.search_radius",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.search_radius.html#ansys.acp.core.LookUpTable3D.search_radius",
        "title": "search_radius > search_radius > search_radius",
        "section": "search_radius > search_radius",
        "text": "property LookUpTable3D.search_radius: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.html#dropoffmaterialhandling",
        "title": "DropOffMaterialHandling",
        "section": "DropOffMaterialHandling",
        "text": "Options for how drop-off material is selected.\nDropOffMaterialHandling.GLOBAL\n\nDropOffMaterialHandling.CUSTOM\n\nDropOffMaterialHandling\nDropOffMaterialHandling.GLOBAL\nDropOffMaterialHandling.CUSTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.html#ansys.acp.core.DropOffMaterialHandling",
        "title": "DropOffMaterialHandling > DropOffMaterialHandling > DropOffMaterialHandling",
        "section": "DropOffMaterialHandling > DropOffMaterialHandling",
        "text": "class ansys.acp.core.DropOffMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how drop-off material is selected.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nDropOffMaterialHandling.GLOBAL\n\n\n\nDropOffMaterialHandling.CUSTOM\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.BIN",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.BIN.html#bin",
        "title": "BIN",
        "section": "BIN",
        "text": "BIN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.BIN",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.BIN.html#ansys.acp.core.UnitSystemType.BIN",
        "title": "BIN > BIN > BIN",
        "section": "BIN > BIN",
        "text": "UnitSystemType.BIN = 'bin'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.html#variablewovencharacterization",
        "title": "VariableWovenCharacterization",
        "section": "VariableWovenCharacterization",
        "text": "Variable woven characterization material property set.\nAdded in ACP server version 24.2.\nVariableWovenCharacterization.E1_1\n\nVariableWovenCharacterization.E1_2\n\nVariableWovenCharacterization.E2_1\n\nVariableWovenCharacterization.E2_2\n\nVariableWovenCharacterization.G12_1\n\nVariableWovenCharacterization.G12_2\n\nVariableWovenCharacterization.G23_1\n\nVariableWovenCharacterization.G23_2\n\nVariableWovenCharacterization.field_variables\n\nVariableWovenCharacterization.interpolation_options\n\nVariableWovenCharacterization.nu12_1\n\nVariableWovenCharacterization.nu12_2\n\nVariableWovenCharacterization.orientation_2\n\nVariableWovenCharacterization\nVariableWovenCharacterization.E1_1\nVariableWovenCharacterization.E1_2\nVariableWovenCharacterization.E2_1\nVariableWovenCharacterization.E2_2\nVariableWovenCharacterization.G12_1\nVariableWovenCharacterization.G12_2\nVariableWovenCharacterization.G23_1\nVariableWovenCharacterization.G23_2\nVariableWovenCharacterization.field_variables\nVariableWovenCharacterization.interpolation_options\nVariableWovenCharacterization.nu12_1\nVariableWovenCharacterization.nu12_2\nVariableWovenCharacterization.orientation_2"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.html#ansys.acp.core.material_property_sets.VariableWovenCharacterization",
        "title": "VariableWovenCharacterization > VariableWovenCharacterization > VariableWovenCharacterization",
        "section": "VariableWovenCharacterization > VariableWovenCharacterization",
        "text": "class ansys.acp.core.material_property_sets.VariableWovenCharacterization(*, _parent_object=None, _attribute_path=None)\n\nVariable woven characterization material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nVariableWovenCharacterization.E1_1\n\n\n\nVariableWovenCharacterization.E1_2\n\n\n\nVariableWovenCharacterization.E2_1\n\n\n\nVariableWovenCharacterization.E2_2\n\n\n\nVariableWovenCharacterization.G12_1\n\n\n\nVariableWovenCharacterization.G12_2\n\n\n\nVariableWovenCharacterization.G23_1\n\n\n\nVariableWovenCharacterization.G23_2\n\n\n\nVariableWovenCharacterization.field_variables\n\n\n\nVariableWovenCharacterization.interpolation_options\n\n\n\nVariableWovenCharacterization.nu12_1\n\n\n\nVariableWovenCharacterization.nu12_2\n\n\n\nVariableWovenCharacterization.orientation_2\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.uMKS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.uMKS.html#umks",
        "title": "uMKS",
        "section": "uMKS",
        "text": "uMKS"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.UnitSystemType.uMKS",
        "href": "api/_autosummary/ansys.acp.core.UnitSystemType.uMKS.html#ansys.acp.core.UnitSystemType.uMKS",
        "title": "uMKS > uMKS > uMKS",
        "section": "uMKS > uMKS",
        "text": "UnitSystemType.uMKS = 'umks'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio.html#fracture_toughness_ratio",
        "title": "fracture_toughness_ratio",
        "section": "fracture_toughness_ratio",
        "text": "fracture_toughness_ratio"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio",
        "title": "fracture_toughness_ratio > fracture_toughness_ratio > fracture_toughness_ratio",
        "section": "fracture_toughness_ratio > fracture_toughness_ratio",
        "text": "property VariableLaRCConstants.fracture_toughness_ratio: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.sequence",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.sequence.html#sequence",
        "title": "sequence",
        "section": "sequence",
        "text": "Linked sequence.\nsequence"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PrimaryPly.sequence",
        "href": "api/_autosummary/ansys.acp.core.PrimaryPly.sequence.html#ansys.acp.core.PrimaryPly.sequence",
        "title": "sequence > sequence > sequence",
        "section": "sequence > sequence",
        "text": "property PrimaryPly.sequence: ModelingGroup | ModelingPly\n\nLinked sequence.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz.html#syz",
        "title": "Syz",
        "section": "Syz",
        "text": "Syz"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz.html#ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz",
        "title": "Syz > Syz > Syz",
        "section": "Syz > Syz",
        "text": "property VariableWovenStressLimits.Syz: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.parent",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.parent.html#ansys.acp.core.LookUpTable3D.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property LookUpTable3D.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.html#constanttsaiwuconstants",
        "title": "ConstantTsaiWuConstants",
        "section": "ConstantTsaiWuConstants",
        "text": "Constant Tsai-Wu constants material property set.\nAdded in ACP server version 24.2.\nConstantTsaiWuConstants.XY\n\nConstantTsaiWuConstants.XZ\n\nConstantTsaiWuConstants.YZ\n\nConstantTsaiWuConstants\nConstantTsaiWuConstants.XY\nConstantTsaiWuConstants.XZ\nConstantTsaiWuConstants.YZ"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.html#ansys.acp.core.material_property_sets.ConstantTsaiWuConstants",
        "title": "ConstantTsaiWuConstants > ConstantTsaiWuConstants > ConstantTsaiWuConstants",
        "section": "ConstantTsaiWuConstants > ConstantTsaiWuConstants",
        "text": "class ansys.acp.core.material_property_sets.ConstantTsaiWuConstants(*, XY=-1.0, XZ=-1.0, YZ=-1.0, _parent_object=None, _attribute_path=None)\n\nConstant Tsai-Wu constants material property set.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantTsaiWuConstants.XY\n\n\n\nConstantTsaiWuConstants.XZ\n\n\n\nConstantTsaiWuConstants.YZ\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.parent",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint.parent",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.parent.html#ansys.acp.core.SamplingPoint.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SamplingPoint.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.status",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.status.html#ansys.acp.core.ImportedSolidModel.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property ImportedSolidModel.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.store",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.store.html#ansys.acp.core.CutOffGeometry.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "CutOffGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.butt_joint_sequences",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.butt_joint_sequences.html#butt_joint_sequences",
        "title": "butt_joint_sequences",
        "section": "butt_joint_sequences",
        "text": "butt_joint_sequences"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingGroup.butt_joint_sequences",
        "href": "api/_autosummary/ansys.acp.core.ModelingGroup.butt_joint_sequences.html#ansys.acp.core.ModelingGroup.butt_joint_sequences",
        "title": "butt_joint_sequences > butt_joint_sequences > butt_joint_sequences",
        "section": "butt_joint_sequences > butt_joint_sequences",
        "text": "property ModelingGroup.butt_joint_sequences: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.html#directlaunchconfig",
        "title": "DirectLaunchConfig",
        "section": "DirectLaunchConfig",
        "text": "Configuration options for launching ACP as a sub-process.\nDirectLaunchConfig.binary_path\n\nDirectLaunchConfig.stderr_file\n\nDirectLaunchConfig.stdout_file\n\nDirectLaunchConfig\nDirectLaunchConfig.binary_path\nDirectLaunchConfig.stderr_file\nDirectLaunchConfig.stdout_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DirectLaunchConfig",
        "href": "api/_autosummary/ansys.acp.core.DirectLaunchConfig.html#ansys.acp.core.DirectLaunchConfig",
        "title": "DirectLaunchConfig > DirectLaunchConfig > DirectLaunchConfig",
        "section": "DirectLaunchConfig > DirectLaunchConfig",
        "text": "class ansys.acp.core.DirectLaunchConfig(binary_path='', stdout_file='/dev/null', stderr_file='/dev/null')\n\nConfiguration options for launching ACP as a sub-process.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nDirectLaunchConfig.binary_path\n\n\n\nDirectLaunchConfig.stderr_file\n\n\n\nDirectLaunchConfig.stdout_file\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.imported_solid_models",
        "href": "api/_autosummary/ansys.acp.core.Model.imported_solid_models.html#imported_solid_models",
        "title": "imported_solid_models",
        "section": "imported_solid_models",
        "text": "imported_solid_models"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.imported_solid_models",
        "href": "api/_autosummary/ansys.acp.core.Model.imported_solid_models.html#ansys.acp.core.Model.imported_solid_models",
        "title": "imported_solid_models > imported_solid_models > imported_solid_models",
        "section": "imported_solid_models > imported_solid_models",
        "text": "property Model.imported_solid_models: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_2_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_2_field.html#draping_angle_2_field",
        "title": "draping_angle_2_field",
        "section": "draping_angle_2_field",
        "text": "draping_angle_2_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_2_field",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_2_field.html#ansys.acp.core.ModelingPly.draping_angle_2_field",
        "title": "draping_angle_2_field > draping_angle_2_field > draping_angle_2_field",
        "section": "draping_angle_2_field > draping_angle_2_field",
        "text": "property ModelingPly.draping_angle_2_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3D.delete",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3D.delete.html#ansys.acp.core.LookUpTable3D.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "LookUpTable3D.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.max_element_thickness",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.max_element_thickness.html#max_element_thickness",
        "title": "max_element_thickness",
        "section": "max_element_thickness",
        "text": "max_element_thickness"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.max_element_thickness",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.max_element_thickness.html#ansys.acp.core.SolidModel.max_element_thickness",
        "title": "max_element_thickness > max_element_thickness > max_element_thickness",
        "section": "max_element_thickness > max_element_thickness",
        "text": "property SolidModel.max_element_thickness: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field.html#thickness_field",
        "title": "thickness_field",
        "section": "thickness_field",
        "text": "thickness_field"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field",
        "href": "api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field.html#ansys.acp.core.ImportedModelingPly.thickness_field",
        "title": "thickness_field > thickness_field > thickness_field",
        "section": "thickness_field > thickness_field",
        "text": "property ImportedModelingPly.thickness_field: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.status",
        "href": "api/_autosummary/ansys.acp.core.Material.status.html#status",
        "title": "status",
        "section": "status",
        "text": "status"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.status",
        "href": "api/_autosummary/ansys.acp.core.Material.status.html#ansys.acp.core.Material.status",
        "title": "status > status > status",
        "section": "status > status",
        "text": "property Material.status: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material_handling.html#drop_off_material_handling",
        "title": "drop_off_material_handling",
        "section": "drop_off_material_handling",
        "text": "drop_off_material_handling"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material_handling",
        "href": "api/_autosummary/ansys.acp.core.Fabric.drop_off_material_handling.html#ansys.acp.core.Fabric.drop_off_material_handling",
        "title": "drop_off_material_handling > drop_off_material_handling > drop_off_material_handling",
        "section": "drop_off_material_handling > drop_off_material_handling",
        "text": "property Fabric.drop_off_material_handling: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc.html#xc",
        "title": "Xc",
        "section": "Xc",
        "text": "Xc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc.html#ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc",
        "title": "Xc > Xc > Xc",
        "section": "Xc > Xc",
        "text": "property ConstantWovenStressLimits.Xc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.element_labels",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.element_labels.html#element_labels",
        "title": "element_labels",
        "section": "element_labels",
        "text": "element_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ElementSet.element_labels",
        "href": "api/_autosummary/ansys.acp.core.ElementSet.element_labels.html#ansys.acp.core.ElementSet.element_labels",
        "title": "element_labels > element_labels > element_labels",
        "section": "element_labels > element_labels",
        "text": "property ElementSet.element_labels: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.name",
        "href": "api/_autosummary/ansys.acp.core.Material.name.html#name",
        "title": "name",
        "section": "name",
        "text": "The name of the object.\nname"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.name",
        "href": "api/_autosummary/ansys.acp.core.Material.name.html#ansys.acp.core.Material.name",
        "title": "name > name > name",
        "section": "name > name",
        "text": "property Material.name: Any\n\nThe name of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.name",
        "href": "api/_autosummary/ansys.acp.core.Material.name.html#examples-using-materialname",
        "title": "name > Examples using Material.name",
        "section": "Examples using Material.name",
        "text": "sphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\nExamples using Material.name"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_material_model.html#draping_material_model",
        "title": "draping_material_model",
        "section": "draping_material_model",
        "text": "draping_material_model"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_material_model",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_material_model.html#ansys.acp.core.OrientedSelectionSet.draping_material_model",
        "title": "draping_material_model > draping_material_model > draping_material_model",
        "section": "draping_material_model > draping_material_model",
        "text": "property OrientedSelectionSet.draping_material_model: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.NO_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.NO_SYMMETRY.html#no_symmetry",
        "title": "NO_SYMMETRY",
        "section": "NO_SYMMETRY",
        "text": "NO_SYMMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.NO_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.NO_SYMMETRY.html#ansys.acp.core.SymmetryType.NO_SYMMETRY",
        "title": "NO_SYMMETRY > NO_SYMMETRY > NO_SYMMETRY",
        "section": "NO_SYMMETRY > NO_SYMMETRY",
        "text": "SymmetryType.NO_SYMMETRY = 'no_symmetry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.endswith",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.endswith.html#endswith",
        "title": "endswith",
        "section": "endswith",
        "text": "Return True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.\nendswith"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.endswith",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.endswith.html#ansys.acp.core.LaunchMode.endswith",
        "title": "endswith > endswith > endswith",
        "section": "endswith > endswith",
        "text": "LaunchMode.endswith(suffix, [start, [end]]) -> bool\n\nReturn True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.center",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.center.html#center",
        "title": "center",
        "section": "center",
        "text": "Return a centered string of length width.\nPadding is done using the specified fill character (default is a space).\ncenter"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.center",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.center.html#ansys.acp.core.material_property_sets.PuckMaterialType.center",
        "title": "center > center > center",
        "section": "center > center",
        "text": "PuckMaterialType.center(width, fillchar=' ', /)\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.WOVEN",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.WOVEN.html#woven",
        "title": "WOVEN",
        "section": "WOVEN",
        "text": "WOVEN"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.WOVEN",
        "href": "api/_autosummary/ansys.acp.core.DrapingMaterialModel.WOVEN.html#ansys.acp.core.DrapingMaterialModel.WOVEN",
        "title": "WOVEN > WOVEN > WOVEN",
        "section": "WOVEN > WOVEN",
        "text": "DrapingMaterialModel.WOVEN = 'woven'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.shell_mesh.html#shell_mesh",
        "title": "shell_mesh",
        "section": "shell_mesh",
        "text": "Shell mesh associated with the object.\nshell_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.InterfaceLayer.shell_mesh",
        "href": "api/_autosummary/ansys.acp.core.InterfaceLayer.shell_mesh.html#ansys.acp.core.InterfaceLayer.shell_mesh",
        "title": "shell_mesh > shell_mesh > shell_mesh",
        "section": "shell_mesh > shell_mesh",
        "text": "property InterfaceLayer.shell_mesh: MeshData\n\nShell mesh associated with the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cad_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.cad_geometries.html#cad_geometries",
        "title": "cad_geometries",
        "section": "cad_geometries",
        "text": "cad_geometries"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.cad_geometries",
        "href": "api/_autosummary/ansys.acp.core.Model.cad_geometries.html#ansys.acp.core.Model.cad_geometries",
        "title": "cad_geometries > cad_geometries > cad_geometries",
        "section": "cad_geometries > cad_geometries",
        "text": "property Model.cad_geometries: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.material",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.material.html#material",
        "title": "material",
        "section": "material",
        "text": "material"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.material",
        "href": "api/_autosummary/ansys.acp.core.ImportedAnalysisPly.material.html#ansys.acp.core.ImportedAnalysisPly.material",
        "title": "material > material > material",
        "section": "material > material",
        "text": "property ImportedAnalysisPly.material: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor",
        "href": "api/_autosummary/ansys.acp.core.Sensor.html#sensor",
        "title": "Sensor",
        "section": "Sensor",
        "text": "Instantiate a Sensor.\nname (str) – Name of the sensor.\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\nactive (bool) – Inactive sensors are not evaluated.\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly]) – List of entities which define the sensor’s scope.\nAdded in ACP server version 24.2.\nSensor.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSensor.delete()\nDelete the object.\nSensor.store(parent)\nStore the object on the server.\nSensor.active\n\nSensor.center_of_gravity\nThe center of gravity of the selected entity in the global coordinate system.\nSensor.covered_area\nThe surface area of a selected Element Set / Oriented Selection Set, or the tooling surface area that is covered by the composite layup of the selected Material or Modeling Ply.\nSensor.entities\n\nSensor.id\nIdentifier of the object, used for example as key in maps.\nSensor.locked\n\nSensor.modeling_ply_area\nThe surface area of all Modeling Plies of the selected entity.\nSensor.name\nThe name of the object.\nSensor.parent\nThe parent of the object.\nSensor.price\nThe price for the composite layup of the selected entity.\nSensor.production_ply_area\nThe surface area of all production plies of the selected entity.\nSensor.sensor_type\n\nSensor.status\n\nSensor.weight\nThe mass of the selected entity.\nSensor\nSensor.clone\nSensor.delete\nSensor.store\nSensor.active\nSensor.center_of_gravity\nSensor.covered_area\nSensor.entities\nSensor.id\nSensor.locked\nSensor.modeling_ply_area\nSensor.name\nSensor.parent\nSensor.price\nSensor.production_ply_area\nSensor.sensor_type\nSensor.status\nSensor.weight"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor",
        "href": "api/_autosummary/ansys.acp.core.Sensor.html#ansys.acp.core.Sensor",
        "title": "Sensor > Sensor > Sensor",
        "section": "Sensor > Sensor",
        "text": "class ansys.acp.core.Sensor(*, name='Sensor', sensor_type='sensor_by_area', active=True, entities=())\n\nInstantiate a Sensor.\n\nParameters\n\nname (str) – Name of the sensor.\n\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\n\nactive (bool) – Inactive sensors are not evaluated.\n\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly]) – List of entities which define the sensor’s scope.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSensor.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSensor.delete()\n\nDelete the object.\n\nSensor.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSensor.active\n\n\n\nSensor.center_of_gravity\n\nThe center of gravity of the selected entity in the global coordinate system.\n\nSensor.covered_area\n\nThe surface area of a selected Element Set / Oriented Selection Set, or the tooling surface area that is covered by the composite layup of the selected Material or Modeling Ply.\n\nSensor.entities\n\n\n\nSensor.id\n\nIdentifier of the object, used for example as key in maps.\n\nSensor.locked\n\n\n\nSensor.modeling_ply_area\n\nThe surface area of all Modeling Plies of the selected entity.\n\nSensor.name\n\nThe name of the object.\n\nSensor.parent\n\nThe parent of the object.\n\nSensor.price\n\nThe price for the composite layup of the selected entity.\n\nSensor.production_ply_area\n\nThe surface area of all production plies of the selected entity.\n\nSensor.sensor_type\n\n\n\nSensor.status\n\n\n\nSensor.weight\n\nThe mass of the selected entity.\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor",
        "href": "api/_autosummary/ansys.acp.core.Sensor.html#examples-using-sensor",
        "title": "Sensor > Examples using Sensor",
        "section": "Examples using Sensor",
        "text": "sphx_glr_examples_modeling_features_007-sensor.py\nsphx_glr_examples_modeling_features_007-sensor.py\nExamples using Sensor"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction.html#material_1_direction",
        "title": "material_1_direction",
        "section": "material_1_direction",
        "text": "material_1_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction",
        "title": "material_1_direction > material_1_direction > material_1_direction",
        "section": "material_1_direction > material_1_direction",
        "text": "AnalysisPlyElementalData.material_1_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables.html#field_variables",
        "title": "field_variables",
        "section": "field_variables",
        "text": "field_variables"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables.html#ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables",
        "title": "field_variables > field_variables > field_variables",
        "section": "field_variables > field_variables",
        "text": "property VariablePuckConstants.field_variables: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit.html#thin_ply_thickness_limit",
        "title": "thin_ply_thickness_limit",
        "section": "thin_ply_thickness_limit",
        "text": "thin_ply_thickness_limit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit.html#ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit",
        "title": "thin_ply_thickness_limit > thin_ply_thickness_limit > thin_ply_thickness_limit",
        "section": "thin_ply_thickness_limit > thin_ply_thickness_limit",
        "text": "property ConstantLaRCConstants.thin_ply_thickness_limit: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.rosette.html#rosette",
        "title": "rosette",
        "section": "rosette",
        "text": "rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.CylindricalSelectionRule.rosette.html#ansys.acp.core.CylindricalSelectionRule.rosette",
        "title": "rosette > rosette > rosette",
        "section": "rosette > rosette",
        "text": "property CylindricalSelectionRule.rosette: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.html#importedsolidmodelnodaldata",
        "title": "ImportedSolidModelNodalData",
        "section": "ImportedSolidModelNodalData",
        "text": "Represents nodal data for an imported solid model.\nImportedSolidModelNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nImportedSolidModelNodalData.node_labels\n\nImportedSolidModelNodalData\nImportedSolidModelNodalData.get_pyvista_mesh\nImportedSolidModelNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.html#ansys.acp.core.mesh_data.ImportedSolidModelNodalData",
        "title": "ImportedSolidModelNodalData > ImportedSolidModelNodalData > ImportedSolidModelNodalData",
        "section": "ImportedSolidModelNodalData > ImportedSolidModelNodalData",
        "text": "class ansys.acp.core.mesh_data.ImportedSolidModelNodalData(node_labels)\n\nRepresents nodal data for an imported solid model.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nImportedSolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nImportedSolidModelNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.stress_limits",
        "href": "api/_autosummary/ansys.acp.core.Material.stress_limits.html#stress_limits",
        "title": "stress_limits",
        "section": "stress_limits",
        "text": "stress_limits"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.stress_limits",
        "href": "api/_autosummary/ansys.acp.core.Material.stress_limits.html#ansys.acp.core.Material.stress_limits",
        "title": "stress_limits > stress_limits > stress_limits",
        "section": "stress_limits > stress_limits",
        "text": "property Material.stress_limits: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.locked",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.locked.html#locked",
        "title": "locked",
        "section": "locked",
        "text": "locked"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.locked",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.locked.html#ansys.acp.core.ImportedSolidModel.locked",
        "title": "locked > locked > locked",
        "section": "locked > locked",
        "text": "property ImportedSolidModel.locked: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.clone",
        "href": "api/_autosummary/ansys.acp.core.Rosette.clone.html#clone",
        "title": "clone",
        "section": "clone",
        "text": "Create a new unstored object with the same properties.\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\nSelf\nclone\nTrue"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.clone",
        "href": "api/_autosummary/ansys.acp.core.Rosette.clone.html#ansys.acp.core.Rosette.clone",
        "title": "clone > clone > clone",
        "section": "clone > clone",
        "text": "Rosette.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1.html#e2_1",
        "title": "E2_1",
        "section": "E2_1",
        "text": "E2_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1.html#ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1",
        "title": "E2_1 > E2_1 > E2_1",
        "section": "E2_1 > E2_1",
        "text": "property ConstantWovenCharacterization.E2_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.strip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.strip.html#strip",
        "title": "strip",
        "section": "strip",
        "text": "Return a copy of the string with leading and trailing whitespace removed.\nIf chars is given and not None, remove characters in chars instead.\nstrip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.strip",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.strip.html#ansys.acp.core.material_property_sets.PuckMaterialType.strip",
        "title": "strip > strip > strip",
        "section": "strip > strip",
        "text": "PuckMaterialType.strip(chars=None, /)\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1.html#fracture_toughness_mode_1",
        "title": "fracture_toughness_mode_1",
        "section": "fracture_toughness_mode_1",
        "text": "fracture_toughness_mode_1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1.html#ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1",
        "title": "fracture_toughness_mode_1 > fracture_toughness_mode_1 > fracture_toughness_mode_1",
        "section": "fracture_toughness_mode_1 > fracture_toughness_mode_1",
        "text": "property VariableLaRCConstants.fracture_toughness_mode_1: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.tube_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.tube_selection_rules.html#tube_selection_rules",
        "title": "tube_selection_rules",
        "section": "tube_selection_rules",
        "text": "tube_selection_rules"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Model.tube_selection_rules",
        "href": "api/_autosummary/ansys.acp.core.Model.tube_selection_rules.html#ansys.acp.core.Model.tube_selection_rules",
        "title": "tube_selection_rules > tube_selection_rules > tube_selection_rules",
        "section": "tube_selection_rules > tube_selection_rules",
        "text": "property Model.tube_selection_rules: MutableMapping[CreatableValueT]\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT.html#valuet",
        "title": "ValueT",
        "section": "ValueT",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nValueT\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT.html#ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT",
        "title": "ValueT > ValueT > ValueT",
        "section": "ValueT > ValueT",
        "text": "ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT = ~ValueT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.GLOBAL",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.GLOBAL.html#global",
        "title": "GLOBAL",
        "section": "GLOBAL",
        "text": "GLOBAL"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.GLOBAL",
        "href": "api/_autosummary/ansys.acp.core.CutOffMaterialHandling.GLOBAL.html#ansys.acp.core.CutOffMaterialHandling.GLOBAL",
        "title": "GLOBAL > GLOBAL > GLOBAL",
        "section": "GLOBAL > GLOBAL",
        "text": "CutOffMaterialHandling.GLOBAL = 'global'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.html#importedplydrapingtype",
        "title": "ImportedPlyDrapingType",
        "section": "ImportedPlyDrapingType",
        "text": "Options for the draping algorithm used.\nImportedPlyDrapingType.NO_DRAPING\n\nImportedPlyDrapingType.TABULAR_VALUES\n\nImportedPlyDrapingType\nImportedPlyDrapingType.NO_DRAPING\nImportedPlyDrapingType.TABULAR_VALUES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType",
        "href": "api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.html#ansys.acp.core.ImportedPlyDrapingType",
        "title": "ImportedPlyDrapingType > ImportedPlyDrapingType > ImportedPlyDrapingType",
        "section": "ImportedPlyDrapingType > ImportedPlyDrapingType",
        "text": "class ansys.acp.core.ImportedPlyDrapingType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the draping algorithm used.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nImportedPlyDrapingType.NO_DRAPING\n\n\n\nImportedPlyDrapingType.TABULAR_VALUES\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.area.html#area",
        "title": "area",
        "section": "area",
        "text": "area"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.area",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.area.html#ansys.acp.core.mesh_data.ModelElementalData.area",
        "title": "area > area > area",
        "section": "area > area",
        "text": "ModelElementalData.area: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.id.html#id",
        "title": "id",
        "section": "id",
        "text": "Identifier of the object, used for example as key in maps.\nid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedProductionPly.id",
        "href": "api/_autosummary/ansys.acp.core.ImportedProductionPly.id.html#ansys.acp.core.ImportedProductionPly.id",
        "title": "id > id > id",
        "section": "id > id",
        "text": "property ImportedProductionPly.id: Any\n\nIdentifier of the object, used for example as key in maps.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.store",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.store",
        "href": "api/_autosummary/ansys.acp.core.OrientedSelectionSet.store.html#ansys.acp.core.OrientedSelectionSet.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "OrientedSelectionSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.active",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.active.html#active",
        "title": "active",
        "section": "active",
        "text": "active"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.active",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.active.html#ansys.acp.core.LayupMappingObject.active",
        "title": "active > active > active",
        "section": "active > active",
        "text": "property LayupMappingObject.active: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "VariableOffsetSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file.html#upload_file",
        "title": "upload_file",
        "section": "upload_file",
        "text": "Upload a file to the server.\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\nlocal_path (str | PathLike[str]) – The path of the file to be uploaded.\nThe path of the uploaded file on the server.\nPurePath\nupload_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file.html#ansys.acp.core.ACPInstance.upload_file",
        "title": "upload_file > upload_file > upload_file",
        "section": "upload_file > upload_file",
        "text": "ACPInstance.upload_file(local_path)\n\nUpload a file to the server.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\n\nParameters\n\nlocal_path (str | PathLike[str]) – The path of the file to be uploaded.\n\nReturns\n\nThe path of the uploaded file on the server.\n\nReturn type\n\nPurePath\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file",
        "href": "api/_autosummary/ansys.acp.core.ACPInstance.upload_file.html#examples-using-acpinstanceupload_file",
        "title": "upload_file > Examples using ACPInstance.upload_file",
        "section": "Examples using ACPInstance.upload_file",
        "text": "sphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_030-imported-plies.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\nExamples using ACPInstance.upload_file"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TC",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TC.html#tc",
        "title": "TC",
        "section": "TC",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nType variable.\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\nThis syntax can also be used to create bound and constrained type\nvariables:\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\nTC\ninfer_variance=True\ncovariant=True\ncontravariant=True"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TC",
        "href": "api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TC.html#ansys.acp.core._tree_objects.material.property_sets.wrapper.TC",
        "title": "TC > TC > TC",
        "section": "TC > TC",
        "text": "ansys.acp.core._tree_objects.material.property_sets.wrapper.TC = ~TC\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nclass Sequence[T]:  # T is a TypeVar\n    ...\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\n# S is a TypeVar bound to str\nclass StrSequence[S: str]:\n    ...\n\n# A is a TypeVar constrained to str or bytes\nclass StrOrBytesSequence[A: (str, bytes)]:\n    ...\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nT = TypeVar('T')  # Can be anything\nS = TypeVar('S', bound=str)  # Can be any subtype of str\nA = TypeVar('A', str, bytes)  # Must be exactly str or bytes\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList.html#edgepropertylist",
        "title": "EdgePropertyList",
        "section": "EdgePropertyList",
        "text": "This is an internal object. It should not be used directly, and subject to change without notice.\nWrap graph edges of a specific type.\nWraps links between objects of a specific type, for instance FabricWithAngle\nof a stackup. This object handles the conversion of the protobuf messages to the\ncorresponding Python object and vice-versa.\nself._object_list holds the Python object. The python objects are stored\nto support editing in-place editing. This is achieved by passing a callback\nfunction to the python object.\nThe edges (and parent object) is updated\nas soon as an item or one of its properties are changed.\nNote: sort is not implemented because the model definition often depends\non the order.\nThe LinkedObjectList should be used for graph edges without a specific type.\nFor instance, element sets of an oriented element set.\nEdgePropertyList"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList",
        "href": "api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList.html#ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList",
        "title": "EdgePropertyList > EdgePropertyList > EdgePropertyList",
        "section": "EdgePropertyList > EdgePropertyList",
        "text": "class ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList(*, _parent_object, _object_type, _attribute_name, _from_pb_constructor)\n\nWrap graph edges of a specific type.\n\nWraps links between objects of a specific type, for instance FabricWithAngle\nof a stackup. This object handles the conversion of the protobuf messages to the\ncorresponding Python object and vice-versa.\nself._object_list holds the Python object. The python objects are stored\nto support editing in-place editing. This is achieved by passing a callback\nfunction to the python object.\n\nThe edges (and parent object) is updated\nas soon as an item or one of its properties are changed.\n\nNote: sort is not implemented because the model definition often depends\non the order.\n\nThe LinkedObjectList should be used for graph edges without a specific type.\nFor instance, element sets of an oriented element set.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.minimum_volume",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.minimum_volume.html#minimum_volume",
        "title": "minimum_volume",
        "section": "minimum_volume",
        "text": "minimum_volume"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ImportedSolidModel.minimum_volume",
        "href": "api/_autosummary/ansys.acp.core.ImportedSolidModel.minimum_volume.html#ansys.acp.core.ImportedSolidModel.minimum_volume",
        "title": "minimum_volume > minimum_volume > minimum_volume",
        "section": "minimum_volume > minimum_volume",
        "text": "property ImportedSolidModel.minimum_volume: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method.html#base_element_rosette_selection_method",
        "title": "base_element_rosette_selection_method",
        "section": "base_element_rosette_selection_method",
        "text": "base_element_rosette_selection_method"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method.html#ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method",
        "title": "base_element_rosette_selection_method > base_element_rosette_selection_method > base_element_rosette_selection_method",
        "section": "base_element_rosette_selection_method > base_element_rosette_selection_method",
        "text": "property LayupMappingObject.base_element_rosette_selection_method: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.edge_set",
        "href": "api/_autosummary/ansys.acp.core.Rosette.edge_set.html#edge_set",
        "title": "edge_set",
        "section": "edge_set",
        "text": "edge_set"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Rosette.edge_set",
        "href": "api/_autosummary/ansys.acp.core.Rosette.edge_set.html#ansys.acp.core.Rosette.edge_set",
        "title": "edge_set > edge_set > edge_set",
        "section": "edge_set > edge_set",
        "text": "property Rosette.edge_set: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide.html#create_extrusion_guide",
        "title": "create_extrusion_guide",
        "section": "create_extrusion_guide",
        "text": "Instantiate an Extrusion Guide of a Solid Model.\nname (str) – The name of the Oriented Selection Set.\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\nradius (float) – Controls the sphere of influence for mesh morphing.\ndepth (float) – Defines the bias of the mesh morphing.\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\nExtrusionGuide\nAdded in ACP server version 25.1.\ncreate_extrusion_guide\nExtrusionGuideType.BY_GEOMETRY\nExtrusionGuideType.BY_DIRECTION"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide.html#ansys.acp.core.SolidModel.create_extrusion_guide",
        "title": "create_extrusion_guide > create_extrusion_guide > create_extrusion_guide",
        "section": "create_extrusion_guide > create_extrusion_guide",
        "text": "SolidModel.create_extrusion_guide(*, name='ExtrusionGuide', active=True, edge_set=None, extrusion_guide_type='by_direction', cad_geometry=None, direction=(0.0, 0.0, 1.0), radius=0.0, depth=0.0, use_curvature_correction=False)\n\nInstantiate an Extrusion Guide of a Solid Model.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\n\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\n\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\n\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\n\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\n\nradius (float) – Controls the sphere of influence for mesh morphing.\n\ndepth (float) – Defines the bias of the mesh morphing.\n\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\n\nReturn type\n\nExtrusionGuide\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide",
        "href": "api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide.html#examples-using-solidmodelcreate_extrusion_guide",
        "title": "create_extrusion_guide > Examples using SolidModel.create_extrusion_guide",
        "section": "Examples using SolidModel.create_extrusion_guide",
        "text": "sphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using SolidModel.create_extrusion_guide"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.use_default_interpolation_settings",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.use_default_interpolation_settings.html#use_default_interpolation_settings",
        "title": "use_default_interpolation_settings",
        "section": "use_default_interpolation_settings",
        "text": "use_default_interpolation_settings"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.use_default_interpolation_settings",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.use_default_interpolation_settings.html#ansys.acp.core.SectionCut.use_default_interpolation_settings",
        "title": "use_default_interpolation_settings > use_default_interpolation_settings > use_default_interpolation_settings",
        "section": "use_default_interpolation_settings > use_default_interpolation_settings",
        "text": "property SectionCut.use_default_interpolation_settings: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.rosette.html#rosette",
        "title": "rosette",
        "section": "rosette",
        "text": "rosette"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.rosette",
        "href": "api/_autosummary/ansys.acp.core.SphericalSelectionRule.rosette.html#ansys.acp.core.SphericalSelectionRule.rosette",
        "title": "rosette > rosette > rosette",
        "section": "rosette > rosette",
        "text": "property SphericalSelectionRule.rosette: CreatableFromResourcePath | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.entire_solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.entire_solid_mesh.html#entire_solid_mesh",
        "title": "entire_solid_mesh",
        "section": "entire_solid_mesh",
        "text": "entire_solid_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LayupMappingObject.entire_solid_mesh",
        "href": "api/_autosummary/ansys.acp.core.LayupMappingObject.entire_solid_mesh.html#ansys.acp.core.LayupMappingObject.entire_solid_mesh",
        "title": "entire_solid_mesh > entire_solid_mesh > entire_solid_mesh",
        "section": "entire_solid_mesh > entire_solid_mesh",
        "text": "property LayupMappingObject.entire_solid_mesh: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.html#edgesettype",
        "title": "EdgeSetType",
        "section": "EdgeSetType",
        "text": "Options for how an edge set is defined.\nEdgeSetType.BY_REFERENCE\n\nEdgeSetType.BY_NODES\n\nEdgeSetType\nEdgeSetType.BY_REFERENCE\nEdgeSetType.BY_NODES"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.html#ansys.acp.core.EdgeSetType",
        "title": "EdgeSetType > EdgeSetType > EdgeSetType",
        "section": "EdgeSetType > EdgeSetType",
        "text": "class ansys.acp.core.EdgeSetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how an edge set is defined.\n\n!! processed by numpydoc !!\n\nAttributes\n\n\n\n\n\n\n\nEdgeSetType.BY_REFERENCE\n\n\n\nEdgeSetType.BY_NODES\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.EdgeSetType",
        "href": "api/_autosummary/ansys.acp.core.EdgeSetType.html#examples-using-edgesettype",
        "title": "EdgeSetType > Examples using EdgeSetType",
        "section": "Examples using EdgeSetType",
        "text": "sphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nsphx_glr_examples_modeling_features_020-solid_model.py\nExamples using EdgeSetType"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.ljust",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.ljust.html#ljust",
        "title": "ljust",
        "section": "ljust",
        "text": "Return a left-justified string of length width.\nPadding is done using the specified fill character (default is a space).\nljust"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.ljust",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.ljust.html#ansys.acp.core.material_property_sets.PuckMaterialType.ljust",
        "title": "ljust > ljust > ljust",
        "section": "ljust > ljust",
        "text": "PuckMaterialType.ljust(width, fillchar=' ', /)\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.index",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.index.html#index",
        "title": "index",
        "section": "index",
        "text": "Return the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\nRaises ValueError when the substring is not found.\nindex"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.index",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.index.html#ansys.acp.core.LaunchMode.index",
        "title": "index > index > index",
        "section": "index > index",
        "text": "LaunchMode.index(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#materials",
        "title": "Materials",
        "section": "Materials",
        "text": "This example demonstrates how to create the different type of materials, import,\nor export them. It only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\nACP distinguishes between four types of material:\nRaw Material that defines the mechanical properties of the material.\nFabric is where a material can be associated with a set thickness.\nStackup is used to combine fabrics into a non-crimp fabric, such as a [0 45 90] combination.\nSublaminate is used to group fabrics and stackups for frequently used lay-ups.\nFabrics, Stackups and Sublaminates can be used to create plies. It is recommended to look a the\nAnsys help for more information on the different types of materials.\nImport the standard library and third-party dependencies.\nImport the PyACP dependencies.\nMaterials"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#start-acp-and-load-the-model",
        "title": "Materials > Start ACP and load the model",
        "section": "Start ACP and load the model",
        "text": "%%\nGet the example file from the server.\nLaunch the PyACP server and connect to it.\nImport the model from the input file.\nStart ACP and load the model"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#create-a-material",
        "title": "Materials > Create a Material",
        "section": "Create a Material",
        "text": "%%\nCreate property sets elastic constants, strain and stress limits.\nCreate a uni-directional (UD) material\nCreate a Material"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#create-a-fabric",
        "title": "Materials > Create a Fabric",
        "section": "Create a Fabric",
        "text": "Create a fabric with a thickness of 0.2 mmm. A material can be used for\nmultiple fabrics.\nCreate a Fabric"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#create-a-stackup",
        "title": "Materials > Create a Stackup",
        "section": "Create a Stackup",
        "text": "Create a non-crimped fabric. In that case a biax.\nCreate a Stackup"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#create-a-sub-laminate",
        "title": "Materials > Create a Sub-Laminate",
        "section": "Create a Sub-Laminate",
        "text": "A Sublaminate is a group of fabrics and stackups which eases the modeling\nif the same sequence of materials is used multiple times.\nThe final material sequence of this Sublaminate is\n[E-Glass -45°, E-Glass 45°, E-Glass 90°, E-Glass 45°, E-Glass -45°].\nCreate a Sub-Laminate"
    },
    {
        "objectID": "examples/modeling_features/001-materials",
        "href": "examples/modeling_features/001-materials.html#import-and-export-materials",
        "title": "Materials > Import and Export Materials",
        "section": "Import and Export Materials",
        "text": "Materials can be imported and exported from and to external sources.\nBy default, materials are loaded from the CDB file when the model is loaded.\nAn alternative is to load materials from an Engineering Data\nfile via Model.import_materials().\nSome workflows require the materials to be exported to an XML file.\nTotal running time of the script: (0 minutes 8.918 seconds)\nDownload Jupyter notebook: 001-materials.ipynb\nDownload Python source code: 001-materials.py\nDownload zipped: 001-materials.zip\nGallery generated by Sphinx-Gallery\nImport and Export Materials\nModel.import_materials()\nDownload Jupyter notebook: 001-materials.ipynb\nDownload Python source code: 001-materials.py\nDownload zipped: 001-materials.zip"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.physical_dimension",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.physical_dimension.html#physical_dimension",
        "title": "physical_dimension",
        "section": "physical_dimension",
        "text": "physical_dimension"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.physical_dimension",
        "href": "api/_autosummary/ansys.acp.core.LookUpTable3DColumn.physical_dimension.html#ansys.acp.core.LookUpTable3DColumn.physical_dimension",
        "title": "physical_dimension > physical_dimension > physical_dimension",
        "section": "physical_dimension > physical_dimension",
        "text": "property LookUpTable3DColumn.physical_dimension: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.FORCE",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.FORCE.html#force",
        "title": "FORCE",
        "section": "FORCE",
        "text": "FORCE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.PhysicalDimension.FORCE",
        "href": "api/_autosummary/ansys.acp.core.PhysicalDimension.FORCE.html#ansys.acp.core.PhysicalDimension.FORCE",
        "title": "FORCE > FORCE > FORCE",
        "section": "FORCE > FORCE",
        "text": "PhysicalDimension.FORCE = 'force'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.html#samplingpoint",
        "title": "SamplingPoint",
        "section": "SamplingPoint",
        "text": "Instantiate a Sampling Point.\nname (str) – Name of the sampling point.\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\ndirection (tuple[float, float, float]) – Direction of the sampling point.\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\nAdded in ACP server version 25.1.\nSamplingPoint.clone(*[, unlink])\nCreate a new unstored object with the same properties.\nSamplingPoint.delete()\nDelete the object.\nSamplingPoint.store(parent)\nStore the object on the server.\nSamplingPoint.consider_coupling_effect\n\nSamplingPoint.direction\n\nSamplingPoint.id\nIdentifier of the object, used for example as key in maps.\nSamplingPoint.locked\n\nSamplingPoint.name\nThe name of the object.\nSamplingPoint.offset_is_middle\n\nSamplingPoint.parent\nThe parent of the object.\nSamplingPoint.point\n\nSamplingPoint.reference_direction\nLocal x-direction used in the computation of laminate properties (CLT).\nSamplingPoint.rosette\n\nSamplingPoint.status\n\nSamplingPoint.use_default_reference_direction\n\nSamplingPoint\nuse_default_reference_direction\nSamplingPoint.clone\nSamplingPoint.delete\nSamplingPoint.store\nSamplingPoint.consider_coupling_effect\nSamplingPoint.direction\nSamplingPoint.id\nSamplingPoint.locked\nSamplingPoint.name\nSamplingPoint.offset_is_middle\nSamplingPoint.parent\nSamplingPoint.point\nSamplingPoint.reference_direction\nSamplingPoint.rosette\nSamplingPoint.status\nSamplingPoint.use_default_reference_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SamplingPoint",
        "href": "api/_autosummary/ansys.acp.core.SamplingPoint.html#ansys.acp.core.SamplingPoint",
        "title": "SamplingPoint > SamplingPoint > SamplingPoint",
        "section": "SamplingPoint > SamplingPoint",
        "text": "class ansys.acp.core.SamplingPoint(*, name='SamplingPoint', point=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0), use_default_reference_direction=True, rosette=None, offset_is_middle=True, consider_coupling_effect=True)\n\nInstantiate a Sampling Point.\n\nParameters\n\nname (str) – Name of the sampling point.\n\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\n\ndirection (tuple[float, float, float]) – Direction of the sampling point.\n\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\n\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\n\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\n\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nSamplingPoint.clone(*[, unlink])\n\nCreate a new unstored object with the same properties.\n\nSamplingPoint.delete()\n\nDelete the object.\n\nSamplingPoint.store(parent)\n\nStore the object on the server.\n\n\n\nAttributes\n\n\n\n\n\n\n\nSamplingPoint.consider_coupling_effect\n\n\n\nSamplingPoint.direction\n\n\n\nSamplingPoint.id\n\nIdentifier of the object, used for example as key in maps.\n\nSamplingPoint.locked\n\n\n\nSamplingPoint.name\n\nThe name of the object.\n\nSamplingPoint.offset_is_middle\n\n\n\nSamplingPoint.parent\n\nThe parent of the object.\n\nSamplingPoint.point\n\n\n\nSamplingPoint.reference_direction\n\nLocal x-direction used in the computation of laminate properties (CLT).\n\nSamplingPoint.rosette\n\n\n\nSamplingPoint.status\n\n\n\nSamplingPoint.use_default_reference_direction\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.to_pyvista",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.to_pyvista.html#to_pyvista",
        "title": "to_pyvista",
        "section": "to_pyvista",
        "text": "Convert the mesh data to a PyVista mesh.\nUnstructuredGrid\nto_pyvista"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.to_pyvista",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.MeshData.to_pyvista.html#ansys.acp.core.mesh_data.MeshData.to_pyvista",
        "title": "to_pyvista > to_pyvista > to_pyvista",
        "section": "to_pyvista > to_pyvista",
        "text": "MeshData.to_pyvista()\n\nConvert the mesh data to a PyVista mesh.\n\n!! processed by numpydoc !!\n\nReturn type\n\nUnstructuredGrid"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.tsai_wu_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.tsai_wu_constants.html#tsai_wu_constants",
        "title": "tsai_wu_constants",
        "section": "tsai_wu_constants",
        "text": "tsai_wu_constants"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.tsai_wu_constants",
        "href": "api/_autosummary/ansys.acp.core.Material.tsai_wu_constants.html#ansys.acp.core.Material.tsai_wu_constants",
        "title": "tsai_wu_constants > tsai_wu_constants > tsai_wu_constants",
        "section": "tsai_wu_constants > tsai_wu_constants",
        "text": "property Material.tsai_wu_constants: TC | TV | None\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.html#dropoffsettings",
        "title": "DropOffSettings",
        "section": "DropOffSettings",
        "text": "Defines the drop-off settings for a solid model.\ndrop_off_type (DropOffType) – Determines whether the ply’s drop-off is inside or outside the boundary\nof the ply.\ndisable_drop_offs_on_bottom (bool) – Whether to remove drop-offs on the bottom surface of the laminate.\ndrop_off_disabled_on_bottom_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the bottom\nsurface are disabled.\ndisable_drop_offs_on_top (bool) – Whether to remove drop-offs on the top surface of the laminate.\ndrop_off_disabled_on_top_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the top\nsurface are disabled.\nconnect_butt_joined_plies (bool) – Prevent an element drop-off of two adjacent, sequential plies in the same\nmodeling group.\nAdded in ACP server version 25.1.\nDropOffSettings.connect_butt_joined_plies\n\nDropOffSettings.disable_drop_offs_on_bottom\n\nDropOffSettings.disable_drop_offs_on_top\n\nDropOffSettings.drop_off_disabled_on_bottom_sets\n\nDropOffSettings.drop_off_disabled_on_top_sets\n\nDropOffSettings.drop_off_type\n\nDropOffSettings\nDropOffSettings.connect_butt_joined_plies\nDropOffSettings.disable_drop_offs_on_bottom\nDropOffSettings.disable_drop_offs_on_top\nDropOffSettings.drop_off_disabled_on_bottom_sets\nDropOffSettings.drop_off_disabled_on_top_sets\nDropOffSettings.drop_off_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffSettings",
        "href": "api/_autosummary/ansys.acp.core.DropOffSettings.html#ansys.acp.core.DropOffSettings",
        "title": "DropOffSettings > DropOffSettings > DropOffSettings",
        "section": "DropOffSettings > DropOffSettings",
        "text": "class ansys.acp.core.DropOffSettings(*, drop_off_type='inside_ply', disable_drop_offs_on_bottom=False, drop_off_disabled_on_bottom_sets=(), disable_drop_offs_on_top=False, drop_off_disabled_on_top_sets=(), connect_butt_joined_plies=True, _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the drop-off settings for a solid model.\n\nParameters\n\ndrop_off_type (DropOffType) – Determines whether the ply’s drop-off is inside or outside the boundary\nof the ply.\n\ndisable_drop_offs_on_bottom (bool) – Whether to remove drop-offs on the bottom surface of the laminate.\n\ndrop_off_disabled_on_bottom_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the bottom\nsurface are disabled.\n\ndisable_drop_offs_on_top (bool) – Whether to remove drop-offs on the top surface of the laminate.\n\ndrop_off_disabled_on_top_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the top\nsurface are disabled.\n\nconnect_butt_joined_plies (bool) – Prevent an element drop-off of two adjacent, sequential plies in the same\nmodeling group.\n\nAdded in ACP server version 25.1.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nDropOffSettings.connect_butt_joined_plies\n\n\n\nDropOffSettings.disable_drop_offs_on_bottom\n\n\n\nDropOffSettings.disable_drop_offs_on_top\n\n\n\nDropOffSettings.drop_off_disabled_on_bottom_sets\n\n\n\nDropOffSettings.drop_off_disabled_on_top_sets\n\n\n\nDropOffSettings.drop_off_type\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc.html#ezc",
        "title": "eZc",
        "section": "eZc",
        "text": "eZc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc.html#ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc",
        "title": "eZc > eZc > eZc",
        "section": "eZc > eZc",
        "text": "property ConstantStrainLimits.eZc: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.EVEN_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.EVEN_SYMMETRY.html#even_symmetry",
        "title": "EVEN_SYMMETRY",
        "section": "EVEN_SYMMETRY",
        "text": "EVEN_SYMMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SymmetryType.EVEN_SYMMETRY",
        "href": "api/_autosummary/ansys.acp.core.SymmetryType.EVEN_SYMMETRY.html#ansys.acp.core.SymmetryType.EVEN_SYMMETRY",
        "title": "EVEN_SYMMETRY > EVEN_SYMMETRY > EVEN_SYMMETRY",
        "section": "EVEN_SYMMETRY > EVEN_SYMMETRY",
        "text": "SymmetryType.EVEN_SYMMETRY = 'even_symmetry'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction.html#transverse_direction",
        "title": "transverse_direction",
        "section": "transverse_direction",
        "text": "transverse_direction"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction",
        "title": "transverse_direction > transverse_direction > transverse_direction",
        "section": "transverse_direction > transverse_direction",
        "text": "AnalysisPlyElementalData.transverse_direction: VectorData | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE.html#maximum_angle",
        "title": "MAXIMUM_ANGLE",
        "section": "MAXIMUM_ANGLE",
        "text": "MAXIMUM_ANGLE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE",
        "href": "api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE.html#ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE",
        "title": "MAXIMUM_ANGLE > MAXIMUM_ANGLE > MAXIMUM_ANGLE",
        "section": "MAXIMUM_ANGLE > MAXIMUM_ANGLE",
        "text": "RosetteSelectionMethod.MAXIMUM_ANGLE = 'maximum_angle'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.html#orientedselectionsetnodaldata",
        "title": "OrientedSelectionSetNodalData",
        "section": "OrientedSelectionSetNodalData",
        "text": "Represents nodal data for an Oriented Selection Set.\nOrientedSelectionSetNodalData.get_pyvista_mesh(mesh)\nGet a pyvista mesh with all data.\nOrientedSelectionSetNodalData.node_labels\n\nOrientedSelectionSetNodalData\nOrientedSelectionSetNodalData.get_pyvista_mesh\nOrientedSelectionSetNodalData.node_labels"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.html#ansys.acp.core.mesh_data.OrientedSelectionSetNodalData",
        "title": "OrientedSelectionSetNodalData > OrientedSelectionSetNodalData > OrientedSelectionSetNodalData",
        "section": "OrientedSelectionSetNodalData > OrientedSelectionSetNodalData",
        "text": "class ansys.acp.core.mesh_data.OrientedSelectionSetNodalData(node_labels)\n\nRepresents nodal data for an Oriented Selection Set.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\nOrientedSelectionSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\n\n\nAttributes\n\n\n\n\n\n\n\nOrientedSelectionSetNodalData.node_labels\n\n\n\n\n\n"
    },
    {
        "objectID": "api/internal",
        "href": "api/internal.html#internal-objects",
        "title": "Internal objects",
        "section": "Internal objects",
        "text": "The following objects are used internally by PyACP. They should not be used directly by the user, and\nare subject to change without notice.\n_model_printer.Node(label[, children])\nA node in a tree representation of the model.\n_server.common.ControllableServerProtocol(...)\nInterface definition for ACP servers which can be remotely started / stopped.\n_server.common.ServerProtocol(*args, **kwargs)\nInterface definition for ACP gRPC servers.\n_tree_objects._elemental_or_nodal_data.MeshDataT\nType variable.\n_tree_objects._elemental_or_nodal_data.ScalarDataT\nType variable.\n_tree_objects._grpc_helpers.edge_property_list.EdgePropertyList(*, ...)\nWrap graph edges of a specific type.\n_tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType(*kwargs)\nProtocol for the definition of ACP edge properties such as FabricWithAngle.\n_tree_objects._grpc_helpers.linked_object_list.ChildT\nType variable.\n_tree_objects._grpc_helpers.linked_object_list.LinkedObjectList(*, ...)\nList of linked tree objects.\n_tree_objects._grpc_helpers.mapping.CreatableValueT\nType variable.\n_tree_objects._grpc_helpers.mapping.Mapping(*, ...)\nMapping interface for collections of TreeObjects.\n_tree_objects._grpc_helpers.mapping.MutableMapping(*, ...)\nMutable mapping interface for collections of TreeObjects.\n_tree_objects._grpc_helpers.mapping.ValueT\nType variable.\n_tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath(...)\nInterface for objects that can be created from a resource path.\n_tree_objects._grpc_helpers.protocols.CreateRequest(...)\nInterface definition for CreateRequest messages.\n_tree_objects._grpc_helpers.protocols.ObjectInfo(...)\nInterface definition for ObjectInfo messages.\n_tree_objects._solid_model_export.SolidModelExportMixin([name])\nMixin class for adding export functionality to the solid model and imported solid model classes.\n_tree_objects.base.CreatableTreeObject([name])\nBase class for ACP objects which can be created.\n_tree_objects.base.ServerWrapper(channel, ...)\nWrapper for the connection to an ACP instance.\n_tree_objects.base.TreeObject([name])\nBase class for ACP objects which can be modified or deleted.\n_tree_objects.base.TreeObjectBase([name])\nBase class for ACP tree objects.\n_tree_objects.material.property_sets.wrapper.TC\nType variable.\n_tree_objects.material.property_sets.wrapper.TV\nType variable.\nInternal objects\n_model_printer.Node\n_server.common.ControllableServerProtocol\n_server.common.ServerProtocol\n_tree_objects._elemental_or_nodal_data.MeshDataT\n_tree_objects._elemental_or_nodal_data.ScalarDataT\n_tree_objects._grpc_helpers.edge_property_list.EdgePropertyList\n_tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType\n_tree_objects._grpc_helpers.linked_object_list.ChildT\n_tree_objects._grpc_helpers.linked_object_list.LinkedObjectList\n_tree_objects._grpc_helpers.mapping.CreatableValueT\n_tree_objects._grpc_helpers.mapping.Mapping\n_tree_objects._grpc_helpers.mapping.MutableMapping\n_tree_objects._grpc_helpers.mapping.ValueT\n_tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath\n_tree_objects._grpc_helpers.protocols.CreateRequest\n_tree_objects._grpc_helpers.protocols.ObjectInfo\n_tree_objects._solid_model_export.SolidModelExportMixin\n_tree_objects.base.CreatableTreeObject\n_tree_objects.base.ServerWrapper\n_tree_objects.base.TreeObject\n_tree_objects.base.TreeObjectBase\n_tree_objects.material.property_sets.wrapper.TC\n_tree_objects.material.property_sets.wrapper.TV"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.s",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.s.html#s",
        "title": "s",
        "section": "s",
        "text": "s"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.s",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.s.html#ansys.acp.core.material_property_sets.ConstantPuckConstants.s",
        "title": "s > s > s",
        "section": "s > s",
        "text": "property ConstantPuckConstants.s: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.ext_id",
        "href": "api/_autosummary/ansys.acp.core.Material.ext_id.html#ext_id",
        "title": "ext_id",
        "section": "ext_id",
        "text": "ext_id"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Material.ext_id",
        "href": "api/_autosummary/ansys.acp.core.Material.ext_id.html#ansys.acp.core.Material.ext_id",
        "title": "ext_id > ext_id > ext_id",
        "section": "ext_id > ext_id",
        "text": "property Material.ext_id: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.CUSTOM",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.CUSTOM.html#custom",
        "title": "CUSTOM",
        "section": "CUSTOM",
        "text": "CUSTOM"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.CUSTOM",
        "href": "api/_autosummary/ansys.acp.core.DropOffMaterialHandling.CUSTOM.html#ansys.acp.core.DropOffMaterialHandling.CUSTOM",
        "title": "CUSTOM > CUSTOM > CUSTOM",
        "section": "CUSTOM > CUSTOM",
        "text": "DropOffMaterialHandling.CUSTOM = 'custom'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY.html#snap_to_geometry",
        "title": "SNAP_TO_GEOMETRY",
        "section": "SNAP_TO_GEOMETRY",
        "text": "SNAP_TO_GEOMETRY"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY",
        "href": "api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY.html#ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY",
        "title": "SNAP_TO_GEOMETRY > SNAP_TO_GEOMETRY > SNAP_TO_GEOMETRY",
        "section": "SNAP_TO_GEOMETRY > SNAP_TO_GEOMETRY",
        "text": "ExampleKeys.SNAP_TO_GEOMETRY = 17\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh",
        "title": "get_pyvista_mesh",
        "section": "get_pyvista_mesh",
        "text": "Get a pyvista mesh with all data.\nmesh (MeshData) – The mesh to which the data is associated.\nUnstructuredGrid\nget_pyvista_mesh"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh.html#ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh",
        "title": "get_pyvista_mesh > get_pyvista_mesh > get_pyvista_mesh",
        "section": "get_pyvista_mesh > get_pyvista_mesh",
        "text": "ProductionPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle.html#shear_angle",
        "title": "shear_angle",
        "section": "shear_angle",
        "text": "shear_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle.html#ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle",
        "title": "shear_angle > shear_angle > shear_angle",
        "section": "shear_angle > shear_angle",
        "text": "AnalysisPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.DOCKER_COMPOSE",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.DOCKER_COMPOSE.html#docker_compose",
        "title": "DOCKER_COMPOSE",
        "section": "DOCKER_COMPOSE",
        "text": "DOCKER_COMPOSE"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.DOCKER_COMPOSE",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.DOCKER_COMPOSE.html#ansys.acp.core.LaunchMode.DOCKER_COMPOSE",
        "title": "DOCKER_COMPOSE > DOCKER_COMPOSE > DOCKER_COMPOSE",
        "section": "DOCKER_COMPOSE > DOCKER_COMPOSE",
        "text": "LaunchMode.DOCKER_COMPOSE = 'docker_compose'\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.html#constantfabricfiberangle",
        "title": "ConstantFabricFiberAngle",
        "section": "ConstantFabricFiberAngle",
        "text": "Constant fabric fiber angle material property set.\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\nAdded in ACP server version 24.2.\nConstantFabricFiberAngle.fabric_fiber_angle\n\nConstantFabricFiberAngle\nConstantFabricFiberAngle.fabric_fiber_angle"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.html#ansys.acp.core.material_property_sets.ConstantFabricFiberAngle",
        "title": "ConstantFabricFiberAngle > ConstantFabricFiberAngle > ConstantFabricFiberAngle",
        "section": "ConstantFabricFiberAngle > ConstantFabricFiberAngle",
        "text": "class ansys.acp.core.material_property_sets.ConstantFabricFiberAngle(*, fabric_fiber_angle=0.0, _parent_object=None, _attribute_path=None)\n\nConstant fabric fiber angle material property set.\n\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\n!! processed by numpydoc !!\n\nMethods\n\n\n\n\n\n\n\n\n\nAttributes\n\n\n\n\n\n\n\nConstantFabricFiberAngle.fabric_fiber_angle\n\n\n\n\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isdigit",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isdigit.html#isdigit",
        "title": "isdigit",
        "section": "isdigit",
        "text": "Return True if the string is a digit string, False otherwise.\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string.\nisdigit"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.LaunchMode.isdigit",
        "href": "api/_autosummary/ansys.acp.core.LaunchMode.isdigit.html#ansys.acp.core.LaunchMode.isdigit",
        "title": "isdigit > isdigit > isdigit",
        "section": "isdigit > isdigit",
        "text": "LaunchMode.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.store",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.store.html#store",
        "title": "store",
        "section": "store",
        "text": "Store the object on the server.\nparent (TreeObject) – Parent object to store the object under.\nstore"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.ModelingPly.store",
        "href": "api/_autosummary/ansys.acp.core.ModelingPly.store.html#ansys.acp.core.ModelingPly.store",
        "title": "store > store > store",
        "section": "store > store",
        "text": "ModelingPly.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.delete.html#delete",
        "title": "delete",
        "section": "delete",
        "text": "Delete the object.\ndelete"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.VirtualGeometry.delete",
        "href": "api/_autosummary/ansys.acp.core.VirtualGeometry.delete.html#ansys.acp.core.VirtualGeometry.delete",
        "title": "delete > delete > delete",
        "section": "delete > delete",
        "text": "VirtualGeometry.delete()\n\nDelete the object.\n\n!! processed by numpydoc !!\n\n"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.parent",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.parent.html#parent",
        "title": "parent",
        "section": "parent",
        "text": "The parent of the object.\nparent"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.SectionCut.parent",
        "href": "api/_autosummary/ansys.acp.core.SectionCut.parent.html#ansys.acp.core.SectionCut.parent",
        "title": "parent > parent > parent",
        "section": "parent > parent",
        "text": "property SectionCut.parent: CreatableFromResourcePath\n\nThe parent of the object.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs.html#get_pyvista_glyphs",
        "title": "get_pyvista_glyphs",
        "section": "get_pyvista_glyphs",
        "text": "Get a pyvista glyph object from the vector data.\nmesh (MeshData) – The mesh to which the data is associated.\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\nscaling_factor (float) – Factor to scale the length of the arrows.\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\nPolyData\nget_pyvista_glyphs\n1"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs",
        "href": "api/_autosummary/ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs.html#ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs",
        "title": "get_pyvista_glyphs > get_pyvista_glyphs > get_pyvista_glyphs",
        "section": "get_pyvista_glyphs > get_pyvista_glyphs",
        "text": "VectorData.get_pyvista_glyphs(*, mesh, culling_factor=1, scaling_factor=1.0, **kwargs)\n\nGet a pyvista glyph object from the vector data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\n\nscaling_factor (float) – Factor to scale the length of the arrows.\n\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\n\nReturn type\n\nPolyData\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.orientation_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.orientation_type.html#orientation_type",
        "title": "orientation_type",
        "section": "orientation_type",
        "text": "orientation_type"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.CutOffGeometry.orientation_type",
        "href": "api/_autosummary/ansys.acp.core.CutOffGeometry.orientation_type.html#ansys.acp.core.CutOffGeometry.orientation_type",
        "title": "orientation_type > orientation_type > orientation_type",
        "section": "orientation_type > orientation_type",
        "text": "property CutOffGeometry.orientation_type: Any\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.center_of_gravity",
        "href": "api/_autosummary/ansys.acp.core.Sensor.center_of_gravity.html#center_of_gravity",
        "title": "center_of_gravity",
        "section": "center_of_gravity",
        "text": "The center of gravity of the selected entity in the global coordinate system.\ncenter_of_gravity"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.Sensor.center_of_gravity",
        "href": "api/_autosummary/ansys.acp.core.Sensor.center_of_gravity.html#ansys.acp.core.Sensor.center_of_gravity",
        "title": "center_of_gravity > center_of_gravity > center_of_gravity",
        "section": "center_of_gravity > center_of_gravity",
        "text": "property Sensor.center_of_gravity: Any\n\nThe center of gravity of the selected entity in the global coordinate system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYc.html#eyc",
        "title": "eYc",
        "section": "eYc",
        "text": "eYc"
    },
    {
        "objectID": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYc",
        "href": "api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYc.html#ansys.acp.core.material_property_sets.VariableStrainLimits.eYc",
        "title": "eYc > eYc > eYc",
        "section": "eYc > eYc",
        "text": "property VariableStrainLimits.eYc: Any\n\n!! processed by numpydoc !!"
    }
]