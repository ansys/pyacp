[{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.ljust.html#ljust","title":"ljust","text":"ljust\n\n\n\nLaunchMode.ljust(width, fillchar=' ', /)\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.modeling_ply_area.html#modeling_ply_area","title":"modeling_ply_area","text":"modeling_ply_area\n\n\n\nproperty Sensor.modeling_ply_area: Any\n\nThe surface area of all Modeling Plies of the selected entity."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.NO_SYMMETRY.html#no_symmetry","title":"NO_SYMMETRY","text":"NO_SYMMETRY\n\n\n\nSymmetryType.NO_SYMMETRY = 'no_symmetry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty InterfaceLayer.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty SphericalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.status.html#status","title":"status","text":"status\n\n\n\nproperty FieldDefinition.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.woven_characterization.html#woven_characterization","title":"woven_characterization","text":"woven_characterization\n\n\n\nproperty Material.woven_characterization: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.solid_element_sets.html#solid_element_sets","title":"solid_element_sets","text":"solid_element_sets\n\n\n\nproperty SolidModel.solid_element_sets: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_2.html#fracture_toughness_mode_2","title":"fracture_toughness_mode_2","text":"fracture_toughness_mode_2\n\n\n\nproperty VariableLaRCConstants.fracture_toughness_mode_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.cad_geometry.html#cad_geometry","title":"cad_geometry","text":"cad_geometry\n\n\n\nproperty SnapToGeometry.cad_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_direction.html#draped_fiber_direction","title":"draped_fiber_direction","text":"draped_fiber_direction\n\n\n\nProductionPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_mesh_size.html#draping_mesh_size","title":"draping_mesh_size","text":"draping_mesh_size\n\n\n\nproperty ModelingPly.draping_mesh_size: Any\n\n"},{"objectID":"Home","href":"user_guide/howto/index.html#how-to-guides","title":"How-to guides","text":"How-to guides\n\nThese short guides teach you how to use particular features of PyACP.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zt.html#zt","title":"Zt","text":"Zt\n\n\n\nproperty ConstantStressLimits.Zt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.clone.html#clone","title":"clone","text":"clone\n\n\n\nInterfaceLayer.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty CutOffSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.id.html#id","title":"id","text":"id\n\n\n\nproperty AnalysisPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.symmetry.html#symmetry","title":"symmetry","text":"symmetry\n\n\n\nproperty Stackup.symmetry: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.search_radius.html#search_radius","title":"search_radius","text":"search_radius\n\n\n\nproperty LookUpTable3D.search_radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.negative_capture_tolerance.html#negative_capture_tolerance","title":"negative_capture_tolerance","text":"negative_capture_tolerance\n\n\n\nproperty GeometricalSelectionRule.negative_capture_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ProductionPly.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_ACPH5.html#imported_solid_model_acph5","title":"IMPORTED_SOLID_MODEL_ACPH5","text":"IMPORTED_SOLID_MODEL_ACPH5\n\n\n\nExampleKeys.IMPORTED_SOLID_MODEL_ACPH5 = 15\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nBooleanSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.html#modelingplyelementaldata","title":"ModelingPlyElementalData","text":"ModelingPlyElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ModelingPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Modeling Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty OrientedSelectionSet.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.clone.html#clone","title":"clone","text":"clone\n\n\n\nSubLaminate.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.html#cylindricalselectionrule","title":"CylindricalSelectionRule","text":"CylindricalSelectionRule\n\n\n\nclass ansys.acp.core.CylindricalSelectionRule(*, name='CylindricalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 1.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Cylindrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Cylindrical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\n\nradius (float) – Radius of the cylinder.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.html#examples-using-cylindricalselectionrule","title":"CylindricalSelectionRule > Examples using CylindricalSelectionRule","text":"Examples using CylindricalSelectionRule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.FROM_FILE.html#from_file","title":"FROM_FILE","text":"FROM_FILE\n\n\n\nUnitSystemType.FROM_FILE = 'from_file'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.mass.html#mass","title":"mass","text":"mass\n\n\n\nProductionPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.use_offset_correction.html#use_offset_correction","title":"use_offset_correction","text":"use_offset_correction\n\n\n\nproperty VariableOffsetSelectionRule.use_offset_correction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty ParallelSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.open_area_sets.html#open_area_sets","title":"open_area_sets","text":"open_area_sets\n\n\n\nproperty InterfaceLayer.open_area_sets: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nSolidModelElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.mat_type.html#mat_type","title":"mat_type","text":"mat_type\n\n\n\nproperty ConstantPuckConstants.mat_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nElementSetElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffMaterialHandling.COMPUTED.html#computed","title":"COMPUTED","text":"COMPUTED\n\n\n\nCutOffMaterialHandling.COMPUTED = 'computed'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.html#solidmodeloffsetdirectiontype","title":"SolidModelOffsetDirectionType","text":"SolidModelOffsetDirectionType\n\n\n\nclass ansys.acp.core.SolidModelOffsetDirectionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the offset direction is evaluated in a solid model. With SURFACE_NORMAL, the offset direction is re-evaluated based on the surface of the solid. With SHELL_NORMAL, the direction is based on the shell surface.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method.html#rosette_selection_method","title":"rosette_selection_method","text":"rosette_selection_method\n\n\n\nproperty OrientedSelectionSet.rosette_selection_method: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosette_selection_method.html#examples-using-orientedselectionsetrosette_selection_method","title":"rosette_selection_method > Examples using OrientedSelectionSet.rosette_selection_method","text":"Examples using OrientedSelectionSet.rosette_selection_method\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.store.html#store","title":"store","text":"store\n\n\n\nLookUpTable1D.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.topdown.html#topdown","title":"topdown","text":"topdown\n\n\n\nproperty Stackup.topdown: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.update.html#update","title":"update","text":"update\n\n\n\nModel.update(*, relations_only=False)\n\nUpdate the model.\n\nParameters\n\nrelations_only (bool) – Whether to update and propagate only the status of all objects."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.update.html#examples-using-modelupdate","title":"update > Examples using Model.update","text":"Examples using Model.update\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty BooleanSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList.html#linkedobjectlist","title":"LinkedObjectList","text":"LinkedObjectList\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.LinkedObjectList(*, _parent_object, _attribute_name, _object_constructor, _allowed_types)\n\nList of linked tree objects.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nParallelSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.base.CreatableTreeObject.html#creatabletreeobject","title":"CreatableTreeObject","text":"CreatableTreeObject\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects.base.CreatableTreeObject(name='')\n\nBase class for ACP objects which can be created.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.fiber_direction.html#fiber_direction","title":"fiber_direction","text":"fiber_direction\n\n\n\nAnalysisPlyElementalData.fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty InterfaceLayer.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList.html#edgepropertylist","title":"EdgePropertyList","text":"EdgePropertyList\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.EdgePropertyList(*, _parent_object, _object_type, _attribute_name, _from_pb_constructor)\n\nWrap graph edges of a specific type.\n\nWraps links between objects of a specific type, for instance FabricWithAngle\nof a stackup. This object handles the conversion of the protobuf messages to the\ncorresponding Python object and vice-versa.\nself._object_list holds the Python object. The python objects are stored\nto support editing in-place editing. This is achieved by passing a callback\nfunction to the python object.\n\nThe edges (and parent object) is updated\nas soon as an item or one of its properties are changed.\n\nNote: sort is not implemented because the model definition often depends\non the order.\n\nThe LinkedObjectList should be used for graph edges without a specific type.\nFor instance, element sets of an oriented element set.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nAnalysisPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.base.ServerWrapper.html#serverwrapper","title":"ServerWrapper","text":"ServerWrapper\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects.base.ServerWrapper(channel, version, filetransfer_handler)\n\nWrapper for the connection to an ACP instance.\n\nThis class contains the representation of the ACP instance needed by tree objects.\nIts purpose is to minimize the dependency of tree objects on the ACP class.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty LookUpTable3DColumn.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty Fabric.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.use_imported_plies.html#use_imported_plies","title":"use_imported_plies","text":"use_imported_plies\n\n\n\nproperty LayupMappingObject.use_imported_plies: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.MATERIAL_WISE.html#material_wise","title":"MATERIAL_WISE","text":"MATERIAL_WISE\n\n\n\nExtrusionMethod.MATERIAL_WISE = 'material_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set.html#create_oriented_selection_set","title":"create_oriented_selection_set","text":"create_oriented_selection_set\n\n\n\nModel.create_oriented_selection_set(*, name='OrientedSelectionSet', element_sets=(), orientation_point=(0.0, 0.0, 0.0), orientation_direction=(0.0, 0.0, 0.0), rosettes=(), rosette_selection_method='minimum_angle', selection_rules=(), draping=False, draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(0.0, 0.0, 1.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_material_model='woven', draping_ud_coefficient=0.0, rotation_angle=0.0, reference_direction_field=None)\n\nInstantiate an Oriented Selection Set.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\n\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\n\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\n\ndraping (bool) – If True, activate draping to adjust the reference directions.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\n\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nReturn type\n\nOrientedSelectionSet\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_oriented_selection_set.html#examples-using-modelcreate_oriented_selection_set","title":"create_oriented_selection_set > Examples using Model.create_oriented_selection_set","text":"Examples using Model.create_oriented_selection_set\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.to_pyvista.html#to_pyvista","title":"to_pyvista","text":"to_pyvista\n\n\n\nMeshData.to_pyvista()\n\nConvert the mesh data to a PyVista mesh.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ImportedModelingGroup.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_coordinate_system_index.html#use_default_coordinate_system_index","title":"use_default_coordinate_system_index","text":"use_default_coordinate_system_index\n\n\n\nproperty ImportedSolidModelExportSettings.use_default_coordinate_system_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule.html#create_cylindrical_selection_rule","title":"create_cylindrical_selection_rule","text":"create_cylindrical_selection_rule\n\n\n\nModel.create_cylindrical_selection_rule(*, name='CylindricalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 1.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Cylindrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Cylindrical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Cylindrical Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Cylindrical Selection Rule.\n\nradius (float) – Radius of the cylinder.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nCylindricalSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cylindrical_selection_rule.html#examples-using-modelcreate_cylindrical_selection_rule","title":"create_cylindrical_selection_rule > Examples using Model.create_cylindrical_selection_rule","text":"Examples using Model.create_cylindrical_selection_rule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_neg.html#p_21_neg","title":"p_21_neg","text":"p_21_neg\n\n\n\nproperty VariablePuckConstants.p_21_neg: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty SphericalSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Contribute","href":"contributing.html#contribute","title":"Contribute","text":"Contribute\n\nWe absolutely welcome all code contributions and hope that this\nguide facilitates an understanding of the PyACP code\nrepository. It is important to note that while the PyACP software\npackage is maintained by Ansys and any submissions are reviewed\nthoroughly before merging, we still seek to foster a community that can\nsupport user questions and develop new features to make this software\na useful tool for all users. As such, we welcome and encourage any\nquestions or submissions to this repository.\n\nFor example, you can make contributions as follows:\n\nReport a bug or suggest a feature.\n\nGive feedback or make suggestions for improving the documentation.\n\nSubmit a pull request to fix a bug or add a feature.\n\nReport your use case, explain how PyACP has helped you, or indicate what features are still missing.\n\nFor feedback, suggestions, or bug reports, open an issue on the PyACP GitHub repository.\nFor code changes or documentation improvements, open a pull request."},{"objectID":"Contribute","href":"contributing.html#development-setup","title":"Contribute > Development Setup","text":"Development Setup"},{"objectID":"Contribute","href":"contributing.html#installation","title":"Contribute > Installation","text":"Installation\n\nInstalling PyACP in developer mode allows you to modify the source and enhance it. Before contributing to the project,\nplease refer to the PyAnsys Developer’s guide.\n\nYou will need to follow these steps:\n\nStart by cloning this repository, and entering the newly created directory:\n\nMake sure you have the latest version of poetry and its shell plugin:\n\nAt this point, you may need to restart your shell or editor to ensure that the new poetry command is available.\n\nInstall the project and all its development dependencies using poetry. This also takes care of\ncreating a new virtual environment:\n\nThis step installs PyACP in an editable mode (no build step is needed, no re-install when changing the code).\n\nActivate your development virtual environment with:"},{"objectID":"Contribute","href":"contributing.html#testing","title":"Contribute > Testing","text":"Testing\n\nThe PyACP test suite uses pytest. You can run it with"},{"objectID":"Contribute","href":"contributing.html#benchmarking","title":"Contribute > Benchmarking","text":"Benchmarking\n\nAs part of the test suite, we run some performance benchmarks. These can be run with\n\nAdditional options can be found in the pytest-benchmark documentation.\n\nNOTE: The benchmarks use the tc-netem Linux kernel module to simulate a slow network\nconnection within a Docker container. This is available only on Linux, not on Docker for MacOS\nor Windows.\n\nThe benchmark results from the main branch are uploaded to https://acp.docs.pyansys.com/benchmarks."},{"objectID":"Contribute","href":"contributing.html#pre-commit-hooks","title":"Contribute > Pre-commit hooks","text":"Pre-commit hooks\n\nStyle and linter checks are run through the pre-commit tool. You can run these checks with\n\nWe also recommend installing pre-commit into your repository:\n\nThis will run the pre-commit hooks on the changed files before every git commit. If you ever\nneed to create a commit without running the hooks, you can skip them with git commit -n."},{"objectID":"Contribute","href":"contributing.html#documentation","title":"Contribute > Documentation","text":"Documentation"},{"objectID":"Contribute","href":"contributing.html#basic-documentation-build","title":"Contribute > Basic documentation build","text":"Basic documentation build\n\nTo build the documentation, run the following commands:\n\nOn Linux & MacOS:\n\nOn Windows:\n\nThe generated HTML files can be viewed with the browser of your choice.\n\nThis method of building the documentation will run the examples with the default or currently\nconfigured launch options for the ACP, MAPDL, and DPF servers. Make sure to have these installed\nand configured correctly, or alternatively follow the Docker-based instructions below."},{"objectID":"Contribute","href":"contributing.html#alternative-start-services-with-docker","title":"Contribute > Alternative: start services with docker","text":"Alternative: start services with docker\n\nAlternatively, you can use the provided docker-compose file to start the MAPDL and DPF servers.\n\nFirst, review the DPF preview license agreement, and if you agree, set the ANSYS_DPF_ACCEPT_LA environment variable to Y. See the PyDPF documentation for details.\n\nOn Windows, you can then use the shipped shell script:\n\nThe following manual steps can be used on any platform:\n\nSet the following additional environment variables in your shell:\n\nANSYSLMD_LICENSE_FILE: To a valid license server (e.g 1055@mylicenseserver.com).\n\nPYMAPDL_PORT: Choose any free port.\n\nPYMAPDL_START_INSTANCE=FALSE\n\nPYDPF_COMPOSITES_DOCKER_CONTAINER_PORT: Choose any free port.\n\nStart the docker containers with:\n\nBuild the documentation with the Sphinx commands mentioned above:\n\nOn Linux & MacOS:\n\nOn Windows:"},{"objectID":"Contribute","href":"contributing.html#partial-builds","title":"Contribute > Partial builds","text":"Partial builds\n\nTwo environment variables can be used to run a quicker partial documentation build:\n\nPYACP_DOC_SKIP_API=1: Skip the API reference build.\n\nPYACP_DOC_SKIP_GALLERY=1: Skip running the examples."},{"objectID":"Contribute","href":"contributing.html#distribution","title":"Contribute > Distribution","text":"Distribution\n\nThe following commands can be used to build and check the PyACP package:\n\nThis creates both a source distribution, and a wheel file. An alternative is"},{"objectID":"Contribute","href":"contributing.html#license","title":"Contribute > License","text":"License\n\nPyACP is licensed under the MIT license. Please see the LICENSE for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty LookUpTable1D.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty ImportedProductionPly.angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.status.html#status","title":"status","text":"status\n\n\n\nproperty SectionCut.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty BooleanSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXt.html#ext","title":"eXt","text":"eXt\n\n\n\nproperty VariableStrainLimits.eXt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.scalar_field.html#scalar_field","title":"scalar_field","text":"scalar_field\n\n\n\nproperty FieldDefinition.scalar_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.offsets.html#offsets","title":"offsets","text":"offsets\n\n\n\nproperty VariableOffsetSelectionRule.offsets: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.engineering_constants.html#engineering_constants","title":"engineering_constants","text":"engineering_constants\n\n\n\nproperty Material.engineering_constants: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.clone.html#clone","title":"clone","text":"clone\n\n\n\nSensor.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty OrientedSelectionSet.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.elemental_data.html#examples-using-orientedselectionsetelemental_data","title":"elemental_data > Examples using OrientedSelectionSet.elemental_data","text":"Examples using OrientedSelectionSet.elemental_data\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_geometries.html#cut_off_geometries","title":"cut_off_geometries","text":"cut_off_geometries\n\n\n\nproperty ImportedSolidModel.cut_off_geometries: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nSphericalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E.html#e","title":"E","text":"E\n\n\n\nproperty VariableEngineeringConstants.E: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty AnalysisPly.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.orientation.html#orientation","title":"orientation","text":"orientation\n\n\n\nModelingPlyElementalData.orientation: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions.html#import_acp_composite_definitions","title":"import_acp_composite_definitions","text":"import_acp_composite_definitions\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core.mechanical_integration_helpers.import_acp_composite_definitions(*, mechanical, path)\n\nImport ACP composite definitions HDF5 into Mechanical.\n\nImports the composite layup defined in ACP into Mechanical, as Imported Plies.\n\nThis function does not import the solid mesh, use import_acp_mesh_from_cdb()\nfor this purpose.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\npath (str | PathLike[str]) – The path of the file to import. The extension must be ‘.h5’."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.relative_rule.html#relative_rule","title":"relative_rule","text":"relative_rule\n\n\n\nproperty SphericalSelectionRule.relative_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.splitlines.html#splitlines","title":"splitlines","text":"splitlines\n\n\n\nPuckMaterialType.splitlines(/, keepends=False)\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.store.html#store","title":"store","text":"store\n\n\n\nModelingGroup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.OVERWRITE.html#overwrite","title":"OVERWRITE","text":"OVERWRITE\n\n\n\nHDF5CompositeCAEImportMode.OVERWRITE = 'overwrite'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.NORMAL.html#normal","title":"NORMAL","text":"NORMAL\n\n\n\nElementalDataType.NORMAL = 'normal'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_DIRECTION.html#draped_fiber_direction","title":"DRAPED_FIBER_DIRECTION","text":"DRAPED_FIBER_DIRECTION\n\n\n\nElementalDataType.DRAPED_FIBER_DIRECTION = 'draped_fiber_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.html#parallelselectionrule","title":"ParallelSelectionRule","text":"ParallelSelectionRule\n\n\n\nclass ansys.acp.core.ParallelSelectionRule(*, name='ParallelSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(1.0, 0.0, 0.0), lower_limit=0.0, upper_limit=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Parallel Selection Rule.\n\nParameters\n\nname (str) – Name of the Parallel Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\n\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\n\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.html#examples-using-parallelselectionrule","title":"ParallelSelectionRule > Examples using ParallelSelectionRule","text":"Examples using ParallelSelectionRule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.INTERNAL_DRAPING.html#internal_draping","title":"INTERNAL_DRAPING","text":"INTERNAL_DRAPING\n\n\n\nDrapingType.INTERNAL_DRAPING = 'internal_draping'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interface_weakening_factor.html#interface_weakening_factor","title":"interface_weakening_factor","text":"interface_weakening_factor\n\n\n\nproperty VariablePuckConstants.interface_weakening_factor: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.id.html#id","title":"id","text":"id\n\n\n\nproperty LayupMappingObject.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#minimum_distance_superposed","title":"MINIMUM_DISTANCE_SUPERPOSED","text":"MINIMUM_DISTANCE_SUPERPOSED\n\n\n\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED = 'minimum_distance_superposed'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.BIN.html#bin","title":"BIN","text":"BIN\n\n\n\nUnitSystemType.BIN = 'bin'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL.html#sensor_by_material","title":"SENSOR_BY_MATERIAL","text":"SENSOR_BY_MATERIAL\n\n\n\nSensorType.SENSOR_BY_MATERIAL = 'sensor_by_material'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_MATERIAL.html#examples-using-sensortypesensor_by_material","title":"SENSOR_BY_MATERIAL > Examples using SensorType.SENSOR_BY_MATERIAL","text":"Examples using SensorType.SENSOR_BY_MATERIAL\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.html#lookuptable1d","title":"LookUpTable1D","text":"LookUpTable1D\n\n\n\nclass ansys.acp.core.LookUpTable1D(*, name='LookUpTable1D', origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0))\n\nInstantiate a 1D Look-Up Table.\n\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\n\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\n\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.html#examples-using-lookuptable1d","title":"LookUpTable1D > Examples using LookUpTable1D","text":"Examples using LookUpTable1D\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_H5.html#ansys_h5","title":"ANSYS_H5","text":"ANSYS_H5\n\n\n\nSolidModelExportFormat.ANSYS_H5 = 'ansys:h5'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_type.html#thickness_type","title":"thickness_type","text":"thickness_type\n\n\n\nproperty ImportedModelingPly.thickness_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.html#orientedselectionsetelementaldata","title":"OrientedSelectionSetElementalData","text":"OrientedSelectionSetElementalData\n\n\n\nclass ansys.acp.core.mesh_data.OrientedSelectionSetElementalData(element_labels, normal=None, orientation=None, reference_direction=None)\n\nRepresents elemental data for an Oriented Selection Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.delete.html#delete","title":"delete","text":"delete\n\n\n\nLookUpTable1D.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.html#orientedselectionsetnodaldata","title":"OrientedSelectionSetNodalData","text":"OrientedSelectionSetNodalData\n\n\n\nclass ansys.acp.core.mesh_data.OrientedSelectionSetNodalData(node_labels)\n\nRepresents nodal data for an Oriented Selection Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_y.html#rotation_angle_y","title":"rotation_angle_y","text":"rotation_angle_y\n\n\n\nCoordinateTransformation.rotation_angle_y: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty ProductionPly.angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zc.html#zc","title":"Zc","text":"Zc\n\n\n\nproperty VariableStressLimits.Zc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty ImportedProductionPly.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.rotation_angle.html#rotation_angle","title":"rotation_angle","text":"rotation_angle\n\n\n\nproperty OrientedSelectionSet.rotation_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.active.html#active","title":"active","text":"active\n\n\n\nproperty Sensor.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL.html#sensor_by_solid_model","title":"SENSOR_BY_SOLID_MODEL","text":"SENSOR_BY_SOLID_MODEL\n\n\n\nSensorType.SENSOR_BY_SOLID_MODEL = 'sensor_by_solid_model'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_SOLID_MODEL.html#examples-using-sensortypesensor_by_solid_model","title":"SENSOR_BY_SOLID_MODEL > Examples using SensorType.SENSOR_BY_SOLID_MODEL","text":"Examples using SensorType.SENSOR_BY_SOLID_MODEL\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_analysis_model.html#export_analysis_model","title":"export_analysis_model","text":"export_analysis_model\n\n\n\nModel.export_analysis_model(path)\n\nSave the analysis model to a CDB file.\n\nParameters\n\npath (str | PathLike[str]) – Target file path. E.g. /tmp/ACPAnalysisModel.cdb"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_analysis_model.html#examples-using-modelexport_analysis_model","title":"export_analysis_model > Examples using Model.export_analysis_model","text":"Examples using Model.export_analysis_model\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.name.html#name","title":"name","text":"name\n\n\n\nproperty CADGeometry.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TV.html#tv","title":"TV","text":"TV\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects.material.property_sets.wrapper.TV = ~TV\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSphericalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.name.html#name","title":"name","text":"name\n\n\n\nproperty Model.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.name.html#examples-using-modelname","title":"name > Examples using Model.name","text":"Examples using Model.name\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.transverse_direction.html#transverse_direction","title":"transverse_direction","text":"transverse_direction\n\n\n\nAnalysisPlyElementalData.transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.active.html#active","title":"active","text":"active\n\n\n\nproperty ImportedModelingPly.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.html#variablepuckconstants","title":"VariablePuckConstants","text":"VariablePuckConstants\n\n\n\nclass ansys.acp.core.material_property_sets.VariablePuckConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable Puck constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#create-input-file-for-pyacp","title":"Create input file for PyACP","text":"Create input file for PyACP\n\nTo start working with PyACP, an input file that contains the mesh is required. PyACP supports reading\nthe mesh from:\n\nCDB or DAT files, using the ACPInstance.import_model() method with the \"ansys:cdb\" or \"ansys:dat\" format.\n\nHDF5 transfer files generated by Mechanical, using the ACPInstance.import_model() method with the \"ansys::h5\" format.\n\nPyACP reads the mesh, including any coordinate systems, element sets, and edge sets\nfrom the input file. In the case of CDB or DAT files, PyACP also reads the materials\nfrom the input file.\nOnce the layup has been created with PyACP, you can export the model for downstream analysis.\n\nThe Model.export_analysis_model() method to export a CDB file from PyACP is only\navailable if the input was read from a CDB or DAT file.\nIf the input was read from a Mechanical HDF5 transfer file, you can export the model\neither to the HDF5 Composite CAE format, or to transfer formats to PyMechanical.\nSee the workflow examples for more information.\n\nThe following sections describe how to create the input file in CDB or Mechanical HDF5 format."},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#create-a-cdb-input-file","title":"Create input file for PyACP > Create a CDB input file","text":"Create a CDB input file\n\n"},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#create-a-cdb-file-with-ansys-mechanical","title":"Create input file for PyACP > Create a CDB file with Ansys Mechanical","text":"Create a CDB file with Ansys Mechanical"},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#in-the-mechanical-gui","title":"Create input file for PyACP > In the Mechanical GUI","text":"In the Mechanical GUI\n\nOne way to create an input file for PyACP is to create a static structural setup and export the solver input file. To do this, follow these steps:\n\nOpen Ansys Workbench.\n\nAdd a “Static Structural” system.\n\nCreate or import a geometry in the geometry cell of the static structural system (A3). Note that PyACP only supports shell geometries.\n\nOpen the Mechanical Model (A4).\n\nAssign a thickness and a material to the geometry. (These are later overwritten by PyACP.)\n\nOptional: Define the boundary conditions.\n\nSelect “Static Structural (A5)” in the tree and then click Environment/Write Input File in the navigation bar.\n\nSave the input file to a DAT file in the desired location.\n\nFor a complete example, see pymapdl_workflow_example.\n\nThe imported model always contains the dummy material named 1 that was assigned to the geometry."},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#with-scripting","title":"Create input file for PyACP > With scripting","text":"With scripting\n\nYou can also create a CDB file from Mechanical or PyMechanical with scripting, using the WriteInputFile method of the analysis object. See pymechanical_to_cdb_example for a complete example."},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#create-an-input-file-with-ansys-mechanical-apdl","title":"Create input file for PyACP > Create an input file with Ansys Mechanical APDL","text":"Create an input file with Ansys Mechanical APDL\n\nYou can also create an input file for PyACP by performing these steps:\n\nOpen Ansys Mechanical APDL\n\nLoad or create a model with APDL commands\n\nWrite the CDB file with the CDWRITE command:\n\n\n\nSee pymapdl_workflow_example for a complete example."},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#notes-on-material-handling","title":"Create input file for PyACP > Notes on material handling","text":"Notes on material handling\n\nMaterials present in the input file (*.cdb or *.dat) are read into PyACP. The following rules apply:\n\nIf the material has defined a UVID, then the material is imported as locked. This means the material cannot be edited in PyACP. If the input file was created with Ansys Mechanical (see cdb_file_from_mechanical), this is always the case. In Mechanical APDL, you can define a UVID with the MP,UVID or MPDATAT,UNBL,16,UVID command.\n\nIf the material has no UVID, then the material is copied on import. Only the copied material appears in PyACP. The original material is not changed and appears unmodified in the output file."},{"objectID":"Home","href":"user_guide/howto/create_input_file.html#create-a-mechanical-hdf5-transfer-file-experimental","title":"Create input file for PyACP > Create a Mechanical HDF5 transfer file (experimental)","text":"Create a Mechanical HDF5 transfer file (experimental)\n\nThe Mechanical to ACP HDF5 transfer file can be created using the export_mesh_for_acp() helper function. See pymechanical_shell_example or pymechanical_solid_example for complete examples."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.name.html#name","title":"name","text":"name\n\n\n\nproperty AnalysisPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.clone.html#clone","title":"clone","text":"clone\n\n\n\nModelingGroup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.print_model.html#print_model","title":"print_model","text":"print_model\n\n\n\nansys.acp.core.print_model(model, *, hide_empty=True, show_lines=False, label_by_id=False)\n\nPrint a tree representation of the model.\n\nParameters\n\nmodel (Model) – pyACP model\n\nhide_empty (bool) – Whether to hide empty collections.\n\nshow_lines (bool) – Whether to show lines connecting the nodes.\n\nlabel_by_id (bool) – Prefer the ID over the name for the label of a node, for objects that have both."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.print_model.html#examples-using-print_model","title":"print_model > Examples using print_model","text":"Examples using print_model\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nAnalysisPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.status.html#status","title":"status","text":"status\n\n\n\nproperty SolidModel.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.add_fabric.html#add_fabric","title":"add_fabric","text":"add_fabric\n\n\n\nStackup.add_fabric(fabric, angle=0.0)\n\nAdd a FabricWithAngle to the Stackup.\n\nSee FabricWithAngle for the available parameters.\n\nReturn type\n\nFabricWithAngle"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TaperEdge.clone.html#clone","title":"clone","text":"clone\n\n\n\nTaperEdge.clone()\n\nCreate a new unstored TaperEdge with the same properties.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty GeometricalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.store.html#store","title":"store","text":"store\n\n\n\nCutOffGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isdigit.html#isdigit","title":"isdigit","text":"isdigit\n\n\n\nLaunchMode.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh.html#visualization_mesh","title":"visualization_mesh","text":"visualization_mesh\n\n\n\nproperty CADGeometry.visualization_mesh: TriangleMesh\n\nSurface mesh for visualization.\n\nThe CAD Geometry’s surface represented as a triangle mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.visualization_mesh.html#examples-using-cadgeometryvisualization_mesh","title":"visualization_mesh > Examples using CADGeometry.visualization_mesh","text":"Examples using CADGeometry.visualization_mesh\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.rosette.html#rosette","title":"rosette","text":"rosette\n\n\n\nproperty SphericalSelectionRule.rosette: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nParallelSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableTsaiWuConstants.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nCutOffSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty BooleanSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.html#variableoffsetselectionruleelementaldata","title":"VariableOffsetSelectionRuleElementalData","text":"VariableOffsetSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a VariableOffset Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.GLASS.html#glass","title":"GLASS","text":"GLASS\n\n\n\nPuckMaterialType.GLASS = 'glass'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.name.html#name","title":"name","text":"name\n\n\n\nFieldVariable.name: str\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB.html#basic_flat_plate_solid_mesh_cdb","title":"BASIC_FLAT_PLATE_SOLID_MESH_CDB","text":"BASIC_FLAT_PLATE_SOLID_MESH_CDB\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_SOLID_MESH_CDB = 4\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty ElementSet.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DirectLaunchConfig.stderr_file.html#stderr_file","title":"stderr_file","text":"stderr_file\n\n\n\nDirectLaunchConfig.stderr_file: str = '/dev/null'\n\n"},{"objectID":"Home","href":"examples/modeling_features/006-layup-thickness-definitions.html#thickness-definition","title":"Thickness definition","text":"Thickness definition\n\nThis example shows how the thickness of a ply can be defined by a geometry or a lookup table.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example."},{"objectID":"Home","href":"examples/modeling_features/006-layup-thickness-definitions.html#import-modules","title":"Thickness definition > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/006-layup-thickness-definitions.html#start-acp-and-load-the-model","title":"Thickness definition > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from the input file.\nThis example’s input file contains a flat plate with a single ply.\n\nPlot the nominal ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/006-layup-thickness-definitions.html#define-the-thickness-from-a-geometry","title":"Thickness definition > Define the thickness from a geometry","text":"Define the thickness from a geometry\n\nAdd the solid geometry to the model that defines the thickness.\n\nCreate a virtual geometry from the CAD geometry.\n\nSet the thickness type to FROM_GEOMETRY and define the virtual geometry.\n\nPlot the ply thickness together with the geometry defining the thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/006-layup-thickness-definitions.html#define-the-thickness-from-a-lookup-table","title":"Thickness definition > Define the thickness from a lookup table","text":"Define the thickness from a lookup table\n\nCreate the data for the lookup table.\nMake a 20x20 grid of points to define a thickness function on. In this example,\nthe mesh of the lookup table is finer than the finite element mesh, and the thickness\nis interpolated onto the finite element mesh.\nNote that the plate lies in the xz plane and the thickness is defined in the y direction.\n\nCreate a thickness that equals the distance to the center of the plate.\n\nCreate the point coordinates for the lookup table.\nThe y coordinate is always zero.\n\nNow you have a list of point coordinates:\n\nAnd the corresponding thickness values.\n\nCreate the lookup table and add the coordinates and thickness data.\n\nSet the thickness type to FROM_TABLE and assign the thickness column.\n\nPlot the ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 3.688 seconds)\n\n\n\nDownload Jupyter notebook: 006-layup-thickness-definitions.ipynb\n\nDownload Python source code: 006-layup-thickness-definitions.py\n\nDownload zipped: 006-layup-thickness-definitions.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.html#analysisply","title":"AnalysisPly","text":"AnalysisPly\n\n\n\nclass ansys.acp.core.AnalysisPly\n\nInstantiate an Analysis Ply.\n\nParameters\n\nname (str) – The name of the Analysis Ply.\n\nmaterial (Material) – Material of the Analysis ply.\n\nangle (float) – Angle of the Analysis ply in degrees.\n\nthickness (float) – Thickness of the Analysis ply\n\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.html#examples-using-analysisply","title":"AnalysisPly > Examples using AnalysisPly","text":"Examples using AnalysisPly\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.html#orientedselectionset","title":"OrientedSelectionSet","text":"OrientedSelectionSet\n\n\n\nclass ansys.acp.core.OrientedSelectionSet(*, name='OrientedSelectionSet', element_sets=(), orientation_point=(0.0, 0.0, 0.0), orientation_direction=(0.0, 0.0, 0.0), rosettes=(), rosette_selection_method='minimum_angle', selection_rules=(), draping=False, draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(0.0, 0.0, 1.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_material_model='woven', draping_ud_coefficient=0.0, rotation_angle=0.0, reference_direction_field=None)\n\nInstantiate an Oriented Selection Set.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nelement_sets (Sequence[ElementSet]) – Element Sets on which the Oriented Selection Set is defined.\n\norientation_point (tuple[float, float, float]) – The Orientation Point of the Oriented Selection Set.\n\norientation_direction (tuple[float, float, float]) – The Orientation Direction of the Oriented Element set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nselection_rules (Sequence[ParallelSelectionRule | CylindricalSelectionRule | SphericalSelectionRule | TubeSelectionRule | GeometricalSelectionRule | VariableOffsetSelectionRule | BooleanSelectionRule]) – Selection Rules which may limit the extent of the Oriented Selection Set.\n\ndraping (bool) – If True, activate draping to adjust the reference directions.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the reference direction of the Oriented Selection Set at\nthe seed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm. If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_material_model (DrapingMaterialModel) – Chooses between different draping formulations.\n\ndraping_ud_coefficient (float) – Value between 0 and 1 which determines the amount of deformation\nin the transverse direction if the draping material model is set to\nDrapingMaterialModel.UD.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nreference_direction_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.html#examples-using-orientedselectionset","title":"OrientedSelectionSet > Examples using OrientedSelectionSet","text":"Examples using OrientedSelectionSet\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.use_default_draping_mesh_size.html#use_default_draping_mesh_size","title":"use_default_draping_mesh_size","text":"use_default_draping_mesh_size\n\n\n\nproperty OrientedSelectionSet.use_default_draping_mesh_size: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.html#lookuptable3d","title":"LookUpTable3D","text":"LookUpTable3D\n\n\n\nclass ansys.acp.core.LookUpTable3D(*, name='LookUpTable3D', use_global_coordinate_system=True, rosette=None, interpolation_algorithm='weighted_nearest_neighbor', use_default_search_radius=True, search_radius=0.0, num_min_neighbors=1)\n\nInstantiate a 3D Look-Up Table.\n\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\n\nhas shape (N, 3), where N is the number of data points (rows)\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\nname (str) – Name of the 3D look-up table.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and directions.\n\nrosette (Rosette | None) – Rosette used for origin and directions. Only applies if\nuse_global_coordinate_system is False.\n\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\n\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\n\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\n\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.html#examples-using-lookuptable3d","title":"LookUpTable3D > Examples using LookUpTable3D","text":"Examples using LookUpTable3D\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.name.html#name","title":"name","text":"name\n\n\n\nproperty CutOffGeometry.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/dpf_integration_helpers.html#dpf-integration-helpers","title":"DPF integration helpers","text":"DPF integration helpers\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.tube_selection_rules.html#tube_selection_rules","title":"tube_selection_rules","text":"tube_selection_rules\n\n\n\nproperty Model.tube_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_2.html#orientation_2","title":"orientation_2","text":"orientation_2\n\n\n\nproperty ConstantWovenCharacterization.orientation_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.active.html#active","title":"active","text":"active\n\n\n\nproperty ButtJointSequence.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES.html#directions_from_tabular_values","title":"DIRECTIONS_FROM_TABULAR_VALUES","text":"DIRECTIONS_FROM_TABULAR_VALUES\n\n\n\nRosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES = 'directions_from_tabular_values'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES.html#examples-using-rosetteselectionmethoddirections_from_tabular_values","title":"DIRECTIONS_FROM_TABULAR_VALUES > Examples using RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES","text":"Examples using RosetteSelectionMethod.DIRECTIONS_FROM_TABULAR_VALUES\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.html#plygeometryexportformat","title":"PlyGeometryExportFormat","text":"PlyGeometryExportFormat\n\n\n\nclass ansys.acp.core.PlyGeometryExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the file format of the ply geometry export.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.REGULAR.html#regular","title":"REGULAR","text":"REGULAR\n\n\n\nPlyType.REGULAR = 'regular'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.REGULAR.html#examples-using-plytyperegular","title":"REGULAR > Examples using PlyType.REGULAR","text":"Examples using PlyType.REGULAR\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nAnalysisPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxy.html#sxy","title":"Sxy","text":"Sxy\n\n\n\nproperty ConstantStressLimits.Sxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.html#solidelementsetnodaldata","title":"SolidElementSetNodalData","text":"SolidElementSetNodalData\n\n\n\nclass ansys.acp.core.mesh_data.SolidElementSetNodalData(node_labels)\n\nRepresents nodal data for a Solid Element Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nGeometricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.material.html#material","title":"material","text":"material\n\n\n\nproperty AnalysisPly.material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E1.html#e1","title":"E1","text":"E1\n\n\n\nproperty ConstantEngineeringConstants.E1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxy.html#sxy","title":"Sxy","text":"Sxy\n\n\n\nproperty VariableStressLimits.Sxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.base.TreeObjectBase.html#treeobjectbase","title":"TreeObjectBase","text":"TreeObjectBase\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects.base.TreeObjectBase(name='')\n\nBase class for ACP tree objects.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.delete.html#delete","title":"delete","text":"delete\n\n\n\nSamplingPoint.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.section_cut_type.html#section_cut_type","title":"section_cut_type","text":"section_cut_type\n\n\n\nproperty SectionCut.section_cut_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_STEP.html#race_car_nose_step","title":"RACE_CAR_NOSE_STEP","text":"RACE_CAR_NOSE_STEP\n\n\n\nExampleKeys.RACE_CAR_NOSE_STEP = 6\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty SphericalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffMaterialHandling.html#cutoffmaterialhandling","title":"CutOffMaterialHandling","text":"CutOffMaterialHandling\n\n\n\nclass ansys.acp.core.CutOffMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how cut-off material is selected.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.index.html#index","title":"index","text":"index\n\n\n\nPuckMaterialType.index(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.values.html#values","title":"values","text":"values\n\n\n\nFieldVariable.values: tuple[float, ...]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.store.html#store","title":"store","text":"store\n\n\n\nSnapToGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.draping_ud_coefficient.html#draping_ud_coefficient","title":"draping_ud_coefficient","text":"draping_ud_coefficient\n\n\n\nproperty Stackup.draping_ud_coefficient: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.edge_set_type.html#edge_set_type","title":"edge_set_type","text":"edge_set_type\n\n\n\nproperty EdgeSet.edge_set_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E2.html#e2","title":"E2","text":"E2\n\n\n\nproperty VariableEngineeringConstants.E2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.ignore_for_postprocessing.html#ignore_for_postprocessing","title":"ignore_for_postprocessing","text":"ignore_for_postprocessing\n\n\n\nproperty Fabric.ignore_for_postprocessing: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.mass.html#mass","title":"mass","text":"mass\n\n\n\nAnalysisPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.html#solidmodelelementaldata","title":"SolidModelElementalData","text":"SolidModelElementalData\n\n\n\nclass ansys.acp.core.mesh_data.SolidModelElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Solid Model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.rosettes.html#rosettes","title":"rosettes","text":"rosettes\n\n\n\nproperty LayupMappingObject.rosettes: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/material_property_sets.html#material-property-sets","title":"Material property sets","text":"Material property sets\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lower.html#lower","title":"lower","text":"lower\n\n\n\nPuckMaterialType.lower(/)\n\nReturn a copy of the string converted to lowercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rjust.html#rjust","title":"rjust","text":"rjust\n\n\n\nPuckMaterialType.rjust(width, fillchar=' ', /)\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.taper_edge_set.html#taper_edge_set","title":"taper_edge_set","text":"taper_edge_set\n\n\n\nproperty CutOffSelectionRule.taper_edge_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.clone.html#clone","title":"clone","text":"clone\n\n\n\nLookUpTable3D.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_cut_off_type.html#ply_cut_off_type","title":"ply_cut_off_type","text":"ply_cut_off_type\n\n\n\nproperty CutOffSelectionRule.ply_cut_off_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.COG.html#cog","title":"COG","text":"COG\n\n\n\nElementalDataType.COG = 'cog'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.name.html#name","title":"name","text":"name\n\n\n\nproperty SolidModel.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XY.html#xy","title":"XY","text":"XY\n\n\n\nproperty VariableTsaiWuConstants.XY: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nModelElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.use_default_draping_mesh_size.html#use_default_draping_mesh_size","title":"use_default_draping_mesh_size","text":"use_default_draping_mesh_size\n\n\n\nproperty ModelingPly.use_default_draping_mesh_size: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.drop_off_material.html#drop_off_material","title":"drop_off_material","text":"drop_off_material\n\n\n\nproperty Fabric.drop_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_2.html#e1_2","title":"E1_2","text":"E1_2\n\n\n\nproperty VariableWovenCharacterization.E1_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DirectLaunchConfig.html#directlaunchconfig","title":"DirectLaunchConfig","text":"DirectLaunchConfig\n\n\n\nclass ansys.acp.core.DirectLaunchConfig(binary_path='', stdout_file='/dev/null', stderr_file='/dev/null')\n\nConfiguration options for launching ACP as a sub-process.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.mass.html#mass","title":"mass","text":"mass\n\n\n\nModelingPlyElementalData.mass: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.symmetrical_extension.html#symmetrical_extension","title":"symmetrical_extension","text":"symmetrical_extension\n\n\n\nproperty TubeSelectionRule.symmetrical_extension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_direction.html#draped_transverse_direction","title":"draped_transverse_direction","text":"draped_transverse_direction\n\n\n\nAnalysisPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_angle_under_compression.html#fracture_angle_under_compression","title":"fracture_angle_under_compression","text":"fracture_angle_under_compression\n\n\n\nproperty ConstantLaRCConstants.fracture_angle_under_compression: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.join.html#join","title":"join","text":"join\n\n\n\nLaunchMode.join(iterable, /)\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IntersectionType.html#intersectiontype","title":"IntersectionType","text":"IntersectionType\n\n\n\nclass ansys.acp.core.IntersectionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the intersection is computed for wireframe section cuts.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ReinforcingBehavior.html#reinforcingbehavior","title":"ReinforcingBehavior","text":"ReinforcingBehavior\n\n\n\nclass ansys.acp.core.ReinforcingBehavior(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nSpecifies whether the reinforcing elements carry tension and compression load, or only one of them.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TaperEdge.edge_set.html#edge_set","title":"edge_set","text":"edge_set\n\n\n\nproperty TaperEdge.edge_set: EdgeSet\n\nEdge along which the ply tapering is applied."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.orientation.html#orientation","title":"orientation","text":"orientation\n\n\n\nProductionPlyElementalData.orientation: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.store.html#store","title":"store","text":"store\n\n\n\nVirtualGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ElementSet.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.minimum_volume.html#minimum_volume","title":"minimum_volume","text":"minimum_volume\n\n\n\nproperty ImportedSolidModel.minimum_volume: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.html#variablewovenstresslimits","title":"VariableWovenStressLimits","text":"VariableWovenStressLimits\n\n\n\nclass ansys.acp.core.material_property_sets.VariableWovenStressLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable stress limits property set for woven materials.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_y.html#translation_y","title":"translation_y","text":"translation_y\n\n\n\nCoordinateTransformation.translation_y: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT.html#creatablevaluet","title":"CreatableValueT","text":"CreatableValueT\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects._grpc_helpers.mapping.CreatableValueT = ~CreatableValueT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ModelingPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.woven_puck_constants_2.html#woven_puck_constants_2","title":"woven_puck_constants_2","text":"woven_puck_constants_2\n\n\n\nproperty Material.woven_puck_constants_2: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.html#productionplynodaldata","title":"ProductionPlyNodalData","text":"ProductionPlyNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ProductionPlyNodalData(node_labels, ply_offset)\n\nRepresents nodal data for a Production Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.store.html#store","title":"store","text":"store\n\n\n\nRosette.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.status.html#status","title":"status","text":"status\n\n\n\nproperty VirtualGeometry.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.edge_set.html#edge_set","title":"edge_set","text":"edge_set\n\n\n\nproperty Rosette.edge_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_angle.html#draped_fiber_angle","title":"draped_fiber_angle","text":"draped_fiber_angle\n\n\n\nModelingPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ADHESIVE.html#adhesive","title":"ADHESIVE","text":"ADHESIVE\n\n\n\nPlyType.ADHESIVE = 'adhesive'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_1_field.html#draping_angle_1_field","title":"draping_angle_1_field","text":"draping_angle_1_field\n\n\n\nproperty ImportedModelingPly.draping_angle_1_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_angle.html#draped_transverse_angle","title":"draped_transverse_angle","text":"draped_transverse_angle\n\n\n\nProductionPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty GeometricalSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nVariableOffsetSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system","title":"use_global_coordinate_system","text":"use_global_coordinate_system\n\n\n\nproperty CylindricalSelectionRule.use_global_coordinate_system: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_1.html#g23_1","title":"G23_1","text":"G23_1\n\n\n\nproperty ConstantWovenCharacterization.G23_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nTubeSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.PRICE.html#price","title":"PRICE","text":"PRICE\n\n\n\nElementalDataType.PRICE = 'price'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isspace.html#isspace","title":"isspace","text":"isspace\n\n\n\nPuckMaterialType.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_direction.html#draping_direction","title":"draping_direction","text":"draping_direction\n\n\n\nproperty ModelingPly.draping_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffMaterialHandling.CUSTOM.html#custom","title":"CUSTOM","text":"CUSTOM\n\n\n\nDropOffMaterialHandling.CUSTOM = 'custom'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.environment_variables.html#environment_variables","title":"environment_variables","text":"environment_variables\n\n\n\nDockerComposeLaunchConfig.environment_variables: dict[str, str]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xt.html#xt","title":"Xt","text":"Xt\n\n\n\nproperty VariableWovenStressLimits.Xt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.html#constantfabricfiberangle","title":"ConstantFabricFiberAngle","text":"ConstantFabricFiberAngle\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantFabricFiberAngle(*, fabric_fiber_angle=0.0, _parent_object=None, _attribute_path=None)\n\nConstant fabric fiber angle material property set.\n\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.ply_offset.html#ply_offset","title":"ply_offset","text":"ply_offset\n\n\n\nModelingPlyNodalData.ply_offset: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nTubeSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.name.html#name","title":"name","text":"name\n\n\n\nproperty SectionCut.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Status.UNKNOWN.html#unknown","title":"UNKNOWN","text":"UNKNOWN\n\n\n\nStatus.UNKNOWN = 'UNKNOWN'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.status.html#status","title":"status","text":"status\n\n\n\nproperty Fabric.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxy.html#esxy","title":"eSxy","text":"eSxy\n\n\n\nproperty ConstantStrainLimits.eSxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.html#coordinatetransformation","title":"CoordinateTransformation","text":"CoordinateTransformation\n\n\n\nclass ansys.acp.core.CoordinateTransformation(rotation_angle_x=0.0, rotation_angle_y=0.0, rotation_angle_z=0.0, translation_x=0.0, translation_y=0.0, translation_z=0.0)\n\nDefines a coordinate transformation via rotation angles and translations.\n\nAll angles are in degrees. The operations are performed in the following order:\n\nRotation about the x-axis\n\nRotation about the y-axis\n\nRotation about the z-axis\n\nTranslation\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes.html#rosettes","title":"rosettes","text":"rosettes\n\n\n\nproperty OrientedSelectionSet.rosettes: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.rosettes.html#examples-using-orientedselectionsetrosettes","title":"rosettes > Examples using OrientedSelectionSet.rosettes","text":"Examples using OrientedSelectionSet.rosettes\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#pymapdl-workflow","title":"PyMAPDL workflow","text":"PyMAPDL workflow\n\nThis example shows how to define a composite lay-up with PyACP, solve the resulting model with PyMAPDL, and\nrun a failure analysis with PyDPF - Composites."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#description","title":"PyMAPDL workflow > Description","text":"Description\n\nIn a basic PyACP workflow, you begin with an MAPDL DAT file containing the mesh, material data, and\nboundary conditions. For more information on creating input files, see input_file_for_pyacp.\nThen, you import the DAT file into PyACP to define the composite lay-up. Finally, you export the\nresulting model from PyACP to PyMAPDL. Once the results are available, the RST file is loaded in\nPyDPF - Composites for analysis. The additional input files (material.xml and\nACPCompositeDefinitions.h5) can also be stored with PyACP and passed to PyDPF - Composites."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#import-modules","title":"PyMAPDL workflow > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#launch-pyacp","title":"PyMAPDL workflow > Launch PyACP","text":"Launch PyACP\n\nDownload the example input file.\n\nLaunch the PyACP server and connect to it."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#import-the-model","title":"PyMAPDL workflow > Import the model","text":"Import the model\n\nImport the model from the input DAT file.\n\nVisualize the loaded mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#define-the-composite-lay-up","title":"PyMAPDL workflow > Define the composite lay-up","text":"Define the composite lay-up\n\nCreate an orthotropic material and fabric including strain limits, which are later\nused to postprocess the simulation.\n\nDefine a rosette and oriented selection set. Plot the orientation.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nCreate various plies with different angles and add them to a modeling group.\n\nShow the fiber directions of a specific ply.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nFor a quick overview, print the model tree. Note that\nthe model can also be opened in the ACP GUI. For more\ninformation, see view_the_model_in_the_acp_gui."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#solve-the-model-with-pymapdl","title":"PyMAPDL workflow > Solve the model with PyMAPDL","text":"Solve the model with PyMAPDL\n\nLaunch the PyMAPDL instance.\n\nLoad the CDB file into PyMAPDL.\n\nSolve the model.\n\nShow the displacements in postprocessing.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nDownload the RST file for composite-specific postprocessing."},{"objectID":"Home","href":"examples/workflows/01-pymapdl-workflow.html#postprocessing-with-pydpf---composites","title":"PyMAPDL workflow > Postprocessing with PyDPF - Composites","text":"Postprocessing with PyDPF - Composites\n\nTo postprocess the results, you must configure the imports, connect to the\nPyDPF - Composites server, and load its plugin.\n\nConnect to the server. The connect_to_or_start_server function\nautomatically loads the composites plugin.\n\nSpecify the combined failure criterion.\n\nCreate the composite model and configure its input.\n\nEvaluate and plot the failure criteria.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nRelease the composite model to close the open streams to the result file.\n\nTotal running time of the script: (0 minutes 7.722 seconds)\n\n\n\nDownload Jupyter notebook: 01-pymapdl-workflow.ipynb\n\nDownload Python source code: 01-pymapdl-workflow.py\n\nDownload zipped: 01-pymapdl-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.html#layupmappingrosetteselectionmethod","title":"LayupMappingRosetteSelectionMethod","text":"LayupMappingRosetteSelectionMethod\n\n\n\nclass ansys.acp.core.LayupMappingRosetteSelectionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how the rosette is selected in the layup mapping.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.html#examples-using-layupmappingrosetteselectionmethod","title":"LayupMappingRosetteSelectionMethod > Examples using LayupMappingRosetteSelectionMethod","text":"Examples using LayupMappingRosetteSelectionMethod\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.istitle.html#istitle","title":"istitle","text":"istitle\n\n\n\nPuckMaterialType.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableStressLimits.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.html#sphericalselectionrulenodaldata","title":"SphericalSelectionRuleNodalData","text":"SphericalSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Spherical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty VariableOffsetSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.relative_merge_tolerance.html#relative_merge_tolerance","title":"relative_merge_tolerance","text":"relative_merge_tolerance\n\n\n\nproperty CutOffGeometry.relative_merge_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.sampling_points.html#sampling_points","title":"sampling_points","text":"sampling_points\n\n\n\nproperty Model.sampling_points: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.base.TreeObject.html#treeobject","title":"TreeObject","text":"TreeObject\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects.base.TreeObject(name='')\n\nBase class for ACP objects which can be modified or deleted.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.name.html#name","title":"name","text":"name\n\n\n\nproperty SamplingPoint.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableWovenStressLimits.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.html#importedsolidmodelelementaldata","title":"ImportedSolidModelElementalData","text":"ImportedSolidModelElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ImportedSolidModelElementalData(element_labels)\n\nRepresents elemental data for an imported solid model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.imported_modeling_plies.html#imported_modeling_plies","title":"imported_modeling_plies","text":"imported_modeling_plies\n\n\n\nproperty ImportedModelingGroup.imported_modeling_plies: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FeFormat.html#feformat","title":"FeFormat","text":"FeFormat\n\n\n\nclass ansys.acp.core.FeFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the format of the FE file.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.maketrans.html#maketrans","title":"maketrans","text":"maketrans\n\n\n\nstatic PuckMaterialType.maketrans(x, y=<unrepresentable>, z=<unrepresentable>, /)\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.material.html#material","title":"material","text":"material\n\n\n\nproperty ImportedProductionPly.material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Lamina.material.html#material","title":"material","text":"material\n\n\n\nproperty Lamina.material: Fabric | Stackup\n\nLink to an existing fabric or stackup."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SubLaminate.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.split.html#split","title":"split","text":"split\n\n\n\nLaunchMode.split(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the front of the string and works to the end.\n\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.woven_stress_limits_1.html#woven_stress_limits_1","title":"woven_stress_limits_1","text":"woven_stress_limits_1\n\n\n\nproperty Material.woven_stress_limits_1: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply.html#create_imported_modeling_ply","title":"create_imported_modeling_ply","text":"create_imported_modeling_ply\n\n\n\nImportedModelingGroup.create_imported_modeling_ply(*, name='ModelingPly', active=True, offset_type='middle_offset', mesh_import_type='from_geometry', mesh_geometry=None, rosette_selection_method='minimum_angle', rosettes=(), reference_direction_field=None, rotation_angle=0.0, ply_material=None, ply_angle=0.0, draping_type='no_draping', draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_field=None, thickness_field_type='absolute_values')\n\nInstantiate an Imported Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\n\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\n\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\nReturn type\n\nImportedModelingPly\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.create_imported_modeling_ply.html#examples-using-importedmodelinggroupcreate_imported_modeling_ply","title":"create_imported_modeling_ply > Examples using ImportedModelingGroup.create_imported_modeling_ply","text":"Examples using ImportedModelingGroup.create_imported_modeling_ply\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty ImportedSolidModel.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty CADComponent.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nModelingPlyNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_type.html#thickness_type","title":"thickness_type","text":"thickness_type\n\n\n\nproperty ModelingPly.thickness_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_type.html#examples-using-modelingplythickness_type","title":"thickness_type > Examples using ModelingPly.thickness_type","text":"Examples using ModelingPly.thickness_type\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.html#cutoffselectionruleelementaldata","title":"CutOffSelectionRuleElementalData","text":"CutOffSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Cut-Off Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_21_pos.html#p_21_pos","title":"p_21_pos","text":"p_21_pos\n\n\n\nproperty VariablePuckConstants.p_21_pos: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.MASS.html#mass","title":"MASS","text":"MASS\n\n\n\nPhysicalDimension.MASS = 'mass'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.delete.html#delete","title":"delete","text":"delete\n\n\n\nSensor.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TaperEdge.html#taperedge","title":"TaperEdge","text":"TaperEdge\n\n\n\nclass ansys.acp.core.TaperEdge(edge_set, *, angle, offset)\n\nDefines a taper edge.\n\nParameters\n\nedge_set (EdgeSet) – Defines the edge along which the ply tapering is applied.\n\nangle (float) – Defines the angle between the cutting plane and  the reference surface.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction.\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle).\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_material_index.html#use_default_material_index","title":"use_default_material_index","text":"use_default_material_index\n\n\n\nproperty SolidModelExportSettings.use_default_material_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.html#elementsetelementaldata","title":"ElementSetElementalData","text":"ElementSetElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ElementSetElementalData(element_labels, normal=None)\n\nRepresents elemental data for an Element Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.stress_state.html#stress_state","title":"stress_state","text":"stress_state\n\n\n\nproperty LayupMappingObject.stress_state: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nSolidModelNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty EdgeSet.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.SHELL_SECTIONS.html#shell_sections","title":"SHELL_SECTIONS","text":"SHELL_SECTIONS\n\n\n\nIgnorableEntity.SHELL_SECTIONS = 'shell_sections'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.html#booleanselectionrule","title":"BooleanSelectionRule","text":"BooleanSelectionRule\n\n\n\nclass ansys.acp.core.BooleanSelectionRule(*, name='BooleanSelectionrule', selection_rules=(), include_rule=True)\n\nInstantiate a Boolean Selection Rule.\n\nParameters\n\nname (str) – Name of the Boolean Selection Rule.\n\nselection_rules (Iterable[LinkedSelectionRule])\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.html#examples-using-booleanselectionrule","title":"BooleanSelectionRule > Examples using BooleanSelectionRule","text":"Examples using BooleanSelectionRule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh.html#import_initial_mesh","title":"import_initial_mesh","text":"import_initial_mesh\n\n\n\nImportedSolidModel.import_initial_mesh()\n\nImport the solid mesh and its element sets.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.import_initial_mesh.html#examples-using-importedsolidmodelimport_initial_mesh","title":"import_initial_mesh > Examples using ImportedSolidModel.import_initial_mesh","text":"Examples using ImportedSolidModel.import_initial_mesh\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.SHEAR_ANGLE.html#shear_angle","title":"SHEAR_ANGLE","text":"SHEAR_ANGLE\n\n\n\nElementalDataType.SHEAR_ANGLE = 'shear_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.area.html#area","title":"area","text":"area\n\n\n\nModelingPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometryDimension.UNKNOWN.html#unknown","title":"UNKNOWN","text":"UNKNOWN\n\n\n\nVirtualGeometryDimension.UNKNOWN = 'unknown'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.ext_id.html#ext_id","title":"ext_id","text":"ext_id\n\n\n\nproperty Material.ext_id: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyCutOffType.PRODUCTION_PLY_CUTOFF.html#production_ply_cutoff","title":"PRODUCTION_PLY_CUTOFF","text":"PRODUCTION_PLY_CUTOFF\n\n\n\nPlyCutOffType.PRODUCTION_PLY_CUTOFF = 'production_ply_cutoff'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.store.html#store","title":"store","text":"store\n\n\n\nSectionCut.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ORTHOTROPIC_HOMOGENEOUS_CORE.html#orthotropic_homogeneous_core","title":"ORTHOTROPIC_HOMOGENEOUS_CORE","text":"ORTHOTROPIC_HOMOGENEOUS_CORE\n\n\n\nPlyType.ORTHOTROPIC_HOMOGENEOUS_CORE = 'orthotropic_homogeneous_core'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Status.UPTODATE.html#uptodate","title":"UPTODATE","text":"UPTODATE\n\n\n\nStatus.UPTODATE = 'UPTODATE'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.name.html#name","title":"name","text":"name\n\n\n\nproperty LayupMappingObject.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.set_cad_components.html#set_cad_components","title":"set_cad_components","text":"set_cad_components\n\n\n\nVirtualGeometry.set_cad_components(cad_components)\n\nSet the sub-shapes to match the given CADComponents.\n\nParameters\n\ncad_components (Iterable[CADComponent]) – The components which make up the virtual geometry."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VectorData.get_pyvista_glyphs.html#get_pyvista_glyphs","title":"get_pyvista_glyphs","text":"get_pyvista_glyphs\n\n\n\nVectorData.get_pyvista_glyphs(*, mesh, culling_factor=1, scaling_factor=1.0, **kwargs)\n\nGet a pyvista glyph object from the vector data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\n\nscaling_factor (float) – Factor to scale the length of the arrows.\n\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\n\nReturn type\n\nPolyData"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.delete.html#delete","title":"delete","text":"delete\n\n\n\nImportedModelingPly.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.clear.html#clear","title":"clear","text":"clear\n\n\n\nACPInstance.clear()\n\nClose all models.\n\nCloses the models which are currently open, without first\nsaving them to a file.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.clear.html#examples-using-acpinstanceclear","title":"clear > Examples using ACPInstance.clear","text":"Examples using ACPInstance.clear\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.html#sphericalselectionrule","title":"SphericalSelectionRule","text":"SphericalSelectionRule\n\n\n\nclass ansys.acp.core.SphericalSelectionRule(*, name='SphericalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Spherical Selection Rule.\n\nParameters\n\nname (str) – Name of the Spherical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the sphere.\n\nradius (float) – Radius of the sphere.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.html#examples-using-sphericalselectionrule","title":"SphericalSelectionRule > Examples using SphericalSelectionRule","text":"Examples using SphericalSelectionRule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty CylindricalSelectionRule.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isprintable.html#isprintable","title":"isprintable","text":"isprintable\n\n\n\nLaunchMode.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nA character is printable if repr() may use it in its output."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.stress_limits.html#stress_limits","title":"stress_limits","text":"stress_limits\n\n\n\nproperty Material.stress_limits: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.add_taper_edge.html#add_taper_edge","title":"add_taper_edge","text":"add_taper_edge\n\n\n\nModelingPly.add_taper_edge(edge_set, *, angle, offset)\n\nAdd a TaperEdge to the ModelingPly.\n\nSee TaperEdge for the available parameters.\n\nReturn type\n\nTaperEdge"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYt.html#eyt","title":"eYt","text":"eYt\n\n\n\nproperty ConstantStrainLimits.eYt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty GeometricalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.lstrip.html#lstrip","title":"lstrip","text":"lstrip\n\n\n\nPuckMaterialType.lstrip(chars=None, /)\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.unit_system.html#unit_system","title":"unit_system","text":"unit_system\n\n\n\nproperty ImportedSolidModel.unit_system: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.clone.html#clone","title":"clone","text":"clone\n\n\n\nExtrusionGuide.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessFieldType.RELATIVE_SCALING_FACTOR.html#relative_scaling_factor","title":"RELATIVE_SCALING_FACTOR","text":"RELATIVE_SCALING_FACTOR\n\n\n\nThicknessFieldType.RELATIVE_SCALING_FACTOR = 'relative_scaling_factor'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxy.html#sxy","title":"Sxy","text":"Sxy\n\n\n\nproperty VariableWovenStressLimits.Sxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.clone.html#clone","title":"clone","text":"clone\n\n\n\nModelingPly.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty BooleanSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty SolidModel.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.id.html#id","title":"id","text":"id\n\n\n\nproperty CADComponent.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.NO_DRAPING.html#no_draping","title":"NO_DRAPING","text":"NO_DRAPING\n\n\n\nImportedPlyDrapingType.NO_DRAPING = 'no_draping'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.middle_offset.html#middle_offset","title":"middle_offset","text":"middle_offset\n\n\n\nproperty ElementSet.middle_offset: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC.html#isotropic","title":"ISOTROPIC","text":"ISOTROPIC\n\n\n\nPlyType.ISOTROPIC = 'isotropic'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC.html#examples-using-plytypeisotropic","title":"ISOTROPIC > Examples using PlyType.ISOTROPIC","text":"Examples using PlyType.ISOTROPIC\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.html#sensor","title":"Sensor","text":"Sensor\n\n\n\nclass ansys.acp.core.Sensor(*, name='Sensor', sensor_type='sensor_by_area', active=True, entities=())\n\nInstantiate a Sensor.\n\nParameters\n\nname (str) – Name of the sensor.\n\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\n\nactive (bool) – Inactive sensors are not evaluated.\n\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly | SolidModel | ImportedSolidModel]) – List of entities which define the sensor’s scope.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.html#examples-using-sensor","title":"Sensor > Examples using Sensor","text":"Examples using Sensor\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.NOMINAL.html#nominal","title":"NOMINAL","text":"NOMINAL\n\n\n\nImportedPlyThicknessType.NOMINAL = 'nominal'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.html#cylindricalselectionrulenodaldata","title":"CylindricalSelectionRuleNodalData","text":"CylindricalSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Cylindrical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.clone.html#clone","title":"clone","text":"clone\n\n\n\nStackup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty InterfaceLayer.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSolidElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.html#sublaminate","title":"SubLaminate","text":"SubLaminate\n\n\n\nclass ansys.acp.core.SubLaminate(*, name='SubLaminate', symmetry='no_symmetry', topdown=True, materials=())\n\nInstantiate a SubLaminate.\n\nParameters\n\nname (str) – Name of the sub-laminate.\n\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\n\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\n\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.html#examples-using-sublaminate","title":"SubLaminate > Examples using SubLaminate","text":"Examples using SubLaminate\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nTubeSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableWovenCharacterization.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo.html#objectinfo","title":"ObjectInfo","text":"ObjectInfo\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.protocols.ObjectInfo(*args, **kwargs)\n\nInterface definition for ObjectInfo messages.\n\nThe ObjectInfo message contains the full information about an object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty VariableOffsetSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_NORMAL.html#surface_normal","title":"SURFACE_NORMAL","text":"SURFACE_NORMAL\n\n\n\nExtrusionType.SURFACE_NORMAL = 'surface_normal'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TaperEdge.offset.html#offset","title":"offset","text":"offset\n\n\n\nproperty TaperEdge.offset: float\n\nMove the cutting plane along the out-of-plane direction.\n\nA negative value cuts the elements at the edge where the in-plane\noffset is -offset/tan(angle)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.fabrics.html#fabrics","title":"fabrics","text":"fabrics\n\n\n\nproperty Stackup.fabrics: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.name.html#name","title":"name","text":"name\n\n\n\nproperty SolidElementSet.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_field_type.html#thickness_field_type","title":"thickness_field_type","text":"thickness_field_type\n\n\n\nproperty ModelingPly.thickness_field_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field_type.html#thickness_field_type","title":"thickness_field_type","text":"thickness_field_type\n\n\n\nproperty ImportedModelingPly.thickness_field_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.area_price.html#area_price","title":"area_price","text":"area_price\n\n\n\nproperty Stackup.area_price: Any\n\n"},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#basic-selection-rules","title":"Basic selection rules","text":"Basic selection rules\n\nThis example shows the basic usage of selection rules, which enable you to select elements through\ngeometrical operations and thus to shape plies. The example only shows the PyACP part of the setup.\nFor more advanced selection rule usage, see\nadvanced_selection_rules_example. For a complete composite\nanalysis, see pymapdl_workflow_example."},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#import-modules","title":"Basic selection rules > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#start-acp-and-load-the-model","title":"Basic selection rules > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from the input file.\n\nVisualize the loaded mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#create-a-parallel-rule","title":"Basic selection rules > Create a Parallel Rule","text":"Create a Parallel Rule\n\nCreate parallel selection rule and assign it to the existing ply.\n\nPlot the ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#create-a-cylindrical-rule","title":"Basic selection rules > Create a Cylindrical Rule","text":"Create a Cylindrical Rule\n\nCreate a cylindrical selection rule and add it to the ply. This will intersect the two rules.\n\nPlot the ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#create-a-spherical-rule","title":"Basic selection rules > Create a Spherical Rule","text":"Create a Spherical Rule\n\nCreate a spherical selection rule and assign it to the ply. Now, only the spherical rule is\nactive.\n\nPlot the ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/003-simple-selection-rules.html#create-a-tube-rule","title":"Basic selection rules > Create a Tube Rule","text":"Create a Tube Rule\n\nCreate a tube selection rule and assign it to the ply. Now, only the tube rule is\nactive.\n\nPlot the ply thickness.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 4.243 seconds)\n\n\n\nDownload Jupyter notebook: 003-simple-selection-rules.ipynb\n\nDownload Python source code: 003-simple-selection-rules.py\n\nDownload zipped: 003-simple-selection-rules.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.field_definitions.html#field_definitions","title":"field_definitions","text":"field_definitions\n\n\n\nproperty Model.field_definitions: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_coordinates.html#node_coordinates","title":"node_coordinates","text":"node_coordinates\n\n\n\nMeshData.node_coordinates: ndarray[tuple[int, ...], dtype[float64]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Syz.html#syz","title":"Syz","text":"Syz\n\n\n\nproperty ConstantStressLimits.Syz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_DAT.html#ansys_dat","title":"ANSYS_DAT","text":"ANSYS_DAT\n\n\n\nSolidModelImportFormat.ANSYS_DAT = 'ansys:dat'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType.html#genericedgepropertytype","title":"GenericEdgePropertyType","text":"GenericEdgePropertyType\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.edge_property_list.GenericEdgePropertyType(*kwargs)\n\nProtocol for the definition of ACP edge properties such as FabricWithAngle.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.strain_limits.html#strain_limits","title":"strain_limits","text":"strain_limits\n\n\n\nproperty Material.strain_limits: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SolidModel.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.virtual_geometries.html#virtual_geometries","title":"virtual_geometries","text":"virtual_geometries\n\n\n\nproperty Model.virtual_geometries: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSetType.html#edgesettype","title":"EdgeSetType","text":"EdgeSetType\n\n\n\nclass ansys.acp.core.EdgeSetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how an edge set is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSetType.html#examples-using-edgesettype","title":"EdgeSetType > Examples using EdgeSetType","text":"Examples using EdgeSetType\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.reference_direction_field.html#reference_direction_field","title":"reference_direction_field","text":"reference_direction_field\n\n\n\nproperty ImportedModelingPly.reference_direction_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_filetransfer.html#image_name_filetransfer","title":"image_name_filetransfer","text":"image_name_filetransfer\n\n\n\nDockerComposeLaunchConfig.image_name_filetransfer: str = 'ghcr.io/ansys/tools-filetransfer:latest'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty CADGeometry.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.name.html#name","title":"name","text":"name\n\n\n\nproperty LookUpTable1DColumn.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.delete.html#delete","title":"delete","text":"delete\n\n\n\nImportedModelingGroup.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.get_example_file.html#get_example_file","title":"get_example_file","text":"get_example_file\n\n\n\nansys.acp.core.extras.example_helpers.get_example_file(example_key, working_directory)\n\nDownload an example file from the example-data repo to the working directory.\n\nParameters\n\nexample_key (ExampleKeys) – Key for the example file.\n\nworking_directory (Path) – Working directory to download the example file to.\n\nReturn type\n\nPath"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants.html#from_orthotropic_constants","title":"from_orthotropic_constants","text":"from_orthotropic_constants\n\n\n\nclassmethod ConstantStressLimits.from_orthotropic_constants(*, Xc=0.0, Yc=0.0, Zc=0.0, Xt=0.0, Yt=0.0, Zt=0.0, Sxy=0.0, Syz=0.0, Sxz=0.0)\n\nCreate an orthotropic stress limits property set.\n\nParameters\n\nXc (float) – Compressive stress limit in material 1 direction.\n\nYc (float) – Compressive stress limit in material 2 direction.\n\nZc (float) – Compressive stress limit in out-of-plane direction.\n\nXt (float) – Tensile stress limit in material 1 direction.\n\nYt (float) – Tensile stress limit in material 2 direction.\n\nZt (float) – Tensile stress limit in out-of-plane direction.\n\nSxy (float) – Shear stress limit in-plane ().\n\nSyz (float) – Shear stress limit out-of-plane ().\n\nSxz (float) – Shear stress limit out-of-plane ().\n\nReturns\n\nAn orthotropic stress limits property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_orthotropic_constants.html#examples-using-constantstresslimitsfrom_orthotropic_constants","title":"from_orthotropic_constants > Examples using ConstantStressLimits.from_orthotropic_constants","text":"Examples using ConstantStressLimits.from_orthotropic_constants\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.feature_tree.get_feature_tree.html#get_feature_tree","title":"get_feature_tree","text":"get_feature_tree\n\n\n\nansys.acp.core.extras.feature_tree.get_feature_tree()\n\nGet a tree representation of the PyACP features.\n\nReturn type\n\nNode"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableStressLimits.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty CutOffSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Sxz.html#sxz","title":"Sxz","text":"Sxz\n\n\n\nproperty ConstantStressLimits.Sxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty BooleanSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.delete.html#delete","title":"delete","text":"delete\n\n\n\nImportedSolidModel.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rjust.html#rjust","title":"rjust","text":"rjust\n\n\n\nLaunchMode.rjust(width, fillchar=' ', /)\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nParallelSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.design_angle.html#design_angle","title":"design_angle","text":"design_angle\n\n\n\nModelingPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rpartition.html#rpartition","title":"rpartition","text":"rpartition\n\n\n\nPuckMaterialType.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_mode_1.html#fracture_toughness_mode_1","title":"fracture_toughness_mode_1","text":"fracture_toughness_mode_1\n\n\n\nproperty VariableLaRCConstants.fracture_toughness_mode_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.store.html#store","title":"store","text":"store\n\n\n\nOrientedSelectionSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ImportedSolidModel.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableWovenCharacterization.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry.html#create_snap_to_geometry","title":"create_snap_to_geometry","text":"create_snap_to_geometry\n\n\n\nSolidModel.create_snap_to_geometry(*, name='SnapToGeometry', active=True, orientation_type='top', cad_geometry=None, oriented_selection_set=None)\n\nInstantiate a snap-to geometry.\n\nParameters\n\nname (str) – Name of the snap-to geometry.\n\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\n\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\n\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\n\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\n\nReturn type\n\nSnapToGeometry\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_snap_to_geometry.html#examples-using-solidmodelcreate_snap_to_geometry","title":"create_snap_to_geometry > Examples using SolidModel.create_snap_to_geometry","text":"Examples using SolidModel.create_snap_to_geometry\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_1_field.html#draping_angle_1_field","title":"draping_angle_1_field","text":"draping_angle_1_field\n\n\n\nproperty ModelingPly.draping_angle_1_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.html#cadcomponent","title":"CADComponent","text":"CADComponent\n\n\n\nclass ansys.acp.core.CADComponent\n\nInstantiate a CAD Component.\n\nParameters\n\nname – Name of the CAD component.\n\npath – Path of the CAD component.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_geometry.html#mesh_geometry","title":"mesh_geometry","text":"mesh_geometry\n\n\n\nproperty ImportedModelingPly.mesh_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE.html#minimum_distance","title":"MINIMUM_DISTANCE","text":"MINIMUM_DISTANCE\n\n\n\nRosetteSelectionMethod.MINIMUM_DISTANCE = 'minimum_distance'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.search_radius.html#search_radius","title":"search_radius","text":"search_radius\n\n\n\nproperty SectionCut.search_radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty OrientedSelectionSet.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_isotropic_constants.html#from_isotropic_constants","title":"from_isotropic_constants","text":"from_isotropic_constants\n\n\n\nclassmethod ConstantStrainLimits.from_isotropic_constants(*, effective_strain=0.0)\n\nCreate an isotropic strain limits property set.\n\nParameters\n\neffective_strain (float) – Effective strain limit.\n\nReturns\n\nAn isotropic strain limits property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SOLID.html#solid","title":"SOLID","text":"SOLID\n\n\n\nVirtualGeometryDimension.SOLID = 'solid'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers.html#number_of_layers","title":"number_of_layers","text":"number_of_layers\n\n\n\nproperty ModelingPly.number_of_layers: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.number_of_layers.html#examples-using-modelingplynumber_of_layers","title":"number_of_layers > Examples using ModelingPly.number_of_layers","text":"Examples using ModelingPly.number_of_layers\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_AND_COMPRESSION.html#tension_and_compression","title":"TENSION_AND_COMPRESSION","text":"TENSION_AND_COMPRESSION\n\n\n\nReinforcingBehavior.TENSION_AND_COMPRESSION = 'tension_and_compression'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty TubeSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh.html#solid_mesh","title":"solid_mesh","text":"solid_mesh\n\n\n\nproperty ImportedSolidModel.solid_mesh: MeshData\n\nSolid mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_mesh.html#examples-using-importedsolidmodelsolid_mesh","title":"solid_mesh > Examples using ImportedSolidModel.solid_mesh","text":"Examples using ImportedSolidModel.solid_mesh\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.join.html#join","title":"join","text":"join\n\n\n\nPuckMaterialType.join(iterable, /)\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: ‘.’.join([‘ab’, ‘pq’, ‘rs’]) -> ‘ab.pq.rs’"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.drop_off_material_handling.html#drop_off_material_handling","title":"drop_off_material_handling","text":"drop_off_material_handling\n\n\n\nproperty Stackup.drop_off_material_handling: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.set_plot_theme.html#set_plot_theme","title":"set_plot_theme","text":"set_plot_theme\n\n\n\nansys.acp.core.extras.example_helpers.set_plot_theme()\n\nSet the theme options used in the examples.\n\nThis function sets the default plotting theme options to the ones used\nin the examples. You can call this function to ensure the plots are using\nthe same theme (color maps etc.) as the rendered online documentation.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.endswith.html#endswith","title":"endswith","text":"endswith\n\n\n\nPuckMaterialType.endswith(suffix, [start, [end]]) -> bool\n\nReturn True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_2.html#g12_2","title":"G12_2","text":"G12_2\n\n\n\nproperty VariableWovenCharacterization.G12_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.core_scale_factor.html#core_scale_factor","title":"core_scale_factor","text":"core_scale_factor\n\n\n\nproperty SectionCut.core_scale_factor: Any\n\n"},{"objectID":"Home","href":"api/enum_types.html#enumeration-data-types","title":"Enumeration data types","text":"Enumeration data types\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.boolean_selection_rules.html#boolean_selection_rules","title":"boolean_selection_rules","text":"boolean_selection_rules\n\n\n\nproperty Model.boolean_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ImportedAnalysisPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.drop_hanging_nodes.html#drop_hanging_nodes","title":"drop_hanging_nodes","text":"drop_hanging_nodes\n\n\n\nproperty SolidModelExportSettings.drop_hanging_nodes: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isascii.html#isascii","title":"isascii","text":"isascii\n\n\n\nPuckMaterialType.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.store.html#store","title":"store","text":"store\n\n\n\nLookUpTable3D.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.ANSYS_CLASSIC.html#ansys_classic","title":"ANSYS_CLASSIC","text":"ANSYS_CLASSIC\n\n\n\nRosetteSelectionMethod.ANSYS_CLASSIC = 'ansys_classic'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rsplit.html#rsplit","title":"rsplit","text":"rsplit\n\n\n\nPuckMaterialType.rsplit(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.APPEND.html#append","title":"APPEND","text":"APPEND\n\n\n\nHDF5CompositeCAEImportMode.APPEND = 'append'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.value_type.html#value_type","title":"value_type","text":"value_type\n\n\n\nproperty LookUpTable1DColumn.value_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu.html#nu","title":"nu","text":"nu\n\n\n\nproperty VariableEngineeringConstants.nu: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.LOCATION.html#location","title":"LOCATION","text":"LOCATION\n\n\n\nLookUpTableColumnValueType.LOCATION = 'location'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.clone.html#clone","title":"clone","text":"clone\n\n\n\nCutOffGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nImportedSolidModelNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.ANSYS_CDB.html#ansys_cdb","title":"ANSYS_CDB","text":"ANSYS_CDB\n\n\n\nSolidModelSkinExportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.name.html#name","title":"name","text":"name\n\n\n\nproperty LookUpTable3D.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.name.html#name","title":"name","text":"name\n\n\n\nproperty FieldDefinition.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty ProductionPly.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G23_2.html#g23_2","title":"G23_2","text":"G23_2\n\n\n\nproperty ConstantWovenCharacterization.G23_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffType.INSIDE_PLY.html#inside_ply","title":"INSIDE_PLY","text":"INSIDE_PLY\n\n\n\nDropOffType.INSIDE_PLY = 'inside_ply'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosette_selection_method.html#base_element_rosette_selection_method","title":"base_element_rosette_selection_method","text":"base_element_rosette_selection_method\n\n\n\nproperty LayupMappingObject.base_element_rosette_selection_method: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.rosette.html#rosette","title":"rosette","text":"rosette\n\n\n\nproperty ParallelSelectionRule.rosette: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutCDBExportType.SOLID_MODEL.html#solid_model","title":"SOLID_MODEL","text":"SOLID_MODEL\n\n\n\nSectionCutCDBExportType.SOLID_MODEL = 'solid_model'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableStrainLimits.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZc.html#ezc","title":"eZc","text":"eZc\n\n\n\nproperty VariableStrainLimits.eZc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Xc.html#xc","title":"Xc","text":"Xc\n\n\n\nproperty VariableWovenStressLimits.Xc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.html#tubeselectionruleelementaldata","title":"TubeSelectionRuleElementalData","text":"TubeSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.TubeSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Tube Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.find.html#find","title":"find","text":"find\n\n\n\nLaunchMode.find(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.delete.html#delete","title":"delete","text":"delete\n\n\n\nSubLaminate.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removesuffix.html#removesuffix","title":"removesuffix","text":"removesuffix\n\n\n\nPuckMaterialType.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zc.html#zc","title":"Zc","text":"Zc\n\n\n\nproperty VariableWovenStressLimits.Zc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.id.html#id","title":"id","text":"id\n\n\n\nproperty ImportedSolidModel.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.html#cadgeometry","title":"CADGeometry","text":"CADGeometry\n\n\n\nclass ansys.acp.core.CADGeometry(*, name='CADGeometry', external_path='', scale_factor=1.0, use_default_precision=True, precision=0.001, use_default_offset=True, offset=0.0)\n\nInstantiate a CAD Geometry.\n\nParameters\n\nname (str) – Name of the CAD Geometry.\n\nexternal_path (str) – Path to the CAD file.\n\nscale_factor (float) – Scale factor applied to the CAD geometry.\n\nuse_default_precision (bool) – Whether to use the default precision value.\n\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\n\nuse_default_offset (bool) – Whether to use the default offset value.\n\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.html#examples-using-cadgeometry","title":"CADGeometry > Examples using CADGeometry","text":"Examples using CADGeometry\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.base_material.html#base_material","title":"base_material","text":"base_material\n\n\n\nproperty LayupMappingObject.base_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._server.common.ControllableServerProtocol.html#controllableserverprotocol","title":"ControllableServerProtocol","text":"ControllableServerProtocol\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._server.common.ControllableServerProtocol(*args, **kwargs)\n\nInterface definition for ACP servers which can be remotely started / stopped."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d.html#create_lookup_table_3d","title":"create_lookup_table_3d","text":"create_lookup_table_3d\n\n\n\nModel.create_lookup_table_3d(*, name='LookUpTable3D', use_global_coordinate_system=True, rosette=None, interpolation_algorithm='weighted_nearest_neighbor', use_default_search_radius=True, search_radius=0.0, num_min_neighbors=1)\n\nInstantiate a 3D Look-Up Table.\n\nThe three-dimensional look-up table is defined by 3D data points. The\nlocations of these data points are defined by the Location column,\nwhich:\n\nhas shape (N, 3), where N is the number of data points (rows)\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\nname (str) – Name of the 3D look-up table.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and directions.\n\nrosette (Rosette | None) – Rosette used for origin and directions. Only applies if\nuse_global_coordinate_system is False.\n\ninterpolation_algorithm (LookUpTable3DInterpolationAlgorithm) – Algorithm used to interpolate the values of the look-up table.\n\nuse_default_search_radius (bool) – If True, estimate the search radius used in the weightest nearest\nneighbor algorithm automatically.\n\nsearch_radius (float) – Search radius used for the interpolation with the weighted nearest\nneighbor algorithm.\n\nnum_min_neighbors (int) – Minimum number of neighbors used for the interpolation when using the\nweighted nearest neighbor algorithm.\n\nReturn type\n\nLookUpTable3D\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_lookup_table_3d.html#examples-using-modelcreate_lookup_table_3d","title":"create_lookup_table_3d > Examples using Model.create_lookup_table_3d","text":"Examples using Model.create_lookup_table_3d\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.id.html#id","title":"id","text":"id\n\n\n\nproperty ModelingGroup.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xc.html#xc","title":"Xc","text":"Xc\n\n\n\nproperty ConstantStressLimits.Xc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty AnalysisPly.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.elemental_data.html#examples-using-analysisplyelemental_data","title":"elemental_data > Examples using AnalysisPly.elemental_data","text":"Examples using AnalysisPly.elemental_data\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.istitle.html#istitle","title":"istitle","text":"istitle\n\n\n\nLaunchMode.istitle(/)\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._server.common.ServerProtocol.html#serverprotocol","title":"ServerProtocol","text":"ServerProtocol\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._server.common.ServerProtocol(*args, **kwargs)\n\nInterface definition for ACP gRPC servers."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.StressStateType.UNIAXIAL_STRESS_STATE.html#uniaxial_stress_state","title":"UNIAXIAL_STRESS_STATE","text":"UNIAXIAL_STRESS_STATE\n\n\n\nStressStateType.UNIAXIAL_STRESS_STATE = 'uniaxial_stress_state'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.positive_capture_tolerance.html#positive_capture_tolerance","title":"positive_capture_tolerance","text":"positive_capture_tolerance\n\n\n\nproperty GeometricalSelectionRule.positive_capture_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nElementSetNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yc.html#yc","title":"Yc","text":"Yc\n\n\n\nproperty ConstantWovenStressLimits.Yc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.normalized.html#normalized","title":"normalized","text":"normalized\n\n\n\nInterpolationOptions.normalized: bool\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide.html#create_extrusion_guide","title":"create_extrusion_guide","text":"create_extrusion_guide\n\n\n\nSolidModel.create_extrusion_guide(*, name='ExtrusionGuide', active=True, edge_set=None, extrusion_guide_type='by_direction', cad_geometry=None, direction=(0.0, 0.0, 1.0), radius=0.0, depth=0.0, use_curvature_correction=False)\n\nInstantiate an Extrusion Guide of a Solid Model.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\n\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\n\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\n\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\n\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\n\nradius (float) – Controls the sphere of influence for mesh morphing.\n\ndepth (float) – Defines the bias of the mesh morphing.\n\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\n\nReturn type\n\nExtrusionGuide\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_extrusion_guide.html#examples-using-solidmodelcreate_extrusion_guide","title":"create_extrusion_guide > Examples using SolidModel.create_extrusion_guide","text":"Examples using SolidModel.create_extrusion_guide\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"user_guide/concepts/index.html#concepts","title":"Concepts","text":"Concepts\n\nThese guides explain the PyACP concepts.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.intersection_type.html#intersection_type","title":"intersection_type","text":"intersection_type\n\n\n\nproperty SectionCut.intersection_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.element_sets.html#element_sets","title":"element_sets","text":"element_sets\n\n\n\nproperty SolidModel.element_sets: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.element_sets.html#examples-using-solidmodelelement_sets","title":"element_sets > Examples using SolidModel.element_sets","text":"Examples using SolidModel.element_sets\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS.html#plane_stress_state_with_transverse_shear_stiffness","title":"PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS","text":"PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS\n\n\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_STIFFNESS = 'plane_stress_state_with_transverse_shear_stiffness'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.selection_rule.html#selection_rule","title":"selection_rule","text":"selection_rule\n\n\n\nproperty LinkedSelectionRule.selection_rule: BooleanSelectionRule | CutOffSelectionRule | CylindricalSelectionRule | GeometricalSelectionRule | ParallelSelectionRule | SphericalSelectionRule | TubeSelectionRule | VariableOffsetSelectionRule\n\nLink to an existing selection rule."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.capitalize.html#capitalize","title":"capitalize","text":"capitalize\n\n\n\nLaunchMode.capitalize(/)\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower\ncase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty Model.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.html#constantpuckconstants","title":"ConstantPuckConstants","text":"ConstantPuckConstants\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantPuckConstants(*, p_21_pos=None, p_21_neg=None, p_22_pos=None, p_22_neg=None, s=0.5, M=0.5, interface_weakening_factor=0.8, mat_type=PuckMaterialType.IGNORED, _parent_object=None, _attribute_path=None)\n\nConstant Puck constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.partition.html#partition","title":"partition","text":"partition\n\n\n\nPuckMaterialType.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.rosette.html#rosette","title":"rosette","text":"rosette\n\n\n\nproperty SamplingPoint.rosette: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.average_element_size.html#average_element_size","title":"average_element_size","text":"average_element_size\n\n\n\nproperty Model.average_element_size: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE.html#isotropic_homogeneous_core","title":"ISOTROPIC_HOMOGENEOUS_CORE","text":"ISOTROPIC_HOMOGENEOUS_CORE\n\n\n\nPlyType.ISOTROPIC_HOMOGENEOUS_CORE = 'isotropic_homogeneous_core'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.ISOTROPIC_HOMOGENEOUS_CORE.html#examples-using-plytypeisotropic_homogeneous_core","title":"ISOTROPIC_HOMOGENEOUS_CORE > Examples using PlyType.ISOTROPIC_HOMOGENEOUS_CORE","text":"Examples using PlyType.ISOTROPIC_HOMOGENEOUS_CORE\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.delete.html#delete","title":"delete","text":"delete\n\n\n\nExtrusionGuide.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nParallelSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rfind.html#rfind","title":"rfind","text":"rfind\n\n\n\nPuckMaterialType.rfind(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SHELL.html#shell","title":"SHELL","text":"SHELL\n\n\n\nHDF5CompositeCAEProjectionMode.SHELL = 'shell'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nCylindricalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.store.html#store","title":"store","text":"store\n\n\n\nLookUpTable1DColumn.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_angle_2_field.html#draping_angle_2_field","title":"draping_angle_2_field","text":"draping_angle_2_field\n\n\n\nproperty ImportedModelingPly.draping_angle_2_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.create_interface_layer.html#create_interface_layer","title":"create_interface_layer","text":"create_interface_layer\n\n\n\nModelingGroup.create_interface_layer(*, name='InterfaceLayer', global_ply_nr=0, active=True, oriented_selection_sets=(), open_area_sets=())\n\nInstantiate an interface layer.\n\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\n\nParameters\n\nname (str) – Name of the interface layer.\n\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\n\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\n\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\n\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\n\nReturn type\n\nInterfaceLayer\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.name.html#name","title":"name","text":"name\n\n\n\nproperty Material.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.name.html#examples-using-materialname","title":"name > Examples using Material.name","text":"Examples using Material.name\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.CONNECT.html#connect","title":"CONNECT","text":"CONNECT\n\n\n\nLaunchMode.CONNECT = 'connect'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb.html#import_acp_mesh_from_cdb","title":"import_acp_mesh_from_cdb","text":"import_acp_mesh_from_cdb\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core.mechanical_integration_helpers.import_acp_mesh_from_cdb(*, mechanical, cdb_path)\n\nImport an ACP CDB mesh into Mechanical.\n\nImport a mesh exported from ACP in CDB format into Mechanical. This function\ndoes not import the ACP layup definition, use import_acp_composite_definitions()\nfor this purpose.\n\nThe named selections exported from ACP are only partially imported.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\ncdb_path (str | PathLike[str]) – The path of the CDB file to import. The extension must be ‘.cdb’."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.TIME.html#time","title":"TIME","text":"TIME\n\n\n\nPhysicalDimension.TIME = 'time'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.CURRENCY.html#currency","title":"CURRENCY","text":"CURRENCY\n\n\n\nPhysicalDimension.CURRENCY = 'currency'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.volume.html#volume","title":"volume","text":"volume\n\n\n\nProductionPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nCylindricalSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.cut_off_geometries.html#cut_off_geometries","title":"cut_off_geometries","text":"cut_off_geometries\n\n\n\nproperty SolidModel.cut_off_geometries: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nModelingPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.SANDWICH_WISE.html#sandwich_wise","title":"SANDWICH_WISE","text":"SANDWICH_WISE\n\n\n\nExtrusionMethod.SANDWICH_WISE = 'sandwich_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.use_default_search_radius.html#use_default_search_radius","title":"use_default_search_radius","text":"use_default_search_radius\n\n\n\nproperty LookUpTable3D.use_default_search_radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_imported_solid_model.html#create_imported_solid_model","title":"create_imported_solid_model","text":"create_imported_solid_model\n\n\n\nModel.create_imported_solid_model(*, name='ImportedSolidModel', active=True, format='ansys:cdb', unit_system='from_file', external_path='', delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, cut_off_material=None, export_settings=<ansys.acp.core._tree_objects.imported_solid_model.ImportedSolidModelExportSettings object>)\n\nInstantiate an imported solid model.\n\nParameters\n\nname (str) – Name of the imported solid model.\n\nactive (bool) – Inactive imported solid models are ignored in the analysis.\n\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\n\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\n\nexternal_path (_PATH) – Path of the file to be imported.\n\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\n\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\n\nReturn type\n\nImportedSolidModel\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_imported_solid_model.html#examples-using-modelcreate_imported_solid_model","title":"create_imported_solid_model > Examples using Model.create_imported_solid_model","text":"Examples using Model.create_imported_solid_model\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nSphericalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.analysis_plies.html#analysis_plies","title":"analysis_plies","text":"analysis_plies\n\n\n\nproperty ImportedSolidModel.analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.status.html#status","title":"status","text":"status\n\n\n\nproperty ExtrusionGuide.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.html#dockercomposelaunchconfig","title":"DockerComposeLaunchConfig","text":"DockerComposeLaunchConfig\n\n\n\nclass ansys.acp.core.DockerComposeLaunchConfig(image_name_acp='ghcr.io/ansys/acp:latest', image_name_filetransfer='ghcr.io/ansys/tools-filetransfer:latest', license_server='', keep_volume=False, compose_file=None, environment_variables=<factory>)\n\nConfiguration options for launching ACP through docker compose.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_material_handling.html#base_element_material_handling","title":"base_element_material_handling","text":"base_element_material_handling\n\n\n\nproperty LayupMappingObject.base_element_material_handling: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule.html#create_geometrical_selection_rule","title":"create_geometrical_selection_rule","text":"create_geometrical_selection_rule\n\n\n\nModel.create_geometrical_selection_rule(*, name='GeometricalSelectionrule', geometrical_rule_type='geometry', geometry=None, element_sets=(), include_rule=True, use_default_tolerances=True, in_plane_capture_tolerance=0.0, negative_capture_tolerance=0.0, positive_capture_tolerance=0.0)\n\nInstantiate a Geometrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Geometrical Selection Rule.\n\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\n\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\n\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_default_tolerances (bool) – Whether to use default tolerances.\n\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\n\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\n\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\n\nReturn type\n\nGeometricalSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_geometrical_selection_rule.html#examples-using-modelcreate_geometrical_selection_rule","title":"create_geometrical_selection_rule > Examples using Model.create_geometrical_selection_rule","text":"Examples using Model.create_geometrical_selection_rule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE.html#plane_stress_state","title":"PLANE_STRESS_STATE","text":"PLANE_STRESS_STATE\n\n\n\nStressStateType.PLANE_STRESS_STATE = 'plane_stress_state'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu13.html#nu13","title":"nu13","text":"nu13\n\n\n\nproperty ConstantEngineeringConstants.nu13: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty ModelingGroup.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.DOCKER_COMPOSE.html#docker_compose","title":"DOCKER_COMPOSE","text":"DOCKER_COMPOSE\n\n\n\nLaunchMode.DOCKER_COMPOSE = 'docker_compose'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nCylindricalSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#solid-model","title":"Solid Model","text":"Solid Model\n\nThis example shows how to create and shape a solid model.\n\nThe solid model implements an extrusion algorithm which creates\na layered solid mesh based on the shell mesh and layup definition.\nThis solid mesh can be further processed by ExtrusionGuide,\nSnapToGeometry, and CutOffGeometry.\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#load-a-minimal-model","title":"Solid Model > Load a minimal model","text":"Load a minimal model\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from the input file."},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#create-a-simple-layup","title":"Solid Model > Create a simple layup","text":"Create a simple layup\n\nAdd more layers to the modeling ply so that it is easier to see the\neffects of the selection rules."},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#create-an-initial-solid-model","title":"Solid Model > Create an initial solid model","text":"Create an initial solid model\n\nBy default, the layup is extruded along the normal direction of the shell mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#snap-the-top-to-a-geometry","title":"Solid Model > Snap the top to a geometry","text":"Snap the top to a geometry\n\nThe SnapToGeometry allows to shape the bottom or top of the solid model.\nFirst, import the geometry and then add the snap-to feature to the solid model.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#shape-the-walls","title":"Solid Model > Shape the walls","text":"Shape the walls\n\nThe ExtrusionGuide is used to shape the side walls of the solid model.\nThe feature can be defined by a direction as shown here or through a geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#cut-off-an-edge","title":"Solid Model > Cut-off an edge","text":"Cut-off an edge\n\nThe CutOffGeometry is used to crop elements from the solid model.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#plot-results-on-the-solid-mesh","title":"Solid Model > Plot results on the solid mesh","text":"Plot results on the solid mesh\n\nThe plotting capabilities also support the visualization of ply-wise results,\nsuch as directions or thicknesses as shown here.\n\nGet the analysis ply of interest"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#plot-fiber-directions","title":"Solid Model > Plot fiber directions","text":"Plot fiber directions\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/020-solid_model.html#plot-thicknesses","title":"Solid Model > Plot thicknesses","text":"Plot thicknesses\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 4.604 seconds)\n\n\n\nDownload Jupyter notebook: 020-solid_model.ipynb\n\nDownload Python source code: 020-solid_model.py\n\nDownload zipped: 020-solid_model.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_mesh_size.html#draping_mesh_size","title":"draping_mesh_size","text":"draping_mesh_size\n\n\n\nproperty OrientedSelectionSet.draping_mesh_size: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nBooleanSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.section_cuts.html#section_cuts","title":"section_cuts","text":"section_cuts\n\n\n\nproperty Model.section_cuts: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solid_model_prefix.html#use_solid_model_prefix","title":"use_solid_model_prefix","text":"use_solid_model_prefix\n\n\n\nproperty SolidModelExportSettings.use_solid_model_prefix: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.cut_off_material.html#cut_off_material","title":"cut_off_material","text":"cut_off_material\n\n\n\nproperty Stackup.cut_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.M.html#m","title":"M","text":"M\n\n\n\nproperty ConstantPuckConstants.M: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.external_path.html#external_path","title":"external_path","text":"external_path\n\n\n\nproperty CADGeometry.external_path: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_toughness_ratio.html#fracture_toughness_ratio","title":"fracture_toughness_ratio","text":"fracture_toughness_ratio\n\n\n\nproperty VariableLaRCConstants.fracture_toughness_ratio: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.drop_off_material_handling.html#drop_off_material_handling","title":"drop_off_material_handling","text":"drop_off_material_handling\n\n\n\nproperty Fabric.drop_off_material_handling: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ButtJointSequence.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty CylindricalSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nCutOffSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.cut_off_material.html#cut_off_material","title":"cut_off_material","text":"cut_off_material\n\n\n\nproperty Fabric.cut_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#direction-definition","title":"Direction definition","text":"Direction definition\n\nThis example shows how to define directions from lookup tables. They can be either\nreference directions for oriented selection sets or draping angles for modeling plies.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example."},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#import-modules","title":"Direction definition > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#start-acp-and-load-the-model","title":"Direction definition > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nImport the model from the input file.\nThis example’s input file contains a flat plate."},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#setup-materials-and-oriented-selection-set","title":"Direction definition > Setup materials and oriented selection set","text":"Setup materials and oriented selection set\n\nCreate a material and fabric.\n\nCreate a parallel rosette.\n\nCreate an oriented selection set (OSS) and assign the rosette.\n\nPlot the orientation and reference direction of the OSS.\nThe reference direction is defined by the rosette.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#define-reference-direction-from-lookup-table","title":"Direction definition > Define reference direction from lookup table","text":"Define reference direction from lookup table\n\nCreate a 3D lookup table to store the direction and angle corrections.\n\nCreate a grid of points on the plate where the lookup table values are stored.\n\nCompute the directions tangential to circles around the point (0,0,0).\n\nCreate the lookup table and add the direction data.\n\nAssign the lookup table to the OSS.\n\nPlot the orientation and the reference direction of the OSS.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nReset the OSS so that it may use the rosette again for the reference direction."},{"objectID":"Home","href":"examples/modeling_features/005-ply-direction-lookup-table.html#define-draping-angles-from-lookup-table","title":"Direction definition > Define draping angles from lookup table","text":"Define draping angles from lookup table\n\n%%\nCompute a correction angle to define circular fiber paths.\n\nCompute the transverse correction angle, assuming a constant shear angle of -30°.\n\nCreate a modeling ply with the angle corrections.\n\nPlot the directions of the modeling ply. First, plot the directions without correction angles.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nNext, plot the draped directions, including the correction angles, from the lookup table.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 3.620 seconds)\n\n\n\nDownload Jupyter notebook: 005-ply-direction-lookup-table.ipynb\n\nDownload Python source code: 005-ply-direction-lookup-table.py\n\nDownload zipped: 005-ply-direction-lookup-table.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.from_isotropic_constants.html#from_isotropic_constants","title":"from_isotropic_constants","text":"from_isotropic_constants\n\n\n\nclassmethod ConstantStressLimits.from_isotropic_constants(*, effective_stress=0.0)\n\nCreate an isotropic stress limits property set.\n\nParameters\n\neffective_stress (float) – Effective stress limit.\n\nReturns\n\nAn isotropic stress limits property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.fabric_fiber_angle.html#fabric_fiber_angle","title":"fabric_fiber_angle","text":"fabric_fiber_angle\n\n\n\nproperty Material.fabric_fiber_angle: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.element_set.html#element_set","title":"element_set","text":"element_set\n\n\n\nproperty EdgeSet.element_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FabricWithAngle.fabric.html#fabric","title":"fabric","text":"fabric\n\n\n\nproperty FabricWithAngle.fabric: Fabric\n\nLinked fabric."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.active.html#active","title":"active","text":"active\n\n\n\nproperty LayupMappingObject.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ScalarData.html#scalardata","title":"ScalarData","text":"ScalarData\n\n\n\nclass ansys.acp.core.mesh_data.ScalarData(field_names, labels, values, component_name)\n\nClass that encapsulates scalar data.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_fabric.html#create_fabric","title":"create_fabric","text":"create_fabric\n\n\n\nModel.create_fabric(*, name='Fabric', material=None, thickness=0.0, area_price=0.0, ignore_for_postprocessing=False, drop_off_material_handling='global', drop_off_material=None, cut_off_material_handling='computed', cut_off_material=None, draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Fabric.\n\nParameters\n\nname (str) – Name of the fabric.\n\nmaterial (Material | None) – Material of the fabric.\n\nthickness (float) – Thickness of the fabric.\n\narea_price (float) – Price per area of the fabric.\n\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\narea_weight – Weight per area of the fabric. Read only.\n\nReturn type\n\nFabric\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_fabric.html#examples-using-modelcreate_fabric","title":"create_fabric > Examples using Model.create_fabric","text":"Examples using Model.create_fabric\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.RELATIVE_THICKNESS_CORRECTION.html#relative_thickness_correction","title":"RELATIVE_THICKNESS_CORRECTION","text":"RELATIVE_THICKNESS_CORRECTION\n\n\n\nElementalDataType.RELATIVE_THICKNESS_CORRECTION = 'relative_thickness_correction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nGeometricalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nTubeSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.MATERIALS.html#materials","title":"MATERIALS","text":"MATERIALS\n\n\n\nIgnorableEntity.MATERIALS = 'materials'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isalnum.html#isalnum","title":"isalnum","text":"isalnum\n\n\n\nLaunchMode.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.XZ.html#xz","title":"XZ","text":"XZ\n\n\n\nproperty VariableTsaiWuConstants.XZ: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.puck_constants.html#puck_constants","title":"puck_constants","text":"puck_constants\n\n\n\nproperty Material.puck_constants: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.html#geometricalselectionrulenodaldata","title":"GeometricalSelectionRuleNodalData","text":"GeometricalSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Geometrical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xc.html#xc","title":"Xc","text":"Xc\n\n\n\nproperty ConstantWovenStressLimits.Xc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.delete.html#delete","title":"delete","text":"delete\n\n\n\nOrientedSelectionSet.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty Model.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.elemental_data.html#examples-using-modelelemental_data","title":"elemental_data > Examples using Model.elemental_data","text":"Examples using Model.elemental_data\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Lamina.clone.html#clone","title":"clone","text":"clone\n\n\n\nLamina.clone()\n\nCreate a new unstored Lamina with the same properties.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.id.html#id","title":"id","text":"id\n\n\n\nproperty LookUpTable3DColumn.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.TEMPERATURE.html#temperature","title":"TEMPERATURE","text":"TEMPERATURE\n\n\n\nPhysicalDimension.TEMPERATURE = 'temperature'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_FLAT_PLATE.html#minimal_flat_plate","title":"MINIMAL_FLAT_PLATE","text":"MINIMAL_FLAT_PLATE\n\n\n\nExampleKeys.MINIMAL_FLAT_PLATE = 10\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.islower.html#islower","title":"islower","text":"islower\n\n\n\nPuckMaterialType.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.html#fabric","title":"Fabric","text":"Fabric\n\n\n\nclass ansys.acp.core.Fabric(*, name='Fabric', material=None, thickness=0.0, area_price=0.0, ignore_for_postprocessing=False, drop_off_material_handling='global', drop_off_material=None, cut_off_material_handling='computed', cut_off_material=None, draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Fabric.\n\nParameters\n\nname (str) – Name of the fabric.\n\nmaterial (Material | None) – Material of the fabric.\n\nthickness (float) – Thickness of the fabric.\n\narea_price (float) – Price per area of the fabric.\n\nignore_for_postprocessing (bool) – Enable this option that the failure computation skips all plies made of this fabric.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\narea_weight – Weight per area of the fabric. Read only.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.html#examples-using-fabric","title":"Fabric > Examples using Fabric","text":"Examples using Fabric\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.CARBON.html#carbon","title":"CARBON","text":"CARBON\n\n\n\nPuckMaterialType.CARBON = 'carbon'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isidentifier.html#isidentifier","title":"isidentifier","text":"isidentifier\n\n\n\nPuckMaterialType.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”."},{"objectID":"Home","href":"user_guide/security_considerations.html#security-considerations","title":"Security considerations","text":"Security considerations\n\nThis section provides information on security considerations for the use\nof PyACP. It is important to understand the capabilities which PyACP\nprovides, especially when using it to build apps or scripts that accept\nuntrusted input.\n\n"},{"objectID":"Home","href":"user_guide/security_considerations.html#launching-acp","title":"Security considerations > Launching ACP","text":"Launching ACP\n\nThe launch_acp() function has different security implications depending\non the launch mode used:"},{"objectID":"Home","href":"user_guide/security_considerations.html#direct-launch","title":"Security considerations > Direct launch","text":"Direct launch\n\nWhen using the \"direct\" launch mode:\n\nThe executable which is launched is configurable either in the function\nparameters, or in the ansys-tools-local-product-launcher configuration\nfile. This may allow an attacker to launch arbitrary executables on the system.\n\nThe standard output and standard error file paths are configurable. This may\nbe used to overwrite arbitrary files on the system.\n\nWhen exposing the \"direct\" launch mode to untrusted users, it is important\nto validate that the executable path and file paths are safe, or hard-code\nthem in the app."},{"objectID":"Home","href":"user_guide/security_considerations.html#docker-compose-launch","title":"Security considerations > Docker compose launch","text":"Docker compose launch\n\nThe \"docker_compose\" launch mode executes the docker or docker-compose\ncommands on the system.\n\nThis may pose the following risks:\n\nIf the user can override which container is launched, they may be able to\nlaunch arbitrary containers on the system. This is especially problematic\nif docker is configured to run with elevated privileges.\n\nIf the user can override the docker or docker-compose executable\nin the environment, they may be able to execute arbitrary commands on the\nsystem.\n\nWhen exposing the \"docker_compose\" launch mode to untrusted users, it is important\nto validate that the container being launched, and control the environment the\ncommand is executed in."},{"objectID":"Home","href":"user_guide/security_considerations.html#connect-launch","title":"Security considerations > Connect launch","text":"Connect launch\n\nThe \"connect\" launch mode connects to an existing ACP server. This mode does\nnot pose any particular security risks, besides allowing access to a port on the\nsystem.\n\n"},{"objectID":"Home","href":"user_guide/security_considerations.html#file-up--and-downloads","title":"Security considerations > File up- and downloads","text":"File up- and downloads\n\nThe ACPInstance.upload_file() and ACPInstance.download_file() methods create files\non the local or remote machine, without any validation of the file content or path.\nThe same is true for file load / save methods if the auto_transfer_files parameter is set to\nTrue in launch_acp().\n\nWhen exposing these methods to untrusted users, it is important to validate that\nonly files that are safe to be uploaded or downloaded are processed."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.feature_tree.print_feature_tree.html#print_feature_tree","title":"print_feature_tree","text":"print_feature_tree\n\n\n\nansys.acp.core.extras.feature_tree.print_feature_tree(show_lines=False)\n\nPrint a tree representation of the PyACP features.\n\nParameters\n\nshow_lines (bool) – Whether to show lines connecting the nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty GeometricalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.material.html#material","title":"material","text":"material\n\n\n\nproperty ProductionPly.material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"examples/index.html#examples","title":"Examples","text":"Examples"},{"objectID":"Home","href":"examples/index.html#acp-modeling-features","title":"Examples > ACP modeling features","text":"ACP modeling features\n\nThese examples show how to use PyACP for defining composite layups.\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\n\n\nGallery generated by Sphinx-Gallery\n\n"},{"objectID":"Home","href":"examples/index.html#workflow-examples","title":"Examples > Workflow examples","text":"Workflow examples\n\nThese examples show how to combine PyACP with other tools to create a full\nsimulation workflow.\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"examples/index.html#use-case-examples","title":"Examples > Use case examples","text":"Use case examples\n\nThese examples can serve as an inspiration for how you can tackle your own\nuse cases with PyACP.\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty AnalysisPly.angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty VariableOffsetSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type.html#operation_type","title":"operation_type","text":"operation_type\n\n\n\nproperty LinkedSelectionRule.operation_type: BooleanOperationType\n\nOperation to combine the selection rule with other selection rules."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.operation_type.html#examples-using-linkedselectionruleoperation_type","title":"operation_type > Examples using LinkedSelectionRule.operation_type","text":"Examples using LinkedSelectionRule.operation_type\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.reference_direction.html#reference_direction","title":"reference_direction","text":"reference_direction\n\n\n\nproperty SamplingPoint.reference_direction: Any\n\nLocal x-direction used in the computation of laminate properties (CLT)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.offset_is_middle.html#offset_is_middle","title":"offset_is_middle","text":"offset_is_middle\n\n\n\nproperty SamplingPoint.offset_is_middle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_element_sets.html#transferred_element_sets","title":"transferred_element_sets","text":"transferred_element_sets\n\n\n\nproperty SolidModelExportSettings.transferred_element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies.html#imported_analysis_plies","title":"imported_analysis_plies","text":"imported_analysis_plies\n\n\n\nproperty ImportedProductionPly.imported_analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.imported_analysis_plies.html#examples-using-importedproductionplyimported_analysis_plies","title":"imported_analysis_plies > Examples using ImportedProductionPly.imported_analysis_plies","text":"Examples using ImportedProductionPly.imported_analysis_plies\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.consider_coupling_effect.html#consider_coupling_effect","title":"consider_coupling_effect","text":"consider_coupling_effect\n\n\n\nproperty SamplingPoint.consider_coupling_effect: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nElementSetElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.count.html#count","title":"count","text":"count\n\n\n\nLaunchMode.count(sub, [start, [end]]) -> int\n\nReturn the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.ply_type.html#ply_type","title":"ply_type","text":"ply_type\n\n\n\nproperty Material.ply_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.ply_type.html#examples-using-materialply_type","title":"ply_type > Examples using Material.ply_type","text":"Examples using Material.ply_type\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.density.html#density","title":"density","text":"density\n\n\n\nproperty Material.density: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SURFACE_NORMAL.html#surface_normal","title":"SURFACE_NORMAL","text":"SURFACE_NORMAL\n\n\n\nSolidModelOffsetDirectionType.SURFACE_NORMAL = 'surface_normal'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.create_butt_joint_sequence.html#create_butt_joint_sequence","title":"create_butt_joint_sequence","text":"create_butt_joint_sequence\n\n\n\nModelingGroup.create_butt_joint_sequence(*, name='ButtJointSequence', active=True, global_ply_nr=0, primary_plies=(), secondary_plies=())\n\nInstantiate a ButtJointSequence.\n\nParameters\n\nname (str) – Name of the butt joint sequence.\n\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\n\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\n\nReturn type\n\nButtJointSequence\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE.html#from_table","title":"FROM_TABLE","text":"FROM_TABLE\n\n\n\nThicknessType.FROM_TABLE = 'from_table'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.FROM_TABLE.html#examples-using-thicknesstypefrom_table","title":"FROM_TABLE > Examples using ThicknessType.FROM_TABLE","text":"Examples using ThicknessType.FROM_TABLE\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FabricWithAngle.clone.html#clone","title":"clone","text":"clone\n\n\n\nFabricWithAngle.clone()\n\nCreate a new unstored FabricWithAngle with the same properties.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.image_name_acp.html#image_name_acp","title":"image_name_acp","text":"image_name_acp\n\n\n\nDockerComposeLaunchConfig.image_name_acp: str = 'ghcr.io/ansys/acp:latest'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ParallelSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.VOLUME.html#volume","title":"VOLUME","text":"VOLUME\n\n\n\nElementalDataType.VOLUME = 'volume'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.status.html#status","title":"status","text":"status\n\n\n\nproperty LookUpTable1D.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nCylindricalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.columns.html#columns","title":"columns","text":"columns\n\n\n\nproperty LookUpTable3D.columns: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.columns.html#examples-using-lookuptable3dcolumns","title":"columns > Examples using LookUpTable3D.columns","text":"Examples using LookUpTable3D.columns\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies.html#imported_production_plies","title":"imported_production_plies","text":"imported_production_plies\n\n\n\nproperty ImportedModelingPly.imported_production_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.imported_production_plies.html#examples-using-importedmodelingplyimported_production_plies","title":"imported_production_plies > Examples using ImportedModelingPly.imported_production_plies","text":"Examples using ImportedModelingPly.imported_production_plies\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.columns.html#columns","title":"columns","text":"columns\n\n\n\nproperty LookUpTable1D.columns: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.columns.html#examples-using-lookuptable1dcolumns","title":"columns > Examples using LookUpTable1D.columns","text":"Examples using LookUpTable1D.columns\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E.html#e","title":"E","text":"E\n\n\n\nproperty ConstantEngineeringConstants.E: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ModelingGroup.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.delete.html#delete","title":"delete","text":"delete\n\n\n\nSolidModel.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh.html#solid_mesh","title":"solid_mesh","text":"solid_mesh\n\n\n\nproperty AnalysisPly.solid_mesh: MeshData\n\nSolid mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.solid_mesh.html#examples-using-analysisplysolid_mesh","title":"solid_mesh > Examples using AnalysisPly.solid_mesh","text":"Examples using AnalysisPly.solid_mesh\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.outer_radius.html#outer_radius","title":"outer_radius","text":"outer_radius\n\n\n\nproperty TubeSelectionRule.outer_radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.interpolation_algorithm.html#interpolation_algorithm","title":"interpolation_algorithm","text":"interpolation_algorithm\n\n\n\nproperty LookUpTable3D.interpolation_algorithm: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.id.html#id","title":"id","text":"id\n\n\n\nproperty ExtrusionGuide.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.clone.html#clone","title":"clone","text":"clone\n\n\n\nImportedSolidModel.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#sensor","title":"Sensor","text":"Sensor\n\nThe Sensor capabilities to analyze the composite structure\nis demonstrated in this example. A sensor is used to compute the weight,\narea, cost, etc. of the model or specific entities such as ply material,\nmodeling ply, etc."},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#import-modules","title":"Sensor > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#start-acp-and-load-the-model","title":"Sensor > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from the input file which contains a formula 1 front\nwing with layup.\n\nThe plot shows the total laminate thickness per element.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nSet price per area for all fabrics."},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#sensor-by-area","title":"Sensor > Sensor by area","text":"Sensor by area"},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#entire-model","title":"Sensor > Entire Model","text":"Entire Model\n\nThe first sensor is applied to the entire model to compute for example\nthe total weight, area of production material, and material cost.\n\nUpdate the model to compute the sensor values.\n\nPrint the values. The production ply area is the area of production material."},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#scope-to-a-specific-component","title":"Sensor > Scope to a specific component","text":"Scope to a specific component\n\nCompute the measures for the nose only. Note that OrientedSelectionSet\ncan also be used to scope the sensor.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#sensor-by-material","title":"Sensor > Sensor by material","text":"Sensor by material\n\nA sensor can also be used to compute the amount of a certain ply material\n(Fabric, Stackup, SubLaminate)."},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#sensor-by-ply","title":"Sensor > Sensor by ply","text":"Sensor by ply\n\nA sensor can also be scoped to a specific ply or a list of plies. In this example,\na ply of the suction side and a ply of the pressure side of wing 3 are selected.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/007-sensor.html#sensor-by-solid-model","title":"Sensor > Sensor by solid model","text":"Sensor by solid model\n\nThe sensor by solid model is only supported in PyACP from server version 25.2 onwards.\n\nFinally, a sensor can be scoped to a solid model. In this case, only the weight and\ncenter of gravity are computed.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 31.107 seconds)\n\n\n\nDownload Jupyter notebook: 007-sensor.ipynb\n\nDownload Python source code: 007-sensor.py\n\nDownload zipped: 007-sensor.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ImportedModelingPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.status.html#status","title":"status","text":"status\n\n\n\nproperty ProductionPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.use_default_precision.html#use_default_precision","title":"use_default_precision","text":"use_default_precision\n\n\n\nproperty CADGeometry.use_default_precision: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.encode.html#encode","title":"encode","text":"encode\n\n\n\nPuckMaterialType.encode(/, encoding='utf-8', errors='strict')\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.active.html#active","title":"active","text":"active\n\n\n\nproperty CutOffGeometry.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.rho.html#rho","title":"rho","text":"rho\n\n\n\nproperty ConstantDensity.rho: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.element_nodes.html#element_nodes","title":"element_nodes","text":"element_nodes\n\n\n\nTriangleMesh.element_nodes: ndarray[tuple[int, ...], dtype[int64]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants.html#from_orthotropic_constants","title":"from_orthotropic_constants","text":"from_orthotropic_constants\n\n\n\nclassmethod ConstantStrainLimits.from_orthotropic_constants(*, eXc=0.0, eYc=0.0, eZc=0.0, eXt=0.0, eYt=0.0, eZt=0.0, eSxy=0.0, eSyz=0.0, eSxz=0.0)\n\nCreate an orthotropic strain limits property set.\n\nParameters\n\neXc (float) – Compressive strain limit in material 1 direction.\n\neYc (float) – Compressive strain limit in material 2 direction.\n\neZc (float) – Compressive strain limit in out-of-plane direction.\n\neXt (float) – Tensile strain limit in material 1 direction.\n\neYt (float) – Tensile strain limit in material 2 direction.\n\neZt (float) – Tensile strain limit in out-of-plane direction.\n\neSxy (float) – Shear strain limit in-plane ().\n\neSyz (float) – Shear strain limit out-of-plane ().\n\neSxz (float) – Shear strain limit out-of-plane ().\n\nReturns\n\nAn orthotropic strain limits property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.from_orthotropic_constants.html#examples-using-constantstrainlimitsfrom_orthotropic_constants","title":"from_orthotropic_constants > Examples using ConstantStrainLimits.from_orthotropic_constants","text":"Examples using ConstantStrainLimits.from_orthotropic_constants\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nSphericalSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nParallelSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nGeometricalSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule.html#create_parallel_selection_rule","title":"create_parallel_selection_rule","text":"create_parallel_selection_rule\n\n\n\nModel.create_parallel_selection_rule(*, name='ParallelSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), direction=(1.0, 0.0, 0.0), lower_limit=0.0, upper_limit=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Parallel Selection Rule.\n\nParameters\n\nname (str) – Name of the Parallel Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the Parallel Selection Rule.\n\ndirection (tuple[float, ...]) – Direction of the Parallel Selection Rule.\n\nlower_limit (float) – Negative distance of the Parallel Selection Rule.\n\nupper_limit (float) – Positive distance of the Parallel Selection Rule.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nParallelSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_parallel_selection_rule.html#examples-using-modelcreate_parallel_selection_rule","title":"create_parallel_selection_rule > Examples using Model.create_parallel_selection_rule","text":"Examples using Model.create_parallel_selection_rule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_point.html#orientation_point","title":"orientation_point","text":"orientation_point\n\n\n\nproperty OrientedSelectionSet.orientation_point: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G23.html#g23","title":"G23","text":"G23\n\n\n\nproperty VariableEngineeringConstants.G23: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.delete.html#delete","title":"delete","text":"delete\n\n\n\nLayupMappingObject.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_pos.html#p_22_pos","title":"p_22_pos","text":"p_22_pos\n\n\n\nproperty VariablePuckConstants.p_22_pos: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.REMOVE.html#remove","title":"REMOVE","text":"REMOVE\n\n\n\nBaseElementMaterialHandling.REMOVE = 'remove'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nproperty ElementSet.element_labels: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.delete.html#delete","title":"delete","text":"delete\n\n\n\nLookUpTable1DColumn.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.transfer_all_sets.html#transfer_all_sets","title":"transfer_all_sets","text":"transfer_all_sets\n\n\n\nproperty SolidModelExportSettings.transfer_all_sets: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXc.html#exc","title":"eXc","text":"eXc\n\n\n\nproperty ConstantStrainLimits.eXc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.offset.html#offset","title":"offset","text":"offset\n\n\n\nProductionPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.HONEYCOMB_CORE.html#honeycomb_core","title":"HONEYCOMB_CORE","text":"HONEYCOMB_CORE\n\n\n\nPlyType.HONEYCOMB_CORE = 'honeycomb_core'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.modeling_groups.html#modeling_groups","title":"modeling_groups","text":"modeling_groups\n\n\n\nproperty Model.modeling_groups: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.modeling_groups.html#examples-using-modelmodeling_groups","title":"modeling_groups > Examples using Model.modeling_groups","text":"Examples using Model.modeling_groups\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#advanced-selection-rules","title":"Advanced selection rules","text":"Advanced selection rules\n\nThis example shows how to use advanced rules, including the geometrical,\ncut-off, and variable offset rules. It also demonstrates how rules can be templated\nand reused with different parameters. For more basic rules, see\nbasic_selection_rules_example.\n\nThis example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example."},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#import-modules","title":"Advanced selection rules > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#start-acp-and-load-the-model","title":"Advanced selection rules > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from the input file.\n\nAdd more layers to the modeling ply so that it is easier to see the effects of the selection rules.\nPlot the thickness of all the plies without any rules.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#parametrized-parallel-rule","title":"Advanced selection rules > Parametrized Parallel Rule","text":"Parametrized Parallel Rule\n\nRules can be parametrized. This is useful when a rule is used multiple times but with different\nparameters.  The LinkedSelectionRule class shows what parameters are available for each rule.\nThis code modifies the extent of the parallel rule.\n\nCreate a parallel rule.\n\nAssign it the modeling ply.\n\nPlot the thickness of the ply before the parametrization.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nModify the parallel rule by changing the parameters of the linked rule.\nParameters defined on the linked rule override the parameters of the original rule.\n\nPlot the thickness of the ply with the modified rule.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#create-a-geometrical-selection-rule","title":"Advanced selection rules > Create a geometrical selection rule","text":"Create a geometrical selection rule\n\nAdd a CAD geometry to the model.\n\nCreate a virtual geometry from the CAD geometry.\n\nCreate the geometrical selection rule.\n\nAssign the geometrical selection rule to the ply. Plot the ply extent with\nthe outline of the geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#create-a-cut-off-selection-rule","title":"Advanced selection rules > Create a cut-off selection rule","text":"Create a cut-off selection rule\n\nAdd the cut off CAD geometry to the model.\n\nCreate a virtual geometry from the CAD geometry.\n\nCreate the cut_off selection rule.\n\nAssign the cut_off selection rule to the ply. Plot the ply extent with\nthe outline of the geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#create-a-variable-offset-selection-rule","title":"Advanced selection rules > Create a variable offset selection rule","text":"Create a variable offset selection rule\n\nCreate the lookup table.\n\nAdd the location data. The “Location” column of the lookup table\nis always created by default.\n\nCreate the offset column that defines the offsets from the edge.\n\nCreate the edge set from the “All_Elements” element set. Because you\nassigned 30 degrees to the limit angle, only one edge at x=0 is selected.\n\nCreate the variable offset rule and assign it to the ply.\n\nPlot the ply extent.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/004-advanced-selection-rules.html#create-a-boolean-selection-rule","title":"Advanced selection rules > Create a boolean selection rule","text":"Create a boolean selection rule\n\nCreating a Boolean selection rule and assigning it to a ply has the same\neffect as linking the individual rules directly to the ply. Boolean rules are still useful\nbecause they can help organize rules and make more complex ones.\n\nCreate a cylindrical selection rule to combine with the parallel rule.\n\nPlot the ply extent.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nModify the operation type of the Boolean selection rule so that the two rules are added.\n\nPlot the ply extent.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 4.999 seconds)\n\n\n\nDownload Jupyter notebook: 004-advanced-selection-rules.ipynb\n\nDownload Python source code: 004-advanced-selection-rules.py\n\nDownload zipped: 004-advanced-selection-rules.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedObjectHandling.KEEP.html#keep","title":"KEEP","text":"KEEP\n\n\n\nLinkedObjectHandling.KEEP = 'keep'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.id.html#id","title":"id","text":"id\n\n\n\nproperty ImportedAnalysisPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.id.html#id","title":"id","text":"id\n\n\n\nproperty ImportedProductionPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply.html#create_modeling_ply","title":"create_modeling_ply","text":"create_modeling_ply\n\n\n\nModelingGroup.create_modeling_ply(*, name='ModelingPly', ply_material=None, oriented_selection_sets=(), ply_angle=0.0, number_of_layers=1, active=True, global_ply_nr=0, selection_rules=(), draping_type='no_draping', draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(1.0, 0.0, 0.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_thickness_correction=True, draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_geometry=None, thickness_field=None, thickness_field_type='absolute_values', taper_edges=())\n\nInstantiate a Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\nnumber_of_layers (int) – Number of times the plies are generated.\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\nglobal_ply_nr (int) – Defines the global ply order.\n\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\n\ndraping_type (DrapingType) – Chooses between different draping formulations.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\n\nReturn type\n\nModelingPly\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.create_modeling_ply.html#examples-using-modelinggroupcreate_modeling_ply","title":"create_modeling_ply > Examples using ModelingGroup.create_modeling_ply","text":"Examples using ModelingGroup.create_modeling_ply\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYc.html#eyc","title":"eYc","text":"eYc\n\n\n\nproperty VariableStrainLimits.eYc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariablePuckConstants.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementTechnology.html#elementtechnology","title":"ElementTechnology","text":"ElementTechnology\n\n\n\nclass ansys.acp.core.ElementTechnology(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the element technology used in a layup mapping object.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementTechnology.html#examples-using-elementtechnology","title":"ElementTechnology > Examples using ElementTechnology","text":"Examples using ElementTechnology\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.M.html#m","title":"M","text":"M\n\n\n\nproperty VariablePuckConstants.M: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.html#solidmodelexportsettings","title":"SolidModelExportSettings","text":"SolidModelExportSettings\n\n\n\nclass ansys.acp.core.SolidModelExportSettings(*, use_default_section_index=True, section_index=0, use_default_coordinate_system_index=True, coordinate_system_index=0, use_default_material_index=True, material_index=0, use_default_node_index=True, node_index=0, use_default_element_index=True, element_index=0, use_solsh_elements=False, write_degenerated_elements=True, drop_hanging_nodes=True, use_solid_model_prefix=True, transfer_all_sets=True, transferred_element_sets=(), transferred_edge_sets=(), _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the settings for exporting a solid model.\n\nParameters\n\nuse_default_section_index (bool) – Use the default start index for sections.\n\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\n\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\n\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\n\nuse_default_material_index (bool) – Use the default start index for materials.\n\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\n\nuse_default_node_index (bool) – Use the default start index for nodes.\n\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\n\nuse_default_element_index (bool) – Use the default start index for elements.\n\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\n\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\n\nwrite_degenerated_elements (bool) – Whether to export drop-off and cut-off elements.\n\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\n\nuse_solid_model_prefix (bool) – Use the solid model name as a prefix for the exported file.\n\ntransfer_all_sets (bool) – When True, all element sets and edge sets are exported.\n\ntransferred_element_sets (Iterable[ElementSet]) – Element sets to be exported.\nOnly used if transfer_all_sets is False.\n\ntransferred_edge_sets (Iterable[EdgeSet]) – Edge sets to be exported.\nOnly used if transfer_all_sets is False.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.delete.html#delete","title":"delete","text":"delete\n\n\n\nSectionCut.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty CylindricalSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.create_column.html#create_column","title":"create_column","text":"create_column\n\n\n\nLookUpTable1D.create_column(*, name='LookUpTable1DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 1D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nReturn type\n\nLookUpTable1DColumn\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.create_column.html#examples-using-lookuptable1dcreate_column","title":"create_column > Examples using LookUpTable1D.create_column","text":"Examples using LookUpTable1D.create_column\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.analysis_plies.html#analysis_plies","title":"analysis_plies","text":"analysis_plies\n\n\n\nproperty LayupMappingObject.analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubShape.html#subshape","title":"SubShape","text":"SubShape\n\n\n\nclass ansys.acp.core.SubShape(cad_geometry, path)\n\nRepresents a sub-shape of a virtual geometry.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionType.SURFACE_SWEEP_BASED.html#surface_sweep_based","title":"SURFACE_SWEEP_BASED","text":"SURFACE_SWEEP_BASED\n\n\n\nExtrusionType.SURFACE_SWEEP_BASED = 'surface_sweep_based'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.cog.html#cog","title":"cog","text":"cog\n\n\n\nAnalysisPlyElementalData.cog: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nTubeSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_sampling_point.html#create_sampling_point","title":"create_sampling_point","text":"create_sampling_point\n\n\n\nModel.create_sampling_point(*, name='SamplingPoint', point=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0), use_default_reference_direction=True, rosette=None, offset_is_middle=True, consider_coupling_effect=True)\n\nInstantiate a Sampling Point.\n\nParameters\n\nname (str) – Name of the sampling point.\n\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\n\ndirection (tuple[float, float, float]) – Direction of the sampling point.\n\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\n\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\n\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\n\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\n\nReturn type\n\nSamplingPoint\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Rosette.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.swapcase.html#swapcase","title":"swapcase","text":"swapcase\n\n\n\nLaunchMode.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_x.html#rotation_angle_x","title":"rotation_angle_x","text":"rotation_angle_x\n\n\n\nCoordinateTransformation.rotation_angle_x: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.store.html#store","title":"store","text":"store\n\n\n\nImportedModelingPly.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#pymechanical-to-cdb-shell-workflow","title":"PyMechanical to CDB shell workflow","text":"PyMechanical to CDB shell workflow\n\nThis example shows how to set up a workflow that uses PyMechanical to mesh the\ngeometry and define the load case, PyACP to define a layup, PyMAPDL to solve the\nmodel, and PyDPF - Composites to post-process the results.\n\nThis workflow does not suffer from the limitations of the PyACP to\nPyMechanical integration.\n\nOutputs and plots for this example are not shown in the rendered online\ndocumentation. To see the outputs and plots, run the example script or\nJupyter notebook locally."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#import-modules-and-start-the-ansys-products","title":"PyMechanical to CDB shell workflow > Import modules and start the Ansys products","text":"Import modules and start the Ansys products\n\nImport the standard library and third-party dependencies.\n\nImport PyACP, PyMechanical, and PyDPF - Composites.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#get-example-input-files","title":"PyMechanical to CDB shell workflow > Get example input files","text":"Get example input files\n\nCreate a temporary working directory, and download the example input files\nto this directory."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#generate-the-mesh-in-pymechanical","title":"PyMechanical to CDB shell workflow > Generate the mesh in PyMechanical","text":"Generate the mesh in PyMechanical\n\nLoad the geometry into Mechanical, generate the mesh, and define the\nload case."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#set-up-the-acp-model","title":"PyMechanical to CDB shell workflow > Set up the ACP model","text":"Set up the ACP model\n\nSetup basic ACP lay-up based on the CDB file."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#update-and-save-the-acp-model","title":"PyMechanical to CDB shell workflow > Update and Save the ACP model","text":"Update and Save the ACP model"},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#solve-with-pymapdl","title":"PyMechanical to CDB shell workflow > Solve with PyMAPDL","text":"Solve with PyMAPDL\n\nLoad the CDB file into PyMAPDL.\n\nSolve the model.\n\nShow the displacements in postprocessing.\n\nDownload the RST file for further postprocessing."},{"objectID":"Home","href":"examples/workflows/05-pymechanical-to-cdb-workflow.html#postprocessing-with-pydpf---composites","title":"PyMechanical to CDB shell workflow > Postprocessing with PyDPF - Composites","text":"Postprocessing with PyDPF - Composites\n\nSpecify the combined failure criterion.\n\nCreate the composite model and configure its input.\n\nEvaluate the failure criteria.\n\nQuery and plot the results.\n\nNote that the maximum IRF is different when compared to pymechanical_shell_example\nbecause ACP sets the ERESX,NO option in the CDB file. This option disables interpolation\nof the results from the integration point to the nodes.\n\n\n\nDownload Jupyter notebook: 05-pymechanical-to-cdb-workflow.ipynb\n\nDownload Python source code: 05-pymechanical-to-cdb-workflow.py\n\nDownload zipped: 05-pymechanical-to-cdb-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS.html#dimensionless","title":"DIMENSIONLESS","text":"DIMENSIONLESS\n\n\n\nPhysicalDimension.DIMENSIONLESS = 'dimensionless'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.DIMENSIONLESS.html#examples-using-physicaldimensiondimensionless","title":"DIMENSIONLESS > Examples using PhysicalDimension.DIMENSIONLESS","text":"Examples using PhysicalDimension.DIMENSIONLESS\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TaperEdge.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty TaperEdge.angle: float\n\nAngle between the cutting plane and  the reference surface."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.limit_angle.html#limit_angle","title":"limit_angle","text":"limit_angle\n\n\n\nproperty EdgeSet.limit_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.element_technology.html#element_technology","title":"element_technology","text":"element_technology\n\n\n\nproperty LayupMappingObject.element_technology: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#minimum_distance_superposed","title":"MINIMUM_DISTANCE_SUPERPOSED","text":"MINIMUM_DISTANCE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED = 'minimum_distance_superposed'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED.html#examples-using-rosetteselectionmethodminimum_distance_superposed","title":"MINIMUM_DISTANCE_SUPERPOSED > Examples using RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED","text":"Examples using RosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableFabricFiberAngle.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.woven_puck_constants_1.html#woven_puck_constants_1","title":"woven_puck_constants_1","text":"woven_puck_constants_1\n\n\n\nproperty Material.woven_puck_constants_1: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.rosette.html#rosette","title":"rosette","text":"rosette\n\n\n\nproperty LookUpTable3D.rosette: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isalpha.html#isalpha","title":"isalpha","text":"isalpha\n\n\n\nLaunchMode.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.html#interfacelayer","title":"InterfaceLayer","text":"InterfaceLayer\n\n\n\nclass ansys.acp.core.InterfaceLayer(*, name='InterfaceLayer', global_ply_nr=0, active=True, oriented_selection_sets=(), open_area_sets=())\n\nInstantiate an interface layer.\n\nThe interface layer is a separation layer in the stacking sequence. It can be\nused to analyze the crack growth of existing cracks. They can also be used to\ndefine contacts zones between two layers.\nThe topology is defined with an interface layer in ACP, while all other fracture\nsettings need to be specified in the downstream analysis (MAPDL or Mechanical).\n\nParameters\n\nname (str) – Name of the interface layer.\n\nglobal_ply_nr (int) – Global ply number for the stacking sequence.\n\nactive (bool) – Inactive interface layers are ignored in ACP and the downstream analysis.\n\noriented_selection_sets (Iterable[OrientedSelectionSet]) – Oriented Selection Set for the expansion of the interface layer.\n\nopen_area_sets (Iterable[ElementSet | OrientedSelectionSet]) – Defines the initial crack of a Virtual Crack Closure Technique (VCCT) layer.\nCan contain OrientedSelectionSet and ElementSet objects.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.removeprefix.html#removeprefix","title":"removeprefix","text":"removeprefix\n\n\n\nPuckMaterialType.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.name.html#name","title":"name","text":"name\n\n\n\nproperty VirtualGeometry.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/server.html#server-management","title":"Server management","text":"Server management\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.ply_offset.html#ply_offset","title":"ply_offset","text":"ply_offset\n\n\n\nProductionPlyNodalData.ply_offset: VectorData\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.html#constantwovencharacterization","title":"ConstantWovenCharacterization","text":"ConstantWovenCharacterization\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantWovenCharacterization(*, orientation_1=0.0, E1_1=0.0, E2_1=0.0, G12_1=0.0, G23_1=0.0, nu12_1=0.0, orientation_2=0.0, E1_2=0.0, E2_2=0.0, G12_2=0.0, G23_2=0.0, nu12_2=0.0, _parent_object=None, _attribute_path=None)\n\nConstant woven characterization material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.html#elementsetnodaldata","title":"ElementSetNodalData","text":"ElementSetNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ElementSetNodalData(node_labels)\n\nRepresents nodal data for an Element Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_virtual_geometry.html#create_virtual_geometry","title":"create_virtual_geometry","text":"create_virtual_geometry\n\n\n\nModel.create_virtual_geometry(*, name='VirtualGeometry', cad_components=None, sub_shapes=None)\n\nInstantiate a Virtual Geometry.\n\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\n\nParameters\n\nname (str) – Name of the Virtual Geometry.\n\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\n\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\n\nReturn type\n\nVirtualGeometry\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_virtual_geometry.html#examples-using-modelcreate_virtual_geometry","title":"create_virtual_geometry > Examples using Model.create_virtual_geometry","text":"Examples using Model.create_virtual_geometry\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty SphericalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Material.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_thickness_tolerance.html#relative_thickness_tolerance","title":"relative_thickness_tolerance","text":"relative_thickness_tolerance\n\n\n\nShellMappingProperties.relative_thickness_tolerance: float = 0.5\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.clone.html#clone","title":"clone","text":"clone\n\n\n\nSamplingPoint.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.root_shapes.html#root_shapes","title":"root_shapes","text":"root_shapes\n\n\n\nproperty CADGeometry.root_shapes: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.root_shapes.html#examples-using-cadgeometryroot_shapes","title":"root_shapes > Examples using CADGeometry.root_shapes","text":"Examples using CADGeometry.root_shapes\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.imported_analysis_plies.html#imported_analysis_plies","title":"imported_analysis_plies","text":"imported_analysis_plies\n\n\n\nproperty LayupMappingObject.imported_analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.clone.html#clone","title":"clone","text":"clone\n\n\n\nLookUpTable1D.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.entities.html#entities","title":"entities","text":"entities\n\n\n\nproperty Sensor.entities: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.entities.html#examples-using-sensorentities","title":"entities > Examples using Sensor.entities","text":"Examples using Sensor.entities\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT.html#valuet","title":"ValueT","text":"ValueT\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects._grpc_helpers.mapping.ValueT = ~ValueT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalRuleType.ELEMENT_SETS.html#element_sets","title":"ELEMENT_SETS","text":"ELEMENT_SETS\n\n\n\nGeometricalRuleType.ELEMENT_SETS = 'element_sets'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STEP.html#step","title":"STEP","text":"STEP\n\n\n\nSolidModelSkinExportFormat.STEP = 'step'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.cut_off_material_handling.html#cut_off_material_handling","title":"cut_off_material_handling","text":"cut_off_material_handling\n\n\n\nproperty Fabric.cut_off_material_handling: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.html#trianglemesh","title":"TriangleMesh","text":"TriangleMesh\n\n\n\nclass ansys.acp.core.mesh_data.TriangleMesh(node_coordinates, element_nodes)\n\nRepresents a mesh consisting of triangle faces only.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.format_map.html#format_map","title":"format_map","text":"format_map\n\n\n\nLaunchMode.format_map(mapping) -> str\n\nReturn a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.name.html#name","title":"name","text":"name\n\n\n\nproperty ImportedModelingGroup.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.oriented_selection_set.html#oriented_selection_set","title":"oriented_selection_set","text":"oriented_selection_set\n\n\n\nproperty SnapToGeometry.oriented_selection_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.volume.html#volume","title":"volume","text":"volume\n\n\n\nAnalysisPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty BooleanSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty TubeSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.area_price.html#area_price","title":"area_price","text":"area_price\n\n\n\nproperty SubLaminate.area_price: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.STL.html#stl","title":"STL","text":"STL\n\n\n\nSolidModelSkinExportFormat.STL = 'stl'\n\n"},{"objectID":"Home","href":"examples/modeling_features/050-composite_cae_h5.html#hdf5-composite-cae","title":"HDF5 Composite CAE","text":"HDF5 Composite CAE\n\nThe HDF5 Composite CAE interface of PyACP is demonstrated in\nthis example. It shows how to write (export) and read (import)\nlayup data to and from a HDF5 Composite CAE file, respectively.\nThe HDF5 Composite CAE format is a vendor independent format\nto exchange composite layup information between CAE tools.\n\nThis examples demonstrates how to:\n- Load and manipulate a model\n- Export data to a HDF5 Composite CAE file\n- Import and map layup from HDF5 Composite CAE onto a different model (mesh)\n- Export data with ply offsets (3D plies)\n- Import a layup as ImportedModelingPly\n- Import HDF5 Composite CAE with 3D plies and map the layup onto an ImportedSolidModel\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/050-composite_cae_h5.html#start-acp-and-load-the-model","title":"HDF5 Composite CAE > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from an acph5 file\n\nCrop some plies in order to generate a variable laminate\n\nPlot the thickness distribution\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/050-composite_cae_h5.html#write-hdf5-composite-cae-file","title":"HDF5 Composite CAE > Write HDF5 Composite CAE file","text":"Write HDF5 Composite CAE file\n\nExport the entire layup to a HDF5 Composite CAE file."},{"objectID":"Home","href":"examples/modeling_features/050-composite_cae_h5.html#load-hdf5-composite-cae-file-into-a-different-model","title":"HDF5 Composite CAE > Load HDF5 Composite CAE file into a different model","text":"Load HDF5 Composite CAE file into a different model\n\nA new acp model is created by importing a refined mesh of the same geometry.\nBoth meshes (initial mesh in blue, refined one in red) are shown below.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nImport the HDF5 Composite CAE file which is then automatically mapped\nonto the refined mesh. In this example, the default settings\n(tolerances, etc.) are used.\n\nPlot the thickness distribution on the refined model\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/050-composite_cae_h5.html#3d-plies-with-ply-offsets","title":"HDF5 Composite CAE > 3D plies with ply-offsets","text":"3D plies with ply-offsets\n\nThe HDF5 Composite CAE interface also allows to export the 3D plies\n(plies with offsets) which can then be used to create\nimported modeling plies. The initial model is used to\nwrite a new HDF5 with layup_representation_3d enabled.\n\nA new acp model is created to properly separate the different workflows.\n\nAn imported solid model is required for the 3D workflow (with imported modeling plies).\nDetails about ImportedSolidModel and ImportedModelingPly can be found\nin the examples imported_solid_model_example and imported_plies_example.\n\nThe LayupMappingObject is used to configure the mapping of the imported plies\nonto the imported solid model.\n\nThe mapped top layer of the imported laminate is shown below.\nNote that the solid elements which do not intersect with the\nlayup are deleted in this example.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nNote that the visualization of imported plies and imported solid model\nis limited. As an alternative, you can save the model and review it\nin ACP standalone.\n\nTotal running time of the script: (0 minutes 3.952 seconds)\n\n\n\nDownload Jupyter notebook: 050-composite_cae_h5.ipynb\n\nDownload Python source code: 050-composite_cae_h5.py\n\nDownload zipped: 050-composite_cae_h5.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nAnalysisPlyElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffMaterialHandling.CUSTOM.html#custom","title":"CUSTOM","text":"CUSTOM\n\n\n\nCutOffMaterialHandling.CUSTOM = 'custom'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.name.html#name","title":"name","text":"name\n\n\n\nproperty InterfaceLayer.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.precision.html#precision","title":"precision","text":"precision\n\n\n\nproperty CADGeometry.precision: Any\n\n"},{"objectID":"Home","href":"examples/workflows/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:27.280 total execution time for 6 files from examples/workflows:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py (02-advanced-pymapdl-workflow.py)\n\n00:19.558\n\n0.0\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py (01-pymapdl-workflow.py)\n\n00:07.722\n\n0.0\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py (03-pymechanical-shell-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py (04-pymechanical-solid-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py (05-pymechanical-to-cdb-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py (06-cdb-to-pymechanical-workflow.py)\n\n00:00.000\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.sequences.html#sequences","title":"sequences","text":"sequences\n\n\n\nproperty LayupMappingObject.sequences: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_1.html#nu12_1","title":"nu12_1","text":"nu12_1\n\n\n\nproperty VariableWovenCharacterization.nu12_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE.html#maximum_angle","title":"MAXIMUM_ANGLE","text":"MAXIMUM_ANGLE\n\n\n\nRosetteSelectionMethod.MAXIMUM_ANGLE = 'maximum_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty TubeSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_rosette.html#create_rosette","title":"create_rosette","text":"create_rosette\n\n\n\nModel.create_rosette(*, name='Rosette', rosette_type='parallel', origin=(0.0, 0.0, 0.0), dir1=(1.0, 0.0, 0.0), dir2=(0.0, 1.0, 0.0), edge_set=None)\n\nInstantiate a Rosette.\n\nParameters\n\nname (str) – Name of the rosette.\n\nrosette_type (RosetteType) – Type of the rosette.\n\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\n\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\n\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\n\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\n\nReturn type\n\nRosette\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_rosette.html#examples-using-modelcreate_rosette","title":"create_rosette > Examples using Model.create_rosette","text":"Examples using Model.create_rosette\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nProductionPlyElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isnumeric.html#isnumeric","title":"isnumeric","text":"isnumeric\n\n\n\nPuckMaterialType.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_origin.html#radius_origin","title":"radius_origin","text":"radius_origin\n\n\n\nproperty VariableOffsetSelectionRule.radius_origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.head.html#head","title":"head","text":"head\n\n\n\nproperty TubeSelectionRule.head: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.status.html#status","title":"status","text":"status\n\n\n\nproperty Sensor.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.selection_rules.html#selection_rules","title":"selection_rules","text":"selection_rules\n\n\n\nproperty OrientedSelectionSet.selection_rules: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty CutOffSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.name.html#name","title":"name","text":"name\n\n\n\nproperty SnapToGeometry.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH.html#imported_solid_model_solid_mesh","title":"IMPORTED_SOLID_MODEL_SOLID_MESH","text":"IMPORTED_SOLID_MODEL_SOLID_MESH\n\n\n\nExampleKeys.IMPORTED_SOLID_MODEL_SOLID_MESH = 16\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RACE_CAR_NOSE_ACPH5.html#race_car_nose_acph5","title":"RACE_CAR_NOSE_ACPH5","text":"RACE_CAR_NOSE_ACPH5\n\n\n\nExampleKeys.RACE_CAR_NOSE_ACPH5 = 5\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ElementSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nElementSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.volume.html#volume","title":"volume","text":"volume\n\n\n\nModelingPlyElementalData.volume: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT.html#intersect","title":"INTERSECT","text":"INTERSECT\n\n\n\nBooleanOperationType.INTERSECT = 'intersect'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.INTERSECT.html#examples-using-booleanoperationtypeintersect","title":"INTERSECT > Examples using BooleanOperationType.INTERSECT","text":"Examples using BooleanOperationType.INTERSECT\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.store.html#store","title":"store","text":"store\n\n\n\nMaterial.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty SolidElementSet.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.offset.html#offset","title":"offset","text":"offset\n\n\n\nModelingPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ConnectLocalLaunchConfig.url_acp.html#url_acp","title":"url_acp","text":"url_acp\n\n\n\nConnectLocalLaunchConfig.url_acp: str\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.html#constantengineeringconstants","title":"ConstantEngineeringConstants","text":"ConstantEngineeringConstants\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantEngineeringConstants(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant engineering constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.html#elementset","title":"ElementSet","text":"ElementSet\n\n\n\nclass ansys.acp.core.ElementSet(*, name='ElementSet', middle_offset=False, element_labels=())\n\nInstantiate an Element Set.\n\nParameters\n\nname (str) – The name of the Element Set.\n\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\n\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.html#examples-using-elementset","title":"ElementSet > Examples using ElementSet","text":"Examples using ElementSet\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyCutOffType.html#plycutofftype","title":"PlyCutOffType","text":"PlyCutOffType\n\n\n\nclass ansys.acp.core.PlyCutOffType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply cut-off is computed.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.orientation.html#orientation","title":"orientation","text":"orientation\n\n\n\nAnalysisPlyElementalData.orientation: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.html#samplingpoint","title":"SamplingPoint","text":"SamplingPoint\n\n\n\nclass ansys.acp.core.SamplingPoint(*, name='SamplingPoint', point=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0), use_default_reference_direction=True, rosette=None, offset_is_middle=True, consider_coupling_effect=True)\n\nInstantiate a Sampling Point.\n\nParameters\n\nname (str) – Name of the sampling point.\n\npoint (tuple[float, float, float]) – Coordinates of the sampling point.\n\ndirection (tuple[float, float, float]) – Direction of the sampling point.\n\nuse_default_reference_direction (bool) – Whether to use the element coordinate system when computing the laminate\nproperties (CLT).\n\nrosette (Rosette | None) – Rosette defining the coordinate system used when computing the laminate\nproperties (CLT). Only used when use_default_reference_direction is False.\n\noffset_is_middle (bool) – Activate this option to offset the reference surface to the mid-plane of the\nlaminate for the computation of the ABD matrices and laminate properties (CLT).\n\nconsider_coupling_effect (bool) – Whether the computation of the laminate engineering constants should consider\nthe coupling effect if the B-Matrix of the ABD-Matrix is not zero. Computation\nof the ABD matrices is not affected by this parameter.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xt.html#xt","title":"Xt","text":"Xt\n\n\n\nproperty VariableStressLimits.Xt: Any\n\n"},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#materials","title":"Materials","text":"Materials\n\nThis example demonstrates how to create the different type of materials, import,\nor export them. It only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\n\nACP distinguishes between four types of material:\n\nRaw Material that defines the mechanical properties of the material.\n\nFabric is where a material can be associated with a set thickness.\n\nStackup is used to combine fabrics into a non-crimp fabric, such as a [0 45 90] combination.\n\nSublaminate is used to group fabrics and stackups for frequently used lay-ups.\n\nFabrics, Stackups and Sublaminates can be used to create plies. It is recommended to look a the\nAnsys help for more information on the different types of materials.\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#start-acp-and-load-the-model","title":"Materials > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nImport the model from the input file."},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#create-a-material","title":"Materials > Create a Material","text":"Create a Material\n\nCreate property sets elastic constants, strain and stress limits.\n\nCreate a uni-directional (UD) material"},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#create-a-fabric","title":"Materials > Create a Fabric","text":"Create a Fabric\n\nCreate a fabric with a thickness of 0.2 mmm. A material can be used for\nmultiple fabrics."},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#create-a-stackup","title":"Materials > Create a Stackup","text":"Create a Stackup\n\nCreate a non-crimped fabric. In that case a biax."},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#create-a-sub-laminate","title":"Materials > Create a Sub-Laminate","text":"Create a Sub-Laminate\n\nA Sublaminate is a group of fabrics and stackups which eases the modeling\nif the same sequence of materials is used multiple times.\nThe final material sequence of this Sublaminate is\n[E-Glass -45°, E-Glass 45°, E-Glass 90°, E-Glass 45°, E-Glass -45°]."},{"objectID":"Home","href":"examples/modeling_features/001-materials.html#import-and-export-materials","title":"Materials > Import and Export Materials","text":"Import and Export Materials\n\nMaterials can be imported and exported from and to external sources.\nBy default, materials are loaded from the CDB file when the model is loaded.\nAn alternative is to load materials from an Engineering Data\nfile via Model.import_materials().\n\nSome workflows require the materials to be exported to an XML file.\n\nTotal running time of the script: (0 minutes 10.691 seconds)\n\n\n\nDownload Jupyter notebook: 001-materials.ipynb\n\nDownload Python source code: 001-materials.py\n\nDownload zipped: 001-materials.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.name.html#name","title":"name","text":"name\n\n\n\nproperty Rosette.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR.html#scalar","title":"SCALAR","text":"SCALAR\n\n\n\nLookUpTableColumnValueType.SCALAR = 'scalar'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.SCALAR.html#examples-using-lookuptablecolumnvaluetypescalar","title":"SCALAR > Examples using LookUpTableColumnValueType.SCALAR","text":"Examples using LookUpTableColumnValueType.SCALAR\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.html#shellmappingproperties","title":"ShellMappingProperties","text":"ShellMappingProperties\n\n\n\nclass ansys.acp.core.ShellMappingProperties(all_elements=True, element_sets=(), relative_thickness_tolerance=0.5, relative_in_plane_tolerance=0.01, angle_tolerance=35.0, small_hole_threshold=0.0)\n\nProperties for mapping to the shell on importing HDF5 Composite CAE files.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.normal.html#normal","title":"normal","text":"normal\n\n\n\nproperty SectionCut.normal: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty OrientedSelectionSet.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.angle_tolerance.html#angle_tolerance","title":"angle_tolerance","text":"angle_tolerance\n\n\n\nproperty Model.angle_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.name.html#name","title":"name","text":"name\n\n\n\nproperty Fabric.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.name.html#examples-using-fabricname","title":"name > Examples using Fabric.name","text":"Examples using Fabric.name\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.extrusion_method.html#extrusion_method","title":"extrusion_method","text":"extrusion_method\n\n\n\nproperty SolidModel.extrusion_method: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.store.html#store","title":"store","text":"store\n\n\n\nModelingPly.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.startswith.html#startswith","title":"startswith","text":"startswith\n\n\n\nLaunchMode.startswith(prefix, [start, [end]]) -> bool\n\nReturn True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.html#analysisplynodaldata","title":"AnalysisPlyNodalData","text":"AnalysisPlyNodalData\n\n\n\nclass ansys.acp.core.mesh_data.AnalysisPlyNodalData(node_labels, ply_offset=None)\n\nRepresents nodal data for an Analysis Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nSphericalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/plot_utils.html#plot-utilities","title":"Plot utilities","text":"Plot utilities\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffMaterialHandling.GLOBAL.html#global","title":"GLOBAL","text":"GLOBAL\n\n\n\nDropOffMaterialHandling.GLOBAL = 'global'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.id.html#id","title":"id","text":"id\n\n\n\nproperty LookUpTable1DColumn.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty Material.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.html#variablestresslimits","title":"VariableStressLimits","text":"VariableStressLimits\n\n\n\nclass ansys.acp.core.material_property_sets.VariableStressLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable stress limits material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"user_guide/howto/view_model_in_acp_gui.html#view-model-in-acp-gui","title":"View model in ACP GUI","text":"View model in ACP GUI\n\nTo view the PyACP model in the ACP GUI, save the model to a file using the Model.save() method and then open the saved file in ACP by selecting File > Open.\nIn the ACP GUI, reload the model from its context menu by right-clicking the model’s name in the tree and selecting Reload Model.\nA common workflow is to save the model to a file at the end of the script and reload it in ACP after each script run."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system.html#get_dpf_unit_system","title":"get_dpf_unit_system","text":"get_dpf_unit_system\n\n\n\nansys.acp.core.dpf_integration_helpers.get_dpf_unit_system(unit_system)\n\nConvert pyACP unit system to DPF unit system.\n\nParameters\n\nunit_system (UnitSystemType) – The pyACP unit system.\n\nReturn type\n\nUnitSystem"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.dpf_integration_helpers.get_dpf_unit_system.html#examples-using-get_dpf_unit_system","title":"get_dpf_unit_system > Examples using get_dpf_unit_system","text":"Examples using get_dpf_unit_system\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty CylindricalSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.relative_thickness_correction.html#relative_thickness_correction","title":"relative_thickness_correction","text":"relative_thickness_correction\n\n\n\nModelingPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.export_skin.html#export_skin","title":"export_skin","text":"export_skin\n\n\n\nImportedSolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\n\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\"."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.html#productionply","title":"ProductionPly","text":"ProductionPly\n\n\n\nclass ansys.acp.core.ProductionPly\n\nInstantiate a Production Ply.\n\nParameters\n\nname (str) – The name of the production ply.\n\nmaterial (Material) – Material of the production ply.\n\nangle (float) – Angle of the production ply in degrees.\n\nthickness (float) – Thickness of the production ply.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.use_curvature_correction.html#use_curvature_correction","title":"use_curvature_correction","text":"use_curvature_correction\n\n\n\nproperty ExtrusionGuide.use_curvature_correction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.thickness_field.html#thickness_field","title":"thickness_field","text":"thickness_field\n\n\n\nproperty ImportedModelingPly.thickness_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty ParallelSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyCutOffType.ANALYSIS_PLY_CUTOFF.html#analysis_ply_cutoff","title":"ANALYSIS_PLY_CUTOFF","text":"ANALYSIS_PLY_CUTOFF\n\n\n\nPlyCutOffType.ANALYSIS_PLY_CUTOFF = 'analysis_ply_cutoff'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR.html#nearest_neighbor","title":"NEAREST_NEIGHBOR","text":"NEAREST_NEIGHBOR\n\n\n\nLookUpTable3DInterpolationAlgorithm.NEAREST_NEIGHBOR = 'nearest_neighbor'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.id.html#id","title":"id","text":"id\n\n\n\nproperty Fabric.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.angle_tolerance.html#angle_tolerance","title":"angle_tolerance","text":"angle_tolerance\n\n\n\nShellMappingProperties.angle_tolerance: float = 35.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.draping_material_model.html#draping_material_model","title":"draping_material_model","text":"draping_material_model\n\n\n\nproperty Fabric.draping_material_model: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.MKS.html#mks","title":"MKS","text":"MKS\n\n\n\nUnitSystemType.MKS = 'mks'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES.html#sensor_by_plies","title":"SENSOR_BY_PLIES","text":"SENSOR_BY_PLIES\n\n\n\nSensorType.SENSOR_BY_PLIES = 'sensor_by_plies'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_PLIES.html#examples-using-sensortypesensor_by_plies","title":"SENSOR_BY_PLIES > Examples using SensorType.SENSOR_BY_PLIES","text":"Examples using SensorType.SENSOR_BY_PLIES\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.MeshImportType.FROM_GEOMETRY.html#from_geometry","title":"FROM_GEOMETRY","text":"FROM_GEOMETRY\n\n\n\nMeshImportType.FROM_GEOMETRY = 'from_geometry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.partition.html#partition","title":"partition","text":"partition\n\n\n\nLaunchMode.partition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.maketrans.html#maketrans","title":"maketrans","text":"maketrans\n\n\n\nstatic LaunchMode.maketrans(x, y=<unrepresentable>, z=<unrepresentable>, /)\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableDensity.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.secondary_plies.html#secondary_plies","title":"secondary_plies","text":"secondary_plies\n\n\n\nproperty ButtJointSequence.secondary_plies: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IntersectionType.NORMAL_TO_SURFACE.html#normal_to_surface","title":"NORMAL_TO_SURFACE","text":"NORMAL_TO_SURFACE\n\n\n\nIntersectionType.NORMAL_TO_SURFACE = 'normal_to_surface'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionType.WIRE_FRAME.html#wire_frame","title":"WIRE_FRAME","text":"WIRE_FRAME\n\n\n\nExtrusionType.WIRE_FRAME = 'wire_frame'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.html#importedplyoffsettype","title":"ImportedPlyOffsetType","text":"ImportedPlyOffsetType\n\n\n\nclass ansys.acp.core.ImportedPlyOffsetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the definition of the offset.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.html#examples-using-importedplyoffsettype","title":"ImportedPlyOffsetType > Examples using ImportedPlyOffsetType","text":"Examples using ImportedPlyOffsetType\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.element_index.html#element_index","title":"element_index","text":"element_index\n\n\n\nproperty ImportedSolidModelExportSettings.element_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.get_model_tree.html#get_model_tree","title":"get_model_tree","text":"get_model_tree\n\n\n\nansys.acp.core.get_model_tree(model, *, hide_empty=True, label_by_id=False)\n\nGet a tree representation of the model.\n\nReturns the root node.\n\nParameters\n\nmodel (Model) – ACP model.\n\nhide_empty (bool) – Whether to hide empty collections.\n\nlabel_by_id (bool) – Prefer the ID over the name for the label of a node, for objects that have both.\n\nReturn type\n\nNode"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nParallelSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu23.html#nu23","title":"nu23","text":"nu23\n\n\n\nproperty ConstantEngineeringConstants.nu23: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.solid_models.html#solid_models","title":"solid_models","text":"solid_models\n\n\n\nproperty Model.solid_models: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.status.html#status","title":"status","text":"status\n\n\n\nproperty ImportedAnalysisPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.mass.html#mass","title":"mass","text":"mass\n\n\n\nModelElementalData.mass: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.sensors.html#sensors","title":"sensors","text":"sensors\n\n\n\nproperty Model.sensors: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.center.html#center","title":"center","text":"center\n\n\n\nPuckMaterialType.center(width, fillchar=' ', /)\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.sublaminates.html#sublaminates","title":"sublaminates","text":"sublaminates\n\n\n\nproperty Model.sublaminates: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.effective_stress.html#effective_stress","title":"effective_stress","text":"effective_stress\n\n\n\nproperty VariableStressLimits.effective_stress: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ConnectLocalLaunchConfig.html#connectlocallaunchconfig","title":"ConnectLocalLaunchConfig","text":"ConnectLocalLaunchConfig\n\n\n\nclass ansys.acp.core.ConnectLocalLaunchConfig(url_acp)\n\nConfiguration options for attaching to an existing ACP server without filetransfer.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.name.html#name","title":"name","text":"name\n\n\n\nproperty ImportedAnalysisPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.html#modelinggroup","title":"ModelingGroup","text":"ModelingGroup\n\n\n\nclass ansys.acp.core.ModelingGroup(*, name='ModelingGroup')\n\nInstantiate a modeling group.\n\nParameters\n\nname (str) – Name of the modeling group.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.html#examples-using-modelinggroup","title":"ModelingGroup > Examples using ModelingGroup","text":"Examples using ModelingGroup\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Lamina.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty Lamina.angle: float\n\nOrientation angle in degree of the material with respect to the reference direction."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.solid_element_sets.html#solid_element_sets","title":"solid_element_sets","text":"solid_element_sets\n\n\n\nproperty LayupMappingObject.solid_element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET.html#middle_offset","title":"MIDDLE_OFFSET","text":"MIDDLE_OFFSET\n\n\n\nImportedPlyOffsetType.MIDDLE_OFFSET = 'middle_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.MIDDLE_OFFSET.html#examples-using-importedplyoffsettypemiddle_offset","title":"MIDDLE_OFFSET > Examples using ImportedPlyOffsetType.MIDDLE_OFFSET","text":"Examples using ImportedPlyOffsetType.MIDDLE_OFFSET\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL.html#cylindrical","title":"CYLINDRICAL","text":"CYLINDRICAL\n\n\n\nRosetteType.CYLINDRICAL = 'cylindrical'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.CYLINDRICAL.html#examples-using-rosettetypecylindrical","title":"CYLINDRICAL > Examples using RosetteType.CYLINDRICAL","text":"Examples using RosetteType.CYLINDRICAL\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.html#rosettetype","title":"RosetteType","text":"RosetteType\n\n\n\nclass ansys.acp.core.RosetteType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of a rosette.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.html#examples-using-rosettetype","title":"RosetteType > Examples using RosetteType","text":"Examples using RosetteType\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZt.html#ezt","title":"eZt","text":"eZt\n\n\n\nproperty ConstantStrainLimits.eZt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rpartition.html#rpartition","title":"rpartition","text":"rpartition\n\n\n\nLaunchMode.rpartition(sep, /)\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.delete.html#delete","title":"delete","text":"delete\n\n\n\nModelingPly.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ModelingPly.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.nodal_data.html#examples-using-modelingplynodal_data","title":"nodal_data > Examples using ModelingPly.nodal_data","text":"Examples using ModelingPly.nodal_data\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.dimension.html#dimension","title":"dimension","text":"dimension\n\n\n\nproperty VirtualGeometry.dimension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu.html#nu","title":"nu","text":"nu\n\n\n\nproperty ConstantEngineeringConstants.nu: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp.html#export_mesh_for_acp","title":"export_mesh_for_acp","text":"export_mesh_for_acp\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core.mechanical_integration_helpers.export_mesh_for_acp(*, mechanical, path)\n\nExport the mesh from PyMechanical for use in PyACP.\n\nParameters\n\nmechanical (Mechanical) – The PyMechanical instance. This must be a remote instance.\n\npath (str | PathLike[str]) – The path to save the mesh to. The extension must be ‘.h5’."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.design_angle.html#design_angle","title":"design_angle","text":"design_angle\n\n\n\nProductionPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DirectLaunchConfig.stdout_file.html#stdout_file","title":"stdout_file","text":"stdout_file\n\n\n\nDirectLaunchConfig.stdout_file: str = '/dev/null'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.lower_limit.html#lower_limit","title":"lower_limit","text":"lower_limit\n\n\n\nproperty ParallelSelectionRule.lower_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.algorithm.html#algorithm","title":"algorithm","text":"algorithm\n\n\n\nInterpolationOptions.algorithm: str\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty CylindricalSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT.html#childt","title":"ChildT","text":"ChildT\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects._grpc_helpers.linked_object_list.ChildT = ~ChildT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.html#solidmodel","title":"SolidModel","text":"SolidModel\n\n\n\nclass ansys.acp.core.SolidModel(*, name='SolidModel', active=True, element_sets=(), extrusion_method='analysis_ply_wise', max_element_thickness=1.0, ply_group_pointers=(), offset_direction_type='shell_normal', skip_elements_without_plies=False, drop_off_material=None, cut_off_material=None, delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, drop_off_settings=<ansys.acp.core._tree_objects.solid_model.DropOffSettings object>, export_settings=<ansys.acp.core._tree_objects.solid_model.SolidModelExportSettings object>)\n\nInstantiate a solid model.\n\nParameters\n\nname (str) – Name of the solid model.\n\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\n\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\n\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\n\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\n\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\n\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\n\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\n\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\n\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\n\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\n\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.html#examples-using-solidmodel","title":"SolidModel > Examples using SolidModel","text":"Examples using SolidModel\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E3.html#e3","title":"E3","text":"E3\n\n\n\nproperty VariableEngineeringConstants.E3: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.create_cut_off_geometry.html#create_cut_off_geometry","title":"create_cut_off_geometry","text":"create_cut_off_geometry\n\n\n\nImportedSolidModel.create_cut_off_geometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nReturn type\n\nCutOffGeometry\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rindex.html#rindex","title":"rindex","text":"rindex\n\n\n\nPuckMaterialType.rindex(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nMeshData.node_labels: ndarray[tuple[int, ...], dtype[int32]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.html#constantlarcconstants","title":"ConstantLaRCConstants","text":"ConstantLaRCConstants\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantLaRCConstants(*, fracture_angle_under_compression=53.0, fracture_toughness_ratio=0.0, fracture_toughness_mode_1=0.0, fracture_toughness_mode_2=0.0, thin_ply_thickness_limit=0.0, _parent_object=None, _attribute_path=None)\n\nConstant LaRC failure criterion properties.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nBooleanSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_rule_type.html#cut_off_rule_type","title":"cut_off_rule_type","text":"cut_off_rule_type\n\n\n\nproperty CutOffSelectionRule.cut_off_rule_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.material_1_direction.html#material_1_direction","title":"material_1_direction","text":"material_1_direction\n\n\n\nAnalysisPlyElementalData.material_1_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.active.html#active","title":"active","text":"active\n\n\n\nproperty SolidModel.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty ParallelSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.draping_offset_correction.html#draping_offset_correction","title":"draping_offset_correction","text":"draping_offset_correction\n\n\n\nproperty Model.draping_offset_correction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.status.html#status","title":"status","text":"status\n\n\n\nproperty LayupMappingObject.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_sublaminate.html#create_sublaminate","title":"create_sublaminate","text":"create_sublaminate\n\n\n\nModel.create_sublaminate(*, name='SubLaminate', symmetry='no_symmetry', topdown=True, materials=())\n\nInstantiate a SubLaminate.\n\nParameters\n\nname (str) – Name of the sub-laminate.\n\nsymmetry (SymmetryType) – Whether the sub-laminate is odd or even symmetrical, or none.\n\ntopdown (bool) – The first material in the list is placed first in the mold if topdown is true.\n\nmaterials (Sequence[Lamina]) – List of materials (fabrics and stackups) with angles which build the sub-laminate.\n\nReturn type\n\nSubLaminate\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_sublaminate.html#examples-using-modelcreate_sublaminate","title":"create_sublaminate > Examples using Model.create_sublaminate","text":"Examples using Model.create_sublaminate\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nProductionPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty SphericalSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nModelingPlyElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.html#productionplyelementaldata","title":"ProductionPlyElementalData","text":"ProductionPlyElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ProductionPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Production Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_section_index.html#use_default_section_index","title":"use_default_section_index","text":"use_default_section_index\n\n\n\nproperty SolidModelExportSettings.use_default_section_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.IGES.html#iges","title":"IGES","text":"IGES\n\n\n\nSolidModelSkinExportFormat.IGES = 'iges'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.name.html#name","title":"name","text":"name\n\n\n\nproperty ElementSet.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.use_default_tolerances.html#use_default_tolerances","title":"use_default_tolerances","text":"use_default_tolerances\n\n\n\nproperty GeometricalSelectionRule.use_default_tolerances: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.delete.html#delete","title":"delete","text":"delete\n\n\n\nSnapToGeometry.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleNodalData.html#tubeselectionrulenodaldata","title":"TubeSelectionRuleNodalData","text":"TubeSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.TubeSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Tube Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSxz.html#esxz","title":"eSxz","text":"eSxz\n\n\n\nproperty ConstantStrainLimits.eSxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.extrusion_guide_type.html#extrusion_guide_type","title":"extrusion_guide_type","text":"extrusion_guide_type\n\n\n\nproperty ExtrusionGuide.extrusion_guide_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariablePuckConstants.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.center_of_gravity.html#center_of_gravity","title":"center_of_gravity","text":"center_of_gravity\n\n\n\nproperty Sensor.center_of_gravity: Any\n\nThe center of gravity of the selected entity in the global coordinate system."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eXt.html#ext","title":"eXt","text":"eXt\n\n\n\nproperty ConstantStrainLimits.eXt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.offset_type.html#offset_type","title":"offset_type","text":"offset_type\n\n\n\nproperty ImportedModelingPly.offset_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu13.html#nu13","title":"nu13","text":"nu13\n\n\n\nproperty VariableEngineeringConstants.nu13: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometryDimension.LINE.html#line","title":"LINE","text":"LINE\n\n\n\nVirtualGeometryDimension.LINE = 'line'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nCylindricalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STEP.html#step","title":"STEP","text":"STEP\n\n\n\nPlyGeometryExportFormat.STEP = 'step'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.html#importedplythicknesstype","title":"ImportedPlyThicknessType","text":"ImportedPlyThicknessType\n\n\n\nclass ansys.acp.core.ImportedPlyThicknessType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply thickness is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.mesh_import_type.html#mesh_import_type","title":"mesh_import_type","text":"mesh_import_type\n\n\n\nproperty ImportedModelingPly.mesh_import_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.add_selection_rule.html#add_selection_rule","title":"add_selection_rule","text":"add_selection_rule\n\n\n\nModelingPly.add_selection_rule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nAdd a LinkedSelectionRule to the ModelingPly.\n\nSee LinkedSelectionRule for the available parameters.\n\nReturn type\n\nLinkedSelectionRule"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty VariableOffsetSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_edge_set.html#create_edge_set","title":"create_edge_set","text":"create_edge_set\n\n\n\nModel.create_edge_set(*, name='EdgeSet', edge_set_type='by_reference', defining_node_labels=(), element_set=None, limit_angle=-1.0, origin=(0.0, 0.0, 0.0))\n\nInstantiate an edge set.\n\nParameters\n\nname (str) – Name of the edge set.\n\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\n\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\n\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nReturn type\n\nEdgeSet\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_edge_set.html#examples-using-modelcreate_edge_set","title":"create_edge_set > Examples using Model.create_edge_set","text":"Examples using Model.create_edge_set\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.status.html#status","title":"status","text":"status\n\n\n\nproperty EdgeSet.status: Any\n\n"},{"objectID":"Home","href":"api/linked_object_definitions.html#linked-object-definitions","title":"Linked object definitions","text":"Linked object definitions\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableEngineeringConstants.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.use_default_reference_direction.html#use_default_reference_direction","title":"use_default_reference_direction","text":"use_default_reference_direction\n\n\n\nproperty SamplingPoint.use_default_reference_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.strip.html#strip","title":"strip","text":"strip\n\n\n\nLaunchMode.strip(chars=None, /)\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.id.html#id","title":"id","text":"id\n\n\n\nproperty SolidModel.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData.html#parallelselectionrulenodaldata","title":"ParallelSelectionRuleNodalData","text":"ParallelSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ParallelSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Parallel Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isdecimal.html#isdecimal","title":"isdecimal","text":"isdecimal\n\n\n\nLaunchMode.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.add_primary_ply.html#add_primary_ply","title":"add_primary_ply","text":"add_primary_ply\n\n\n\nButtJointSequence.add_primary_ply(sequence, level=1)\n\nAdd a PrimaryPly to the ButtJointSequence.\n\nSee PrimaryPly for the available parameters.\n\nReturn type\n\nPrimaryPly"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.store.html#store","title":"store","text":"store\n\n\n\nCADGeometry.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_angle.html#draped_fiber_angle","title":"draped_fiber_angle","text":"draped_fiber_angle\n\n\n\nAnalysisPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_angle.html#ply_angle","title":"ply_angle","text":"ply_angle\n\n\n\nproperty ImportedModelingPly.ply_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.solid_mesh.html#solid_mesh","title":"solid_mesh","text":"solid_mesh\n\n\n\nproperty SolidElementSet.solid_mesh: MeshData\n\nSolid mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G31.html#g31","title":"G31","text":"G31\n\n\n\nproperty ConstantEngineeringConstants.G31: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.capitalize.html#capitalize","title":"capitalize","text":"capitalize\n\n\n\nPuckMaterialType.capitalize(/)\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower\ncase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format_map.html#format_map","title":"format_map","text":"format_map\n\n\n\nPuckMaterialType.format_map(mapping) -> str\n\nReturn a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces (‘{’ and ‘}’)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_direction.html#draping_direction","title":"draping_direction","text":"draping_direction\n\n\n\nproperty OrientedSelectionSet.draping_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.geometrical_selection_rules.html#geometrical_selection_rules","title":"geometrical_selection_rules","text":"geometrical_selection_rules\n\n\n\nproperty Model.geometrical_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.zfill.html#zfill","title":"zfill","text":"zfill\n\n\n\nLaunchMode.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.write_degenerated_elements.html#write_degenerated_elements","title":"write_degenerated_elements","text":"write_degenerated_elements\n\n\n\nproperty SolidModelExportSettings.write_degenerated_elements: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.html#snaptogeometry","title":"SnapToGeometry","text":"SnapToGeometry\n\n\n\nclass ansys.acp.core.SnapToGeometry(*, name='SnapToGeometry', active=True, orientation_type='top', cad_geometry=None, oriented_selection_set=None)\n\nInstantiate a snap-to geometry.\n\nParameters\n\nname (str) – Name of the snap-to geometry.\n\nactive (bool) – Inactive snap-to geometries are not used in the solid model extrusion.\n\norientation_type (SnapToGeometryOrientationType) – Determines whether the snap-to geometry is applied to the top or bottom\nsurface of the layup.\n\ncad_geometry (VirtualGeometry | None) – The geometry to snap to.\n\noriented_selection_set (OrientedSelectionSet | None) – Defines the extent over which the snap-to geometry is applied. The normal\nof the oriented selection set is used to determine the top and bottom\nsurfaces of the layup.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nCutOffSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nSolidModelElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Model.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_coordinate_system_index.html#use_default_coordinate_system_index","title":"use_default_coordinate_system_index","text":"use_default_coordinate_system_index\n\n\n\nproperty SolidModelExportSettings.use_default_coordinate_system_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_field.html#thickness_field","title":"thickness_field","text":"thickness_field\n\n\n\nproperty ModelingPly.thickness_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_field.html#examples-using-modelingplythickness_field","title":"thickness_field > Examples using ModelingPly.thickness_field","text":"Examples using ModelingPly.thickness_field\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.html#lookuptable3dcolumn","title":"LookUpTable3DColumn","text":"LookUpTable3DColumn\n\n\n\nclass ansys.acp.core.LookUpTable3DColumn(*, name='LookUpTable3DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 3D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.html#examples-using-lookuptable3dcolumn","title":"LookUpTable3DColumn > Examples using LookUpTable3DColumn","text":"Examples using LookUpTable3DColumn\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutType.html#sectioncuttype","title":"SectionCutType","text":"SectionCutType\n\n\n\nclass ansys.acp.core.SectionCutType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines whether the section cut is extruded by modeling ply, production ply, or analysis ply.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.status.html#status","title":"status","text":"status\n\n\n\nproperty SubLaminate.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.html#booleanoperationtype","title":"BooleanOperationType","text":"BooleanOperationType\n\n\n\nclass ansys.acp.core.BooleanOperationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for combining selection rules.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.html#examples-using-booleanoperationtype","title":"BooleanOperationType > Examples using BooleanOperationType","text":"Examples using BooleanOperationType\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty CylindricalSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eYc.html#eyc","title":"eYc","text":"eYc\n\n\n\nproperty ConstantStrainLimits.eYc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ElementSet.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty AnalysisPly.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.clone.html#clone","title":"clone","text":"clone\n\n\n\nImportedModelingPly.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData.html#cylindricalselectionruleelementaldata","title":"CylindricalSelectionRuleElementalData","text":"CylindricalSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.CylindricalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Cylindrical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath.html#creatablefromresourcepath","title":"CreatableFromResourcePath","text":"CreatableFromResourcePath\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.polymorphic_from_pb.CreatableFromResourcePath(*args, **kwargs)\n\nInterface for objects that can be created from a resource path."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.delete.html#delete","title":"delete","text":"delete\n\n\n\nLookUpTable3D.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.store.html#store","title":"store","text":"store\n\n\n\nImportedSolidModel.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.html#buttjointsequence","title":"ButtJointSequence","text":"ButtJointSequence\n\n\n\nclass ansys.acp.core.ButtJointSequence(*, name='ButtJointSequence', active=True, global_ply_nr=0, primary_plies=(), secondary_plies=())\n\nInstantiate a ButtJointSequence.\n\nParameters\n\nname (str) – Name of the butt joint sequence.\n\nprimary_plies (Sequence[PrimaryPly]) – Primary plies are the source of a butt joint and they pass the thickness to\nadjacent plies. Plies with a higher level inherit the thickness from those\nwith a lower level.\n\nsecondary_plies (Sequence[ModelingGroup | ModelingPly]) – Secondary plies are butt-joined to adjacent primary plies and they inherit\nthe thickness.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.html#offsettype","title":"OffsetType","text":"OffsetType\n\n\n\nclass ansys.acp.core.OffsetType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the ply offset type.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.html#examples-using-offsettype","title":"OffsetType > Examples using OffsetType","text":"Examples using OffsetType\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nImportedSolidModelElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nModelingPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.delete_bad_elements.html#delete_bad_elements","title":"delete_bad_elements","text":"delete_bad_elements\n\n\n\nproperty SolidModel.delete_bad_elements: Any\n\n"},{"objectID":"Home","href":"api/extras.html#extras","title":"Extras","text":"Extras"},{"objectID":"Home","href":"api/extras.html#example-helpers","title":"Extras > Example helpers","text":"Example helpers\n\n"},{"objectID":"Home","href":"api/extras.html#feature-tree","title":"Extras > Feature tree","text":"Feature tree\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.effective_strain.html#effective_strain","title":"effective_strain","text":"effective_strain\n\n\n\nproperty ConstantStrainLimits.effective_strain: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.clone.html#clone","title":"clone","text":"clone\n\n\n\nOrientedSelectionSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.id.html#id","title":"id","text":"id\n\n\n\nproperty SubLaminate.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_modeling_ply_geometries.html#export_modeling_ply_geometries","title":"export_modeling_ply_geometries","text":"export_modeling_ply_geometries\n\n\n\nModel.export_modeling_ply_geometries(path, *, modeling_plies=None, format='step', offset_type='middle_offset', include_surface=True, include_boundary=True, include_first_material_direction=True, include_second_material_direction=True, arrow_length=None, arrow_type='no_arrow')\n\nWrite ply geometries to a STEP, IGES, or STL file.\n\nParameters\n\npath (str | PathLike[str]) – File path to save the geometries to.\n\nmodeling_plies (Iterable[ModelingPly] | None) – List of modeling plies whose geometries should be exported. If not\nprovided, the geometries of all modeling plies in the model are exported.\n\nformat (PlyGeometryExportFormat) – Format of the created file. Can be one of \"STEP\", \"IGES\",\nor \"STL\".\n\noffset_type (OffsetType) – Determines how the ply offset is calculated. Can be one of\n\"NO_OFFSET\", \"BOTTOM_OFFSET\", \"MIDDLE_OFFSET\", or\n\"TOP_OFFSET\".\n\ninclude_surface (bool) – Whether to include the ply surface in the exported geometry.\n\ninclude_boundary (bool) – Whether to include the ply boundary in the exported geometry.\n\ninclude_first_material_direction (bool) – Whether to include the first material direction in the exported geometry.\n\ninclude_second_material_direction (bool) – Whether to include the second material direction in the exported geometry.\n\narrow_length (float | None) – Size of the arrow used to represent the material directions. By default, the\nsquare root of the average element area is used.\n\narrow_type (ArrowType) – Type of the arrow used to represent the material directions. Can be\none of \"NO_ARROW\", \"HALF_ARROW\", or \"STANDARD_ARROW\"."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_angle.html#draped_transverse_angle","title":"draped_transverse_angle","text":"draped_transverse_angle\n\n\n\nModelingPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.store.html#store","title":"store","text":"store\n\n\n\nLookUpTable3DColumn.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#cdb-to-pymechanical-shell-workflow","title":"CDB to PyMechanical shell workflow","text":"CDB to PyMechanical shell workflow\n\nThis example shows how to define a composite lay-up in PyACP based on a mesh\nfrom a CDB file, import the model into PyMechanical for defining the load and\nboundary conditions, and run a failure analysis with PyDPF - Composites.\n\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\n\nOutputs and plots for this example are not shown in the rendered online\ndocumentation. To see the outputs and plots, run the example script or\nJupyter notebook locally."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#import-modules-and-start-the-ansys-products","title":"CDB to PyMechanical shell workflow > Import modules and start the Ansys products","text":"Import modules and start the Ansys products\n\nImport the standard library and third-party dependencies.\n\nImport PyACP, PyMechanical, and PyDPF - Composites.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#get-example-input-files","title":"CDB to PyMechanical shell workflow > Get example input files","text":"Get example input files\n\nCreate a temporary working directory, and download the example input files\nto this directory."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#set-up-the-acp-model","title":"CDB to PyMechanical shell workflow > Set up the ACP model","text":"Set up the ACP model\n\nSetup basic ACP lay-up based on the CDB file.\n\nVisualize the loaded mesh."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#define-the-composite-lay-up","title":"CDB to PyMechanical shell workflow > Define the composite lay-up","text":"Define the composite lay-up\n\nCreate an orthotropic material and fabric including strain limits, which are later\nused to postprocess the simulation.\n\nDefine a rosette and oriented selection set. Plot the orientation.\n\nCreate various plies with different angles and add them to a modeling group.\n\nShow the fiber directions of a specific ply.\n\nFor a quick overview, print the model tree. Note that\nthe model can also be opened in the ACP GUI. For more\ninformation, see view_the_model_in_the_acp_gui."},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#save-the-acp-model","title":"CDB to PyMechanical shell workflow > Save the ACP model","text":"Save the ACP model"},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#import-mesh-materials-and-plies-into-mechanical","title":"CDB to PyMechanical shell workflow > Import mesh, materials and plies into Mechanical","text":"Import mesh, materials and plies into Mechanical\n\nImport geometry, mesh, and named selections into Mechanical\n\nImport materials into Mechanical\n\nImport plies into Mechanical"},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#set-boundary-condition-and-solve","title":"CDB to PyMechanical shell workflow > Set boundary condition and solve","text":"Set boundary condition and solve"},{"objectID":"Home","href":"examples/workflows/06-cdb-to-pymechanical-workflow.html#postprocess-results","title":"CDB to PyMechanical shell workflow > Postprocess results","text":"Postprocess results\n\nEvaluate the failure criteria using the PyDPF - Composites.\n\n\n\nDownload Jupyter notebook: 06-cdb-to-pymechanical-workflow.ipynb\n\nDownload Python source code: 06-cdb-to-pymechanical-workflow.py\n\nDownload zipped: 06-cdb-to-pymechanical-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.auto_draping_direction.html#auto_draping_direction","title":"auto_draping_direction","text":"auto_draping_direction\n\n\n\nproperty ModelingPly.auto_draping_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.html#layupmappingobject","title":"LayupMappingObject","text":"LayupMappingObject\n\n\n\nclass ansys.acp.core.LayupMappingObject(*, name='LayupMappingObject', active=True, element_technology='layered_element', shell_element_sets=(), use_imported_plies=False, select_all_plies=True, sequences=(), entire_solid_mesh=True, solid_element_sets=(), scale_ply_thicknesses=True, void_material=None, minimum_void_material_thickness=1e-06, delete_lost_elements=True, filler_material=None, rosettes=(), rosette_selection_method='minimum_distance', reinforcing_behavior='tension_and_compression', base_element_material_handling='remove', stress_state='plane_stress_state_with_transverse_shear_and_bending_stiffness', base_material=None, base_element_rosettes=(), base_element_rosette_selection_method='minimum_distance')\n\nInstantiate a layup mapping object.\n\nParameters\n\nname (str) – Name of the layup mapping object.\n\nactive (bool) – Inactive layup mapping objects are not used.\n\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\n\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\n\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\n\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\n\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\n\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\n\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\n\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\n\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\n\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\n\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\n\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\n\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty ModelingGroup.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.physical_dimension.html#physical_dimension","title":"physical_dimension","text":"physical_dimension\n\n\n\nproperty LookUpTable3DColumn.physical_dimension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxz.html#sxz","title":"Sxz","text":"Sxz\n\n\n\nproperty ConstantWovenStressLimits.Sxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.replace.html#replace","title":"replace","text":"replace\n\n\n\nPuckMaterialType.replace(old, new, count=-1, /)\n\nReturn a copy with all occurrences of substring old replaced by new.\n\ncount\n\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are\nreplaced."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_fiber_direction.html#draped_fiber_direction","title":"draped_fiber_direction","text":"draped_fiber_direction\n\n\n\nAnalysisPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.html#lookuptablecolumnvaluetype","title":"LookUpTableColumnValueType","text":"LookUpTableColumnValueType\n\n\n\nclass ansys.acp.core.LookUpTableColumnValueType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the column type (data location, scalar data, directional data) of look-up table columns.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.html#examples-using-lookuptablecolumnvaluetype","title":"LookUpTableColumnValueType > Examples using LookUpTableColumnValueType","text":"Examples using LookUpTableColumnValueType\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED.html#minimum_angle_superposed","title":"MINIMUM_ANGLE_SUPERPOSED","text":"MINIMUM_ANGLE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.MINIMUM_ANGLE_SUPERPOSED = 'minimum_angle_superposed'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_2.html#nu12_2","title":"nu12_2","text":"nu12_2\n\n\n\nproperty ConstantWovenCharacterization.nu12_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.expandtabs.html#expandtabs","title":"expandtabs","text":"expandtabs\n\n\n\nLaunchMode.expandtabs(/, tabsize=8)\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubShape.path.html#path","title":"path","text":"path\n\n\n\nproperty SubShape.path: str\n\nTopological path of the sub-shape within the CAD geometry."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.area.html#area","title":"area","text":"area\n\n\n\nProductionPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants.html#from_isotropic_constants","title":"from_isotropic_constants","text":"from_isotropic_constants\n\n\n\nclassmethod ConstantEngineeringConstants.from_isotropic_constants(*, E=0.0, nu=0.0)\n\nCreate an isotropic engineering constants property set.\n\nParameters\n\nE (float) – Young’s modulus.\n\nnu (float) – Poisson’s ratio.\n\nReturns\n\nAn isotropic engineering constants property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_isotropic_constants.html#examples-using-constantengineeringconstantsfrom_isotropic_constants","title":"from_isotropic_constants > Examples using ConstantEngineeringConstants.from_isotropic_constants","text":"Examples using ConstantEngineeringConstants.from_isotropic_constants\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.reference_direction.html#reference_direction","title":"reference_direction","text":"reference_direction\n\n\n\nAnalysisPlyElementalData.reference_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ProductionPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#visualize-model","title":"Visualize model","text":"Visualize model\n\nThis guide uses a model of a race car’s front wing.\n\n>>> import tempfile\n>>> import pathlib\n>>> import ansys.acp.core as pyacp\n>>> from ansys.acp.core.extras import ExampleKeys, get_example_file\n\n>>> acp = pyacp.launch_acp()\n>>> tempdir = tempfile.TemporaryDirectory()\n>>> input_file = get_example_file(\n...     ExampleKeys.RACE_CAR_NOSE_ACPH5, pathlib.Path(tempdir.name)\n... )\n>>> model = acp.import_model(input_file)\n\n>>> input_file_geometry = get_example_file(\n...     ExampleKeys.RACE_CAR_NOSE_STEP, pathlib.Path(tempdir.name)\n... )\n>>> cad_geometry = model.create_cad_geometry(name=\"nose_geometry\")\n>>> cad_geometry.refresh(input_file_geometry)\n\n>>> model.update()\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#show-the-mesh","title":"Visualize model > Show the mesh","text":"Show the mesh\n\nAccess the mesh data using the Model.mesh attribute. This attribute, an instance of the MeshData class, can be converted to a PyVista mesh using the MeshData.to_pyvista() method.\n\n>>> model.mesh.to_pyvista().plot()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nYou can also access and plot the mesh data for specific tree objects. For example, the following code plots the mesh for a modeling ply.\n\n>>> modeling_ply = model.modeling_groups['nose'].modeling_plies['mp.nose.4']\n>>> modeling_ply.mesh.to_pyvista().plot()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#showing-the-directions","title":"Visualize model > Showing the directions","text":"Showing the directions\n\nShow the directions (such as normals, fiber directions, and orientations) of the model by using the get_directions_plotter() helper function. This function takes the model, the components to visualize, and some optional parameters.\n\nThe following example shows the orientation and fiber direction of a modeling ply.\n\n>>> elemental_data = modeling_ply.elemental_data\n>>> directions_plotter = pyacp.get_directions_plotter(\n...     model=model,\n...     components=[\n...         elemental_data.orientation,\n...         elemental_data.fiber_direction\n...     ],\n...     length_factor=10.,\n...     culling_factor=10,\n... )\n>>> directions_plotter.show()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nThe color scheme used in this plot for the various components matches the ACP GUI.\n\nThe directions plot can be scoped to a specific region of the model by using the mesh parameter. For example, the following code only plots the part covered by the modeling ply.\n\n>>> directions_plotter = pyacp.get_directions_plotter(\n...     model=model,\n...     mesh=modeling_ply.mesh,\n...     components=[\n...         elemental_data.orientation,\n...         elemental_data.fiber_direction\n...     ],\n...     length_factor=10.,\n...     culling_factor=10,\n... )\n>>> directions_plotter.show()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#showing-the-mesh-data","title":"Visualize model > Showing the mesh data","text":"Showing the mesh data\n\nAccess the mesh data related to a specific ACP object using the elemental_data and nodal_data attributes. These attributes represent either scalar or vector data."},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#scalar-data","title":"Visualize model > Scalar data","text":"Scalar data\n\nYou can convert scalar data to a PyVista mesh using the get_pyvista_mesh method. This method requires the base model mesh.\n\nFor example, you can plot the total thickness of the model using this code:\n\n>>> thickness_data = model.elemental_data.thickness\n>>> pyvista_mesh = thickness_data.get_pyvista_mesh(mesh=model.mesh)\n>>> pyvista_mesh.plot()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nAgain, the mesh parameter can be used to limit the scope of the plot.\n\n>>> pyvista_mesh = thickness_data.get_pyvista_mesh(mesh=model.element_sets[\"els_wing_assembly\"].mesh)\n>>> pyvista_mesh.plot()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#vector-data","title":"Visualize model > Vector data","text":"Vector data\n\nVisualize vector data using the get_directions_plotter() function shown in the preceding section directions_plotter. If you need more fine-grained control over the visualization, you can use the method shown in this section instead.\n\nVector data can be converted to PyVista glyphs using the get_pyvista_glyphs method. This method requires the base model mesh.\n\nYou can also choose a scaling factor to change the size of the vector glyphs and a culling factor to reduce the number of glyphs plotted.\n\n>>> production_ply = model.modeling_groups['nose'].modeling_plies['mp.nose.6'].production_plies['ProductionPly.20']\n>>> ply_offset = production_ply.nodal_data.ply_offset\n>>> ply_offset.get_pyvista_glyphs(mesh=model.mesh, scaling_factor=6., culling_factor=5).plot()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nThe base mesh is not shown when plotting vector data using PyVista glyphs. To visualize the mesh, you can combine the mesh and glyphs together using a PyVista plotter.\n\n>>> import pyvista\n>>> plotter = pyvista.Plotter()\n>>> _ = plotter.add_mesh(model.mesh.to_pyvista(), color=\"white\", opacity=0.5)\n>>> _ = plotter.add_mesh(\n...     ply_offset.get_pyvista_glyphs(mesh=model.mesh, scaling_factor=6., culling_factor=5),\n...     color=\"blue\"\n... )\n>>> plotter.show()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#showing-geometries","title":"Visualize model > Showing geometries","text":"Showing geometries\n\nYou can view CAD geometries using their visualization_mesh attribute. This attribute contains a tessellated (triangular) mesh that represents the geometry.\n\nFor plotting, the tessellated mesh has a .to_pyvista method that returns a PyVista PolyData object. To see its triangular nature, plot the mesh with the show_edges option set to True.\n\n>>> cad_geometry = model.cad_geometries['nose_geometry']\n>>> tessellated_mesh = cad_geometry.visualization_mesh\n>>> tessellated_mesh.to_pyvista().plot(show_edges=True)\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\n"},{"objectID":"Home","href":"user_guide/howto/visualize_model.html#showing-solid-model","title":"Visualize model > Showing solid model","text":"Showing solid model\n\nThe visualization of a solid mesh and its elemental data is shown in the example solid_model_example."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty ModelingPly.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.mesh.html#examples-using-modelingplymesh","title":"mesh > Examples using ModelingPly.mesh","text":"Examples using ModelingPly.mesh\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.RADIAL.html#radial","title":"RADIAL","text":"RADIAL\n\n\n\nRosetteType.RADIAL = 'radial'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.RADIAL.html#examples-using-rosettetyperadial","title":"RADIAL > Examples using RosetteType.RADIAL","text":"Examples using RosetteType.RADIAL\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.rosettes.html#rosettes","title":"rosettes","text":"rosettes\n\n\n\nproperty ImportedModelingPly.rosettes: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty BooleanSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1.html#parameter_1","title":"parameter_1","text":"parameter_1\n\n\n\nproperty LinkedSelectionRule.parameter_1: float\n\nFirst template parameter of the selection rule."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_1.html#examples-using-linkedselectionruleparameter_1","title":"parameter_1 > Examples using LinkedSelectionRule.parameter_1","text":"Examples using LinkedSelectionRule.parameter_1\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.id.html#id","title":"id","text":"id\n\n\n\nproperty Rosette.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#rosette","title":"Rosette","text":"Rosette\n\nThis example illustrates how you can use rosettes to define the reference directions of a ply.\nIt only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example."},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#import-modules","title":"Rosette > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#start-acp-and-load-the-model","title":"Rosette > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nImport the model from the input file.\nThis example’s input file contains a flat plate."},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-parallel-rosette","title":"Rosette > Define directions with a parallel rosette","text":"Define directions with a parallel rosette\n\nCreate a material and fabric.\n\nCreate a parallel rosette where the first direction is rotated by 45 degrees around the y axis.\n\nCreate an oriented selection set (OSS) and assign the rosette.\n\nPlot the orientation and reference directions of the OSS.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nCreate a ply that uses the reference directions defined by the rosette.\nThe ply angle is set to 20 degrees, which means that the fiber direction is rotated by 20 degrees\nfrom the reference direction.\n\nPlot the reference directions, fiber directions, and transverse directions of the ply.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-radial-rosette","title":"Rosette > Define directions with a radial rosette","text":"Define directions with a radial rosette\n\nCreate a radial rosette and plot the resulting reference directions.\nFor a radial rosette, a line is constructed that goes through the origin. Its\ndirection vector is normal to a plane spanned by dir1 and dir2.\nTherefore, the reference directions are parallel to the shortest connection from the line to\neach point for which it is computed.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-cylindrical-rosette","title":"Rosette > Define directions with a cylindrical rosette","text":"Define directions with a cylindrical rosette\n\nCreate a cylindrical rosette and plot the resulting reference directions.\nFor a cylindrical rosette, the reference directions are tangential to the circles around the origin\nthat lie in a plane spanned by dir1 and dir2.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-a-spherical-rosette","title":"Rosette > Define directions with a spherical rosette","text":"Define directions with a spherical rosette\n\nCreate a spherical rosette and plot the resulting reference directions.\nFor a spherical rosette, the reference directions are tangential to a sphere around the origin.\nNote that for this example, the reference directions of the spherical rosette are the same as\nthose of the cylindrical rosette.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#define-directions-with-an-edge-wise-rosette","title":"Rosette > Define directions with an edge-wise rosette","text":"Define directions with an edge-wise rosette\n\nCreate an edge-wise rosette and plot the resulting reference directions.\nThe reference directions are given by a projection of dir1\nand the path of the edge set. dir1 of the rosette is projected onto the point\non the edge that is closest to the rosette’s origin. This determines the reference directions\nalong the edge set.\nYou can reverse the reference directions by inverting dir1.\nAn element within an OSS gets its reference directions from the direction\nof the point on the edge that is closest to the element centroid.\n\nCreate the edge set from the “All_Elements” element set. Because you assigned\n120 degrees to the limit angle, all the edges are selected.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/002-rosettes-ply-directions.html#combine-rosettes","title":"Rosette > Combine rosettes","text":"Combine rosettes\n\nCreate an additional parallel rosette that points along the x direction and has its origin\nat (0.01, 0, 0.01).\n\nAssign both rosettes to the OSS and set the rosette selection method to\nRosetteSelectionMethod.MINIMUM_DISTANCE_SUPERPOSED. This implies that the reference directions\nare weighted by the inverse distance to each rosette. Note that the origin of\nthe rotated rosette is at (0,0,0).\n\nPlot the resulting reference directions.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 8.950 seconds)\n\n\n\nDownload Jupyter notebook: 002-rosettes-ply-directions.ipynb\n\nDownload Python source code: 002-rosettes-ply-directions.py\n\nDownload zipped: 002-rosettes-ply-directions.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.COORDINATE_SYSTEMS.html#coordinate_systems","title":"COORDINATE_SYSTEMS","text":"COORDINATE_SYSTEMS\n\n\n\nIgnorableEntity.COORDINATE_SYSTEMS = 'coordinate_systems'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty TubeSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zt.html#zt","title":"Zt","text":"Zt\n\n\n\nproperty ConstantWovenStressLimits.Zt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty VirtualGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.html#importedproductionply","title":"ImportedProductionPly","text":"ImportedProductionPly\n\n\n\nclass ansys.acp.core.ImportedProductionPly\n\nInstantiate an Imported Production Ply.\n\nParameters\n\nname (str) – The name of the imported production ply.\n\nmaterial (Material) – Material of the imported production ply.\n\nangle (float) – Angle of the imported production ply in degrees.\n\nthickness (float) – Thickness of the imported production ply in degrees.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.html#examples-using-importedproductionply","title":"ImportedProductionPly > Examples using ImportedProductionPly","text":"Examples using ImportedProductionPly\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalpha.html#isalpha","title":"isalpha","text":"isalpha\n\n\n\nPuckMaterialType.isalpha(/)\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.larc_constants.html#larc_constants","title":"larc_constants","text":"larc_constants\n\n\n\nproperty Material.larc_constants: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_FIBER_ANGLE.html#draped_fiber_angle","title":"DRAPED_FIBER_ANGLE","text":"DRAPED_FIBER_ANGLE\n\n\n\nElementalDataType.DRAPED_FIBER_ANGLE = 'draped_fiber_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty ImportedAnalysisPly.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ImportedSolidModel.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.html#variablelarcconstants","title":"VariableLaRCConstants","text":"VariableLaRCConstants\n\n\n\nclass ansys.acp.core.material_property_sets.VariableLaRCConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable LaRC failure criterion properties.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty LookUpTable3D.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.html#cutoffgeometryorientationtype","title":"CutOffGeometryOrientationType","text":"CutOffGeometryOrientationType\n\n\n\nclass ansys.acp.core.CutOffGeometryOrientationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines the orientation of a cut-off geometry.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.html#examples-using-cutoffgeometryorientationtype","title":"CutOffGeometryOrientationType > Examples using CutOffGeometryOrientationType","text":"Examples using CutOffGeometryOrientationType\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.use_global_coordinate_system.html#use_global_coordinate_system","title":"use_global_coordinate_system","text":"use_global_coordinate_system\n\n\n\nproperty LookUpTable3D.use_global_coordinate_system: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelOffsetDirectionType.SHELL_NORMAL.html#shell_normal","title":"SHELL_NORMAL","text":"SHELL_NORMAL\n\n\n\nSolidModelOffsetDirectionType.SHELL_NORMAL = 'shell_normal'\n\n"},{"objectID":"Home","href":"examples/use_cases/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:47.031 total execution time for 1 file from examples/use_cases:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py (01-optimizing-ply-angles.py)\n\n00:47.031\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE.html#edge_wise","title":"EDGE_WISE","text":"EDGE_WISE\n\n\n\nRosetteType.EDGE_WISE = 'edge_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.EDGE_WISE.html#examples-using-rosettetypeedge_wise","title":"EDGE_WISE > Examples using RosetteType.EDGE_WISE","text":"Examples using RosetteType.EDGE_WISE\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.name.html#name","title":"name","text":"name\n\n\n\nproperty OrientedSelectionSet.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.THICKNESS.html#thickness","title":"THICKNESS","text":"THICKNESS\n\n\n\nElementalDataType.THICKNESS = 'thickness'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE.html#by_reference","title":"BY_REFERENCE","text":"BY_REFERENCE\n\n\n\nEdgeSetType.BY_REFERENCE = 'by_reference'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSetType.BY_REFERENCE.html#examples-using-edgesettypeby_reference","title":"BY_REFERENCE > Examples using EdgeSetType.BY_REFERENCE","text":"Examples using EdgeSetType.BY_REFERENCE\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutCDBExportType.MESH_ONLY.html#mesh_only","title":"MESH_ONLY","text":"MESH_ONLY\n\n\n\nSectionCutCDBExportType.MESH_ONLY = 'mesh_only'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.reference_direction.html#reference_direction","title":"reference_direction","text":"reference_direction\n\n\n\nOrientedSelectionSetElementalData.reference_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID.html#solid","title":"SOLID","text":"SOLID\n\n\n\nHDF5CompositeCAEProjectionMode.SOLID = 'solid'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.SOLID.html#examples-using-hdf5compositecaeprojectionmodesolid","title":"SOLID > Examples using HDF5CompositeCAEProjectionMode.SOLID","text":"Examples using HDF5CompositeCAEProjectionMode.SOLID\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.name.html#name","title":"name","text":"name\n\n\n\nproperty ProductionPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_materials.html#export_materials","title":"export_materials","text":"export_materials\n\n\n\nModel.export_materials(path)\n\nWrite materials to a XML (MatML) file.\n\nThe XML file is required for the post-processing with DPF or can be loaded by\nEngineering Data under WB.\n\nParameters\n\npath (str | PathLike[str]) – File path. E.g. /tmp/acp_materials.xml"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_materials.html#examples-using-modelexport_materials","title":"export_materials > Examples using Model.export_materials","text":"Examples using Model.export_materials\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nVariableOffsetSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.MeshImportType.FROM_H5_COMPOSITE_CAE.html#from_h5_composite_cae","title":"FROM_H5_COMPOSITE_CAE","text":"FROM_H5_COMPOSITE_CAE\n\n\n\nMeshImportType.FROM_H5_COMPOSITE_CAE = 'from_h5_composite_cae'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.offset.html#offset","title":"offset","text":"offset\n\n\n\nModelElementalData.offset: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_material_index.html#use_default_material_index","title":"use_default_material_index","text":"use_default_material_index\n\n\n\nproperty ImportedSolidModelExportSettings.use_default_material_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.MATERIAL_1_DIRECTION.html#material_1_direction","title":"MATERIAL_1_DIRECTION","text":"MATERIAL_1_DIRECTION\n\n\n\nElementalDataType.MATERIAL_1_DIRECTION = 'material_1_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionType.html#extrusiontype","title":"ExtrusionType","text":"ExtrusionType\n\n\n\nclass ansys.acp.core.ExtrusionType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion method used in a section cut.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty BooleanSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.add_material.html#add_material","title":"add_material","text":"add_material\n\n\n\nSubLaminate.add_material(material, angle=0.0)\n\nAdd a Lamina to the SubLaminate.\n\nParameters\n\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\n\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\n\nReturn type\n\nLamina\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.use_nodal_thicknesses.html#use_nodal_thicknesses","title":"use_nodal_thicknesses","text":"use_nodal_thicknesses\n\n\n\nproperty Model.use_nodal_thicknesses: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.html#cutoffselectionrule","title":"CutOffSelectionRule","text":"CutOffSelectionRule\n\n\n\nclass ansys.acp.core.CutOffSelectionRule(*, name='CutOffSelectionrule', cut_off_rule_type='geometry', cut_off_geometry=None, taper_edge_set=None, offset=0.0, angle=0.0, ply_cut_off_type='production_ply_cutoff', ply_tapering=False)\n\nInstantiate a Cut-Off Selection Rule.\n\nParameters\n\nname (str) – Name of the Cut-Off Selection Rule.\n\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\n\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\n\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\n\nangle (float) – Defines the angle between the cutting plane and the reference surface.\n\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\n\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.html#examples-using-cutoffselectionrule","title":"CutOffSelectionRule > Examples using CutOffSelectionRule","text":"Examples using CutOffSelectionRule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isupper.html#isupper","title":"isupper","text":"isupper\n\n\n\nLaunchMode.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string."},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes the API of the public PyACP classes, functions,\nand attributes.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_x.html#translation_x","title":"translation_x","text":"translation_x\n\n\n\nCoordinateTransformation.translation_x: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.html#solidmodelnodaldata","title":"SolidModelNodalData","text":"SolidModelNodalData\n\n\n\nclass ansys.acp.core.mesh_data.SolidModelNodalData(node_labels)\n\nRepresents nodal data for a Solid Model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty ParallelSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.distance_along_edge.html#distance_along_edge","title":"distance_along_edge","text":"distance_along_edge\n\n\n\nproperty VariableOffsetSelectionRule.distance_along_edge: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.reference_direction.html#reference_direction","title":"reference_direction","text":"reference_direction\n\n\n\nProductionPlyElementalData.reference_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.active.html#active","title":"active","text":"active\n\n\n\nproperty InterfaceLayer.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.THICKNESS_GEOMETRY.html#thickness_geometry","title":"THICKNESS_GEOMETRY","text":"THICKNESS_GEOMETRY\n\n\n\nExampleKeys.THICKNESS_GEOMETRY = 9\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData.html#parallelselectionruleelementaldata","title":"ParallelSelectionRuleElementalData","text":"ParallelSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ParallelSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Parallel Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_solsh_elements.html#use_solsh_elements","title":"use_solsh_elements","text":"use_solsh_elements\n\n\n\nproperty SolidModelExportSettings.use_solsh_elements: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty VariableOffsetSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.casefold.html#casefold","title":"casefold","text":"casefold\n\n\n\nPuckMaterialType.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.html#thicknesstype","title":"ThicknessType","text":"ThicknessType\n\n\n\nclass ansys.acp.core.ThicknessType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how ply thickness is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.html#examples-using-thicknesstype","title":"ThicknessType > Examples using ThicknessType","text":"Examples using ThicknessType\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.active.html#active","title":"active","text":"active\n\n\n\nproperty SectionCut.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty Sensor.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty TubeSelectionRule.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_2.html#g23_2","title":"G23_2","text":"G23_2\n\n\n\nproperty VariableWovenCharacterization.G23_2: Any\n\n"},{"objectID":"Home","href":"index.html#limitations","title":"Limitations","text":"Limitations\n\nField definitions are currently only supported through (Py)Mechanical.\nThe workflow from PyACP to (Py)MADL ignores field definitions.\n\nThe PyACP to PyMADL workflow does not fully support variable materials.\n\nThe PyACP to PyMechanical workflow is experimental and has the following limitations:\n\nIt only works on Windows, with a remote (not embedded) PyMechanical session.\n\nOnly one ACP shell or solid model is supported at a time.\n\nNamed selections defined in ACP are not transferred to PyMechanical.\n\nThe ansys.acp.core.mechanical_integration_helpers module may be\nchanged or removed in future versions, when the corresponding features\nare available in PyMechanical directly.\n\nVisualization and mesh data of imported plies are not supported yet.\n\nSection cuts cannot be visualized.\n\nSampling point analysis data is not available.\n\nImported solid model mapping statistics are not available."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.id.html#id","title":"id","text":"id\n\n\n\nproperty LookUpTable3D.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry.html#create_cut_off_geometry","title":"create_cut_off_geometry","text":"create_cut_off_geometry\n\n\n\nSolidModel.create_cut_off_geometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nReturn type\n\nCutOffGeometry\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.create_cut_off_geometry.html#examples-using-solidmodelcreate_cut_off_geometry","title":"create_cut_off_geometry > Examples using SolidModel.create_cut_off_geometry","text":"Examples using SolidModel.create_cut_off_geometry\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.MATERIAL_SPECIFIC.html#material_specific","title":"MATERIAL_SPECIFIC","text":"MATERIAL_SPECIFIC\n\n\n\nPuckMaterialType.MATERIAL_SPECIFIC = 'material-specific'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies.html#modeling_plies","title":"modeling_plies","text":"modeling_plies\n\n\n\nproperty ModelingGroup.modeling_plies: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.modeling_plies.html#examples-using-modelinggroupmodeling_plies","title":"modeling_plies > Examples using ModelingGroup.modeling_plies","text":"Examples using ModelingGroup.modeling_plies\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#pymechanical-solid-workflow","title":"PyMechanical solid workflow","text":"PyMechanical solid workflow\n\nThis example shows how to set up a simple solid model with PyACP and\nPyMechanical:\n\nThe geometry is imported into Mechanical and meshed.\n\nThe mesh is exported to ACP.\n\nA simple lay-up and solid model is defined in ACP.\n\nThe solid model is exported, to a CDB file and a composite definition file.\n\nIn a separate Mechanical instance, the solid model is imported.\n\nMaterials and plies are imported.\n\nBoundary conditions are set.\n\nThe model is solved.\n\nThe results are post-processed in PyDPF - Composites.\n\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\n\nOutputs and plots for this example are not shown in the rendered online\ndocumentation. To see the outputs and plots, run the example script or\nJupyter notebook locally."},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#import-modules-and-start-the-ansys-products","title":"PyMechanical solid workflow > Import modules and start the Ansys products","text":"Import modules and start the Ansys products\n\nImport the standard library and third-party dependencies.\n\nImport PyACP, PyMechanical, and PyDPF - Composites.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel."},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#get-example-input-files","title":"PyMechanical solid workflow > Get example input files","text":"Get example input files\n\nCreate a temporary working directory, and download the example input files\nto this directory."},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#generate-the-mesh-in-pymechanical","title":"PyMechanical solid workflow > Generate the mesh in PyMechanical","text":"Generate the mesh in PyMechanical\n\nLoad the geometry into Mechanical, generate the mesh, and export it to the\nappropriate transfer format for ACP."},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#set-up-the-acp-model","title":"PyMechanical solid workflow > Set up the ACP model","text":"Set up the ACP model\n\nSetup basic ACP lay-up based on the mesh in mesh_path, and export the following\nfiles to output_path:\n\nMaterials XML file\n\nComposite definitions HDF5 file\n\nSolid model composite definitions HDF5 file\n\nSolid model CDB file"},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#update-and-save-the-acp-model","title":"PyMechanical solid workflow > Update and Save the ACP model","text":"Update and Save the ACP model"},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#import-mesh-materials-and-plies-into-mechanical","title":"PyMechanical solid workflow > Import mesh, materials and plies into Mechanical","text":"Import mesh, materials and plies into Mechanical\n\nImport geometry, mesh, and named selections into Mechanical\n\nImport materials into Mechanical\n\nImport plies into Mechanical"},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#set-boundary-condition-and-solve","title":"PyMechanical solid workflow > Set boundary condition and solve","text":"Set boundary condition and solve\n\nSet boundary condition and solve"},{"objectID":"Home","href":"examples/workflows/04-pymechanical-solid-workflow.html#postprocess-results","title":"PyMechanical solid workflow > Postprocess results","text":"Postprocess results\n\nEvaluate the failure criteria using the PyDPF - Composites.\n\n\n\nDownload Jupyter notebook: 04-pymechanical-solid-workflow.ipynb\n\nDownload Python source code: 04-pymechanical-solid-workflow.py\n\nDownload zipped: 04-pymechanical-solid-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData.html#booleanselectionrulenodaldata","title":"BooleanSelectionRuleNodalData","text":"BooleanSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.BooleanSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Boolean Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_ratio.html#fracture_toughness_ratio","title":"fracture_toughness_ratio","text":"fracture_toughness_ratio\n\n\n\nproperty ConstantLaRCConstants.fracture_toughness_ratio: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.rotation_angle_z.html#rotation_angle_z","title":"rotation_angle_z","text":"rotation_angle_z\n\n\n\nCoordinateTransformation.rotation_angle_z: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.recursive_copy.html#recursive_copy","title":"recursive_copy","text":"recursive_copy\n\n\n\nansys.acp.core.recursive_copy(*, source_objects, parent_mapping, linked_object_handling='keep')\n\nRecursively copy a tree of ACP objects.\n\nThis function copies a tree of ACP objects, starting from the given source objects.\nThe copied tree includes all child objects. Linked objects (such as a Fabric linked to\nby a Modeling Ply) can optionally be included, controlled by the\nlinked_object_handling argument.\n\nTo specify where the new objects should be stored, you must provide a dictionary\nin the parent_mapping argument. The keys of the dictionary are the original\nparent objects, and the values are the new parent objects.\nNote that this mapping may need to contain parent objects that are not direct parents\nof the source objects, if another branch of the tree is included via linked objects.\n\nThe parent_mapping argument can also include objects which are part of the\nsource_objects list. In this case, the function will not create a new object for\nthe parent, but will use the existing object instead.\n\nThe function returns a dict mapping the original objects to the newly created\nobjects.\n\nOnly attributes supported by PyACP are copied to the new objects.\n\nParameters\n\nsource_objects (Iterable[CreatableTreeObject]) – The starting point of the tree to copy.\n\nparent_mapping (dict[TreeObject, TreeObject]) – A list of tuples defining where the new objects are stored. Each tuple contains\nthe original parent object as the first element and the new parent object as the\nsecond element.\n\nlinked_object_handling (LinkedObjectHandling | str) – Defines how linked objects are handled. An example of a linked object is a Fabric\nlinked to by a Modeling Ply.The following options are available:\"keep\": Keep linking to the original objects, and do not\ncopy them (unless they are otherwise included in the tree).\n\n\"copy\": Copy the linked objects, and replace the links.\n\n\"discard\": Discard object links.Note that when copying objects between two models, only the \"copy\" and\n\"discard\" options are valid. If you wish to use links to existing objects,\nthe \"copy\" option can be used, specifying how links should be replaced in\nthe parent_mapping argument.\n\nReturns\n\nA mapping of the newly created objects. The keys are the original objects,\nand the values are the new objects.\n\nReturn type\n\ndict[CreatableTreeObject, CreatableTreeObject]\n\nExamples\n\nTo copy all Modeling Groups and associated definitions from one model to another,\nyou can use the following code:\n\nTo copy all definitions from one model to another, you can use the following code:"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule.html#create_boolean_selection_rule","title":"create_boolean_selection_rule","text":"create_boolean_selection_rule\n\n\n\nModel.create_boolean_selection_rule(*, name='BooleanSelectionrule', selection_rules=(), include_rule=True)\n\nInstantiate a Boolean Selection Rule.\n\nParameters\n\nname (str) – Name of the Boolean Selection Rule.\n\nselection_rules (Iterable[LinkedSelectionRule])\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nBooleanSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_boolean_selection_rule.html#examples-using-modelcreate_boolean_selection_rule","title":"create_boolean_selection_rule > Examples using Model.create_boolean_selection_rule","text":"Examples using Model.create_boolean_selection_rule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh.html#refresh","title":"refresh","text":"refresh\n\n\n\nImportedSolidModel.refresh(path, format=None)\n\nRe-import the solid model from the external file.\n\nParameters\n\npath (str | PathLike[str]) – Path of the new input file.\n\nformat (SolidModelImportFormat | None) – Switch format of the input file. Optional, uses the current format of the\nimported solid model if not specified."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.refresh.html#examples-using-importedsolidmodelrefresh","title":"refresh > Examples using ImportedSolidModel.refresh","text":"Examples using ImportedSolidModel.refresh\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.html#lookuptable3dinterpolationalgorithm","title":"LookUpTable3DInterpolationAlgorithm","text":"LookUpTable3DInterpolationAlgorithm\n\n\n\nclass ansys.acp.core.LookUpTable3DInterpolationAlgorithm(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the interpolation algorithm used for 3D look-up tables.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.spherical_selection_rules.html#spherical_selection_rules","title":"spherical_selection_rules","text":"spherical_selection_rules\n\n\n\nproperty Model.spherical_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty SectionCut.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.USER_DEFINED.html#user_defined","title":"USER_DEFINED","text":"USER_DEFINED\n\n\n\nExtrusionMethod.USER_DEFINED = 'user_defined'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.html#baseelementmaterialhandling","title":"BaseElementMaterialHandling","text":"BaseElementMaterialHandling\n\n\n\nclass ansys.acp.core.BaseElementMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines how the base material is handled where it intersects with a reinforcing element.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.offset.html#offset","title":"offset","text":"offset\n\n\n\nproperty CADGeometry.offset: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.extrusion_guides.html#extrusion_guides","title":"extrusion_guides","text":"extrusion_guides\n\n\n\nproperty SolidModel.extrusion_guides: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.price.html#price","title":"price","text":"price\n\n\n\nproperty Sensor.price: Any\n\nThe price for the composite layup of the selected entity. The price per area is defined on the Fabrics or Stackups."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.global_ply_nr.html#global_ply_nr","title":"global_ply_nr","text":"global_ply_nr\n\n\n\nproperty InterfaceLayer.global_ply_nr: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.transverse_direction.html#transverse_direction","title":"transverse_direction","text":"transverse_direction\n\n\n\nModelingPlyElementalData.transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP.html#top","title":"TOP","text":"TOP\n\n\n\nSnapToGeometryOrientationType.TOP = 'top'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.TOP.html#examples-using-snaptogeometryorientationtypetop","title":"TOP > Examples using SnapToGeometryOrientationType.TOP","text":"Examples using SnapToGeometryOrientationType.TOP\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessFieldType.html#thicknessfieldtype","title":"ThicknessFieldType","text":"ThicknessFieldType\n\n\n\nclass ansys.acp.core.ThicknessFieldType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how thickness from a table is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.active.html#active","title":"active","text":"active\n\n\n\nproperty SnapToGeometry.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.html#puckmaterialtype","title":"PuckMaterialType","text":"PuckMaterialType\n\n\n\nclass ansys.acp.core.material_property_sets.PuckMaterialType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nPossible Puck material types.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.MIDDLE_OFFSET.html#middle_offset","title":"MIDDLE_OFFSET","text":"MIDDLE_OFFSET\n\n\n\nOffsetType.MIDDLE_OFFSET = 'middle_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.stackups.html#stackups","title":"stackups","text":"stackups\n\n\n\nproperty Model.stackups: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.dir2.html#dir2","title":"dir2","text":"dir2\n\n\n\nproperty Rosette.dir2: Any\n\n"},{"objectID":"Home","href":"api/other_utils.html#other-utilities","title":"Other utilities","text":"Other utilities\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yc.html#yc","title":"Yc","text":"Yc\n\n\n\nproperty VariableStressLimits.Yc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.islower.html#islower","title":"islower","text":"islower\n\n\n\nLaunchMode.islower(/)\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty VariableOffsetSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.license_server.html#license_server","title":"license_server","text":"license_server\n\n\n\nDockerComposeLaunchConfig.license_server: str = ''\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.clone.html#clone","title":"clone","text":"clone\n\n\n\nFabric.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty EdgeSet.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxz.html#esxz","title":"eSxz","text":"eSxz\n\n\n\nproperty VariableStrainLimits.eSxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.status.html#status","title":"status","text":"status\n\n\n\nproperty ButtJointSequence.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.warping_limit.html#warping_limit","title":"warping_limit","text":"warping_limit\n\n\n\nproperty SolidModel.warping_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E3.html#e3","title":"E3","text":"E3\n\n\n\nproperty ConstantEngineeringConstants.E3: Any\n\n"},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#imported-solid-model","title":"Imported solid model","text":"Imported solid model\n\nThis example guides you through the definition of an ImportedSolidModel\nwhich allows to map the layup onto an external solid mesh.\nIn contrast to the SolidModel, the raw solid mesh of\nImportedSolidModel is loaded from an external source, such as a CDB file.\nIn this example, the layup is applied onto a t-joint which consists of different\nparts such as shell, stringer, and bonding skins.\nThe example only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\n\nThis example starts from an ACP model with layup. It shows how to:\n\nCreate an ImportedSolidModel from an external mesh.\n\nDefine the LayupMappingObject to apply the layup onto the solid mesh.\n\nScope plies to specific parts of the solid mesh.\n\nVisualize the mapped layup.\n\nIt is recommended to look at the Ansys help for all the details. This example shows the\nbasic setup only.\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#start-acp-and-load-the-model","title":"Imported solid model > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nLoad the model from an acph5 file"},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#import-external-solid-model","title":"Imported solid model > Import external solid model","text":"Import external solid model\n\nGet the solid mesh file and create an ImportedSolidModel,\nload the initial mesh and show the raw mesh without any mapping.\n\nWhen plotting quadratic meshes with edges, PyVista shows internal (false) edges.\nTo avoid this, you can use the .extract_surface(nonlinear_subdivision=0) call\nto extract a linearized surface.\nAlternatively, you can use .separate_cells().extract_feature_edges() to\nobtain the edges as a separate pyvista.PolyData object.\n\nFor more information, see this PyVista discussion:\nhttps://github.com/pyvista/pyvista/discussions/5777\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nThe solid element sets are used as target for the mapping later.\nHere is the full list and one is visualized.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#add-mapping-objects","title":"Imported solid model > Add mapping objects","text":"Add mapping objects\n\nLink the layup (plies) of the top skin of the sandwich\nwith the corresponding named selections of the solid mesh\nand show the updated solid model.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nShow the mass of the solid model elements\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nAdd other mapping objects\n\nShow intermediate result\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nThe mapping can also be done for specific plies\nas shown for the core materials.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nAdd filler mapping objects where the solid mesh is “filled”\nwith a single material. No plies from the layup are used here.\n\nShow final solid mesh with mapped layup\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#show-extent-and-thickness-of-mapped-plies","title":"Imported solid model > Show extent and thickness of mapped plies","text":"Show extent and thickness of mapped plies\n\nUse print_model() to get the list of plies. After identifying the ply\nof interest, for example the thickness can be visualized. Note that\nonly ply-wise data of AnalysisPly can be visualized on the\nsolid mesh. ProductionPly and ModelingPly cannot\nbe visualized on the solid mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/031-imported-solid-model.html#other-features","title":"Imported solid model > Other features","text":"Other features\n\nThe CutOffGeometry can be used in combination witt the ImportedSolidModel\nas well. See example solid_model_example for more details.\nMore plotting capabilities are shown in the example solid_model_example as well.\n\nAn example of an ImportedSolidModel in combination with ImportedModelingPly\nis shown in imported_plies_example.\n\nThe solid mesh can be exported as CDB for MAPDL or to PyMechanical for further analysis.\nThese workflows are shown in pymapdl_workflow_example and\npymechanical_solid_example.\n\nTotal running time of the script: (0 minutes 17.640 seconds)\n\n\n\nDownload Jupyter notebook: 031-imported-solid-model.ipynb\n\nDownload Python source code: 031-imported-solid-model.py\n\nDownload zipped: 031-imported-solid-model.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.element_sets.html#element_sets","title":"element_sets","text":"element_sets\n\n\n\nproperty Model.element_sets: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.element_sets.html#examples-using-modelelement_sets","title":"element_sets > Examples using Model.element_sets","text":"Examples using Model.element_sets\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_modeling_group.html#create_modeling_group","title":"create_modeling_group","text":"create_modeling_group\n\n\n\nModel.create_modeling_group(*, name='ModelingGroup')\n\nInstantiate a modeling group.\n\nParameters\n\nname (str) – Name of the modeling group.\n\nReturn type\n\nModelingGroup\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_modeling_group.html#examples-using-modelcreate_modeling_group","title":"create_modeling_group > Examples using Model.create_modeling_group","text":"Examples using Model.create_modeling_group\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.name.html#name","title":"name","text":"name\n\n\n\nproperty CADComponent.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ModelingGroup.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.IGNORED.html#ignored","title":"IGNORED","text":"IGNORED\n\n\n\nPuckMaterialType.IGNORED = 'ignored'\n\n"},{"objectID":"Home","href":"examples/modeling_features/010-sandwich-panel-layup.html#sandwich-panel","title":"Sandwich panel","text":"Sandwich panel\n\nThis example defines a composite lay-up for a sandwich panel using PyACP.\nIt only shows the PyACP part of the setup. For a complete composite analysis,\nsee pymapdl_workflow_example.\n\n\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/010-sandwich-panel-layup.html#start-acp-and-load-the-model","title":"Sandwich panel > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the ACP server and connect to it.\n\nDefine the input file and import it into ACP.\n\nVisualize the loaded mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/010-sandwich-panel-layup.html#create-the-sandwich-materials","title":"Sandwich panel > Create the sandwich materials","text":"Create the sandwich materials\n\nCreate the UD material and  its corresponding fabric.\n\nCreate a multi-axial stackup and a sublaminate. Stackups and sublaminates help quickly\nbuild repeating laminates.\n\nCreate the core material and its corresponding fabric."},{"objectID":"Home","href":"examples/modeling_features/010-sandwich-panel-layup.html#create-the-lay-up","title":"Sandwich panel > Create the Lay-up","text":"Create the Lay-up\n\nDefine a rosette and oriented selection set. Plot the orientations.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nCreate the modeling plies which define the lay-up of the sandwich panel.\n\nUpdate and print the model.\n\nTotal running time of the script: (0 minutes 6.407 seconds)\n\n\n\nDownload Jupyter notebook: 010-sandwich-panel-layup.ipynb\n\nDownload Python source code: 010-sandwich-panel-layup.py\n\nDownload zipped: 010-sandwich-panel-layup.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty ExtrusionGuide.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.is_remote.html#is_remote","title":"is_remote","text":"is_remote\n\n\n\nproperty ACPInstance.is_remote: bool\n\nWhether the server is remote or local."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT.html#layered_element","title":"LAYERED_ELEMENT","text":"LAYERED_ELEMENT\n\n\n\nElementTechnology.LAYERED_ELEMENT = 'layered_element'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementTechnology.LAYERED_ELEMENT.html#examples-using-elementtechnologylayered_element","title":"LAYERED_ELEMENT > Examples using ElementTechnology.LAYERED_ELEMENT","text":"Examples using ElementTechnology.LAYERED_ELEMENT\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae.html#export_hdf5_composite_cae","title":"export_hdf5_composite_cae","text":"export_hdf5_composite_cae\n\n\n\nModel.export_hdf5_composite_cae(path, *, remove_midside_nodes=True, layup_representation_3d=False, offset_type='bottom_offset', all_elements=True, element_sets=(), all_plies=True, plies=(), ascii_encoding=False)\n\nExport the lay-up to the HDF5 Composite CAE format.\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nremove_midside_nodes (bool) – If True, remove mid-side nodes from the exported mesh. This increases the\noverall performance.\n\nlayup_representation_3d (bool) – If True, the 3D representation of the lay-up is computed, and the offset ply\nsurfaces are exported.\n\noffset_type (OffsetType) – Defines if the bottom, mid, or top surface of the plies is exported.\nOnly used if layup_representation_3d is True.\n\nall_elements (bool) – Whether to limit the export to some user-defined element sets or not.\n\nelement_sets (Sequence[ElementSet | OrientedSelectionSet]) – Only plies defined on the selected element sets or oriented selection\nsets will be exported.\nUsed only if all_elements is False.\n\nall_plies (bool) – Whether to export all plies or a user-defined set.\n\nplies (Sequence[ModelingGroup | ModelingPly]) – User-defined set of Modeling Plies and/or Modeling Groups.\nUsed only if all_plies is False.\n\nascii_encoding (bool) – If True, use ASCII encoding when writing text attributes to the HDF5 CAE\nfile. This may be needed for compatibility with programs that don’t fully\nsupport unicode when reading the file."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_hdf5_composite_cae.html#examples-using-modelexport_hdf5_composite_cae","title":"export_hdf5_composite_cae > Examples using Model.export_hdf5_composite_cae","text":"Examples using Model.export_hdf5_composite_cae\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.id.html#id","title":"id","text":"id\n\n\n\nproperty EdgeSet.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.format.html#format","title":"format","text":"format\n\n\n\nLaunchMode.format(*args, **kwargs) -> str\n\nReturn a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffType.html#dropofftype","title":"DropOffType","text":"DropOffType\n\n\n\nclass ansys.acp.core.DropOffType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines whether the drop off in solid models is inside or outside the ply boundary.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rsplit.html#rsplit","title":"rsplit","text":"rsplit\n\n\n\nLaunchMode.rsplit(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.html#constantdensity","title":"ConstantDensity","text":"ConstantDensity\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantDensity(*, rho=0.0, _parent_object=None, _attribute_path=None)\n\nConstant density material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantDensity.html#examples-using-constantdensity","title":"ConstantDensity > Examples using ConstantDensity","text":"Examples using ConstantDensity\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nOrientedSelectionSetElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.ORIENTATION.html#orientation","title":"ORIENTATION","text":"ORIENTATION\n\n\n\nElementalDataType.ORIENTATION = 'orientation'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.delete.html#delete","title":"delete","text":"delete\n\n\n\nModelingGroup.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.material.html#material","title":"material","text":"material\n\n\n\nproperty ImportedAnalysisPly.material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Syz.html#syz","title":"Syz","text":"Syz\n\n\n\nproperty VariableWovenStressLimits.Syz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty OrientedSelectionSet.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.element_index.html#element_index","title":"element_index","text":"element_index\n\n\n\nproperty SolidModelExportSettings.element_index: Any\n\n"},{"objectID":"Home","href":"user_guide/howto/launch_configuration.html#change-acp-startup","title":"Change ACP startup","text":"Change ACP startup\n\nBy default, the launch_acp() function will start ACP from the unified installer, using the latest available version."},{"objectID":"Home","href":"user_guide/howto/launch_configuration.html#change-the-default-launch-configuration","title":"Change ACP startup > Change the default launch configuration","text":"Change the default launch configuration\n\nTo change this behavior, you can use the ansys-launcher command line tool to configure how ACP is started.\n\nThe virtual environment in which PyACP is installed must be activated before running the ansys-launcher command.\n\nOn Windows, the executable may be called ansys-launcher.exe.\n\nAs indicated in the preceding output, three methods are available for starting ACP:\n\ndirect: Start ACP directly by providing the path to the acp_grpcserver executable.\n\ndocker_compose: Start ACP using Docker Compose.\n\nconnect: Connect to an already running ACP server.\n\nYou may configure any of the three methods with the ansys-launcher tool. For example, to use the\ndirect method, run the following command:\n\nThe tool prompts you for the required information, providing the default value\nin square brackets. You can accept the default value by pressing the Enter key or input a\nnew value by typing it and then pressing the Enter key.\n\nThe new configuration is used by the launch_acp() function. Note that you\nmay have to restart your Python session for the changes to take effect."},{"objectID":"Home","href":"user_guide/howto/launch_configuration.html#choose-the-launch-mode-at-runtime","title":"Change ACP startup > Choose the launch mode at runtime","text":"Choose the launch mode at runtime\n\nTo switch between the launch modes, you can specify the launch_mode argument\nwhen calling the launch_acp() function. Note that the selected launch mode must already\nbe configured with the ansys-launcher tool.\n\nYou may use the config parameter to fully customize the launch of ACP at runtime.\nThis parameter expects a configuration object matching the selected launch_mode:\n\nDirectLaunchConfig for the direct launch mode.\n\nDockerComposeLaunchConfig for the docker_compose launch mode.\n\nConnectLaunchConfig for the connect launch mode.\n\nConnectLocalLaunchConfig for the connect_local launch mode."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.COORDINATES.html#coordinates","title":"COORDINATES","text":"COORDINATES\n\n\n\nElementalDataType.COORDINATES = 'coordinates'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.export_settings.html#export_settings","title":"export_settings","text":"export_settings\n\n\n\nproperty SolidModel.export_settings: AttribT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty CylindricalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_seed_point.html#draping_seed_point","title":"draping_seed_point","text":"draping_seed_point\n\n\n\nproperty OrientedSelectionSet.draping_seed_point: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.html#variabletsaiwuconstants","title":"VariableTsaiWuConstants","text":"VariableTsaiWuConstants\n\n\n\nclass ansys.acp.core.material_property_sets.VariableTsaiWuConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable Tsai-Wu constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.radius.html#radius","title":"radius","text":"radius\n\n\n\nproperty SphericalSelectionRule.radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.clone.html#clone","title":"clone","text":"clone\n\n\n\nSectionCut.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.analysis_plies.html#analysis_plies","title":"analysis_plies","text":"analysis_plies\n\n\n\nproperty SolidModel.analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.analysis_plies.html#examples-using-solidmodelanalysis_plies","title":"analysis_plies > Examples using SolidModel.analysis_plies","text":"Examples using SolidModel.analysis_plies\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-tree-objects","title":"Copy tree objects","text":"Copy tree objects\n\nThe recursive_copy() function is a powerful tool for copying ACP tree objects. It allows you to:\n\ncopy objects within the same model or across models\n\ncopy the entire layup, or just a specific branch of the model tree\n\ncontrol how links between objects are handled\n\nThe following sections explain the parameters of the recursive_copy() function by applying them to an example model."},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-to-the-same-model","title":"Copy tree objects > Copy to the same model","text":"Copy to the same model\n\nThis section shows how to use recursive_copy() to duplicate objects within the same ACP model."},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#model-setup","title":"Copy tree objects > Model setup","text":"Model setup\n\nTo get started, launch an ACP instance and load a model:\n\nCode:\n\nThe model structure is as follows:\n\nCode:\n\nOutput:\n\nAt the start of each example, the model is deleted and rel-loaded to get back to the initial state:\n\nCode:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-one-object","title":"Copy tree objects > Copy one object","text":"Copy one object\n\nThe objects to be copied are passed to recursive_copy() in the source_objects parameter. For example, the following code copies the fabric Fabric.1:\n\nCode:\n\nOutput:\n\nThe return value of recursive_copy() is a dictionary that maps the pre-existing objects to their newly created copies. In the code above, this is used to print what has been copied.\n\nThe model now has the following structure:\n\nCode:\n\nOutput:\n\nThe linked_object_handling=\"keep\" parameter indicates that links from the fabric to other objects in the tree should be preserved. This means that the new fabric will still have the same material assigned:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#discard-object-links","title":"Copy tree objects > Discard object links","text":"Discard object links\n\nCode:\n\nTo instead discard links between the copied objects and other objects in the tree, set the linked_object_handling parameter to discard. For example, the following code copies the fabric Fabric.1 and discards its link to the material:\n\nCode:\n\nOutput:\n\nThe fabric Fabric.2 does not have a material assigned:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-multiple-objects","title":"Copy tree objects > Copy multiple objects","text":"Copy multiple objects\n\nCode:\n\nThe source_objects parameter can include multiple objects. The following example copies the fabric Fabric.1 and the element set All_Elements:\n\nCode:\n\nOutput:\n\nThis is the model tree after copying:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-an-object-and-its-children","title":"Copy tree objects > Copy an object and its children","text":"Copy an object and its children\n\nCode:\n\nWhen an object has children in the ACP model tree, these are automatically included in the copy. The following example copies the modeling group ModelingGroup.1 and its children:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:\n\nYou may notice that the production and analysis plies have not been copied. This is because these are read-only objects which are generated on update. After a model update, they are present:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-to-a-different-location","title":"Copy tree objects > Copy to a different location","text":"Copy to a different location\n\nCode:\n\nThe parent_mapping parameter controls where in the model tree the copied objects are placed. The keys of the dictionary are the original parent objects, and the values are the new parent objects. This means that children of the original parent will be copied to the new parent.\n\nThe key and value of the parent_mapping dictionary must generally (with some exceptions) be of the same type. For example, a ModelingPly object always has a ModelingGroup as its parent. For more details, consult the feature_tree section of the user guide.\n\nThe following example copies a the modeling ply ModelingPly.1 into its own parent, ModelingGroup.1.\n\nCode:\n\nOutput:\n\nThis results in the following model tree:\n\nCode:\n\nOutput:\n\nBy changing the value in the parent_mapping dictionary, you can instead copy it to a new modeling group:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-linked-objects","title":"Copy tree objects > Copy linked objects","text":"Copy linked objects\n\nCode:\n\nInstead of keeping or discarding links to other objects, you can also copy the linked objects. This is done by setting the linked_object_handling parameter to copy. The following example copies the fabric Fabric.1 and its linked material Structural Steel:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:\n\nThe copied fabric uses the copied material:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-linked-objects-recursively","title":"Copy tree objects > Copy linked objects recursively","text":"Copy linked objects recursively\n\nCode:\n\nThe copy of linked objects is recursive. In the following example, the modeling group ModelingGroup.1 is used as a source object. Since its child modeling ply ModelingPly.1 has a linked fabric, this fabric and its linked material are also copied. Similarly, the oriented selection set and its linked element set and rosette are copied:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#control-the-copy-of-linked-objects","title":"Copy tree objects > Control the copy of linked objects","text":"Control the copy of linked objects\n\nCode:\n\nTo avoid copying a specific linked object, you can add it (as both key and value) to the parent_mapping dictionary. The following example copies the modeling group ModelingGroup.1 and its children, but does not copy the material Structural Steel and rosette Global Coordinate System:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-to-a-different-model","title":"Copy tree objects > Copy to a different model","text":"Copy to a different model\n\nCopying objects to a different model works exactly the same as within the same model, with one exception: Since the linked objects do not exist on the target model, linked_object_handling=\"keep\" is not allowed. Only linked_object_handling=\"discard\" and linked_object_handling=\"copy\" are possible."},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#model-setup","title":"Copy tree objects > Model setup","text":"Model setup\n\nFor the subsequent examples, a second model is created:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#copy-the-entire-layup","title":"Copy tree objects > Copy the entire layup","text":"Copy the entire layup\n\nThe following example copies all tree objects from the source model to the target model. All children of the source_model are copied, but the model itself is not copied since it is present in the parent_mapping dictionary:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"user_guide/howto/copy_objects.html#control-the-copy-of-linked-objects","title":"Copy tree objects > Control the copy of linked objects","text":"Control the copy of linked objects\n\nCode:\n\nAs with the copy within the same model, the parent_mapping dictionary can be used to limit the copy of linked objects. The following example copies the entire layup, except for the material Structural Steel, element set All_Elements, edge set ns_edge, and rosette Global Coordinate System:\n\nCode:\n\nOutput:\n\nCode:\n\nOutput:"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_top_sets.html#drop_off_disabled_on_top_sets","title":"drop_off_disabled_on_top_sets","text":"drop_off_disabled_on_top_sets\n\n\n\nproperty DropOffSettings.drop_off_disabled_on_top_sets: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty CylindricalSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty SamplingPoint.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group.html#create_imported_modeling_group","title":"create_imported_modeling_group","text":"create_imported_modeling_group\n\n\n\nModel.create_imported_modeling_group(*, name='ImportedModelingGroup')\n\nInstantiate an imported modeling group.\n\nParameters\n\nname (str) – Name of the imported modeling group.\n\nReturn type\n\nImportedModelingGroup\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_imported_modeling_group.html#examples-using-modelcreate_imported_modeling_group","title":"create_imported_modeling_group > Examples using Model.create_imported_modeling_group","text":"Examples using Model.create_imported_modeling_group\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets.html#solid_element_sets","title":"solid_element_sets","text":"solid_element_sets\n\n\n\nproperty ImportedSolidModel.solid_element_sets: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.solid_element_sets.html#examples-using-importedsolidmodelsolid_element_sets","title":"solid_element_sets > Examples using ImportedSolidModel.solid_element_sets","text":"Examples using ImportedSolidModel.solid_element_sets\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eYt.html#eyt","title":"eYt","text":"eYt\n\n\n\nproperty VariableStrainLimits.eYt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.TOP_OFFSET.html#top_offset","title":"TOP_OFFSET","text":"TOP_OFFSET\n\n\n\nOffsetType.TOP_OFFSET = 'top_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XZ.html#xz","title":"XZ","text":"XZ\n\n\n\nproperty ConstantTsaiWuConstants.XZ: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ElementSet.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.selection_rules.html#selection_rules","title":"selection_rules","text":"selection_rules\n\n\n\nproperty ModelingPly.selection_rules: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.selection_rules.html#examples-using-modelingplyselection_rules","title":"selection_rules > Examples using ModelingPly.selection_rules","text":"Examples using ModelingPly.selection_rules\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty ParallelSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nImportedSolidModelElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DirectLaunchConfig.binary_path.html#binary_path","title":"binary_path","text":"binary_path\n\n\n\nDirectLaunchConfig.binary_path: str = ''\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty GeometricalSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SamplingPoint.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY.html#odd_symmetry","title":"ODD_SYMMETRY","text":"ODD_SYMMETRY\n\n\n\nSymmetryType.ODD_SYMMETRY = 'odd_symmetry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.ODD_SYMMETRY.html#examples-using-symmetrytypeodd_symmetry","title":"ODD_SYMMETRY > Examples using SymmetryType.ODD_SYMMETRY","text":"Examples using SymmetryType.ODD_SYMMETRY\n\nsphx_glr_examples_modeling_features_001-materials.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty SectionCut.tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nOrientedSelectionSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.delete.html#delete","title":"delete","text":"delete\n\n\n\nElementSet.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.RULE_GEOMETRY_TRIANGLE.html#rule_geometry_triangle","title":"RULE_GEOMETRY_TRIANGLE","text":"RULE_GEOMETRY_TRIANGLE\n\n\n\nExampleKeys.RULE_GEOMETRY_TRIANGLE = 8\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.drop_hanging_nodes.html#drop_hanging_nodes","title":"drop_hanging_nodes","text":"drop_hanging_nodes\n\n\n\nproperty ImportedSolidModelExportSettings.drop_hanging_nodes: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule.html#create_variable_offset_selection_rule","title":"create_variable_offset_selection_rule","text":"create_variable_offset_selection_rule\n\n\n\nModel.create_variable_offset_selection_rule(*, name='VariableOffsetSelectionrule', edge_set=None, offsets=None, angles=None, include_rule=True, use_offset_correction=False, element_set=None, inherit_from_lookup_table=True, radius_origin=(0.0, 0.0, 0.0), radius_direction=(1.0, 0.0, 0.0), distance_along_edge=False)\n\nInstantiate a Variable Offset Selection Rule.\n\nParameters\n\nname (str) – Name of the Variable Offset Selection Rule.\n\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\n\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\n\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\n\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\n\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\n\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\n\nReturn type\n\nVariableOffsetSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_variable_offset_selection_rule.html#examples-using-modelcreate_variable_offset_selection_rule","title":"create_variable_offset_selection_rule > Examples using Model.create_variable_offset_selection_rule","text":"Examples using Model.create_variable_offset_selection_rule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.name.html#name","title":"name","text":"name\n\n\n\nproperty ExtrusionGuide.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.delete.html#delete","title":"delete","text":"delete\n\n\n\nMaterial.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.html#symmetrytype","title":"SymmetryType","text":"SymmetryType\n\n\n\nclass ansys.acp.core.SymmetryType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the symmetry of stackups or sublaminates.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.html#examples-using-symmetrytype","title":"SymmetryType > Examples using SymmetryType","text":"Examples using SymmetryType\n\nsphx_glr_examples_modeling_features_001-materials.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nBooleanSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffRuleType.TAPER.html#taper","title":"TAPER","text":"TAPER\n\n\n\nCutOffRuleType.TAPER = 'taper'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty LayupMappingObject.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.shell_element_sets.html#shell_element_sets","title":"shell_element_sets","text":"shell_element_sets\n\n\n\nproperty LayupMappingObject.shell_element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingMaterialModel.UD.html#ud","title":"UD","text":"UD\n\n\n\nDrapingMaterialModel.UD = 'ud'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.offset.html#offset","title":"offset","text":"offset\n\n\n\nproperty CutOffSelectionRule.offset: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableStrainLimits.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.NodalDataType.html#nodaldatatype","title":"NodalDataType","text":"NodalDataType\n\n\n\nclass ansys.acp.core.NodalDataType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of per-node data.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.MPA.html#mpa","title":"MPA","text":"MPA\n\n\n\nUnitSystemType.MPA = 'mpa'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.MPA.html#examples-using-unitsystemtypempa","title":"MPA > Examples using UnitSystemType.MPA","text":"Examples using UnitSystemType.MPA\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty CylindricalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nCutOffSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty VariableOffsetSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.DIRECT.html#direct","title":"DIRECT","text":"DIRECT\n\n\n\nLaunchMode.DIRECT = 'direct'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.area_weight.html#area_weight","title":"area_weight","text":"area_weight\n\n\n\nproperty Stackup.area_weight: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.html#edgeset","title":"EdgeSet","text":"EdgeSet\n\n\n\nclass ansys.acp.core.EdgeSet(*, name='EdgeSet', edge_set_type='by_reference', defining_node_labels=(), element_set=None, limit_angle=-1.0, origin=(0.0, 0.0, 0.0))\n\nInstantiate an edge set.\n\nParameters\n\nname (str) – Name of the edge set.\n\nedge_set_type (EdgeSetType) – Determines how the edge set is defined. Can be one of:EdgeSetType.BY_REFERENCE: define the edge set using an ElementSet.\n\nEdgeSetType.BY_NODES: define the edge set using a list of node labels.\n\ndefining_node_labels (Collection[int]) – Labels of the nodes in the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_NODES.\n\nelement_set (ElementSet | None) – The boundary of this element set defines the initial\nedge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nlimit_angle (float) – The edge set is cropped if the angle between two element edges exceeds this limits (in degrees).\nUse -1. to disable cropping.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\norigin (tuple[float, float, float]) – Defines the starting point of the edge set.\nThis parameter only applies when edge_set_type is EdgeSetType.BY_REFERENCE.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.html#examples-using-edgeset","title":"EdgeSet > Examples using EdgeSet","text":"Examples using EdgeSet\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.imported_solid_models.html#imported_solid_models","title":"imported_solid_models","text":"imported_solid_models\n\n\n\nproperty Model.imported_solid_models: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingMaterialModel.html#drapingmaterialmodel","title":"DrapingMaterialModel","text":"DrapingMaterialModel\n\n\n\nclass ansys.acp.core.DrapingMaterialModel(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the material type used in the draping algorithm.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty Rosette.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.UNDEFINED.html#undefined","title":"UNDEFINED","text":"UNDEFINED\n\n\n\nUnitSystemType.UNDEFINED = 'undefined'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G23.html#g23","title":"G23","text":"G23\n\n\n\nproperty ConstantEngineeringConstants.G23: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.status.html#status","title":"status","text":"status\n\n\n\nproperty InterfaceLayer.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.ply_angle.html#ply_angle","title":"ply_angle","text":"ply_angle\n\n\n\nproperty ModelingPly.ply_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.import_model.html#import_model","title":"import_model","text":"import_model\n\n\n\nACPInstance.import_model(path, *, name=None, format='acp:h5', **kwargs)\n\nLoad an ACP model from a file.\n\nParameters\n\nname (str | None) – Name of the newly loaded model.\n\npath (str | PathLike[str]) – Path of the file to be loaded.\n\nformat (str) – Format of the file to be loaded. Can be one of \"acp:h5\",\n\"ansys:h5\", \"ansys:cdb\", \"ansys:dat\", \"abaqus:inp\",\nor \"nastran:bdf\".\n\nignored_entities – Entities to ignore when loading the FE file. Can be a subset of\nthe following values:\n\"coordinate_systems\", \"element_sets\", \"materials\",\n\"mesh\", or \"shell_sections\".\nAvailable only when the format is not \"acp:h5\".\n\nconvert_section_data – Whether to import the section data of a shell model and convert it\ninto ACP composite definitions.\nAvailable only when the format is not \"acp:h5\".\n\nunit_system – Defines the unit system of the imported file. Must be set if the\ninput file does not have units. If the input file does have units,\nunit_system must be either \"from_file\", or match the input\nunit system.\nAvailable only when the format is not \"acp:h5\".\n\nReturns\n\nThe loaded Model instance.\n\nReturn type\n\nModel"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.import_model.html#examples-using-acpinstanceimport_model","title":"import_model > Examples using ACPInstance.import_model","text":"Examples using ACPInstance.import_model\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rstrip.html#rstrip","title":"rstrip","text":"rstrip\n\n\n\nLaunchMode.rstrip(chars=None, /)\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA.html#sensor_by_area","title":"SENSOR_BY_AREA","text":"SENSOR_BY_AREA\n\n\n\nSensorType.SENSOR_BY_AREA = 'sensor_by_area'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.SENSOR_BY_AREA.html#examples-using-sensortypesensor_by_area","title":"SENSOR_BY_AREA > Examples using SensorType.SENSOR_BY_AREA","text":"Examples using SensorType.SENSOR_BY_AREA\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.unit_system.html#unit_system","title":"unit_system","text":"unit_system\n\n\n\nproperty Model.unit_system: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.unit_system.html#examples-using-modelunit_system","title":"unit_system > Examples using Model.unit_system","text":"Examples using Model.unit_system\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_acp.html#url_acp","title":"url_acp","text":"url_acp\n\n\n\nConnectLaunchConfig.url_acp: str = 'localhost:50555'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nBooleanSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingMaterialModel.WOVEN.html#woven","title":"WOVEN","text":"WOVEN\n\n\n\nDrapingMaterialModel.WOVEN = 'woven'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableLaRCConstants.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL.html#spherical","title":"SPHERICAL","text":"SPHERICAL\n\n\n\nRosetteType.SPHERICAL = 'spherical'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.SPHERICAL.html#examples-using-rosettetypespherical","title":"SPHERICAL > Examples using RosetteType.SPHERICAL","text":"Examples using RosetteType.SPHERICAL\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.id.html#id","title":"id","text":"id\n\n\n\nproperty CADGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.check.html#check","title":"check","text":"check\n\n\n\nACPInstance.check(timeout=None)\n\nCheck if the ACP instance is running.\n\nParameters\n\ntimeout (float | None) – Time to wait for the ACP instance to respond, in seconds. Note that\nthere is no guarantee that check returns within this time.\nInstead, this parameter is used as a hint to the underlying\nimplementation.\n\nReturn type\n\nbool"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.orientation_direction.html#orientation_direction","title":"orientation_direction","text":"orientation_direction\n\n\n\nproperty OrientedSelectionSet.orientation_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.cut_off_selection_rules.html#cut_off_selection_rules","title":"cut_off_selection_rules","text":"cut_off_selection_rules\n\n\n\nproperty Model.cut_off_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.active_in_post_mode.html#active_in_post_mode","title":"active_in_post_mode","text":"active_in_post_mode\n\n\n\nproperty ImportedAnalysisPly.active_in_post_mode: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.select_all_plies.html#select_all_plies","title":"select_all_plies","text":"select_all_plies\n\n\n\nproperty LayupMappingObject.select_all_plies: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants.html#from_orthotropic_constants","title":"from_orthotropic_constants","text":"from_orthotropic_constants\n\n\n\nclassmethod ConstantEngineeringConstants.from_orthotropic_constants(*, E1=0.0, E2=0.0, E3=0.0, nu12=0.0, nu23=0.0, nu13=0.0, G12=0.0, G23=0.0, G31=0.0)\n\nCreate an orthotropic engineering constants property set.\n\nParameters\n\nE1 (float) – Young’s modulus in material 1 direction.\n\nE2 (float) – Young’s modulus in material 2 direction.\n\nE3 (float) – Young’s modulus in out-of-plane direction.\n\nnu12 (float) – Poisson’s ratio .\n\nnu23 (float) – Poisson’s ratio .\n\nnu13 (float) – Poisson’s ratio .\n\nG12 (float) – Shear modulus .\n\nG23 (float) – Shear modulus .\n\nG31 (float) – Shear modulus .\n\nReturns\n\nAn orthotropic engineering constants property set.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.from_orthotropic_constants.html#examples-using-constantengineeringconstantsfrom_orthotropic_constants","title":"from_orthotropic_constants > Examples using ConstantEngineeringConstants.from_orthotropic_constants","text":"Examples using ConstantEngineeringConstants.from_orthotropic_constants\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.replace.html#replace","title":"replace","text":"replace\n\n\n\nLaunchMode.replace(old, new, count=-1, /)\n\nReturn a copy with all occurrences of substring old replaced by new.\n\ncount\n\nMaximum number of occurrences to replace.\n-1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are\nreplaced."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.clone.html#clone","title":"clone","text":"clone\n\n\n\nCADGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.html#importedsolidmodelexportsettings","title":"ImportedSolidModelExportSettings","text":"ImportedSolidModelExportSettings\n\n\n\nclass ansys.acp.core.ImportedSolidModelExportSettings(*, use_default_section_index=True, section_index=0, use_default_coordinate_system_index=True, coordinate_system_index=0, use_default_material_index=True, material_index=0, use_default_node_index=True, node_index=0, use_default_element_index=True, element_index=0, use_solsh_elements=False, drop_hanging_nodes=True, use_solid_model_prefix=True, _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the settings for exporting an imported solid model.\n\nParameters\n\nuse_default_section_index (bool) – Use the default start index for sections.\n\nsection_index (int) – Custom start index for sections.\nOnly used if use_default_section_index is False.\n\nuse_default_coordinate_system_index (bool) – Use the default start index for coordinate systems.\n\ncoordinate_system_index (int) – Custom start index for coordinate systems.\nOnly used if use_default_coordinate_system_index is False.\n\nuse_default_material_index (bool) – Use the default start index for materials.\n\nmaterial_index (int) – Custom start index for materials.\nOnly used if use_default_material_index is False.\n\nuse_default_node_index (bool) – Use the default start index for nodes.\n\nnode_index (int) – Custom start index for nodes.\nOnly used if use_default_node_index is False.\n\nuse_default_element_index (bool) – Use the default start index for elements.\n\nelement_index (int) – Custom start index for elements.\nOnly used if use_default_element_index is False.\n\nuse_solsh_elements (bool) – When True, export linear layered elements as Solsh (Solid190).\n\ndrop_hanging_nodes (bool) – When True, the hanging nodes of quadratic solid meshes are dropped.\n\nuse_solid_model_prefix (bool) – Use the imported solid model name as a prefix for the exported file.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty ElementSet.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.mesh.html#examples-using-elementsetmesh","title":"mesh > Examples using ElementSet.mesh","text":"Examples using ElementSet.mesh\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_material_model.html#draping_material_model","title":"draping_material_model","text":"draping_material_model\n\n\n\nproperty OrientedSelectionSet.draping_material_model: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty ImportedAnalysisPly.angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.strip.html#strip","title":"strip","text":"strip\n\n\n\nPuckMaterialType.strip(chars=None, /)\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nAnalysisPlyElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.add_selection_rule.html#add_selection_rule","title":"add_selection_rule","text":"add_selection_rule\n\n\n\nBooleanSelectionRule.add_selection_rule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nAdd a LinkedSelectionRule to the BooleanSelectionRule.\n\nSee LinkedSelectionRule for the available parameters.\n\nReturn type\n\nLinkedSelectionRule"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ProductionPly.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.BOTTOM.html#bottom","title":"BOTTOM","text":"BOTTOM\n\n\n\nSnapToGeometryOrientationType.BOTTOM = 'bottom'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.html#constantstresslimits","title":"ConstantStressLimits","text":"ConstantStressLimits\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantStressLimits(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant stress limits material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty SolidModel.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE.html#minimum_distance","title":"MINIMUM_DISTANCE","text":"MINIMUM_DISTANCE\n\n\n\nLayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE = 'minimum_distance'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE.html#examples-using-layupmappingrosetteselectionmethodminimum_distance","title":"MINIMUM_DISTANCE > Examples using LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE","text":"Examples using LayupMappingRosetteSelectionMethod.MINIMUM_DISTANCE\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.fabric_fiber_angle.html#fabric_fiber_angle","title":"fabric_fiber_angle","text":"fabric_fiber_angle\n\n\n\nproperty VariableFabricFiberAngle.fabric_fiber_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.rosette.html#rosette","title":"rosette","text":"rosette\n\n\n\nproperty CylindricalSelectionRule.rosette: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportFormat.ANSYS_CDB.html#ansys_cdb","title":"ANSYS_CDB","text":"ANSYS_CDB\n\n\n\nSolidModelExportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.nu12.html#nu12","title":"nu12","text":"nu12\n\n\n\nproperty ConstantEngineeringConstants.nu12: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_1.html#e1_1","title":"E1_1","text":"E1_1\n\n\n\nproperty ConstantWovenCharacterization.E1_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.store.html#store","title":"store","text":"store\n\n\n\nFabric.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.id.html#id","title":"id","text":"id\n\n\n\nproperty ModelingPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.weight.html#weight","title":"weight","text":"weight\n\n\n\nproperty Sensor.weight: Any\n\nThe mass of the selected entity."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.section_index.html#section_index","title":"section_index","text":"section_index\n\n\n\nproperty ImportedSolidModelExportSettings.section_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP.html#up","title":"UP","text":"UP\n\n\n\nCutOffGeometryOrientationType.UP = 'up'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.UP.html#examples-using-cutoffgeometryorientationtypeup","title":"UP > Examples using CutOffGeometryOrientationType.UP","text":"Examples using CutOffGeometryOrientationType.UP\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.REFERENCE_DIRECTION.html#reference_direction","title":"REFERENCE_DIRECTION","text":"REFERENCE_DIRECTION\n\n\n\nElementalDataType.REFERENCE_DIRECTION = 'reference_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.ADD.html#add","title":"ADD","text":"ADD\n\n\n\nBooleanOperationType.ADD = 'add'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.ADD.html#examples-using-booleanoperationtypeadd","title":"ADD > Examples using BooleanOperationType.ADD","text":"Examples using BooleanOperationType.ADD\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty SectionCut.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty LookUpTable1D.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.html#tubeselectionrule","title":"TubeSelectionRule","text":"TubeSelectionRule\n\n\n\nclass ansys.acp.core.TubeSelectionRule(*, name='TubeSelectionrule', edge_set=None, outer_radius=1.0, inner_radius=0.0, include_rule=True, extend_endings=False, symmetrical_extension=True, head=(0.0, 0.0, 0.0), head_extension=0.0, tail_extension=0.0)\n\nInstantiate a Tube Selection Rule.\n\nParameters\n\nname (str) – Name of the Tube Selection Rule.\n\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\n\nouter_radius (float) – Outer radius of the tube.\n\ninner_radius (float) – Inner radius of the tube.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nextend_endings (bool) – Enable this option to extend the endings of the tube.\n\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\n\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\n\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\n\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.html#examples-using-tubeselectionrule","title":"TubeSelectionRule > Examples using TubeSelectionRule","text":"Examples using TubeSelectionRule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.offset.html#offset","title":"offset","text":"offset\n\n\n\nAnalysisPlyElementalData.offset: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.casefold.html#casefold","title":"casefold","text":"casefold\n\n\n\nLaunchMode.casefold(/)\n\nReturn a version of the string suitable for caseless comparisons."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.name.html#name","title":"name","text":"name\n\n\n\nproperty ModelingPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.all_elements.html#all_elements","title":"all_elements","text":"all_elements\n\n\n\nShellMappingProperties.all_elements: bool = True\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.html#importedsolidmodelnodaldata","title":"ImportedSolidModelNodalData","text":"ImportedSolidModelNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ImportedSolidModelNodalData(node_labels)\n\nRepresents nodal data for an imported solid model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.lower.html#lower","title":"lower","text":"lower\n\n\n\nLaunchMode.lower(/)\n\nReturn a copy of the string converted to lowercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.XY.html#xy","title":"XY","text":"XY\n\n\n\nproperty ConstantTsaiWuConstants.XY: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_1.html#e2_1","title":"E2_1","text":"E2_1\n\n\n\nproperty ConstantWovenCharacterization.E2_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nVariableOffsetSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.id.html#id","title":"id","text":"id\n\n\n\nproperty SamplingPoint.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nVariableOffsetSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FeFormat.ANSYS_DAT.html#ansys_dat","title":"ANSYS_DAT","text":"ANSYS_DAT\n\n\n\nFeFormat.ANSYS_DAT = 'ansys:dat'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nBooleanSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.html#model","title":"Model","text":"Model\n\n\n\nclass ansys.acp.core.Model(*, name='ACP Model', use_nodal_thicknesses=False, draping_offset_correction=False, angle_tolerance=1.0, relative_thickness_tolerance=0.01, minimum_analysis_ply_thickness=1e-06, force_disable_result_extrapolation=False)\n\nDefines an ACP Model.\n\nWrapper for accessing an ACP Model residing on a server.\n\nParameters\n\nname (str) – The name of the model.\n\nuse_nodal_thicknesses (bool) – Defines whether to use nodal thicknesses or element thicknesses.\n\ndraping_offset_correction (bool) – Defines whether to consider lay-up thickness in draping analysis.\n\nangle_tolerance (float) – Section computation angle tolerance (in degree).\n\nrelative_thickness_tolerance (float) – Section computation relative thickness tolerance.\n\nminimum_analysis_ply_thickness (float) – Section computation minimum analysis ply thickness (in length\nunit of model).\n\nforce_disable_result_extrapolation (bool) – Force the result extrapolation to be disabled (‘ERESX,NO’ command)\nwhen exporting to APDL or CDB format. Available since ACP server\nversion 25.2.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.html#examples-using-model","title":"Model > Examples using Model","text":"Examples using Model\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty SphericalSelectionRule.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.effective_stress.html#effective_stress","title":"effective_stress","text":"effective_stress\n\n\n\nproperty ConstantStressLimits.effective_stress: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.ply_material.html#ply_material","title":"ply_material","text":"ply_material\n\n\n\nproperty ImportedModelingPly.ply_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.YZ.html#yz","title":"YZ","text":"YZ\n\n\n\nproperty ConstantTsaiWuConstants.YZ: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FeFormat.ANSYS_H5.html#ansys_h5","title":"ANSYS_H5","text":"ANSYS_H5\n\n\n\nFeFormat.ANSYS_H5 = 'ansys:h5'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutType.MODELING_PLY_WISE.html#modeling_ply_wise","title":"MODELING_PLY_WISE","text":"MODELING_PLY_WISE\n\n\n\nSectionCutType.MODELING_PLY_WISE = 'modeling_ply_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nGeometricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_PLATE_ACPH5.html#minimal_plate_acph5","title":"MINIMAL_PLATE_ACPH5","text":"MINIMAL_PLATE_ACPH5\n\n\n\nExampleKeys.MINIMAL_PLATE_ACPH5 = 19\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.export.html#export","title":"export","text":"export\n\n\n\nSectionCut.export(path, *, export_type='mesh_only')\n\nExport the section cut to a CDB file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the section cut is saved.\n\nexport_type (SectionCutCDBExportType) – Determines what is exported to the CDB file. Options are:\"mesh_only\": Only the mesh (elements and nodes) is exported.\n\n\"solid_model\": The section cut is expanded into a slice of\nsolid elements. In addition, the material properties are exported\nand the element coordinate systems are aligned with the fiber\ndirection. This model can be used to compute the equivalent\nbeam properties of the section cut."},{"objectID":"Home","href":"user_guide/howto/file_management.html#manage-input-and-output-files","title":"Manage input and output files","text":"Manage input and output files\n\nWhen defining your workflow using PyACP and other tools, you may need control\nover where the input and output files are stored. There are two main ways to\nmanage files: auto-transfer mode and manual file management.\n\nWhen using a local ACP instance (\"direct\" launch mode), the auto-transfer\nand manual modes are identical, as long as the current working directory is\nnot changed after launching the ACP instance."},{"objectID":"Home","href":"user_guide/howto/file_management.html#auto-transfer-mode","title":"Manage input and output files > Auto-transfer mode","text":"Auto-transfer mode\n\nWhen passing the auto_transfer_files=True parameter to launch_acp()\n(the default behavior), PyACP automatically uploads files to the ACP instance\nand downloads output files to the local machine.\n\nPaths passed to the PyACP functions are all paths on the local machine. They\ncan be either absolute paths, or relative to the current working directory of\nthe Python instance.\n\nThe only exception is the external_path attribute of the CADGeometry\nand ImportedSolidModel classes. This attribute refers to a path on the\nserver side. It can again be an absolute path, or relative to the ACP instance’s\nworking directory.\nYou can instead use the CADGeometry.refresh() and\nImportedSolidModel.refresh() methods to define the input file, which also\nhandles the upload automatically.\n\nOn local ACP instances, the up- and download methods simply convert the\npaths to be relative to the ACP instance’s working directory if needed."},{"objectID":"Home","href":"user_guide/howto/file_management.html#loading-input-files","title":"Manage input and output files > Loading input files","text":"Loading input files\n\nTo load an input file, pass its path on your local machine to the\nimport_model() method:"},{"objectID":"Home","href":"user_guide/howto/file_management.html#getting-output-files","title":"Manage input and output files > Getting output files","text":"Getting output files\n\nWhen getting output files, pass the desired path on your local machine to the\nexport / save method."},{"objectID":"Home","href":"user_guide/howto/file_management.html#manual-file-management","title":"Manage input and output files > Manual file management","text":"Manual file management\n\nWhen passing auto_transfer_files=False to launch_acp(), PyACP does not\nautomatically upload or download files.\n\nIn this case, you need to manually manage the up- and download of files, as\ndescribed in the following sections."},{"objectID":"Home","href":"user_guide/howto/file_management.html#loading-input-files","title":"Manage input and output files > Loading input files","text":"Loading input files\n\nYou can manually load the input_file.cdb file to the ACP instance by\nusing the upload_file() method:\n\nThis method returns the path of the uploaded file on the server. You can\nuse the path to create a model:"},{"objectID":"Home","href":"user_guide/howto/file_management.html#getting-output-files","title":"Manage input and output files > Getting output files","text":"Getting output files\n\nTo get the ACPH5 file, it must be stored on the server. You can\nmanually do that using the model’s save() method:\n\nThen, you can download the file using the download_file() method of the ACP\ninstance:"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes_offsets.html#element_nodes_offsets","title":"element_nodes_offsets","text":"element_nodes_offsets\n\n\n\nMeshData.element_nodes_offsets: ndarray[tuple[int, ...], dtype[int32]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.html#modelingply","title":"ModelingPly","text":"ModelingPly\n\n\n\nclass ansys.acp.core.ModelingPly(*, name='ModelingPly', ply_material=None, oriented_selection_sets=(), ply_angle=0.0, number_of_layers=1, active=True, global_ply_nr=0, selection_rules=(), draping_type='no_draping', draping_seed_point=(0.0, 0.0, 0.0), auto_draping_direction=True, draping_direction=(1.0, 0.0, 0.0), use_default_draping_mesh_size=True, draping_mesh_size=0.0, draping_thickness_correction=True, draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_geometry=None, thickness_field=None, thickness_field_type='absolute_values', taper_edges=())\n\nInstantiate a Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nply_material (Fabric | Stackup | SubLaminate | None) – The material (fabric, stackup or sub-laminate) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\nnumber_of_layers (int) – Number of times the plies are generated.\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\nglobal_ply_nr (int) – Defines the global ply order.\n\nselection_rules (Iterable[LinkedSelectionRule]) – Selection Rules which may limit the extent of the ply.\n\ndraping_type (DrapingType) – Chooses between different draping formulations.\n\ndraping_seed_point (tuple[float, float, float]) – Starting point of the draping algorithm.\n\nauto_draping_direction (bool) – If True, the fiber direction of the production ply at the draping\n\nseed point is used as draping direction.\n\ndraping_direction (tuple[float, float, float]) – Set the primary draping direction for the draping algorithm. Only used if\nauto_draping_direction is False.\n\nuse_default_draping_mesh_size (bool) – Whether to use the average element size of the shell mesh for the draping.\n\ndraping_mesh_size (float) – Defines the mesh size for the draping algorithm.  If set to -1., the\nmesh size is automatically determined based on the average element size.\n\ndraping_thickness_correction (bool) – Enables the thickness correction of draped plies based on the draping\nshear angle.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ThicknessType) – Choose between ThicknessType.FROM_GEOMETRY or\nThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_geometry (VirtualGeometry | None) – Defines the geometry used to determine the ply thickness. Only applies if\nthickness_type is ThicknessType.FROM_GEOMETRY.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\ntaper_edges (Iterable[TaperEdge]) – Defines the taper edges of the ply.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.html#examples-using-modelingply","title":"ModelingPly > Examples using ModelingPly","text":"Examples using ModelingPly\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.point.html#point","title":"point","text":"point\n\n\n\nproperty SamplingPoint.point: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.download_file.html#download_file","title":"download_file","text":"download_file\n\n\n\nACPInstance.download_file(remote_path, local_path)\n\nDownload a file from the server.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\n\nParameters\n\nremote_path (str | PathLike[str]) – The path of the file on the server.\n\nlocal_path (str | PathLike[str]) – The path of the file to be downloaded to."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.clone.html#clone","title":"clone","text":"clone\n\n\n\nFieldDefinition.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.node_index.html#node_index","title":"node_index","text":"node_index\n\n\n\nproperty SolidModelExportSettings.node_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffRuleType.GEOMETRY.html#geometry","title":"GEOMETRY","text":"GEOMETRY\n\n\n\nCutOffRuleType.GEOMETRY = 'geometry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_top.html#disable_drop_offs_on_top","title":"disable_drop_offs_on_top","text":"disable_drop_offs_on_top\n\n\n\nproperty DropOffSettings.disable_drop_offs_on_top: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.store.html#store","title":"store","text":"store\n\n\n\nElementSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.html#lookuptable1dcolumn","title":"LookUpTable1DColumn","text":"LookUpTable1DColumn\n\n\n\nclass ansys.acp.core.LookUpTable1DColumn(*, name='LookUpTable1DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 1D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (ndarray[tuple[int, ...], dtype[float64]] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.html#examples-using-lookuptable1dcolumn","title":"LookUpTable1DColumn > Examples using LookUpTable1DColumn","text":"Examples using LookUpTable1DColumn\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.extrusion_type.html#extrusion_type","title":"extrusion_type","text":"extrusion_type\n\n\n\nproperty SectionCut.extrusion_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.html#variabledensity","title":"VariableDensity","text":"VariableDensity\n\n\n\nclass ansys.acp.core.material_property_sets.VariableDensity(*, _parent_object=None, _attribute_path=None)\n\nVariable density material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.clone.html#clone","title":"clone","text":"clone\n\n\n\nMaterial.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_2.html#fracture_toughness_mode_2","title":"fracture_toughness_mode_2","text":"fracture_toughness_mode_2\n\n\n\nproperty ConstantLaRCConstants.fracture_toughness_mode_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.html#ignorableentity","title":"IgnorableEntity","text":"IgnorableEntity\n\n\n\nclass ansys.acp.core.IgnorableEntity(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the entities to ignore when loading an FE file.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY.html#cut_off_geometry","title":"CUT_OFF_GEOMETRY","text":"CUT_OFF_GEOMETRY\n\n\n\nExampleKeys.CUT_OFF_GEOMETRY = 7\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.html#interpolationoptions","title":"InterpolationOptions","text":"InterpolationOptions\n\n\n\nclass ansys.acp.core.material_property_sets.InterpolationOptions(algorithm, cached, normalized)\n\nDefines the interpolation options for variable materials.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.lstrip.html#lstrip","title":"lstrip","text":"lstrip\n\n\n\nLaunchMode.lstrip(chars=None, /)\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.title.html#title","title":"title","text":"title\n\n\n\nLaunchMode.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.save.html#save","title":"save","text":"save\n\n\n\nModel.save(path, *, save_cache=True)\n\nSave ACP Model (.acph5).\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nsave_cache (bool) – Whether to store the update results such as Analysis Plies and solid models."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.save.html#examples-using-modelsave","title":"save > Examples using Model.save","text":"Examples using Model.save\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.html#importedplydrapingtype","title":"ImportedPlyDrapingType","text":"ImportedPlyDrapingType\n\n\n\nclass ansys.acp.core.ImportedPlyDrapingType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the draping algorithm used.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.rosette_type.html#rosette_type","title":"rosette_type","text":"rosette_type\n\n\n\nproperty Rosette.rosette_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Sxy.html#sxy","title":"Sxy","text":"Sxy\n\n\n\nproperty ConstantWovenStressLimits.Sxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.connect_butt_joined_plies.html#connect_butt_joined_plies","title":"connect_butt_joined_plies","text":"connect_butt_joined_plies\n\n\n\nproperty DropOffSettings.connect_butt_joined_plies: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.html#variableoffsetselectionrulenodaldata","title":"VariableOffsetSelectionRuleNodalData","text":"VariableOffsetSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a VariableOffset Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/internal.html#internal-objects","title":"Internal objects","text":"Internal objects\n\nThe following objects are used internally by PyACP. They should not be used directly by the user, and\nare subject to change without notice.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyThicknessType.FROM_TABLE.html#from_table","title":"FROM_TABLE","text":"FROM_TABLE\n\n\n\nImportedPlyThicknessType.FROM_TABLE = 'from_table'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.scope_element_sets.html#scope_element_sets","title":"scope_element_sets","text":"scope_element_sets\n\n\n\nproperty SectionCut.scope_element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET.html#bottom_offset","title":"BOTTOM_OFFSET","text":"BOTTOM_OFFSET\n\n\n\nImportedPlyOffsetType.BOTTOM_OFFSET = 'bottom_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.BOTTOM_OFFSET.html#examples-using-importedplyoffsettypebottom_offset","title":"BOTTOM_OFFSET > Examples using ImportedPlyOffsetType.BOTTOM_OFFSET","text":"Examples using ImportedPlyOffsetType.BOTTOM_OFFSET\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty ProductionPly.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.active.html#active","title":"active","text":"active\n\n\n\nproperty ModelingPly.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.selection_rules.html#selection_rules","title":"selection_rules","text":"selection_rules\n\n\n\nproperty BooleanSelectionRule.selection_rules: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.materials.html#materials","title":"materials","text":"materials\n\n\n\nproperty SubLaminate.materials: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.cog.html#cog","title":"cog","text":"cog\n\n\n\nProductionPlyElementalData.cog: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.format.html#format","title":"format","text":"format\n\n\n\nPuckMaterialType.format(*args, **kwargs) -> str\n\nReturn a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces (‘{’ and ‘}’)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.solid_mesh.html#solid_mesh","title":"solid_mesh","text":"solid_mesh\n\n\n\nproperty Model.solid_mesh: MeshData\n\nSolid mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.solid_mesh.html#examples-using-modelsolid_mesh","title":"solid_mesh > Examples using Model.solid_mesh","text":"Examples using Model.solid_mesh\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh.html#solid_mesh","title":"solid_mesh","text":"solid_mesh\n\n\n\nproperty ImportedAnalysisPly.solid_mesh: MeshData\n\nSolid mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.solid_mesh.html#examples-using-importedanalysisplysolid_mesh","title":"solid_mesh > Examples using ImportedAnalysisPly.solid_mesh","text":"Examples using ImportedAnalysisPly.solid_mesh\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.ply_tapering.html#ply_tapering","title":"ply_tapering","text":"ply_tapering\n\n\n\nproperty CutOffSelectionRule.ply_tapering: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty AnalysisPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.MeshImportType.html#meshimporttype","title":"MeshImportType","text":"MeshImportType\n\n\n\nclass ansys.acp.core.MeshImportType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the definition of the source of the imported mesh.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.clone.html#clone","title":"clone","text":"clone\n\n\n\nLayupMappingObject.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.start.html#start","title":"start","text":"start\n\n\n\nACPInstance.start(timeout=None)\n\nStart the product instance.\n\nParameters\n\ntimeout (float | None) – Timeout to wait until ACP responds. If None is specified,\nthe check that ACP has started is skipped.\n\nRaises\n\nRuntimeError – If the instance is already in the started state.\n\nRuntimeError – If the instance does not allow manual starting."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.scope_entire_model.html#scope_entire_model","title":"scope_entire_model","text":"scope_entire_model\n\n\n\nproperty SectionCut.scope_entire_model: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty CutOffSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty InterfaceLayer.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.to_pyvista.html#to_pyvista","title":"to_pyvista","text":"to_pyvista\n\n\n\nTriangleMesh.to_pyvista()\n\nConvert the mesh data to a PyVista object.\n\nReturn type\n\nPolyData"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SymmetryType.EVEN_SYMMETRY.html#even_symmetry","title":"EVEN_SYMMETRY","text":"EVEN_SYMMETRY\n\n\n\nSymmetryType.EVEN_SYMMETRY = 'even_symmetry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.ANALYSIS_PLY_WISE.html#analysis_ply_wise","title":"ANALYSIS_PLY_WISE","text":"ANALYSIS_PLY_WISE\n\n\n\nExtrusionMethod.ANALYSIS_PLY_WISE = 'analysis_ply_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Zt.html#zt","title":"Zt","text":"Zt\n\n\n\nproperty VariableStressLimits.Zt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nGeometricalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#advanced-pymapdl-workflow","title":"Advanced PyMAPDL workflow","text":"Advanced PyMAPDL workflow\n\nThis example shows how to define a composite lay-up with PyACP, solve the resulting\nmodel with PyMAPDL, and run a failure analysis with PyDPF - Composites.\n\nBegin with an MAPDL CDB file that contains the mesh, material data, and\nboundary conditions. Import the file to PyACP to define the lay-up, and then export the\nresulting model to PyMAPDL. Once the results are available, the RST file is loaded in\nPyDPF - Composites for postprocessing. The additional input files (material.xml\nand ACPCompositeDefinitions.h5) can also be stored with PyACP and passed to PyDPF - Composites."},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#import-modules-and-start-acp","title":"Advanced PyMAPDL workflow > Import modules and start ACP","text":"Import modules and start ACP\n\nImport the standard library and third-party dependencies.\n\nImport the Ansys libraries.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nLaunch the PyACP server and connect to it."},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#get-example-input-files","title":"Advanced PyMAPDL workflow > Get example input files","text":"Get example input files\n\nCreate a temporary working directory, and download the example input files\nto this directory."},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#load-mesh-and-materials-from-cdb-file","title":"Advanced PyMAPDL workflow > Load mesh and materials from CDB file","text":"Load mesh and materials from CDB file\n\nLoad the CDB file into PyACP and set the unit system.\n\nVisualize the loaded mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#build-composite-lay-up","title":"Advanced PyMAPDL workflow > Build Composite Lay-up","text":"Build Composite Lay-up\n\nCreate the model (MPA unit system)."},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#materials","title":"Advanced PyMAPDL workflow > Materials","text":"Materials"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#fabrics","title":"Advanced PyMAPDL workflow > Fabrics","text":"Fabrics"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#rosettes","title":"Advanced PyMAPDL workflow > Rosettes","text":"Rosettes"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#oriented-selection-sets","title":"Advanced PyMAPDL workflow > Oriented Selection Sets","text":"Oriented Selection Sets\n\nNote that the element sets are imported from the initial mesh (CBD file).\n\nShow the orientations on the hull oriented selection set (OSS).\n\nNote that the model must be updated before the orientations are available.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#modeling-plies","title":"Advanced PyMAPDL workflow > Modeling Plies","text":"Modeling Plies\n\nDefine plies for the hull, deck, and bulkhead.\n\nAdd plies to the keeltower.\n\nInspect the number of modeling groups and plies.\n\nShow the thickness of one of the plies.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nShow the ply offsets that are scaled by a factor of 200.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nShow the thickness of the entire lay-up.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#write-out-acp-model","title":"Advanced PyMAPDL workflow > Write out ACP Model","text":"Write out ACP Model\n\nUpdate and save the ACP model.\n\nSave the model as a CDB file for solving with PyMAPDL."},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#solve-with-pymapdl","title":"Advanced PyMAPDL workflow > Solve with PyMAPDL","text":"Solve with PyMAPDL\n\nImport PyMAPDL and connect to its server.\n\nLoad the CDB file into PyMAPDL.\n\nSolve the model.\n\nShow the displacements in postprocessing.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/workflows/02-advanced-pymapdl-workflow.html#postprocessing-with-pydpf---composites","title":"Advanced PyMAPDL workflow > Postprocessing with PyDPF - Composites","text":"Postprocessing with PyDPF - Composites\n\nTo postprocess the results, you must configure the imports, connect to the\nPyDPF - Composites server, and load its plugin.\n\nConnect to the server. The connect_to_or_start_server function\nautomatically loads the composites plugin.\n\nSpecify the combined failure criterion.\n\nCreate the composite model and configure its input.\n\nEvaluate the failure criteria.\n\nQuery and plot the results.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nTotal running time of the script: (0 minutes 19.558 seconds)\n\n\n\nDownload Jupyter notebook: 02-advanced-pymapdl-workflow.ipynb\n\nDownload Python source code: 02-advanced-pymapdl-workflow.py\n\nDownload zipped: 02-advanced-pymapdl-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalRuleType.GEOMETRY.html#geometry","title":"GEOMETRY","text":"GEOMETRY\n\n\n\nGeometricalRuleType.GEOMETRY = 'geometry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping.html#draping","title":"draping","text":"draping\n\n\n\nproperty OrientedSelectionSet.draping: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.default.html#default","title":"default","text":"default\n\n\n\nFieldVariable.default: float\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelSkinExportFormat.html#solidmodelskinexportformat","title":"SolidModelSkinExportFormat","text":"SolidModelSkinExportFormat\n\n\n\nclass ansys.acp.core.SolidModelSkinExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the export format of solid model skins.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.delete_bad_elements.html#delete_bad_elements","title":"delete_bad_elements","text":"delete_bad_elements\n\n\n\nproperty ImportedSolidModel.delete_bad_elements: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty ModelingPly.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.dir1.html#dir1","title":"dir1","text":"dir1\n\n\n\nproperty Rosette.dir1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects.material.property_sets.wrapper.TC.html#tc","title":"TC","text":"TC\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects.material.property_sets.wrapper.TC = ~TC\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nVariableOffsetSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.cad_geometries.html#cad_geometries","title":"cad_geometries","text":"cad_geometries\n\n\n\nproperty Model.cad_geometries: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.id.html#id","title":"id","text":"id\n\n\n\nproperty Stackup.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.ply_offset.html#ply_offset","title":"ply_offset","text":"ply_offset\n\n\n\nAnalysisPlyNodalData.ply_offset: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.drop_off_material.html#drop_off_material","title":"drop_off_material","text":"drop_off_material\n\n\n\nproperty SolidModel.drop_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.drop_off_material.html#examples-using-solidmodeldrop_off_material","title":"drop_off_material > Examples using SolidModel.drop_off_material","text":"Examples using SolidModel.drop_off_material\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.split.html#split","title":"split","text":"split\n\n\n\nPuckMaterialType.split(/, sep=None, maxsplit=-1)\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\nsep\n\nThe separator used to split the string.\n\nWhen set to None (the default value), will split on any whitespace\ncharacter (including n r t f and spaces) and will discard\nempty strings from the result.\n\nmaxsplit\n\nMaximum number of splits.\n-1 (the default value) means no limit.\n\nSplitting starts at the front of the string and works to the end.\n\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.html#rosette","title":"Rosette","text":"Rosette\n\n\n\nclass ansys.acp.core.Rosette(*, name='Rosette', rosette_type='parallel', origin=(0.0, 0.0, 0.0), dir1=(1.0, 0.0, 0.0), dir2=(0.0, 1.0, 0.0), edge_set=None)\n\nInstantiate a Rosette.\n\nParameters\n\nname (str) – Name of the rosette.\n\nrosette_type (RosetteType) – Type of the rosette.\n\norigin (tuple[float, float, float]) – Coordinates of the rosette origin.\n\ndir1 (tuple[float, float, float]) – Direction 1 (x-direction) vector of the Rosette.\n\ndir2 (tuple[float, float, float]) – Direction 2 (y-direction) vector of the Rosette.\n\nedge_set (EdgeSet | None) – Edge Set used for the Rosettes with type RosetteType.EDGE_WISE.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.html#examples-using-rosette","title":"Rosette > Examples using Rosette","text":"Examples using Rosette\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.OPTIMIZATION_EXAMPLE_DAT.html#optimization_example_dat","title":"OPTIMIZATION_EXAMPLE_DAT","text":"OPTIMIZATION_EXAMPLE_DAT\n\n\n\nExampleKeys.OPTIMIZATION_EXAMPLE_DAT = 11\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.clone.html#clone","title":"clone","text":"clone\n\n\n\nButtJointSequence.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_2.html#g12_2","title":"G12_2","text":"G12_2\n\n\n\nproperty ConstantWovenCharacterization.G12_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.shear_angle.html#shear_angle","title":"shear_angle","text":"shear_angle\n\n\n\nAnalysisPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions.html#export_shell_composite_definitions","title":"export_shell_composite_definitions","text":"export_shell_composite_definitions\n\n\n\nModel.export_shell_composite_definitions(path)\n\nExport the lay-up of the shell as HDF5 used by DPF Composites or Mechanical.\n\nParameters\n\npath (str | PathLike[str]) – File path. Eg. /tmp/ACPCompositeDefinitions.h5"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.export_shell_composite_definitions.html#examples-using-modelexport_shell_composite_definitions","title":"export_shell_composite_definitions > Examples using Model.export_shell_composite_definitions","text":"Examples using Model.export_shell_composite_definitions\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field.html#reference_direction_field","title":"reference_direction_field","text":"reference_direction_field\n\n\n\nproperty OrientedSelectionSet.reference_direction_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.reference_direction_field.html#examples-using-orientedselectionsetreference_direction_field","title":"reference_direction_field > Examples using OrientedSelectionSet.reference_direction_field","text":"Examples using OrientedSelectionSet.reference_direction_field\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty ParallelSelectionRule.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nCutOffSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.material_index.html#material_index","title":"material_index","text":"material_index\n\n\n\nproperty SolidModelExportSettings.material_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.MODELING_PLY_WISE.html#modeling_ply_wise","title":"MODELING_PLY_WISE","text":"MODELING_PLY_WISE\n\n\n\nExtrusionMethod.MODELING_PLY_WISE = 'modeling_ply_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometryDimension.html#virtualgeometrydimension","title":"VirtualGeometryDimension","text":"VirtualGeometryDimension\n\n\n\nclass ansys.acp.core.VirtualGeometryDimension(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the dimension of a virtual geometry.\n\nAttributes\n\n"},{"objectID":"Home","href":"user_guide/compatibility.html#compatibility","title":"Compatibility","text":"Compatibility"},{"objectID":"Home","href":"user_guide/compatibility.html#server-version-compatibility","title":"Compatibility > Server version compatibility","text":"Server version compatibility\n\nPyACP is compatible with all versions of the ACP gRPC server since version 2024R2.\n\nHowever, some features are not available when using older versions of the server.\nVersion 2025R1 is the first full release of the ACP gRPC server, which makes\nalmost all features of ACP available through PyACP."},{"objectID":"Home","href":"user_guide/compatibility.html#added-in-2025r2","title":"Compatibility > Added in 2025R2","text":"Added in 2025R2\n\nThe following features were added in version 2025R2 of the ACP gRPC server."},{"objectID":"Home","href":"user_guide/compatibility.html#attributes","title":"Compatibility > Attributes","text":"Attributes\n\nImportedSolidModel.analysis_plies\n\nImportedSolidModel.imported_analysis_plies\n\nLayupMappingObject.analysis_plies\n\nLayupMappingObject.imported_analysis_plies\n\nLookUpTable3D.rosette\n\nLookUpTable3D.use_global_coordinate_system\n\nModel.force_disable_result_extrapolation\n\nModelElementalData.price\n\nSolidModel.interface_layers"},{"objectID":"Home","href":"user_guide/compatibility.html#other-features","title":"Compatibility > Other features","text":"Other features\n\nSensors can now be scoped to solid models."},{"objectID":"Home","href":"user_guide/compatibility.html#added-in-2025r1","title":"Compatibility > Added in 2025R1","text":"Added in 2025R1\n\nThe following features were added in version 2025R1 of the ACP gRPC server."},{"objectID":"Home","href":"user_guide/compatibility.html#tree-objects","title":"Compatibility > Tree objects","text":"Tree objects\n\nButtJointSequence\n\nCutOffGeometry\n\nExtrusionGuide\n\nFieldDefinition\n\nImportedAnalysisPly\n\nImportedModelingPly\n\nImportedProductionPly\n\nImportedSolidModel\n\nInterfaceLayer\n\nLayupMappingObject\n\nSamplingPoint\n\nSectionCut\n\nSnapToGeometry\n\nSolidElementSet\n\nSolidModel"},{"objectID":"Home","href":"user_guide/compatibility.html#methods","title":"Compatibility > Methods","text":"Methods\n\nModel.import_hdf5_composite_cae()\n\nModel.export_hdf5_composite_cae()\n\nModel.import_materials()\n\nModel.export_modeling_ply_geometries()"},{"objectID":"Home","href":"user_guide/compatibility.html#other-features","title":"Compatibility > Other features","text":"Other features\n\nMesh attributes for classes other than the Model class.\n\nThe .shell_mesh and .solid_mesh attributes."},{"objectID":"Home","href":"user_guide/compatibility.html#upgrading-pyacp","title":"Compatibility > Upgrading PyACP","text":"Upgrading PyACP\n\nThe following section describes how to upgrade to newer versions of PyACP."},{"objectID":"Home","href":"user_guide/compatibility.html#upgrading-from-the-beta-version","title":"Compatibility > Upgrading from the beta version","text":"Upgrading from the beta version\n\nThe beta version of PyACP did not yet provide a stable API. Consequently, some\nbackwards-incompatible changes were made in the first stable release to improve\nthe API.\n\nIf you encounter any difficulties upgrading from the beta version, feel free to\nopen an issue on the PyACP GitHub\nrepository."},{"objectID":"Home","href":"user_guide/compatibility.html#removed-features","title":"Compatibility > Removed features","text":"Removed features\n\nThe ACPWorkflow class for managing file up- and download was removed. Instead,\nfile up- and download is now managed automatically by default. You can directly\nuse the ACPInstance.import_model() method for importing models, and methods\nsuch as Model.save(), Model.export_analysis_model(), or\nModel.export_hdf5_composite_cae() for saving / exporting data.\nSee the file management section for more information.\n\nThe get_composite_post_processing_files function was removed, since it only\ncovered the shell workflow. Instead, you can directly use the ansys.dpf.composites\nAPI, as shown in the workflow examples."},{"objectID":"Home","href":"user_guide/compatibility.html#new-submodules","title":"Compatibility > New submodules","text":"New submodules\n\nSome features were moved into submodules instead of being exposed at the top level\nansys.acp.core module:\n\nElemental, nodal, and mesh data types were moved to the ansys.acp.core.mesh_data submodule.\n\nThe example_helpers submodule was moved to the ansys.acp.core.extras submodule.\n\nThe get_dpf_unit_system function was moved to the ansys.acp.core.dpf_integration_helpers submodule."},{"objectID":"Home","href":"user_guide/compatibility.html#renamed-classes","title":"Compatibility > Renamed classes","text":"Renamed classes\n\nThe following classes were renamed:\n\nACP renamed to ACPInstance.\n\nDrapingMaterialType renamed to DrapingMaterialModel.\n\nStatusType renamed to Status.\n\nDimensionType renamed to PhysicalDimension.\n\nCutoffMaterialType renamed to CutOffMaterialType.\n\nCutoffRuleType renamed to CutOffRuleType.\n\nCutoffSelectionRule renamed to CutOffSelectionRule.\n\nCutoffSelectionRuleElementalData renamed to CutOffSelectionRuleElementalData and moved to  ansys.acp.core.mesh_data.\n\nCutoffSelectionRuleNodalData renamed to CutOffSelectionRuleNodalData and moved to  ansys.acp.core.mesh_data.\n\nPlyCutoffType renamed to PlyCutOffType.\n\nDropoffMaterialType renamed to DropOffMaterialType."},{"objectID":"Home","href":"user_guide/compatibility.html#renamed-attributes","title":"Compatibility > Renamed attributes","text":"Renamed attributes\n\nThe following attributes were renamed:\n\ndimension_type renamed to physical_dimension on the LookUpTable1DColumn and LookUpTable3DColumn classes.\n\ndraping_type renamed to draping on the ModelingPly class.\n\ninclude_rule_type renamed to include_rule on all selection rule classes.\n\nrelative_rule_type renamed to relative_rule on all selection rule classes."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule.html#create_tube_selection_rule","title":"create_tube_selection_rule","text":"create_tube_selection_rule\n\n\n\nModel.create_tube_selection_rule(*, name='TubeSelectionrule', edge_set=None, outer_radius=1.0, inner_radius=0.0, include_rule=True, extend_endings=False, symmetrical_extension=True, head=(0.0, 0.0, 0.0), head_extension=0.0, tail_extension=0.0)\n\nInstantiate a Tube Selection Rule.\n\nParameters\n\nname (str) – Name of the Tube Selection Rule.\n\nedge_set (EdgeSet | None) – Edge Set defining the path of the tube.\n\nouter_radius (float) – Outer radius of the tube.\n\ninner_radius (float) – Inner radius of the tube.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nextend_endings (bool) – Enable this option to extend the endings of the tube.\n\nsymmetrical_extension (bool) – Whether the extensions have equal length on both sides or not.\n\nhead (tuple[float, float, float]) – Defines the head of the tube. Select a point nearby one of the free ends\nof the tube. Only needed if the extensions are asymmetric.\n\nhead_extension (float) – Defines the length of the extension at the head of the tube. In case of\nsymmetry, this value is used for both sides.\n\ntail_extension (float) – Defines the length of the extension at the tail of the tube. Only needed\nif the extensions are asymmetric.\n\nReturn type\n\nTubeSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_tube_selection_rule.html#examples-using-modelcreate_tube_selection_rule","title":"create_tube_selection_rule > Examples using Model.create_tube_selection_rule","text":"Examples using Model.create_tube_selection_rule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.external_path.html#external_path","title":"external_path","text":"external_path\n\n\n\nproperty ImportedSolidModel.external_path: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT.html#scalardatat","title":"ScalarDataT","text":"ScalarDataT\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects._elemental_or_nodal_data.ScalarDataT = ~ScalarDataT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.html#fieldvariable","title":"FieldVariable","text":"FieldVariable\n\n\n\nclass ansys.acp.core.material_property_sets.FieldVariable(name, values, default, lower_limit, upper_limit)\n\nDefines field variables for variable material properties.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.expandtabs.html#expandtabs","title":"expandtabs","text":"expandtabs\n\n\n\nPuckMaterialType.expandtabs(/, tabsize=8)\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION.html#linear_triangulation","title":"LINEAR_TRIANGULATION","text":"LINEAR_TRIANGULATION\n\n\n\nLookUpTable3DInterpolationAlgorithm.LINEAR_TRIANGULATION = 'linear_triangulation'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nBooleanSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty Model.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.shell_mesh.html#examples-using-modelshell_mesh","title":"shell_mesh > Examples using Model.shell_mesh","text":"Examples using Model.shell_mesh\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Status.NOTUPTODATE.html#notuptodate","title":"NOTUPTODATE","text":"NOTUPTODATE\n\n\n\nStatus.NOTUPTODATE = 'NOTUPTODATE'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.html#modelnodaldata","title":"ModelNodalData","text":"ModelNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ModelNodalData(node_labels)\n\nRepresents nodal data for a Model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometryDimension.SURFACE.html#surface","title":"SURFACE","text":"SURFACE\n\n\n\nVirtualGeometryDimension.SURFACE = 'surface'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Sensor.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.html#extrusionguide","title":"ExtrusionGuide","text":"ExtrusionGuide\n\n\n\nclass ansys.acp.core.ExtrusionGuide(*, name='ExtrusionGuide', active=True, edge_set=None, extrusion_guide_type='by_direction', cad_geometry=None, direction=(0.0, 0.0, 1.0), radius=0.0, depth=0.0, use_curvature_correction=False)\n\nInstantiate an Extrusion Guide of a Solid Model.\n\nParameters\n\nname (str) – The name of the Oriented Selection Set.\n\nactive (bool) – Inactive extrusion guides are not used in the solid model extrusion.\n\nedge_set (EdgeSet | None) – Edge Set along which the Extrusion Guide acts.\n\nextrusion_guide_type (ExtrusionGuideType) – Type of the extrusion such as by direction or by geometry.\n\ncad_geometry (VirtualGeometry | None) – CAD geometry along which the extrusion guide runs.\nNeeded if the extrusion type is set to ExtrusionGuideType.BY_GEOMETRY.\n\ndirection (tuple[float, float, float]) – Direction along which the extrusion guide runs. Need if\nthe extrusion type is set to ExtrusionGuideType.BY_DIRECTION.\n\nradius (float) – Controls the sphere of influence for mesh morphing.\n\ndepth (float) – Defines the bias of the mesh morphing.\n\nuse_curvature_correction (bool) – Apply a curvature correction during the solid model extrusion which results in\na smoother extruded surface. Under certain circumstances, deactivating\ncurvature correction can lead to better extrusion results.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.index.html#index","title":"index","text":"index\n\n\n\nLaunchMode.index(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty ParallelSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.edge_set.html#edge_set","title":"edge_set","text":"edge_set\n\n\n\nproperty VariableOffsetSelectionRule.edge_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Yt.html#yt","title":"Yt","text":"Yt\n\n\n\nproperty ConstantWovenStressLimits.Yt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FeFormat.ANSYS_CDB.html#ansys_cdb","title":"ANSYS_CDB","text":"ANSYS_CDB\n\n\n\nFeFormat.ANSYS_CDB = 'ansys:cdb'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.store.html#store","title":"store","text":"store\n\n\n\nSubLaminate.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.cad_geometry.html#cad_geometry","title":"cad_geometry","text":"cad_geometry\n\n\n\nproperty CutOffGeometry.cad_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.ignore_for_postprocessing.html#ignore_for_postprocessing","title":"ignore_for_postprocessing","text":"ignore_for_postprocessing\n\n\n\nproperty Stackup.ignore_for_postprocessing: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.reinforcing_behavior.html#reinforcing_behavior","title":"reinforcing_behavior","text":"reinforcing_behavior\n\n\n\nproperty LayupMappingObject.reinforcing_behavior: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nCutOffSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.inherit_from_lookup_table.html#inherit_from_lookup_table","title":"inherit_from_lookup_table","text":"inherit_from_lookup_table\n\n\n\nproperty VariableOffsetSelectionRule.inherit_from_lookup_table: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty LookUpTable1DColumn.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.cut_off_material.html#cut_off_material","title":"cut_off_material","text":"cut_off_material\n\n\n\nproperty SolidModel.cut_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.add_sub_shape.html#add_sub_shape","title":"add_sub_shape","text":"add_sub_shape\n\n\n\nVirtualGeometry.add_sub_shape(cad_geometry, path)\n\nAdd a SubShape to the VirtualGeometry.\n\nSee SubShape for the available parameters.\n\nReturn type\n\nSubShape"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.transferred_edge_sets.html#transferred_edge_sets","title":"transferred_edge_sets","text":"transferred_edge_sets\n\n\n\nproperty SolidModelExportSettings.transferred_edge_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.create_column.html#create_column","title":"create_column","text":"create_column\n\n\n\nLookUpTable3D.create_column(*, name='LookUpTable3DColumn', value_type='scalar', physical_dimension='dimensionless', data=None)\n\nInstantiate a Column of a 3D Look-Up Table.\n\nParameters\n\nvalue_type (LookUpTableColumnValueType) – Determines whether the column data is scalar (one entry per row) or\ndirectional (three entries per row).\nNote that the value_type can only be set when constructing the\ncolumn, and is read-only afterwards.\n\nphysical_dimension (PhysicalDimension) – Dimensionality (such as time, length, force, …) of the column data.\n\ndata (npt.NDArray[np.float64] | None) – The column data. The shape of the data must match the value_type\nand the length of the Location column of the parent look-up\ntable.\n\nReturn type\n\nLookUpTable3DColumn\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.create_column.html#examples-using-lookuptable3dcreate_column","title":"create_column > Examples using LookUpTable3D.create_column","text":"Examples using LookUpTable3D.create_column\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.thin_ply_thickness_limit.html#thin_ply_thickness_limit","title":"thin_ply_thickness_limit","text":"thin_ply_thickness_limit\n\n\n\nproperty VariableLaRCConstants.thin_ply_thickness_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VectorData.component_name.html#component_name","title":"component_name","text":"component_name\n\n\n\nproperty VectorData.component_name: str\n\nName of the component."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ReinforcingBehavior.TENSION_ONLY.html#tension_only","title":"TENSION_ONLY","text":"TENSION_ONLY\n\n\n\nReinforcingBehavior.TENSION_ONLY = 'tension_only'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu23.html#nu23","title":"nu23","text":"nu23\n\n\n\nproperty VariableEngineeringConstants.nu23: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty Stackup.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rfind.html#rfind","title":"rfind","text":"rfind\n\n\n\nLaunchMode.rfind(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ArrowType.HALF_ARROW.html#half_arrow","title":"HALF_ARROW","text":"HALF_ARROW\n\n\n\nArrowType.HALF_ARROW = 'half_arrow'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty ProductionPly.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.status.html#status","title":"status","text":"status\n\n\n\nproperty SolidElementSet.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.MESH.html#mesh","title":"MESH","text":"MESH\n\n\n\nIgnorableEntity.MESH = 'mesh'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.E1.html#e1","title":"E1","text":"E1\n\n\n\nproperty VariableEngineeringConstants.E1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSxy.html#esxy","title":"eSxy","text":"eSxy\n\n\n\nproperty VariableStrainLimits.eSxy: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty CutOffSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.primary_plies.html#primary_plies","title":"primary_plies","text":"primary_plies\n\n\n\nproperty ButtJointSequence.primary_plies: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT.html#meshdatat","title":"MeshDataT","text":"MeshDataT\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nansys.acp.core._tree_objects._elemental_or_nodal_data.MeshDataT = ~MeshDataT\n\nType variable.\n\nThe preferred way to construct a type variable is via the dedicated\nsyntax for generic functions, classes, and type aliases:\n\nThis syntax can also be used to create bound and constrained type\nvariables:\n\nHowever, if desired, reusable type variables can also be constructed\nmanually, like so:\n\nType variables exist primarily for the benefit of static type\ncheckers.  They serve as the parameters for generic types as well\nas for generic function and type alias definitions.\n\nThe variance of type variables is inferred by type checkers when they\nare created through the type parameter syntax and when\ninfer_variance=True is passed. Manually created type variables may\nbe explicitly marked covariant or contravariant by passing\ncovariant=True or contravariant=True. By default, manually\ncreated type variables are invariant. See PEP 484 and PEP 695 for more\ndetails."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nVariableOffsetSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.html#acpinstance","title":"ACPInstance","text":"ACPInstance\n\n\n\nclass ansys.acp.core.ACPInstance(*, server, filetransfer_handler, is_remote)\n\nControl an ACP instance.\n\nSupports the following operations to control an ACP instance:\n\nLoading and unloading ACP models\n\nUp- and download of files to the (possibly remote) ACP instance\n\nCheck if the ACP instance is running\n\nIn addition, the ACP instance may support starting, stopping,\nand restarting.\n\nNote that this class is not meant for instantiating directly.\nThe launch_acp() function should be used instead.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.html#examples-using-acpinstance","title":"ACPInstance > Examples using ACPInstance","text":"Examples using ACPInstance\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PrimaryPly.sequence.html#sequence","title":"sequence","text":"sequence\n\n\n\nproperty PrimaryPly.sequence: ModelingGroup | ModelingPly\n\nLinked sequence."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidMappingProperties.offset_type.html#offset_type","title":"offset_type","text":"offset_type\n\n\n\nSolidMappingProperties.offset_type: OffsetType = 'bottom_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableTsaiWuConstants.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ModelingPly.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.elemental_data.html#examples-using-modelingplyelemental_data","title":"elemental_data > Examples using ModelingPly.elemental_data","text":"Examples using ModelingPly.elemental_data\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.analysis_plies.html#analysis_plies","title":"analysis_plies","text":"analysis_plies\n\n\n\nproperty ProductionPly.analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"user_guide/concepts/feature_tree.html#feature-tree","title":"Feature tree","text":"Feature tree\n\nThe following tree shows the hierarchy of PyACP objects:\n\nThis structure determines how objects can be created, accessed, and stored in the model.\n\nFor example, ModelingPly is a child of ModelingGroup, which is a child of Model. To access a specific modeling ply, you can traverse this tree hierarchy:\n\nTo create a new modeling ply, you can use the ModelingGroup.create_modeling_ply() method:\n\nWhen cloning and storing a modeling ply, the parent argument must be a ModelingGroup object:"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty SphericalSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty CylindricalSelectionRule.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.refresh.html#refresh","title":"refresh","text":"refresh\n\n\n\nCADGeometry.refresh(path)\n\nReload the geometry from its external source.\n\nParameters\n\npath (str | PathLike[str]) – Path of the new input file."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.refresh.html#examples-using-cadgeometryrefresh","title":"refresh > Examples using CADGeometry.refresh","text":"Examples using CADGeometry.refresh\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty SphericalSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.html#importedanalysisply","title":"ImportedAnalysisPly","text":"ImportedAnalysisPly\n\n\n\nclass ansys.acp.core.ImportedAnalysisPly\n\nInstantiate an Imported Analysis Ply.\n\nParameters\n\nname (str) – The name of the Imported Analysis Ply.\n\nmaterial (Material) – Material of the Imported Analysis ply.\n\nangle (float) – Angle of the Analysis ply in degrees.\n\nthickness (float) – Thickness of the ply.\n\nactive_in_post_mode (bool) – If False, deactivates the failure analysis for this ply during post-processing.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedAnalysisPly.html#examples-using-importedanalysisply","title":"ImportedAnalysisPly > Examples using ImportedAnalysisPly","text":"Examples using ImportedAnalysisPly\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.G12_1.html#g12_1","title":"G12_1","text":"G12_1\n\n\n\nproperty ConstantWovenCharacterization.G12_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.global_ply_nr.html#global_ply_nr","title":"global_ply_nr","text":"global_ply_nr\n\n\n\nproperty ButtJointSequence.global_ply_nr: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.oriented_selection_sets.html#oriented_selection_sets","title":"oriented_selection_sets","text":"oriented_selection_sets\n\n\n\nproperty InterfaceLayer.oriented_selection_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.element_sets.html#element_sets","title":"element_sets","text":"element_sets\n\n\n\nproperty GeometricalSelectionRule.element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solid_model_prefix.html#use_solid_model_prefix","title":"use_solid_model_prefix","text":"use_solid_model_prefix\n\n\n\nproperty ImportedSolidModelExportSettings.use_solid_model_prefix: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.parallel_selection_rules.html#parallel_selection_rules","title":"parallel_selection_rules","text":"parallel_selection_rules\n\n\n\nproperty Model.parallel_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yt.html#yt","title":"Yt","text":"Yt\n\n\n\nproperty VariableWovenStressLimits.Yt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.materials.html#materials","title":"materials","text":"materials\n\n\n\nproperty Model.materials: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.materials.html#examples-using-modelmaterials","title":"materials > Examples using Model.materials","text":"Examples using Model.materials\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableFabricFiberAngle.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ParallelSelectionRule.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_element_set.html#create_element_set","title":"create_element_set","text":"create_element_set\n\n\n\nModel.create_element_set(*, name='ElementSet', middle_offset=False, element_labels=())\n\nInstantiate an Element Set.\n\nParameters\n\nname (str) – The name of the Element Set.\n\nmiddle_offset (bool) – If True, enforce that the laminate mid-plane is moved onto the reference surface.\n\nelement_labels (Collection[int]) – Label of elements to be assigned to Element Set\n\nReturn type\n\nElementSet\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.html#sectioncut","title":"SectionCut","text":"SectionCut\n\n\n\nclass ansys.acp.core.SectionCut(*, name='SectionCut', active=True, origin=(0.0, 0.0, 0.0), normal=(0.0, 0.0, 1.0), in_plane_reference_direction1=(1.0, 0.0, 0.0), scope_entire_model=True, scope_element_sets=(), extrusion_type='wire_frame', scale_factor=1.0, core_scale_factor=1.0, section_cut_type='modeling_ply_wise', intersection_type='normal_to_surface', use_default_tolerance=True, tolerance=0.0, use_default_interpolation_settings=True, search_radius=0.0, number_of_interpolation_points=1)\n\nInstantiate a Section Cut.\n\nParameters\n\nname (str) – Name of the section cut.\n\nactive (bool) – Inactive section cuts are not evaluated.\n\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\n\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\n\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\n\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\n\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\n\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\n\nscale_factor (float) – Scale factor applied to the ply thicknesses.\n\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\n\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\n\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\n\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\n\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\n\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\n\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.oriented_selection_sets.html#oriented_selection_sets","title":"oriented_selection_sets","text":"oriented_selection_sets\n\n\n\nproperty ModelingPly.oriented_selection_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.store.html#store","title":"store","text":"store\n\n\n\nEdgeSet.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Sxz.html#sxz","title":"Sxz","text":"Sxz\n\n\n\nproperty VariableWovenStressLimits.Sxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.orientation_type.html#orientation_type","title":"orientation_type","text":"orientation_type\n\n\n\nproperty SnapToGeometry.orientation_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSetType.BY_NODES.html#by_nodes","title":"BY_NODES","text":"BY_NODES\n\n\n\nEdgeSetType.BY_NODES = 'by_nodes'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.removesuffix.html#removesuffix","title":"removesuffix","text":"removesuffix\n\n\n\nLaunchMode.removesuffix(suffix, /)\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.store.html#store","title":"store","text":"store\n\n\n\nImportedModelingGroup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.html#material","title":"Material","text":"Material\n\n\n\nclass ansys.acp.core.Material(*, name='Material', ply_type='undefined', density=None, engineering_constants=None, stress_limits=None, strain_limits=None, puck_constants=None, woven_characterization=None, woven_puck_constants_1=None, woven_puck_constants_2=None, woven_stress_limits_1=None, woven_stress_limits_2=None, tsai_wu_constants=None, larc_constants=None, fabric_fiber_angle=None)\n\nInstantiate a Material.\n\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\n\nThe inactive property sets can still be set, but may not be accessible:\n\nFor stored materials, inactive property sets always return None.\n\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\n\nParameters\n\nname (str) – Name of the Material.\n\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\n\ndensity (ConstantDensity | None) – Define the density of the material.\n\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\n\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\n\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\n\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\n\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\n\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\n\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.html#examples-using-material","title":"Material > Examples using Material","text":"Examples using Material\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d.html#create_lookup_table_1d","title":"create_lookup_table_1d","text":"create_lookup_table_1d\n\n\n\nModel.create_lookup_table_1d(*, name='LookUpTable1D', origin=(0.0, 0.0, 0.0), direction=(0.0, 0.0, 0.0))\n\nInstantiate a 1D Look-Up Table.\n\nThe one-dimensional look-up table is defined along an axis. The locations\nof the data points along the axis are defined by the Location column,\nwhich:\n\ncontains scalar data. When the column contains N data points (rows),\nit has shape (N, ).\n\nis automatically created when the look-up table is instantiated\n\ncannot be deleted or renamed\n\nWhen the length of the Location column is changed, the data of the\nother columns is automatically either truncated, or extended with NaN\nvalues to fit.\n\nParameters\n\norigin (tuple[float, float, float]) – Origin of the axis w.r.t. which the look-up table locations are\ndefined.\n\ndirection (tuple[float, float, float]) – Direction of the axis w.r.t. which the look-up table locations are\ndefined.\n\nReturn type\n\nLookUpTable1D\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_lookup_table_1d.html#examples-using-modelcreate_lookup_table_1d","title":"create_lookup_table_1d > Examples using Model.create_lookup_table_1d","text":"Examples using Model.create_lookup_table_1d\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffMaterialHandling.html#dropoffmaterialhandling","title":"DropOffMaterialHandling","text":"DropOffMaterialHandling\n\n\n\nclass ansys.acp.core.DropOffMaterialHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how drop-off material is selected.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.store.html#store","title":"store","text":"store\n\n\n\nSolidModel.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ScalarData.values.html#values","title":"values","text":"values\n\n\n\nproperty ScalarData.values: ndarray[tuple[int, ...], dtype[ScalarDataT]]\n\nScalar data values as a numpy array."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedObjectHandling.COPY.html#copy","title":"COPY","text":"COPY\n\n\n\nLinkedObjectHandling.COPY = 'copy'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.id.html#id","title":"id","text":"id\n\n\n\nproperty OrientedSelectionSet.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.use_default_offset.html#use_default_offset","title":"use_default_offset","text":"use_default_offset\n\n\n\nproperty CADGeometry.use_default_offset: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nOrientedSelectionSetNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.fabrics.html#fabrics","title":"fabrics","text":"fabrics\n\n\n\nproperty Model.fabrics: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.fabrics.html#examples-using-modelfabrics","title":"fabrics > Examples using Model.fabrics","text":"Examples using Model.fabrics\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.clone.html#clone","title":"clone","text":"clone\n\n\n\nVirtualGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.keep_volume.html#keep_volume","title":"keep_volume","text":"keep_volume\n\n\n\nDockerComposeLaunchConfig.keep_volume: bool = False\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdigit.html#isdigit","title":"isdigit","text":"isdigit\n\n\n\nPuckMaterialType.isdigit(/)\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PrimaryPly.level.html#level","title":"level","text":"level\n\n\n\nproperty PrimaryPly.level: int\n\nLevel of the primary ply.\n\nPlies with a higher level inherit the thickness from adjacent plies with a lower level."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.name.html#name","title":"name","text":"name\n\n\n\nproperty ImportedModelingPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.data.html#data","title":"data","text":"data\n\n\n\nproperty LookUpTable1DColumn.data: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.in_plane_reference_direction1.html#in_plane_reference_direction1","title":"in_plane_reference_direction1","text":"in_plane_reference_direction1\n\n\n\nproperty SectionCut.in_plane_reference_direction1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.AREA.html#area","title":"AREA","text":"AREA\n\n\n\nElementalDataType.AREA = 'area'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eXc.html#exc","title":"eXc","text":"eXc\n\n\n\nproperty VariableStrainLimits.eXc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Xt.html#xt","title":"Xt","text":"Xt\n\n\n\nproperty ConstantWovenStressLimits.Xt: Any\n\n"},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide\n\nThis section provides a general overview of PyACP and its usage. The how-to\nguides provide step-by-step instructions for common tasks, while the concepts\nsection provides in-depth explanations.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isspace.html#isspace","title":"isspace","text":"isspace\n\n\n\nLaunchMode.isspace(/)\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Syz.html#syz","title":"Syz","text":"Syz\n\n\n\nproperty VariableStressLimits.Syz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system","title":"use_global_coordinate_system","text":"use_global_coordinate_system\n\n\n\nproperty SphericalSelectionRule.use_global_coordinate_system: Any\n\n"},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#pymechanical-shell-workflow","title":"PyMechanical shell workflow","text":"PyMechanical shell workflow\n\nThis example shows how to set up a simple shell model with PyACP and\nPyMechanical:\n\nThe geometry is imported into Mechanical and meshed.\n\nThe mesh is exported to ACP.\n\nA simple lay-up is defined in ACP.\n\nPlies and materials are exported from ACP, and imported into Mechanical.\n\nBoundary conditions are set in Mechanical.\n\nThe model is solved.\n\nThe results are post-processed in PyDPF - Composites.\n\nThe PyACP / PyMechanical integration is still experimental. Refer to the\nlimitations section for more information.\n\nOutputs and plots for this example are not shown in the rendered online\ndocumentation. To see the outputs and plots, run the example script or\nJupyter notebook locally."},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#import-modules-and-start-the-ansys-products","title":"PyMechanical shell workflow > Import modules and start the Ansys products","text":"Import modules and start the Ansys products\n\nImport the standard library and third-party dependencies.\n\nImport PyACP, PyMechanical, and PyDPF - Composites.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nStart the ACP, Mechanical, and DPF servers. We use a ThreadPoolExecutor\nto start them in parallel."},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#get-example-input-files","title":"PyMechanical shell workflow > Get example input files","text":"Get example input files\n\nCreate a temporary working directory, and download the example input files\nto this directory."},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#generate-the-mesh-in-pymechanical","title":"PyMechanical shell workflow > Generate the mesh in PyMechanical","text":"Generate the mesh in PyMechanical\n\nLoad the geometry into Mechanical, generate the mesh, and export it to the\nappropriate transfer format for ACP."},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#set-up-the-acp-model","title":"PyMechanical shell workflow > Set up the ACP model","text":"Set up the ACP model\n\nSetup basic ACP lay-up based on the mesh in mesh_path, and export material and composite\ndefinition file to output_path."},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#update-and-save-the-acp-model","title":"PyMechanical shell workflow > Update and Save the ACP model","text":"Update and Save the ACP model"},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#import-materials-and-plies-into-mechanical","title":"PyMechanical shell workflow > Import materials and plies into Mechanical","text":"Import materials and plies into Mechanical\n\nImport materials into Mechanical\n\nImport plies into Mechanical"},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#set-boundary-condition-and-solve","title":"PyMechanical shell workflow > Set boundary condition and solve","text":"Set boundary condition and solve"},{"objectID":"Home","href":"examples/workflows/03-pymechanical-shell-workflow.html#postprocess-results","title":"PyMechanical shell workflow > Postprocess results","text":"Postprocess results\n\nEvaluate the failure criteria using the PyDPF - Composites.\n\n\n\nDownload Jupyter notebook: 03-pymechanical-shell-workflow.ipynb\n\nDownload Python source code: 03-pymechanical-shell-workflow.py\n\nDownload zipped: 03-pymechanical-shell-workflow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportFormat.html#solidmodelexportformat","title":"SolidModelExportFormat","text":"SolidModelExportFormat\n\n\n\nclass ansys.acp.core.SolidModelExportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the export format of solid models.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nVariableOffsetSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT.html#basic_flat_plate_dat","title":"BASIC_FLAT_PLATE_DAT","text":"BASIC_FLAT_PLATE_DAT\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_DAT = 1\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_DAT.html#examples-using-examplekeysbasic_flat_plate_dat","title":"BASIC_FLAT_PLATE_DAT > Examples using ExampleKeys.BASIC_FLAT_PLATE_DAT","text":"Examples using ExampleKeys.BASIC_FLAT_PLATE_DAT\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.minimum_void_material_thickness.html#minimum_void_material_thickness","title":"minimum_void_material_thickness","text":"minimum_void_material_thickness\n\n\n\nproperty LayupMappingObject.minimum_void_material_thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR.html#weighted_nearest_neighbor","title":"WEIGHTED_NEAREST_NEIGHBOR","text":"WEIGHTED_NEAREST_NEIGHBOR\n\n\n\nLookUpTable3DInterpolationAlgorithm.WEIGHTED_NEAREST_NEIGHBOR = 'weighted_nearest_neighbor'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT.html#basic_flat_plate_refined_dat","title":"BASIC_FLAT_PLATE_REFINED_DAT","text":"BASIC_FLAT_PLATE_REFINED_DAT\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_REFINED_DAT = 2\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_thickness_correction.html#draping_thickness_correction","title":"draping_thickness_correction","text":"draping_thickness_correction\n\n\n\nproperty ModelingPly.draping_thickness_correction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_seed_point.html#draping_seed_point","title":"draping_seed_point","text":"draping_seed_point\n\n\n\nproperty ModelingPly.draping_seed_point: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.encode.html#encode","title":"encode","text":"encode\n\n\n\nLaunchMode.encode(/, encoding='utf-8', errors='strict')\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors.\nThe default is ‘strict’ meaning that encoding errors raise a\nUnicodeEncodeError.  Other possible values are ‘ignore’, ‘replace’ and\n‘xmlcharrefreplace’ as well as any other name registered with\ncodecs.register_error that can handle UnicodeEncodeErrors."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nModelingPlyElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.launch_acp.html#launch_acp","title":"launch_acp","text":"launch_acp\n\n\n\nansys.acp.core.launch_acp(config=None, launch_mode=None, timeout=30.0, auto_transfer_files=True)\n\nLaunch an ACP instance.\n\nLaunch the ACP gRPC server with the given configuration. If no\nconfiguration is provided, the configured default is used.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide for details.\n\nParameters\n\nconfig (DirectLaunchConfig | DockerComposeLaunchConfig | ConnectLaunchConfig | ConnectLocalLaunchConfig | None) – The configuration used for launching ACP. If unspecified, the\ndefault for the given launch mode is used.\n\nlaunch_mode (LaunchMode | None) – Specifies which ACP launcher is used. One of direct,\ndocker_compose, or connect. If unspecified, the\nconfigured default is used. If no default is configured,\ndirect is used.\n\ntimeout (float | None) – Timeout to wait until ACP responds. If None is specified,\nthe check that ACP has started is skipped.\n\nauto_transfer_files (bool) – Determines whether input and output files are automatically\ntransferred (up- or downloaded) to the server. If True,\nfiles are automatically transferred, and all paths in the\nimport or export methods are local paths. If False,\nfile transfer needs to be handled manually, and the paths\nare relative to the server working directory.\nIf the launch_mode is \"direct\", this only has an\neffect if the current working directory is changed after\nlaunching the server.\n\nReturns\n\nACP instance which can be used to control the server, and\ninstantiate objects on the server.\n\nReturn type\n\nACPInstance[ControllableServerProtocol]"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.launch_acp.html#examples-using-launch_acp","title":"launch_acp > Examples using launch_acp","text":"Examples using launch_acp\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.sub_shapes.html#sub_shapes","title":"sub_shapes","text":"sub_shapes\n\n\n\nproperty VirtualGeometry.sub_shapes: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.base_element_rosettes.html#base_element_rosettes","title":"base_element_rosettes","text":"base_element_rosettes\n\n\n\nproperty LayupMappingObject.base_element_rosettes: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.delete.html#delete","title":"delete","text":"delete\n\n\n\nModel.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Zt.html#zt","title":"Zt","text":"Zt\n\n\n\nproperty VariableWovenStressLimits.Zt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.physical_dimension.html#physical_dimension","title":"physical_dimension","text":"physical_dimension\n\n\n\nproperty LookUpTable1DColumn.physical_dimension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffMaterialHandling.GLOBAL.html#global","title":"GLOBAL","text":"GLOBAL\n\n\n\nCutOffMaterialHandling.GLOBAL = 'global'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.layup_mapping_objects.html#layup_mapping_objects","title":"layup_mapping_objects","text":"layup_mapping_objects\n\n\n\nproperty ImportedSolidModel.layup_mapping_objects: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G12.html#g12","title":"G12","text":"G12\n\n\n\nproperty VariableEngineeringConstants.G12: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.restart.html#restart","title":"restart","text":"restart\n\n\n\nACPInstance.restart(stop_timeout=None, start_timeout=None)\n\nStop, then start the product instance.\n\nParameters\n\nstop_timeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\n\nstart_timeout (float | None) – Timeout to wait until ACP responds. If None is specified,\nthe check that ACP has started is skipped.\n\nRaises\n\nRuntimeError – If the instance is already in the stopped state.\n\nRuntimeError – If the instance does not allow restarting."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.number_of_interpolation_points.html#number_of_interpolation_points","title":"number_of_interpolation_points","text":"number_of_interpolation_points\n\n\n\nproperty SectionCut.number_of_interpolation_points: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.delete.html#delete","title":"delete","text":"delete\n\n\n\nEdgeSet.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/other_types.html#other-types","title":"Other types","text":"Other types\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.MONOLITHIC.html#monolithic","title":"MONOLITHIC","text":"MONOLITHIC\n\n\n\nExtrusionMethod.MONOLITHIC = 'monolithic'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.zfill.html#zfill","title":"zfill","text":"zfill\n\n\n\nPuckMaterialType.zfill(width, /)\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableWovenStressLimits.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ArrowType.html#arrowtype","title":"ArrowType","text":"ArrowType\n\n\n\nclass ansys.acp.core.ArrowType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of arrow to be created for directions in the ply geometry export.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.path.html#path","title":"path","text":"path\n\n\n\nproperty CADComponent.path: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_disabled_on_bottom_sets.html#drop_off_disabled_on_bottom_sets","title":"drop_off_disabled_on_bottom_sets","text":"drop_off_disabled_on_bottom_sets\n\n\n\nproperty DropOffSettings.drop_off_disabled_on_bottom_sets: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.upper_limit.html#upper_limit","title":"upper_limit","text":"upper_limit\n\n\n\nFieldVariable.upper_limit: float\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.minimum_volume.html#minimum_volume","title":"minimum_volume","text":"minimum_volume\n\n\n\nproperty SolidModel.minimum_volume: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.skip_elements_without_plies.html#skip_elements_without_plies","title":"skip_elements_without_plies","text":"skip_elements_without_plies\n\n\n\nproperty SolidModel.skip_elements_without_plies: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.status.html#status","title":"status","text":"status\n\n\n\nproperty CADGeometry.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.fracture_angle_under_compression.html#fracture_angle_under_compression","title":"fracture_angle_under_compression","text":"fracture_angle_under_compression\n\n\n\nproperty VariableLaRCConstants.fracture_angle_under_compression: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.export_becas_input.html#export_becas_input","title":"export_becas_input","text":"export_becas_input\n\n\n\nSectionCut.export_becas_input(path, *, export_strength_limits=True)\n\nExport the section cut to BECAS input files.\n\nParameters\n\npath (str | PathLike[str]) – Path to the directory where the input files are saved.\n\nexport_strength_limits (bool) – Determines whether strength limits are exported to the\nBECAS input files."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_ANGLE.html#draped_transverse_angle","title":"DRAPED_TRANSVERSE_ANGLE","text":"DRAPED_TRANSVERSE_ANGLE\n\n\n\nElementalDataType.DRAPED_TRANSVERSE_ANGLE = 'draped_transverse_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.name.html#name","title":"name","text":"name\n\n\n\nproperty LookUpTable3DColumn.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.SI.html#si","title":"SI","text":"SI\n\n\n\nUnitSystemType.SI = 'si'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.SI.html#examples-using-unitsystemtypesi","title":"SI > Examples using UnitSystemType.SI","text":"Examples using UnitSystemType.SI\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.radius.html#radius","title":"radius","text":"radius\n\n\n\nproperty CylindricalSelectionRule.radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB.html#class40_cdb","title":"CLASS40_CDB","text":"CLASS40_CDB\n\n\n\nExampleKeys.CLASS40_CDB = 13\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_CDB.html#examples-using-examplekeysclass40_cdb","title":"CLASS40_CDB > Examples using ExampleKeys.CLASS40_CDB","text":"Examples using ExampleKeys.CLASS40_CDB\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.delete.html#delete","title":"delete","text":"delete\n\n\n\nFabric.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.id.html#id","title":"id","text":"id\n\n\n\nproperty FieldDefinition.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.export.html#export","title":"export","text":"export\n\n\n\nSolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\n\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\"."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.translate.html#translate","title":"translate","text":"translate\n\n\n\nLaunchMode.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\ntable\n\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.delete.html#delete","title":"delete","text":"delete\n\n\n\nFieldDefinition.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.clone.html#clone","title":"clone","text":"clone\n\n\n\nElementSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.auto_draping_direction.html#auto_draping_direction","title":"auto_draping_direction","text":"auto_draping_direction\n\n\n\nproperty OrientedSelectionSet.auto_draping_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._model_printer.Node.html#node","title":"Node","text":"Node\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._model_printer.Node(label, children=None)\n\nA node in a tree representation of the model.\n\nParameters\n\nlabel (str) – Label of the node.\n\nchildren (list[Node] | None) – Children of the node."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ConnectLaunchConfig.url_filetransfer.html#url_filetransfer","title":"url_filetransfer","text":"url_filetransfer\n\n\n\nConnectLaunchConfig.url_filetransfer: str = 'localhost:50556'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.fiber_direction.html#fiber_direction","title":"fiber_direction","text":"fiber_direction\n\n\n\nProductionPlyElementalData.fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.field_variable_name.html#field_variable_name","title":"field_variable_name","text":"field_variable_name\n\n\n\nproperty FieldDefinition.field_variable_name: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.price.html#price","title":"price","text":"price\n\n\n\nModelElementalData.price: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.area_weight.html#area_weight","title":"area_weight","text":"area_weight\n\n\n\nproperty Fabric.area_weight: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.export.html#export","title":"export","text":"export\n\n\n\nImportedSolidModel.export(path, *, format)\n\nExport the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model is saved.\n\nformat (SolidModelExportFormat) – Format of the exported file. Available formats are \"ansys:h5\"\nand \"ansys:cdb\"."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nCylindricalSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"examples/modeling_features/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n01:43.866 total execution time for 12 files from examples/modeling_features:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_modeling_features_007-sensor.py (007-sensor.py)\n\n00:31.107\n\n0.0\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py (031-imported-solid-model.py)\n\n00:17.640\n\n0.0\n\nsphx_glr_examples_modeling_features_001-materials.py (001-materials.py)\n\n00:10.691\n\n0.0\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py (002-rosettes-ply-directions.py)\n\n00:08.950\n\n0.0\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py (010-sandwich-panel-layup.py)\n\n00:06.407\n\n0.0\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py (004-advanced-selection-rules.py)\n\n00:04.999\n\n0.0\n\nsphx_glr_examples_modeling_features_020-solid_model.py (020-solid_model.py)\n\n00:04.604\n\n0.0\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py (003-simple-selection-rules.py)\n\n00:04.243\n\n0.0\n\nsphx_glr_examples_modeling_features_030-imported-plies.py (030-imported-plies.py)\n\n00:03.964\n\n0.0\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py (050-composite_cae_h5.py)\n\n00:03.952\n\n0.0\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py (006-layup-thickness-definitions.py)\n\n00:03.688\n\n0.0\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py (005-ply-direction-lookup-table.py)\n\n00:03.620\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.html#hdf5compositecaeprojectionmode","title":"HDF5CompositeCAEProjectionMode","text":"HDF5CompositeCAEProjectionMode\n\n\n\nclass ansys.acp.core.HDF5CompositeCAEProjectionMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the projection mode of the HDF5 Composite CAE file.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEProjectionMode.html#examples-using-hdf5compositecaeprojectionmode","title":"HDF5CompositeCAEProjectionMode > Examples using HDF5CompositeCAEProjectionMode","text":"Examples using HDF5CompositeCAEProjectionMode\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_pos.html#p_21_pos","title":"p_21_pos","text":"p_21_pos\n\n\n\nproperty ConstantPuckConstants.p_21_pos: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.store.html#store","title":"store","text":"store\n\n\n\nLayupMappingObject.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.upper.html#upper","title":"upper","text":"upper\n\n\n\nPuckMaterialType.upper(/)\n\nReturn a copy of the string converted to uppercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty TubeSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.clone.html#clone","title":"clone","text":"clone\n\n\n\nImportedModelingGroup.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.nu12_2.html#nu12_2","title":"nu12_2","text":"nu12_2\n\n\n\nproperty VariableWovenCharacterization.nu12_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.id.html#id","title":"id","text":"id\n\n\n\nproperty LookUpTable1D.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nproperty SolidElementSet.element_labels: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.name.html#name","title":"name","text":"name\n\n\n\nproperty LookUpTable1D.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.html#dropoffsettings","title":"DropOffSettings","text":"DropOffSettings\n\n\n\nclass ansys.acp.core.DropOffSettings(*, drop_off_type='inside_ply', disable_drop_offs_on_bottom=False, drop_off_disabled_on_bottom_sets=(), disable_drop_offs_on_top=False, drop_off_disabled_on_top_sets=(), connect_butt_joined_plies=True, _parent_object=None, _pb_object=None, _attribute_path=None)\n\nDefines the drop-off settings for a solid model.\n\nParameters\n\ndrop_off_type (DropOffType) – Determines whether the ply’s drop-off is inside or outside the boundary\nof the ply.\n\ndisable_drop_offs_on_bottom (bool) – Whether to remove drop-offs on the bottom surface of the laminate.\n\ndrop_off_disabled_on_bottom_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the bottom\nsurface are disabled.\n\ndisable_drop_offs_on_top (bool) – Whether to remove drop-offs on the top surface of the laminate.\n\ndrop_off_disabled_on_top_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets on which drop-offs at the top\nsurface are disabled.\n\nconnect_butt_joined_plies (bool) – Prevent an element drop-off of two adjacent, sequential plies in the same\nmodeling group.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_neg.html#p_22_neg","title":"p_22_neg","text":"p_22_neg\n\n\n\nproperty ConstantPuckConstants.p_22_neg: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_section_index.html#use_default_section_index","title":"use_default_section_index","text":"use_default_section_index\n\n\n\nproperty ImportedSolidModelExportSettings.use_default_section_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nGeometricalSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.store.html#store","title":"store","text":"store\n\n\n\nStackup.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.PRODUCTION_PLY_WISE.html#production_ply_wise","title":"PRODUCTION_PLY_WISE","text":"PRODUCTION_PLY_WISE\n\n\n\nExtrusionMethod.PRODUCTION_PLY_WISE = 'production_ply_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ImportedProductionPly.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.html#sphericalselectionruleelementaldata","title":"SphericalSelectionRuleElementalData","text":"SphericalSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Spherical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubShape.cad_geometry.html#cad_geometry","title":"cad_geometry","text":"cad_geometry\n\n\n\nproperty SubShape.cad_geometry: CADGeometry\n\nLinked CAD geometry."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty EdgeSet.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.radius_direction.html#radius_direction","title":"radius_direction","text":"radius_direction\n\n\n\nproperty VariableOffsetSelectionRule.radius_direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PrimaryPly.clone.html#clone","title":"clone","text":"clone\n\n\n\nPrimaryPly.clone()\n\nCreate a new unstored PrimaryPly with the same properties.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometrical_rule_type.html#geometrical_rule_type","title":"geometrical_rule_type","text":"geometrical_rule_type\n\n\n\nproperty GeometricalSelectionRule.geometrical_rule_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.rosette_selection_method.html#rosette_selection_method","title":"rosette_selection_method","text":"rosette_selection_method\n\n\n\nproperty ImportedModelingPly.rosette_selection_method: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.name.html#name","title":"name","text":"name\n\n\n\nproperty EdgeSet.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.stop.html#stop","title":"stop","text":"stop\n\n\n\nACPInstance.stop(*, timeout=None)\n\nStop the product instance.\n\nParameters\n\ntimeout (float | None) – Time in seconds after which the instance is forcefully stopped. Note\nthat not all launch methods may implement this parameter. If they\ndo not, the parameter is ignored.\n\nRaises\n\nRuntimeError – If the instance is already in the stopped state.\n\nRuntimeError – If the instance does not allow stopping."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.effective_strain.html#effective_strain","title":"effective_strain","text":"effective_strain\n\n\n\nproperty VariableStrainLimits.effective_strain: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ProductionPly.id.html#id","title":"id","text":"id\n\n\n\nproperty ProductionPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.html#variablewovencharacterization","title":"VariableWovenCharacterization","text":"VariableWovenCharacterization\n\n\n\nclass ansys.acp.core.material_property_sets.VariableWovenCharacterization(*, _parent_object=None, _attribute_path=None)\n\nVariable woven characterization material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty SolidModel.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_nodes.html#element_nodes","title":"element_nodes","text":"element_nodes\n\n\n\nMeshData.element_nodes: ndarray[tuple[int, ...], dtype[int32]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.oriented_selection_sets.html#oriented_selection_sets","title":"oriented_selection_sets","text":"oriented_selection_sets\n\n\n\nproperty Model.oriented_selection_sets: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.oriented_selection_sets.html#examples-using-modeloriented_selection_sets","title":"oriented_selection_sets > Examples using Model.oriented_selection_sets","text":"Examples using Model.oriented_selection_sets\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.SPECIFY_THICKNESS.html#specify_thickness","title":"SPECIFY_THICKNESS","text":"SPECIFY_THICKNESS\n\n\n\nExtrusionMethod.SPECIFY_THICKNESS = 'specify_thickness'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule.html#template_rule","title":"template_rule","text":"template_rule\n\n\n\nproperty LinkedSelectionRule.template_rule: bool\n\nWhether the selection rule is a template rule."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.template_rule.html#examples-using-linkedselectionruletemplate_rule","title":"template_rule > Examples using LinkedSelectionRule.template_rule","text":"Examples using LinkedSelectionRule.template_rule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.ljust.html#ljust","title":"ljust","text":"ljust\n\n\n\nPuckMaterialType.ljust(width, fillchar=' ', /)\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableTsaiWuConstants.YZ.html#yz","title":"YZ","text":"YZ\n\n\n\nproperty VariableTsaiWuConstants.YZ: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.use_global_coordinate_system.html#use_global_coordinate_system","title":"use_global_coordinate_system","text":"use_global_coordinate_system\n\n\n\nproperty ParallelSelectionRule.use_global_coordinate_system: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.clone.html#clone","title":"clone","text":"clone\n\n\n\nSolidModel.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eSyz.html#esyz","title":"eSyz","text":"eSyz\n\n\n\nproperty ConstantStrainLimits.eSyz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.BASIC_FLAT_PLATE_ACPH5.html#basic_flat_plate_acph5","title":"BASIC_FLAT_PLATE_ACPH5","text":"BASIC_FLAT_PLATE_ACPH5\n\n\n\nExampleKeys.BASIC_FLAT_PLATE_ACPH5 = 3\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.CGS.html#cgs","title":"CGS","text":"CGS\n\n\n\nUnitSystemType.CGS = 'cgs'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.woven_stress_limits_2.html#woven_stress_limits_2","title":"woven_stress_limits_2","text":"woven_stress_limits_2\n\n\n\nproperty Material.woven_stress_limits_2: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.html#stackup","title":"Stackup","text":"Stackup\n\n\n\nclass ansys.acp.core.Stackup(*, name='Stackup', symmetry='no_symmetry', topdown=True, fabrics=(), area_price=0.0, drop_off_material_handling='global', drop_off_material=None, cut_off_material=None, cut_off_material_handling='computed', draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Stackup.\n\nParameters\n\nname (str) – Name of the stackup.\n\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\n\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\n\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\n\narea_price (float) – Price per area of the stackup.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.html#examples-using-stackup","title":"Stackup > Examples using Stackup","text":"Examples using Stackup\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IgnorableEntity.ELEMENT_SETS.html#element_sets","title":"ELEMENT_SETS","text":"ELEMENT_SETS\n\n\n\nIgnorableEntity.ELEMENT_SETS = 'element_sets'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.html#launchmode","title":"LaunchMode","text":"LaunchMode\n\n\n\nclass ansys.acp.core.LaunchMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nAvailable launch modes for ACP.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty SubLaminate.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.uMKS.html#umks","title":"uMKS","text":"uMKS\n\n\n\nUnitSystemType.uMKS = 'umks'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_types.html#element_types","title":"element_types","text":"element_types\n\n\n\nMeshData.element_types: ndarray[tuple[int, ...], dtype[int32]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.symmetry.html#symmetry","title":"symmetry","text":"symmetry\n\n\n\nproperty SubLaminate.symmetry: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedObjectHandling.DISCARD.html#discard","title":"DISCARD","text":"DISCARD\n\n\n\nLinkedObjectHandling.DISCARD = 'discard'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.delete.html#delete","title":"delete","text":"delete\n\n\n\nRosette.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.minimum_analysis_ply_thickness.html#minimum_analysis_ply_thickness","title":"minimum_analysis_ply_thickness","text":"minimum_analysis_ply_thickness\n\n\n\nproperty Model.minimum_analysis_ply_thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.relative_thickness_correction.html#relative_thickness_correction","title":"relative_thickness_correction","text":"relative_thickness_correction\n\n\n\nAnalysisPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_transverse_direction.html#draped_transverse_direction","title":"draped_transverse_direction","text":"draped_transverse_direction\n\n\n\nProductionPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.relative_rule.html#relative_rule","title":"relative_rule","text":"relative_rule\n\n\n\nproperty ParallelSelectionRule.relative_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.orientation_type.html#orientation_type","title":"orientation_type","text":"orientation_type\n\n\n\nproperty CutOffGeometry.orientation_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.depth.html#depth","title":"depth","text":"depth\n\n\n\nproperty ExtrusionGuide.depth: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.cut_off_material.html#cut_off_material","title":"cut_off_material","text":"cut_off_material\n\n\n\nproperty ImportedSolidModel.cut_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nProductionPlyElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.delete.html#delete","title":"delete","text":"delete\n\n\n\nInterfaceLayer.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty CutOffSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty Model.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.mesh.html#examples-using-modelmesh","title":"mesh > Examples using Model.mesh","text":"Examples using Model.mesh\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.InterpolationOptions.cached.html#cached","title":"cached","text":"cached\n\n\n\nInterpolationOptions.cached: bool\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_2.html#e2_2","title":"E2_2","text":"E2_2\n\n\n\nproperty VariableWovenCharacterization.E2_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH.html#length","title":"LENGTH","text":"LENGTH\n\n\n\nPhysicalDimension.LENGTH = 'length'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.LENGTH.html#examples-using-physicaldimensionlength","title":"LENGTH > Examples using PhysicalDimension.LENGTH","text":"Examples using PhysicalDimension.LENGTH\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.radius.html#radius","title":"radius","text":"radius\n\n\n\nproperty ExtrusionGuide.radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.material_index.html#material_index","title":"material_index","text":"material_index\n\n\n\nproperty ImportedSolidModelExportSettings.material_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1DColumn.clone.html#clone","title":"clone","text":"clone\n\n\n\nLookUpTable1DColumn.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yt.html#yt","title":"Yt","text":"Yt\n\n\n\nproperty ConstantStressLimits.Yt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.drop_off_type.html#drop_off_type","title":"drop_off_type","text":"drop_off_type\n\n\n\nproperty DropOffSettings.drop_off_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.html#variableengineeringconstants","title":"VariableEngineeringConstants","text":"VariableEngineeringConstants\n\n\n\nclass ansys.acp.core.material_property_sets.VariableEngineeringConstants(*, _parent_object=None, _attribute_path=None)\n\nVariable engineering constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SolidElementSet.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.id.html#id","title":"id","text":"id\n\n\n\nproperty ImportedModelingPly.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.area.html#area","title":"area","text":"area\n\n\n\nModelElementalData.area: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessFieldType.ABSOLUTE_VALUES.html#absolute_values","title":"ABSOLUTE_VALUES","text":"ABSOLUTE_VALUES\n\n\n\nThicknessFieldType.ABSOLUTE_VALUES = 'absolute_values'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nModelNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nSphericalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.store.html#store","title":"store","text":"store\n\n\n\nButtJointSequence.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.volume.html#volume","title":"volume","text":"volume\n\n\n\nModelElementalData.volume: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Fabric.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable1D.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty LookUpTable1D.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_solid_model.html#create_solid_model","title":"create_solid_model","text":"create_solid_model\n\n\n\nModel.create_solid_model(*, name='SolidModel', active=True, element_sets=(), extrusion_method='analysis_ply_wise', max_element_thickness=1.0, ply_group_pointers=(), offset_direction_type='shell_normal', skip_elements_without_plies=False, drop_off_material=None, cut_off_material=None, delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, drop_off_settings=<ansys.acp.core._tree_objects.solid_model.DropOffSettings object>, export_settings=<ansys.acp.core._tree_objects.solid_model.SolidModelExportSettings object>)\n\nInstantiate a solid model.\n\nParameters\n\nname (str) – Name of the solid model.\n\nactive (bool) – Inactive solid models are not computed, and ignored in the analysis.\n\nelement_sets (Iterable[ElementSet | OrientedSelectionSet]) – Element sets or oriented selection sets determining the extent of\nthe solid model.\n\nextrusion_method (ExtrusionMethod) – Determines how plies are bundled in the layered solid elements.\n\nmax_element_thickness (float) – Maximum thickness of the layered solid elements. A new element is\nintroduced if the thickness exceeds this value.\nOnly used if the extrusion_method is one of SPECIFY_THICKNESS,\nMATERIAL_WISE, or SANDWICH_WISE.\n\nply_group_pointers (Iterable[ModelingPly]) – Explicitly defines modeling plies where a new element is introduced.\nOnly used if the extrusion_method is USER_DEFINED.\n\noffset_direction_type (SolidModelOffsetDirectionType) – Determines how the extrusion direction is defined. With SHELL_NORMAL,\nthe normal direction of the shell is used during the entire extrusion.\nWith SURFACE_NORMAL, the offset direction is re-evaluated based\non the surface of the solid model during the extrusion.\n\nskip_elements_without_plies (bool) – If True, elements without plies are automatically removed from the\nregion of extrusion. This means that no drop-off elements are created\nfor these elements.\n\ndrop_off_material (Material | None) – This material is assigned to the layered solid drop-off elements if\ndrop_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\ndelete_bad_elements (bool) – If True, a final element check is performed to remove erroneous elements.\n\nwarping_limit (float) – Maximum allowable warping limit used in the element shape check. Elements\nwith a warping limit exceeding this value are removed.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are removed.\nWith the default value of 0, only inverted or zero-volume elements\nare removed.\nOnly used if delete_bad_elements is True.\n\ndrop_off_settings (DropOffSettings) – Determines how drop-off elements are handled in the solid model extrusion.\n\nexport_settings (SolidModelExportSettings) – Defines the settings for exporting the solid model.\n\nReturn type\n\nSolidModel\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_solid_model.html#examples-using-modelcreate_solid_model","title":"create_solid_model > Examples using Model.create_solid_model","text":"Examples using Model.create_solid_model\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nModelingPlyElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/tree_objects.html#acp-objects","title":"ACP objects","text":"ACP objects\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.active.html#active","title":"active","text":"active\n\n\n\nproperty ExtrusionGuide.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.id.html#id","title":"id","text":"id\n\n\n\nproperty InterfaceLayer.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VectorData.html#vectordata","title":"VectorData","text":"VectorData\n\n\n\nclass ansys.acp.core.mesh_data.VectorData(field_names, labels, values, component_name)\n\nClass that encapsulates vector data.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_GEOMETRY.html#by_geometry","title":"BY_GEOMETRY","text":"BY_GEOMETRY\n\n\n\nExtrusionGuideType.BY_GEOMETRY = 'by_geometry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.reference_direction.html#reference_direction","title":"reference_direction","text":"reference_direction\n\n\n\nModelingPlyElementalData.reference_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.FIBER_DIRECTION.html#fiber_direction","title":"FIBER_DIRECTION","text":"FIBER_DIRECTION\n\n\n\nElementalDataType.FIBER_DIRECTION = 'fiber_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.OFFSET.html#offset","title":"OFFSET","text":"OFFSET\n\n\n\nElementalDataType.OFFSET = 'offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nModelElementalData.thickness: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffRuleType.html#cutoffruletype","title":"CutOffRuleType","text":"CutOffRuleType\n\n\n\nclass ansys.acp.core.CutOffRuleType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how a cut off rule is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.center.html#center","title":"center","text":"center\n\n\n\nLaunchMode.center(width, fillchar=' ', /)\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space)."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.draped_transverse_angle.html#draped_transverse_angle","title":"draped_transverse_angle","text":"draped_transverse_angle\n\n\n\nAnalysisPlyElementalData.draped_transverse_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isnumeric.html#isnumeric","title":"isnumeric","text":"isnumeric\n\n\n\nLaunchMode.isnumeric(/)\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.STL.html#stl","title":"STL","text":"STL\n\n\n\nPlyGeometryExportFormat.STL = 'stl'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nSolidElementSetElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.nu12_1.html#nu12_1","title":"nu12_1","text":"nu12_1\n\n\n\nproperty ConstantWovenCharacterization.nu12_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty ImportedSolidModel.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.upload_file.html#upload_file","title":"upload_file","text":"upload_file\n\n\n\nACPInstance.upload_file(local_path)\n\nUpload a file to the server.\n\nDo not execute this function with untrusted input parameters.\nSee the security guide\nfor details.\n\nParameters\n\nlocal_path (str | PathLike[str]) – The path of the file to be uploaded.\n\nReturns\n\nThe path of the uploaded file on the server.\n\nReturn type\n\nPurePath"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.upload_file.html#examples-using-acpinstanceupload_file","title":"upload_file > Examples using ACPInstance.upload_file","text":"Examples using ACPInstance.upload_file\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.removeprefix.html#removeprefix","title":"removeprefix","text":"removeprefix\n\n\n\nLaunchMode.removeprefix(prefix, /)\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidMappingProperties.html#solidmappingproperties","title":"SolidMappingProperties","text":"SolidMappingProperties\n\n\n\nclass ansys.acp.core.SolidMappingProperties(offset_type='bottom_offset')\n\nProperties for importing HDF5 Composite CAE files as imported plies.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.status.html#status","title":"status","text":"status\n\n\n\nproperty LookUpTable3D.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.mat_type.html#mat_type","title":"mat_type","text":"mat_type\n\n\n\nproperty VariablePuckConstants.mat_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nParallelSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.html#snaptogeometryorientationtype","title":"SnapToGeometryOrientationType","text":"SnapToGeometryOrientationType\n\n\n\nclass ansys.acp.core.SnapToGeometryOrientationType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines which layup face a snap-to geometry is applies to. Note that the _UNDEFINED option should not be used. It is equivalent to using BOTTOM, and included only for compatibility with existing models.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometryOrientationType.html#examples-using-snaptogeometryorientationtype","title":"SnapToGeometryOrientationType > Examples using SnapToGeometryOrientationType","text":"Examples using SnapToGeometryOrientationType\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.coordinate_system_index.html#coordinate_system_index","title":"coordinate_system_index","text":"coordinate_system_index\n\n\n\nproperty ImportedSolidModelExportSettings.coordinate_system_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty Stackup.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty CutOffSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G12_1.html#g12_1","title":"G12_1","text":"G12_1\n\n\n\nproperty VariableWovenCharacterization.G12_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ExtrusionGuide.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData.html#cutoffselectionrulenodaldata","title":"CutOffSelectionRuleNodalData","text":"CutOffSelectionRuleNodalData\n\n\n\nclass ansys.acp.core.mesh_data.CutOffSelectionRuleNodalData(node_labels)\n\nRepresents nodal data for a Cut-Off Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.delete.html#delete","title":"delete","text":"delete\n\n\n\nLookUpTable3DColumn.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyGeometryExportFormat.IGES.html#iges","title":"IGES","text":"IGES\n\n\n\nPlyGeometryExportFormat.IGES = 'iges'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.cylindrical_selection_rules.html#cylindrical_selection_rules","title":"cylindrical_selection_rules","text":"cylindrical_selection_rules\n\n\n\nproperty Model.cylindrical_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.p_22_neg.html#p_22_neg","title":"p_22_neg","text":"p_22_neg\n\n\n\nproperty VariablePuckConstants.p_22_neg: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.NodalDataType.PLY_OFFSET.html#ply_offset","title":"PLY_OFFSET","text":"PLY_OFFSET\n\n\n\nNodalDataType.PLY_OFFSET = 'ply_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty Stackup.thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.endswith.html#endswith","title":"endswith","text":"endswith\n\n\n\nLaunchMode.endswith(suffix, [start, [end]]) -> bool\n\nReturn True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_type.html#draping_type","title":"draping_type","text":"draping_type\n\n\n\nproperty ModelingPly.draping_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.html#solidelementset","title":"SolidElementSet","text":"SolidElementSet\n\n\n\nclass ansys.acp.core.SolidElementSet\n\nInstantiate a Solid Element Set.\n\nParameters\n\nname (str) – The name of the production ply.\n\nelement_labels – Label of elements.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.clone.html#clone","title":"clone","text":"clone\n\n\n\nSnapToGeometry.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.lookup_tables_1d.html#lookup_tables_1d","title":"lookup_tables_1d","text":"lookup_tables_1d\n\n\n\nproperty Model.lookup_tables_1d: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.draped_fiber_angle.html#draped_fiber_angle","title":"draped_fiber_angle","text":"draped_fiber_angle\n\n\n\nProductionPlyElementalData.draped_fiber_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty TubeSelectionRule.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_fiber_direction.html#draped_fiber_direction","title":"draped_fiber_direction","text":"draped_fiber_direction\n\n\n\nModelingPlyElementalData.draped_fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_22_pos.html#p_22_pos","title":"p_22_pos","text":"p_22_pos\n\n\n\nproperty ConstantPuckConstants.p_22_pos: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.shell_mesh.html#shell_mesh","title":"shell_mesh","text":"shell_mesh\n\n\n\nproperty AnalysisPly.shell_mesh: MeshData\n\nShell mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DockerComposeLaunchConfig.compose_file.html#compose_file","title":"compose_file","text":"compose_file\n\n\n\nDockerComposeLaunchConfig.compose_file: str | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty SamplingPoint.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isascii.html#isascii","title":"isascii","text":"isascii\n\n\n\nLaunchMode.isascii(/)\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.delete.html#delete","title":"delete","text":"delete\n\n\n\nVirtualGeometry.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E1_2.html#e1_2","title":"E1_2","text":"E1_2\n\n\n\nproperty ConstantWovenCharacterization.E1_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.export_settings.html#export_settings","title":"export_settings","text":"export_settings\n\n\n\nproperty ImportedSolidModel.export_settings: AttribT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.area_price.html#area_price","title":"area_price","text":"area_price\n\n\n\nproperty Fabric.area_price: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.html#virtualgeometry","title":"VirtualGeometry","text":"VirtualGeometry\n\n\n\nclass ansys.acp.core.VirtualGeometry(*, name='VirtualGeometry', cad_components=None, sub_shapes=None)\n\nInstantiate a Virtual Geometry.\n\nThe virtual geometry can be created from a set of CAD components or from a set of SubShapes.\nCombining CAD Components and SubShapes is not allowed.\n\nParameters\n\nname (str) – Name of the Virtual Geometry.\n\ncad_components (Iterable[CADComponent] | None) – CAD Components that make up the virtual geometry.\n\nsub_shapes (Iterable[SubShape] | None) – SubShapes that make up the virtual geometry.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.html#examples-using-virtualgeometry","title":"VirtualGeometry > Examples using VirtualGeometry","text":"Examples using VirtualGeometry\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.orientation_2.html#orientation_2","title":"orientation_2","text":"orientation_2\n\n\n\nproperty VariableWovenCharacterization.orientation_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.nodal_data.html#nodal_data","title":"nodal_data","text":"nodal_data\n\n\n\nproperty ModelingGroup.nodal_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.startswith.html#startswith","title":"startswith","text":"startswith\n\n\n\nPuckMaterialType.startswith(prefix, [start, [end]]) -> bool\n\nReturn True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.edge_set.html#edge_set","title":"edge_set","text":"edge_set\n\n\n\nproperty ExtrusionGuide.edge_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.area_weight.html#area_weight","title":"area_weight","text":"area_weight\n\n\n\nproperty SubLaminate.area_weight: Any\n\n"},{"objectID":"Home","href":"api/mesh_data.html#mesh-data-objects","title":"Mesh data objects","text":"Mesh data objects\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutType.ANALYSIS_PLY_WISE.html#analysis_ply_wise","title":"ANALYSIS_PLY_WISE","text":"ANALYSIS_PLY_WISE\n\n\n\nSectionCutType.ANALYSIS_PLY_WISE = 'analysis_ply_wise'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.store.html#store","title":"store","text":"store\n\n\n\nFieldDefinition.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.G23_1.html#g23_1","title":"G23_1","text":"G23_1\n\n\n\nproperty VariableWovenCharacterization.G23_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.status.html#status","title":"status","text":"status\n\n\n\nproperty Material.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.interface_layers.html#interface_layers","title":"interface_layers","text":"interface_layers\n\n\n\nproperty ModelingGroup.interface_layers: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty SphericalSelectionRule.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.store.html#store","title":"store","text":"store\n\n\n\nInterfaceLayer.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.server_version.html#server_version","title":"server_version","text":"server_version\n\n\n\nproperty ACPInstance.server_version: str\n\nVersion of the connected server."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isupper.html#isupper","title":"isupper","text":"isupper\n\n\n\nPuckMaterialType.isupper(/)\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES.html#tabular_values","title":"TABULAR_VALUES","text":"TABULAR_VALUES\n\n\n\nDrapingType.TABULAR_VALUES = 'tabular_values'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.TABULAR_VALUES.html#examples-using-drapingtypetabular_values","title":"TABULAR_VALUES > Examples using DrapingType.TABULAR_VALUES","text":"Examples using DrapingType.TABULAR_VALUES\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.material.html#material","title":"material","text":"material\n\n\n\nproperty Fabric.material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_CDB.html#ansys_cdb","title":"ANSYS_CDB","text":"ANSYS_CDB\n\n\n\nSolidModelImportFormat.ANSYS_CDB = 'ansys:cdb'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty VariableOffsetSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_solsh_elements.html#use_solsh_elements","title":"use_solsh_elements","text":"use_solsh_elements\n\n\n\nproperty ImportedSolidModelExportSettings.use_solsh_elements: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.NO_DRAPING.html#no_draping","title":"NO_DRAPING","text":"NO_DRAPING\n\n\n\nDrapingType.NO_DRAPING = 'no_draping'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB.html#class40_agdb","title":"CLASS40_AGDB","text":"CLASS40_AGDB\n\n\n\nExampleKeys.CLASS40_AGDB = 12\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CLASS40_AGDB.html#examples-using-examplekeysclass40_agdb","title":"CLASS40_AGDB > Examples using ExampleKeys.CLASS40_AGDB","text":"Examples using ExampleKeys.CLASS40_AGDB\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty GeometricalSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BaseElementMaterialHandling.RETAIN.html#retain","title":"RETAIN","text":"RETAIN\n\n\n\nBaseElementMaterialHandling.RETAIN = 'retain'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.delete.html#delete","title":"delete","text":"delete\n\n\n\nCADGeometry.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nMeshData.element_labels: ndarray[tuple[int, ...], dtype[int32]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ScalarData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nScalarData.get_pyvista_mesh(mesh)\n\nConvert the mesh data to a PyVista object.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.ply_material.html#ply_material","title":"ply_material","text":"ply_material\n\n\n\nproperty ModelingPly.ply_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.E2_2.html#e2_2","title":"E2_2","text":"E2_2\n\n\n\nproperty ConstantWovenCharacterization.E2_2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.html#elementaldatatype","title":"ElementalDataType","text":"ElementalDataType\n\n\n\nclass ansys.acp.core.ElementalDataType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of per-element data.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.IntersectionType.IN_PLANE.html#in_plane","title":"IN_PLANE","text":"IN_PLANE\n\n\n\nIntersectionType.IN_PLANE = 'in_plane'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffSettings.disable_drop_offs_on_bottom.html#disable_drop_offs_on_bottom","title":"disable_drop_offs_on_bottom","text":"disable_drop_offs_on_bottom\n\n\n\nproperty DropOffSettings.disable_drop_offs_on_bottom: Any\n\n"},{"objectID":"Home","href":"user_guide/concepts/store.html#stored-versus-unstored-objects","title":"Stored versus unstored objects","text":"Stored versus unstored objects\n\nThis is an advanced PyACP concept. It is not required knowledge for most modeling tasks."},{"objectID":"Home","href":"user_guide/concepts/store.html#general-concept","title":"Stored versus unstored objects > General concept","text":"General concept\n\nPyACP objects can exist in two states: stored and unstored.\n\nA stored object is one that has been sent to the ACP server. When any of its properties change, the change is automatically propagated to the server. Similarly, when an attribute is accessed, the value is retrieved from the server.\n\nAn unstored object is a local representation of an ACP object. It can be used to specify the defining properties of the object, but all computed properties are unavailable. When it is stored, it is sent to the server and becomes a stored object."},{"objectID":"Home","href":"user_guide/concepts/store.html#creating-stored-and-unstored-objects","title":"Stored versus unstored objects > Creating stored and unstored objects","text":"Creating stored and unstored objects\n\nConsider the following example. First, launch an ACP instance and import a model. This creates a stored model object.\n\nTo create a new stored material object, call the create_material() method of the model object.\n\nTo instead create an unstored material object, directly call the Material constructor:\n\nNotice that the unstored material object has an empty ID. This is because the ID is assigned by the server when the object is stored."},{"objectID":"Home","href":"user_guide/concepts/store.html#storing-objects","title":"Stored versus unstored objects > Storing objects","text":"Storing objects\n\nYou can make changes to the unstored material, but they are lost when the Python session ends.\n\nTo store a material in an ACP model, call its store method. The parent parameter determines where in the model the material is stored. In this case, the parent is the model itself. See feature_tree for more information on how to determine the parent object."},{"objectID":"Home","href":"user_guide/concepts/store.html#cloning-objects","title":"Stored versus unstored objects > Cloning objects","text":"Cloning objects\n\nYou can create an unstored copy of an existing object by calling the clone method. The source object can be either stored or unstored.\n\nYou may also use the clone method to copy an object between models, even if the models are on different ACP servers."},{"objectID":"Home","href":"user_guide/concepts/store.html#performance-considerations","title":"Stored versus unstored objects > Performance considerations","text":"Performance considerations\n\nWhen building ACP models, performance can vary depending on whether the objects are stored or unstored. In general, it is best to first build an unstored object and then store its finished form. Otherwise, each change to the object is sent to the server, which can slow down the performance depending on the network connection.\n\nThis does not mean that you necessarily need to use the store() method. It is just as efficient to use the create_*() methods and simply pass all the defining properties at once."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.name.html#name","title":"name","text":"name\n\n\n\nproperty SubLaminate.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty TubeSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Yc.html#yc","title":"Yc","text":"Yc\n\n\n\nproperty ConstantStressLimits.Yc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.html#modelelementaldata","title":"ModelElementalData","text":"ModelElementalData\n\n\n\nclass ansys.acp.core.mesh_data.ModelElementalData(element_labels, normal=None, thickness=None, relative_thickness_correction=None, area=None, price=None, volume=None, mass=None, offset=None, cog=None)\n\nRepresents elemental data for a Model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.price.html#price","title":"price","text":"price\n\n\n\nModelingPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY.html#from_geometry","title":"FROM_GEOMETRY","text":"FROM_GEOMETRY\n\n\n\nThicknessType.FROM_GEOMETRY = 'from_geometry'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.FROM_GEOMETRY.html#examples-using-thicknesstypefrom_geometry","title":"FROM_GEOMETRY > Examples using ThicknessType.FROM_GEOMETRY","text":"Examples using ThicknessType.FROM_GEOMETRY\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.find.html#find","title":"find","text":"find\n\n\n\nPuckMaterialType.find(sub, [start, [end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3D.num_min_neighbors.html#num_min_neighbors","title":"num_min_neighbors","text":"num_min_neighbors\n\n\n\nproperty LookUpTable3D.num_min_neighbors: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.html#variableoffsetselectionrule","title":"VariableOffsetSelectionRule","text":"VariableOffsetSelectionRule\n\n\n\nclass ansys.acp.core.VariableOffsetSelectionRule(*, name='VariableOffsetSelectionrule', edge_set=None, offsets=None, angles=None, include_rule=True, use_offset_correction=False, element_set=None, inherit_from_lookup_table=True, radius_origin=(0.0, 0.0, 0.0), radius_direction=(1.0, 0.0, 0.0), distance_along_edge=False)\n\nInstantiate a Variable Offset Selection Rule.\n\nParameters\n\nname (str) – Name of the Variable Offset Selection Rule.\n\nedge_set (EdgeSet | None) – Defines the edge along which the rule will be applied to.\n\noffsets (LookUpTable1DColumn | None) – Defines the in-plane offset. Cuts elements which are closer to the edge than this value.\n\nangles (LookUpTable1DColumn | None) – Defines the angle between the reference surface and the cutting plane.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_offset_correction (bool) – If enabled, then the offset is measured along the surface of the selected Element Set.\n\nelement_set (ElementSet | None) – Defines the surface on which the offset correction is calculated on.\n\ninherit_from_lookup_table (bool) – Specifies whether to inherit the Look-Up Table object properties.\n\nradius_origin (tuple[float, float, float]) – Origin of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\nradius_direction (tuple[float, float, float]) – Direction of the look-up table axis. Only applies if inherit_from_lookup_table\nis False.\n\ndistance_along_edge (bool) – If True, the look-up locations are evaluated along the edge, instead of along\nthe axis direction.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.html#examples-using-variableoffsetselectionrule","title":"VariableOffsetSelectionRule > Examples using VariableOffsetSelectionRule","text":"Examples using VariableOffsetSelectionRule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule.html#create_cut_off_selection_rule","title":"create_cut_off_selection_rule","text":"create_cut_off_selection_rule\n\n\n\nModel.create_cut_off_selection_rule(*, name='CutOffSelectionrule', cut_off_rule_type='geometry', cut_off_geometry=None, taper_edge_set=None, offset=0.0, angle=0.0, ply_cut_off_type='production_ply_cutoff', ply_tapering=False)\n\nInstantiate a Cut-Off Selection Rule.\n\nParameters\n\nname (str) – Name of the Cut-Off Selection Rule.\n\ncut_off_rule_type (CutOffRuleType) – Determines if the cut-off is defined by a geometry or by a tapering edge.\n\ncut_off_geometry (VirtualGeometry | None) – Geometry used to define the cut-off. Only applies if\ncut_off_rule_type is GEOMETRY.\n\ntaper_edge_set (EdgeSet | None) – Edge used to define the cut-off. Only applies if\ncut_off_rule_type is CutOffRuleType.TAPER.\n\noffset (float) – Moves the cutting plane along the out-of-plane direction. Always measured\nfrom the reference surface.\n\nangle (float) – Defines the angle between the cutting plane and the reference surface.\n\nply_cut_off_type (PlyCutOffType) – Either the complete production ply is cut-off\n(PlyCutOffType.PRODUCTION_PLY_CUTOFF) or individual analysis plies\n(PlyCutOffType.ANALYSIS_PLY_CUTOFF).\n\nply_tapering (bool) – Whether the tapering of analysis plies is enabled.\n\nReturn type\n\nCutOffSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cut_off_selection_rule.html#examples-using-modelcreate_cut_off_selection_rule","title":"create_cut_off_selection_rule > Examples using Model.create_cut_off_selection_rule","text":"Examples using Model.create_cut_off_selection_rule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedObjectHandling.html#linkedobjecthandling","title":"LinkedObjectHandling","text":"LinkedObjectHandling\n\n\n\nclass ansys.acp.core.LinkedObjectHandling(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDefines options for handling linked objects when copying a tree of ACP objects.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.get_directions_plotter.html#get_directions_plotter","title":"get_directions_plotter","text":"get_directions_plotter\n\n\n\nansys.acp.core.get_directions_plotter(*, model, mesh=None, components, culling_factor=1, length_factor=1.0, **kwargs)\n\nGet a pyvista plotter that shows the specified directions on the mesh.\n\nParameters\n\nmodel (Model) – ACP model. Determines the average element size used for scaling the\narrows. Unless explicitly specified, the model also determines the\nmesh to plot.\n\nmesh (MeshData | None) – Mesh defining the scope of the plot. If not provided, the full mesh\nof the model is used.\n\ncomponents (Sequence[VectorData | None]) – List of components to plot.\n\nculling_factor (int) – If set to a value other than 1, add only every n-th data\npoint to the PyVista object. This is useful especially for\nvector data, where the arrows can be too dense.\n\nlength_factor (float) – Factor to scale the length of the arrows.\n\nkwargs (Any) – Keyword arguments passed to the PyVista object constructor.\n\nReturn type\n\nPlotter"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.get_directions_plotter.html#examples-using-get_directions_plotter","title":"get_directions_plotter > Examples using get_directions_plotter","text":"Examples using get_directions_plotter\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.FORCE.html#force","title":"FORCE","text":"FORCE\n\n\n\nPhysicalDimension.FORCE = 'force'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableDensity.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.DESIGN_ANGLE.html#design_angle","title":"DESIGN_ANGLE","text":"DESIGN_ANGLE\n\n\n\nElementalDataType.DESIGN_ANGLE = 'design_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.clone.html#clone","title":"clone","text":"clone\n\n\n\nLookUpTable3DColumn.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.status.html#status","title":"status","text":"status\n\n\n\nproperty Rosette.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.variable_offset_selection_rules.html#variable_offset_selection_rules","title":"variable_offset_selection_rules","text":"variable_offset_selection_rules\n\n\n\nproperty Model.variable_offset_selection_rules: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.status.html#status","title":"status","text":"status\n\n\n\nproperty SamplingPoint.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.shear_angle.html#shear_angle","title":"shear_angle","text":"shear_angle\n\n\n\nProductionPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Zc.html#zc","title":"Zc","text":"Zc\n\n\n\nproperty ConstantStressLimits.Zc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Zc.html#zc","title":"Zc","text":"Zc\n\n\n\nproperty ConstantWovenStressLimits.Zc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.ply_group_pointers.html#ply_group_pointers","title":"ply_group_pointers","text":"ply_group_pointers\n\n\n\nproperty SolidModel.ply_group_pointers: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty CylindricalSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableFabricFiberAngle.html#variablefabricfiberangle","title":"VariableFabricFiberAngle","text":"VariableFabricFiberAngle\n\n\n\nclass ansys.acp.core.material_property_sets.VariableFabricFiberAngle(*, _parent_object=None, _attribute_path=None)\n\nVariable fabric fiber angle material property set.\n\nDefines the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubShape.clone.html#clone","title":"clone","text":"clone\n\n\n\nSubShape.clone()\n\nCreate a new unstored SubShape with the same properties.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.section_index.html#section_index","title":"section_index","text":"section_index\n\n\n\nproperty SolidModelExportSettings.section_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E1_1.html#e1_1","title":"E1_1","text":"E1_1\n\n\n\nproperty VariableWovenCharacterization.E1_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.html#unitsystemtype","title":"UnitSystemType","text":"UnitSystemType\n\n\n\nclass ansys.acp.core.UnitSystemType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nAvailable choices for the unit system.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.html#examples-using-unitsystemtype","title":"UnitSystemType > Examples using UnitSystemType","text":"Examples using UnitSystemType\n\nsphx_glr_examples_modeling_features_007-sensor.py\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ImportedSolidModelNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nImportedSolidModelNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.clone.html#clone","title":"clone","text":"clone\n\n\n\nRosette.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.translate.html#translate","title":"translate","text":"translate\n\n\n\nPuckMaterialType.translate(table, /)\n\nReplace each character in the string using the given translation table.\n\ntable\n\nTranslation table, which must be a mapping of Unicode ordinals to\nUnicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStressLimits.Xt.html#xt","title":"Xt","text":"Xt\n\n\n\nproperty ConstantStressLimits.Xt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_element_index.html#use_default_element_index","title":"use_default_element_index","text":"use_default_element_index\n\n\n\nproperty SolidModelExportSettings.use_default_element_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL.html#cut_off_geometry_solid_model","title":"CUT_OFF_GEOMETRY_SOLID_MODEL","text":"CUT_OFF_GEOMETRY_SOLID_MODEL\n\n\n\nExampleKeys.CUT_OFF_GEOMETRY_SOLID_MODEL = 18\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.status.html#status","title":"status","text":"status\n\n\n\nproperty ImportedSolidModel.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.data.html#data","title":"data","text":"data\n\n\n\nproperty LookUpTable3DColumn.data: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET.html#bottom_offset","title":"BOTTOM_OFFSET","text":"BOTTOM_OFFSET\n\n\n\nOffsetType.BOTTOM_OFFSET = 'bottom_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.BOTTOM_OFFSET.html#examples-using-offsettypebottom_offset","title":"BOTTOM_OFFSET > Examples using OffsetType.BOTTOM_OFFSET","text":"Examples using OffsetType.BOTTOM_OFFSET\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ArrowType.STANDARD_ARROW.html#standard_arrow","title":"STANDARD_ARROW","text":"STANDARD_ARROW\n\n\n\nArrowType.STANDARD_ARROW = 'standard_arrow'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.edge_set.html#edge_set","title":"edge_set","text":"edge_set\n\n\n\nproperty TubeSelectionRule.edge_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.status.html#status","title":"status","text":"status\n\n\n\nproperty OrientedSelectionSet.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.production_plies.html#production_plies","title":"production_plies","text":"production_plies\n\n\n\nproperty ModelingPly.production_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.delete.html#delete","title":"delete","text":"delete\n\n\n\nStackup.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.upper.html#upper","title":"upper","text":"upper\n\n\n\nLaunchMode.upper(/)\n\nReturn a copy of the string converted to uppercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantTsaiWuConstants.html#constanttsaiwuconstants","title":"ConstantTsaiWuConstants","text":"ConstantTsaiWuConstants\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantTsaiWuConstants(*, XY=-1.0, XZ=-1.0, YZ=-1.0, _parent_object=None, _attribute_path=None)\n\nConstant Tsai-Wu constants material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"user_guide/howto/print_model.html#print-model-tree","title":"Print model tree","text":"Print model tree\n\nA tree structure gives an overview of an ACP model. To print a model’s tree structure, start with a Model instance:\n\nYou can print the tree structure using the print_model() function:\n\nAlternatively, you can use get_model_tree() to get a tree representation. This allows manually iterating over the tree structure:\n\nThe hide_empty label can be set to False to also show empty groups:"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.element_set.html#element_set","title":"element_set","text":"element_set\n\n\n\nproperty VariableOffsetSelectionRule.element_set: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED.html#maximum_angle_superposed","title":"MAXIMUM_ANGLE_SUPERPOSED","text":"MAXIMUM_ANGLE_SUPERPOSED\n\n\n\nRosetteSelectionMethod.MAXIMUM_ANGLE_SUPERPOSED = 'maximum_angle_superposed'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.models.html#models","title":"models","text":"models\n\n\n\nproperty ACPInstance.models: tuple[Model, ...]\n\nModels currently loaded on the server.\n\nNote that the models are listed in arbitrary order."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.field_variables.html#field_variables","title":"field_variables","text":"field_variables\n\n\n\nproperty VariableEngineeringConstants.field_variables: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.draping_type.html#draping_type","title":"draping_type","text":"draping_type\n\n\n\nproperty ImportedModelingPly.draping_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.filler_material.html#filler_material","title":"filler_material","text":"filler_material\n\n\n\nproperty LayupMappingObject.filler_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VirtualGeometry.id.html#id","title":"id","text":"id\n\n\n\nproperty VirtualGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty SubLaminate.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nGeometricalSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.scale_factor.html#scale_factor","title":"scale_factor","text":"scale_factor\n\n\n\nproperty SectionCut.scale_factor: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eSyz.html#esyz","title":"eSyz","text":"eSyz\n\n\n\nproperty VariableStrainLimits.eSyz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.fracture_toughness_mode_1.html#fracture_toughness_mode_1","title":"fracture_toughness_mode_1","text":"fracture_toughness_mode_1\n\n\n\nproperty ConstantLaRCConstants.fracture_toughness_mode_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.use_default_tolerance.html#use_default_tolerance","title":"use_default_tolerance","text":"use_default_tolerance\n\n\n\nproperty SectionCut.use_default_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.InterfaceLayer.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty InterfaceLayer.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.rosettes.html#rosettes","title":"rosettes","text":"rosettes\n\n\n\nproperty Model.rosettes: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.rosettes.html#examples-using-modelrosettes","title":"rosettes > Examples using Model.rosettes","text":"Examples using Model.rosettes\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.store.html#store","title":"store","text":"store\n\n\n\nExtrusionGuide.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty ParallelSelectionRule.direction: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.html#analysisplyelementaldata","title":"AnalysisPlyElementalData","text":"AnalysisPlyElementalData\n\n\n\nclass ansys.acp.core.mesh_data.AnalysisPlyElementalData(element_labels, normal=None, orientation=None, reference_direction=None, fiber_direction=None, draped_fiber_direction=None, transverse_direction=None, draped_transverse_direction=None, thickness=None, relative_thickness_correction=None, design_angle=None, shear_angle=None, draped_fiber_angle=None, draped_transverse_angle=None, area=None, price=None, volume=None, mass=None, offset=None, material_1_direction=None, cog=None)\n\nRepresents elemental data for a Analysis Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.active.html#active","title":"active","text":"active\n\n\n\nproperty ImportedSolidModel.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nTubeSelectionRule.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nParallelSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty CutOffGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.shear_angle.html#shear_angle","title":"shear_angle","text":"shear_angle\n\n\n\nModelingPlyElementalData.shear_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE.html#minimum_angle","title":"MINIMUM_ANGLE","text":"MINIMUM_ANGLE\n\n\n\nRosetteSelectionMethod.MINIMUM_ANGLE = 'minimum_angle'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.MINIMUM_ANGLE.html#examples-using-rosetteselectionmethodminimum_angle","title":"MINIMUM_ANGLE > Examples using RosetteSelectionMethod.MINIMUM_ANGLE","text":"Examples using RosetteSelectionMethod.MINIMUM_ANGLE\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TubeSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nTubeSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.status.html#status","title":"status","text":"status\n\n\n\nproperty SnapToGeometry.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nCutOffSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelImportFormat.ANSYS_H5.html#ansys_h5","title":"ANSYS_H5","text":"ANSYS_H5\n\n\n\nSolidModelImportFormat.ANSYS_H5 = 'ansys:h5'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.export_skin.html#export_skin","title":"export_skin","text":"export_skin\n\n\n\nSolidModel.export_skin(path, *, format)\n\nExport the skin of the solid model to a file.\n\nParameters\n\npath (str | PathLike[str]) – Path to the file where the solid model skin is saved.\n\nformat (SolidModelSkinExportFormat) – Format of the exported file. Available formats are \"ansys:cdb\",\n\"step\", \"iges\", and \"stl\"."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SphericalSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/mechanical_integration_helpers.html#mechanical-integration-helpers","title":"Mechanical integration helpers","text":"Mechanical integration helpers\n\nThe PyACP / PyMechanical integration is still experimental and will change\nin future releases.\n\nIt is also limited in the following ways:\n\nOnly remote Mechanical sessions on Windows are supported.\n\nOnly one ACP shell or solid model can be imported into Mechanical.\n\nPyACP currently provides helper functions for integrating with PyMechanical.\nThese functions will be replaced with native PyMechanical functions in the future.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.delete.html#delete","title":"delete","text":"delete\n\n\n\nTubeSelectionRule.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.coordinate_system_index.html#coordinate_system_index","title":"coordinate_system_index","text":"coordinate_system_index\n\n\n\nproperty SolidModelExportSettings.coordinate_system_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.node_index.html#node_index","title":"node_index","text":"node_index\n\n\n\nproperty ImportedSolidModelExportSettings.node_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nproperty AnalysisPly.mesh: MeshData\n\nFull mesh associated with the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometryOrientationType.DOWN.html#down","title":"DOWN","text":"DOWN\n\n\n\nCutOffGeometryOrientationType.DOWN = 'down'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.in_plane_capture_tolerance.html#in_plane_capture_tolerance","title":"in_plane_capture_tolerance","text":"in_plane_capture_tolerance\n\n\n\nproperty GeometricalSelectionRule.in_plane_capture_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanOperationType.REMOVE.html#remove","title":"REMOVE","text":"REMOVE\n\n\n\nBooleanOperationType.REMOVE = 'remove'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty CADGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADGeometry.scale_factor.html#scale_factor","title":"scale_factor","text":"scale_factor\n\n\n\nproperty CADGeometry.scale_factor: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.interface_layers.html#interface_layers","title":"interface_layers","text":"interface_layers\n\n\n\nproperty SolidModel.interface_layers: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.status.html#status","title":"status","text":"status\n\n\n\nproperty ModelingPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.name.html#name","title":"name","text":"name\n\n\n\nproperty ImportedProductionPly.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule.html#create_spherical_selection_rule","title":"create_spherical_selection_rule","text":"create_spherical_selection_rule\n\n\n\nModel.create_spherical_selection_rule(*, name='SphericalSelectionrule', use_global_coordinate_system=True, rosette=None, origin=(0.0, 0.0, 0.0), radius=0.0, relative_rule=False, include_rule=True)\n\nInstantiate a Spherical Selection Rule.\n\nParameters\n\nname (str) – Name of the Spherical Selection Rule.\n\nuse_global_coordinate_system (bool) – Use global coordinate system for origin and direction.\n\nrosette (Rosette | None) – Rosette used for origin and direction. Only applies if\nuse_global_coordinate_system is False.\n\norigin (tuple[float, ...]) – Origin of the sphere.\n\nradius (float) – Radius of the sphere.\n\nrelative_rule (bool) – If True, parameters are evaluated relative to size of the object.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nReturn type\n\nSphericalSelectionRule\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_spherical_selection_rule.html#examples-using-modelcreate_spherical_selection_rule","title":"create_spherical_selection_rule > Examples using Model.create_spherical_selection_rule","text":"Examples using Model.create_spherical_selection_rule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelImportFormat.html#solidmodelimportformat","title":"SolidModelImportFormat","text":"SolidModelImportFormat\n\n\n\nclass ansys.acp.core.SolidModelImportFormat(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the file format when importing a solid model.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModelExportSettings.use_default_node_index.html#use_default_node_index","title":"use_default_node_index","text":"use_default_node_index\n\n\n\nproperty SolidModelExportSettings.use_default_node_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.MASS.html#mass","title":"MASS","text":"MASS\n\n\n\nElementalDataType.MASS = 'mass'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_stackup.html#create_stackup","title":"create_stackup","text":"create_stackup\n\n\n\nModel.create_stackup(*, name='Stackup', symmetry='no_symmetry', topdown=True, fabrics=(), area_price=0.0, drop_off_material_handling='global', drop_off_material=None, cut_off_material=None, cut_off_material_handling='computed', draping_material_model='woven', draping_ud_coefficient=0.0)\n\nInstantiate a Stackup.\n\nParameters\n\nname (str) – Name of the stackup.\n\nsymmetry (SymmetryType) – Whether the stackup is odd or even symmetrical, or none.\n\ntopdown (bool) – The first fabric in the list is placed first in the mold if topdown is true.\n\nfabrics (Sequence[FabricWithAngle]) – List of fabrics with angles which build the stackup.\n\narea_price (float) – Price per area of the stackup.\n\ndrop_off_material_handling (DropOffMaterialHandling) – Defines the material of drop-off elements in the solid model extrusion.\n\ndrop_off_material (Material | None) – Specify the material of drop-off elements in the solid model.\n\ncut_off_material_handling (CutOffMaterialHandling) – Defines the material of cut-off elements in solid models if cut-off geometries are active.\n\ncut_off_material (Material | None) – Define the cut-off material if a ply with this material is shaped by a cut-off geometry.\n\ndraping_material_model (DrapingMaterialModel) – Specifies the draping model of the fabric.\n\ndraping_ud_coefficient (float) – Set the draping coefficient of the uni-directional draping model. Must be in the range of 0 to 1.\n\nReturn type\n\nStackup\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_stackup.html#examples-using-modelcreate_stackup","title":"create_stackup > Examples using Model.create_stackup","text":"Examples using Model.create_stackup\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nBooleanSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.id.html#id","title":"id","text":"id\n\n\n\nproperty SnapToGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isprintable.html#isprintable","title":"isprintable","text":"isprintable\n\n\n\nPuckMaterialType.isprintable(/)\n\nReturn True if all characters in the string are printable, False otherwise.\n\nA character is printable if repr() may use it in its output."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VectorData.values.html#values","title":"values","text":"values\n\n\n\nproperty VectorData.values: ndarray[tuple[int, ...], dtype[float64]]\n\nVector data values as a numpy array."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.include_rule.html#include_rule","title":"include_rule","text":"include_rule\n\n\n\nproperty GeometricalSelectionRule.include_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Xc.html#xc","title":"Xc","text":"Xc\n\n\n\nproperty VariableStressLimits.Xc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.BooleanSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty BooleanSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nGeometricalSelectionRuleElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_element_index.html#use_default_element_index","title":"use_default_element_index","text":"use_default_element_index\n\n\n\nproperty ImportedSolidModelExportSettings.use_default_element_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CutOffSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nCutOffSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.scope_entities.html#scope_entities","title":"scope_entities","text":"scope_entities\n\n\n\nproperty FieldDefinition.scope_entities: LinkedObjectList[Any]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isdecimal.html#isdecimal","title":"isdecimal","text":"isdecimal\n\n\n\nPuckMaterialType.isdecimal(/)\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nSolidElementSetNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.html#fielddefinition","title":"FieldDefinition","text":"FieldDefinition\n\n\n\nclass ansys.acp.core.FieldDefinition(*, name='FieldDefinition', active=True, field_variable_name='', scope_entities=(), scalar_field=None, full_mapping=False)\n\nInstantiate a Field Definition.\n\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\n\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\n\nParameters\n\nname (str) – Name of the field definition.\n\nactive (bool) – Inactive field definitions are ignored.\n\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\n\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\n\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\n\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.butt_joint_sequences.html#butt_joint_sequences","title":"butt_joint_sequences","text":"butt_joint_sequences\n\n\n\nproperty ModelingGroup.butt_joint_sequences: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.delete.html#delete","title":"delete","text":"delete\n\n\n\nCutOffGeometry.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.TriangleMesh.node_coordinates.html#node_coordinates","title":"node_coordinates","text":"node_coordinates\n\n\n\nTriangleMesh.node_coordinates: ndarray[tuple[int, ...], dtype[float64]]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.imported_analysis_plies.html#imported_analysis_plies","title":"imported_analysis_plies","text":"imported_analysis_plies\n\n\n\nproperty ImportedSolidModel.imported_analysis_plies: Mapping[ValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nProductionPlyNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.relative_thickness_correction.html#relative_thickness_correction","title":"relative_thickness_correction","text":"relative_thickness_correction\n\n\n\nProductionPlyElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.clone.html#clone","title":"clone","text":"clone\n\n\n\nEdgeSet.clone(*, unlink=False)\n\nCreate a new unstored object with the same properties.\n\nParameters\n\nunlink (bool) – If True, remove all links to other objects. This can be\nused to store the object to another model, where the links\nwould be invalid.\n\nReturn type\n\nSelf"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTable3DColumn.value_type.html#value_type","title":"value_type","text":"value_type\n\n\n\nproperty LookUpTable3DColumn.value_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.small_hole_threshold.html#small_hole_threshold","title":"small_hole_threshold","text":"small_hole_threshold\n\n\n\nShellMappingProperties.small_hole_threshold: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.Syz.html#syz","title":"Syz","text":"Syz\n\n\n\nproperty ConstantWovenStressLimits.Syz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenCharacterization.orientation_1.html#orientation_1","title":"orientation_1","text":"orientation_1\n\n\n\nproperty ConstantWovenCharacterization.orientation_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ReinforcingBehavior.COMPRESSION_ONLY.html#compression_only","title":"COMPRESSION_ONLY","text":"COMPRESSION_ONLY\n\n\n\nReinforcingBehavior.COMPRESSION_ONLY = 'compression_only'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.inner_radius.html#inner_radius","title":"inner_radius","text":"inner_radius\n\n\n\nproperty TubeSelectionRule.inner_radius: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.html#rosetteselectionmethod","title":"RosetteSelectionMethod","text":"RosetteSelectionMethod\n\n\n\nclass ansys.acp.core.RosetteSelectionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how the rosette is selected in oriented selection sets.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteSelectionMethod.html#examples-using-rosetteselectionmethod","title":"RosetteSelectionMethod > Examples using RosetteSelectionMethod","text":"Examples using RosetteSelectionMethod\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.swapcase.html#swapcase","title":"swapcase","text":"swapcase\n\n\n\nPuckMaterialType.swapcase(/)\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.id.html#id","title":"id","text":"id\n\n\n\nproperty ImportedModelingGroup.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.relative_thickness_correction.html#relative_thickness_correction","title":"relative_thickness_correction","text":"relative_thickness_correction\n\n\n\nModelElementalData.relative_thickness_correction: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantFabricFiberAngle.fabric_fiber_angle.html#fabric_fiber_angle","title":"fabric_fiber_angle","text":"fabric_fiber_angle\n\n\n\nproperty ConstantFabricFiberAngle.fabric_fiber_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.element_sets.html#element_sets","title":"element_sets","text":"element_sets\n\n\n\nShellMappingProperties.element_sets: Sequence[ElementSet] = ()\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty ParallelSelectionRule.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData.html#booleanselectionruleelementaldata","title":"BooleanSelectionRuleElementalData","text":"BooleanSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.BooleanSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Boolean Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MINIMAL_PLATE_CDB.html#minimal_plate_cdb","title":"MINIMAL_PLATE_CDB","text":"MINIMAL_PLATE_CDB\n\n\n\nExampleKeys.MINIMAL_PLATE_CDB = 20\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSolidElementSetElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.status.html#status","title":"status","text":"status\n\n\n\nproperty GeometricalSelectionRule.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.G31.html#g31","title":"G31","text":"G31\n\n\n\nproperty VariableEngineeringConstants.G31: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.price.html#price","title":"price","text":"price\n\n\n\nProductionPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object.html#create_layup_mapping_object","title":"create_layup_mapping_object","text":"create_layup_mapping_object\n\n\n\nImportedSolidModel.create_layup_mapping_object(*, name='LayupMappingObject', active=True, element_technology='layered_element', shell_element_sets=(), use_imported_plies=False, select_all_plies=True, sequences=(), entire_solid_mesh=True, solid_element_sets=(), scale_ply_thicknesses=True, void_material=None, minimum_void_material_thickness=1e-06, delete_lost_elements=True, filler_material=None, rosettes=(), rosette_selection_method='minimum_distance', reinforcing_behavior='tension_and_compression', base_element_material_handling='remove', stress_state='plane_stress_state_with_transverse_shear_and_bending_stiffness', base_material=None, base_element_rosettes=(), base_element_rosette_selection_method='minimum_distance')\n\nInstantiate a layup mapping object.\n\nParameters\n\nname (str) – Name of the layup mapping object.\n\nactive (bool) – Inactive layup mapping objects are not used.\n\nelement_technology (ElementTechnology) – Determines the element technology used for the layup mapping.\nCan be either \"layered_element\" or \"reinforcing\".\nNote that only brick and prism elements support the layered option,\nwhile reinforcing technology can be combined with all types of\nsolid elements.\n\nshell_element_sets (Sequence[ElementSet]) – Defines the shell area whose modeling plies are mapped onto the\nsolid mesh.\nUsed only if use_imported_plies is False.\n\nuse_imported_plies (bool) – If True, imported modeling plies are mapped onto the solid mesh.\n\nselect_all_plies (bool) – Determines whether all plies are selected for mapping, or only\nthe ones specified in the sequences parameter.If use_imported_plies is False and select_all_plies is True,\nall plies in the selected shell area are selected.\n\nIf use_imported_plies is True and select_all_plies is True,\nall imported modeling plies are selected.\n\nsequences (Sequence[ModelingGroup | ModelingPly | ImportedModelingGroup | ImportedModelingPly]) – Determines which plies are considered for mapping. The intersection\nof shell elements and plies are then mapped onto the solid mesh.If use_imported_plies is False, modeling groups and modeling\nplies are allowed\n\nIf use_imported_plies is True, imported modeling groups and\nimported modeling plies are allowed\n\nentire_solid_mesh (bool) – If True, the selected layup is mapped onto the entire solid mesh.\nOtherwise, the solid_element_sets parameter is used to refine\nthe scope.\n\nsolid_element_sets (Sequence[SolidElementSet]) – List of solid element sets to which the mapping is applied.\n\nscale_ply_thicknesses (bool) – If True, scale the layer thickness to fill the gaps within an element,\ninstead of filling them with the void material.\nUsed only if element_technology is \"layered_element\".\n\nvoid_material (Material | None) – Material used to fill the gaps with.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\nminimum_void_material_thickness (float) – Only gaps with a thickness greater than this value are filled with\nthe void material.\nOnly used if scale_ply_thicknesses is False, and\nthe element_technology is \"layered_element\".\n\ndelete_lost_elements (bool) – If True, elements without layup and degenerated elements are deleted.\nOtherwise, they are filled with the filler material.\nUsed only if element_technology is \"layered_element\".\n\nfiller_material (Material | None) – Material used to fill the degenerated elements.\nOnly used if delete_lost_elements is False, and\nthe element_technology is \"layered_element\".\n\nrosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nrosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the filler elements.\nUsed only if element_technology is \"layered_element\".\n\nreinforcing_behavior (ReinforcingBehavior) – Determines whether the reinforcing elements carry tension and / or\ncompression loads.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_material_handling (BaseElementMaterialHandling) – Determines how the base material is handled in the area with reinforcing\nelements. Can be either \"remove\" or \"retain\".\nUsed only if element_technology is \"reinforcing\".\n\nstress_state (StressStateType) – Specifies the stress state of the reinforcing elements.\nUsed only if element_technology is \"reinforcing\".\n\nbase_material (Material | None) – Define the initial material of the solid elements which will be reinforced\nby the selected plies.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosettes (Sequence[Rosette]) – List of rosettes to set the coordinate system of the base elements.\nThis is important if the base material has an orthotropic characteristic.\nUsed only if element_technology is \"reinforcing\".\n\nbase_element_rosette_selection_method (LayupMappingRosetteSelectionMethod) – Defines how the coordinate systems are applied for the base elements.\nUsed only if element_technology is \"reinforcing\".\n\nReturn type\n\nLayupMappingObject\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.create_layup_mapping_object.html#examples-using-importedsolidmodelcreate_layup_mapping_object","title":"create_layup_mapping_object > Examples using ImportedSolidModel.create_layup_mapping_object","text":"Examples using ImportedSolidModel.create_layup_mapping_object\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ArrowType.NO_ARROW.html#no_arrow","title":"NO_ARROW","text":"NO_ARROW\n\n\n\nArrowType.NO_ARROW = 'no_arrow'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.eZt.html#ezt","title":"eZt","text":"eZt\n\n\n\nproperty VariableStrainLimits.eZt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.id.html#id","title":"id","text":"id\n\n\n\nproperty CutOffGeometry.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_section_cut.html#create_section_cut","title":"create_section_cut","text":"create_section_cut\n\n\n\nModel.create_section_cut(*, name='SectionCut', active=True, origin=(0.0, 0.0, 0.0), normal=(0.0, 0.0, 1.0), in_plane_reference_direction1=(1.0, 0.0, 0.0), scope_entire_model=True, scope_element_sets=(), extrusion_type='wire_frame', scale_factor=1.0, core_scale_factor=1.0, section_cut_type='modeling_ply_wise', intersection_type='normal_to_surface', use_default_tolerance=True, tolerance=0.0, use_default_interpolation_settings=True, search_radius=0.0, number_of_interpolation_points=1)\n\nInstantiate a Section Cut.\n\nParameters\n\nname (str) – Name of the section cut.\n\nactive (bool) – Inactive section cuts are not evaluated.\n\norigin (tuple[float, float, float]) – Defines the origin of the section cut plane.\n\nnormal (tuple[float, float, float]) – Defines the normal vector of the section cut plane.\n\nin_plane_reference_direction1 (tuple[float, float, float]) – Defines the in-plane transverse direction of the beam. Used for the surface\nsection cut and section cut measures.\n\nscope_entire_model (bool) – If True, the section cut is applied to the entire model. Otherwise, the\nsection cut is applied only to the element sets specified in\nscope_element_sets.\n\nscope_element_sets (Sequence[ElementSet]) – The element sets to which the section cut is applied. Used only if\nscope_entire_model is False.\n\nextrusion_type (ExtrusionType) – Determines the extrusion method used to create the section cut.\n\nscale_factor (float) – Scale factor applied to the ply thicknesses.\n\ncore_scale_factor (float) – Scale factor applied to the core thicknesses.\n\nsection_cut_type (SectionCutType) – Determines whether the section cut is extruded by modeling ply, production\nply, or analysis ply.\n\nintersection_type (IntersectionType) – Determines the method used to compute a wire frame section cut. Used only\nif extrusion_type is ExtrusionType.WIRE_FRAME.\n\nuse_default_tolerance (bool) – If True, the segment tolerance is computed as 0.1% of the averaged element size.\nOtherwise, the tolerance value is used.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED.\n\ntolerance (float) – Defines the minimum length of the segments. Segments shorter than this value\nare merged.\nUsed only if extrusion_type is ExtrusionType.SURFACE_NORMAL or\nExtrusionType.SURFACE_SWEEP_BASED, and use_default_tolerance is\nFalse.\n\nuse_default_interpolation_settings (bool) – If True, default interpolation settings are used by the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED.\n\nsearch_radius (float) – Search radius of the interpolation algorithm used in the sweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nnumber_of_interpolation_points (int) – Number of interpolation points of the interpolation algorithm used in the\nsweep-based extrusion.\nUsed only if extrusion_type is ExtrusionType.SURFACE_SWEEP_BASED and\nuse_default_interpolation_settings is False.\n\nReturn type\n\nSectionCut\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.html#importedsolidmodel","title":"ImportedSolidModel","text":"ImportedSolidModel\n\n\n\nclass ansys.acp.core.ImportedSolidModel(*, name='ImportedSolidModel', active=True, format='ansys:cdb', unit_system='from_file', external_path='', delete_bad_elements=True, warping_limit=0.4, minimum_volume=0.0, cut_off_material=None, export_settings=<ansys.acp.core._tree_objects.imported_solid_model.ImportedSolidModelExportSettings object>)\n\nInstantiate an imported solid model.\n\nParameters\n\nname (str) – Name of the imported solid model.\n\nactive (bool) – Inactive imported solid models are ignored in the analysis.\n\nformat (SolidModelImportFormat) – Specifies the format of the file to be imported.\n\nunit_system (UnitSystemType) – Specifies the unit system of the external solid mesh.\n\nexternal_path (str | PathLike[str]) – Path of the file to be imported.\n\ndelete_bad_elements (bool) – If True, run an element check and delete erroneous elements. Bad elements\ncan falsify the mapping.\n\nwarping_limit (float) – Maximum allowable warping. Elements with a warping above this limit are\ndeleted.\nOnly used if delete_bad_elements is True.\n\nminimum_volume (float) – Solid elements with a volume smaller or equal to this value are deleted.\nOnly used if delete_bad_elements is True.\n\ncut_off_material (Material | None) – This material is assigned to the degenerated solid cut-off elements if\ncut_off_material_handling is set to GLOBAL in the fabric\ndefinition.\n\nexport_settings (ImportedSolidModelExportSettings) – Defines the settings for exporting the imported solid model.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.html#examples-using-importedsolidmodel","title":"ImportedSolidModel > Examples using ImportedSolidModel","text":"Examples using ImportedSolidModel\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.html#drapingtype","title":"DrapingType","text":"DrapingType\n\n\n\nclass ansys.acp.core.DrapingType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the draping algorithm used.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DrapingType.html#examples-using-drapingtype","title":"DrapingType > Examples using DrapingType","text":"Examples using DrapingType\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.html#geometricalselectionrule","title":"GeometricalSelectionRule","text":"GeometricalSelectionRule\n\n\n\nclass ansys.acp.core.GeometricalSelectionRule(*, name='GeometricalSelectionrule', geometrical_rule_type='geometry', geometry=None, element_sets=(), include_rule=True, use_default_tolerances=True, in_plane_capture_tolerance=0.0, negative_capture_tolerance=0.0, positive_capture_tolerance=0.0)\n\nInstantiate a Geometrical Selection Rule.\n\nParameters\n\nname (str) – Name of the Geometrical Selection Rule.\n\ngeometrical_rule_type (GeometricalRuleType) – Rule type. Can be either GeometricalRuleType.GEOMETRY or\nGeometricalRuleType.ELEMENT_SETS.\n\ngeometry (VirtualGeometry | None) – Virtual geometry to use for the rule.\n\nelement_sets (Iterable[ElementSet]) – Element sets to use for the rule.\n\ninclude_rule (bool) – Include or exclude area in rule. Setting this to False\ninverts the selection.\n\nuse_default_tolerances (bool) – Whether to use default tolerances.\n\nin_plane_capture_tolerance (float) – In-plane capture tolerance around the outline.\n\nnegative_capture_tolerance (float) – Capture tolerance along the surface or projection normal.\n\npositive_capture_tolerance (float) – Capture tolerance along the opposite surface or projection normal.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.html#examples-using-geometricalselectionrule","title":"GeometricalSelectionRule > Examples using GeometricalSelectionRule","text":"Examples using GeometricalSelectionRule\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.clone.html#clone","title":"clone","text":"clone\n\n\n\nLinkedSelectionRule.clone()\n\nCreate a new unstored LinkedSelectionRule with the same properties.\n\nReturn type\n\nLinkedSelectionRule"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutCDBExportType.html#sectioncutcdbexporttype","title":"SectionCutCDBExportType","text":"SectionCutCDBExportType\n\n\n\nclass ansys.acp.core.SectionCutCDBExportType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nDetermines the type of section cut model to be exported to ANSYS Mechanical APDL.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.status.html#status","title":"status","text":"status\n\n\n\nproperty ImportedModelingPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping.html#mutablemapping","title":"MutableMapping","text":"MutableMapping\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.mapping.MutableMapping(*, _server_wrapper, _collection_path, _stub, _object_constructor)\n\nMutable mapping interface for collections of TreeObjects.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.global_ply_nr.html#global_ply_nr","title":"global_ply_nr","text":"global_ply_nr\n\n\n\nproperty ModelingPly.global_ply_nr: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Rosette.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty Rosette.origin: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest.html#createrequest","title":"CreateRequest","text":"CreateRequest\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.protocols.CreateRequest(collection_path, name, properties)\n\nInterface definition for CreateRequest messages.\n\nThe CreateRequest message is used to create a new object in a collection.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.p_21_neg.html#p_21_neg","title":"p_21_neg","text":"p_21_neg\n\n\n\nproperty ConstantPuckConstants.p_21_neg: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.MATERIALS_XML.html#materials_xml","title":"MATERIALS_XML","text":"MATERIALS_XML\n\n\n\nExampleKeys.MATERIALS_XML = 14\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.taper_edges.html#taper_edges","title":"taper_edges","text":"taper_edges\n\n\n\nproperty ModelingPly.taper_edges: EdgePropertyList[GenericEdgePropertyType]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.MeshData.html#meshdata","title":"MeshData","text":"MeshData\n\n\n\nclass ansys.acp.core.mesh_data.MeshData(node_labels, node_coordinates, element_labels, element_types, element_nodes, element_nodes_offsets)\n\nContainer for the mesh data of an ACP Model.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nOrientedSelectionSetElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.name.html#name","title":"name","text":"name\n\n\n\nproperty Sensor.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidElementSet.id.html#id","title":"id","text":"id\n\n\n\nproperty SolidElementSet.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.production_ply_area.html#production_ply_area","title":"production_ply_area","text":"production_ply_area\n\n\n\nproperty Sensor.production_ply_area: Any\n\nThe surface area of all production plies of the selected entity."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.G12.html#g12","title":"G12","text":"G12\n\n\n\nproperty ConstantEngineeringConstants.G12: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyNodalData.html#modelingplynodaldata","title":"ModelingPlyNodalData","text":"ModelingPlyNodalData\n\n\n\nclass ansys.acp.core.mesh_data.ModelingPlyNodalData(node_labels, ply_offset=None)\n\nRepresents nodal data for a Modeling Ply.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nSphericalSelectionRuleElementalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.active_in_post_mode.html#active_in_post_mode","title":"active_in_post_mode","text":"active_in_post_mode\n\n\n\nproperty AnalysisPly.active_in_post_mode: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.head_extension.html#head_extension","title":"head_extension","text":"head_extension\n\n\n\nproperty TubeSelectionRule.head_extension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ConnectLaunchConfig.html#connectlaunchconfig","title":"ConnectLaunchConfig","text":"ConnectLaunchConfig\n\n\n\nclass ansys.acp.core.ConnectLaunchConfig(url_acp='localhost:50555', url_filetransfer='localhost:50556')\n\nConfiguration options for attaching to an existing ACP server.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.transverse_direction.html#transverse_direction","title":"transverse_direction","text":"transverse_direction\n\n\n\nProductionPlyElementalData.transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenStressLimits.Yc.html#yc","title":"Yc","text":"Yc\n\n\n\nproperty VariableWovenStressLimits.Yc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariablePuckConstants.s.html#s","title":"s","text":"s\n\n\n\nproperty VariablePuckConstants.s: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping.html#mapping","title":"Mapping","text":"Mapping\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._grpc_helpers.mapping.Mapping(*, _server_wrapper, _collection_path, _stub, _object_constructor)\n\nMapping interface for collections of TreeObjects.\n\nNote: We could derive from collections.abc.Mapping to make sure\nthis class conforms to the Mapping interface.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyDrapingType.TABULAR_VALUES.html#tabular_values","title":"TABULAR_VALUES","text":"TABULAR_VALUES\n\n\n\nImportedPlyDrapingType.TABULAR_VALUES = 'tabular_values'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.drop_off_settings.html#drop_off_settings","title":"drop_off_settings","text":"drop_off_settings\n\n\n\nproperty SolidModel.drop_off_settings: AttribT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.html#constantstrainlimits","title":"ConstantStrainLimits","text":"ConstantStrainLimits\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantStrainLimits(*, _parent_object=None, _attribute_path=None, _pb_object=None)\n\nConstant strain limits material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.geometry.html#geometry","title":"geometry","text":"geometry\n\n\n\nproperty GeometricalSelectionRule.geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.html#plytype","title":"PlyType","text":"PlyType\n\n\n\nclass ansys.acp.core.PlyType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the material type of a ply.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.html#examples-using-plytype","title":"PlyType > Examples using PlyType","text":"Examples using PlyType\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.covered_area.html#covered_area","title":"covered_area","text":"covered_area\n\n\n\nproperty Sensor.covered_area: Any\n\nThe surface area of a selected Element Set / Oriented Selection Set, or the tooling surface area that is covered by the composite layup of the selected Material or Modeling Ply."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.AnalysisPly.status.html#status","title":"status","text":"status\n\n\n\nproperty AnalysisPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantWovenStressLimits.html#constantwovenstresslimits","title":"ConstantWovenStressLimits","text":"ConstantWovenStressLimits\n\n\n\nclass ansys.acp.core.material_property_sets.ConstantWovenStressLimits(*, Xc=0.0, Yc=0.0, Zc=0.0, Xt=0.0, Yt=0.0, Zt=0.0, Sxy=0.0, Syz=0.0, Sxz=0.0, _parent_object=None, _attribute_path=None)\n\nConstant stress limits property set for woven materials.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SphericalSelectionRuleElementalData.normal.html#normal","title":"normal","text":"normal\n\n\n\nSphericalSelectionRuleElementalData.normal: VectorData | None = None\n\n"},{"objectID":"Getting started","href":"getting_started.html#getting-started","title":"Getting started","text":"Getting started"},{"objectID":"Getting started","href":"getting_started.html#prerequisites","title":"Getting started > Prerequisites","text":"Prerequisites\n\nTo use PyACP, you need the following prerequisites:\n\nAnsys Composite PrepPost (ACP), version 2024 R2 or later.\n\nPython, version 3.10, 3.11 or 3.12."},{"objectID":"Getting started","href":"getting_started.html#installation","title":"Getting started > Installation","text":"Installation\n\nTo install PyACP, run the following command:\n\nYou should use a virtual environment,\nbecause it keeps Python packages isolated from your system Python."},{"objectID":"Getting started","href":"getting_started.html#usage","title":"Getting started > Usage","text":"Usage"},{"objectID":"Getting started","href":"getting_started.html#tutorial-setup","title":"Getting started > Tutorial setup","text":"Tutorial setup\n\nStart a python interpreter and import the required PyACP packages:\n\nTo not pollute the filesystem, create a temporary directory for the example files:\n\nDownload the example files by using the provided helper function as:"},{"objectID":"Getting started","href":"getting_started.html#start-acp","title":"Getting started > Start ACP","text":"Start ACP\n\nNext, start an ACP instance:\n\nThis launches ACP in the background and creates a connection to it. You can interact\nwith this ACP instance using the PyACP API.\n\nIt’s not possible to connect to the ACP GUI with PyACP."},{"objectID":"Getting started","href":"getting_started.html#load-a-model","title":"Getting started > Load a model","text":"Load a model\n\nYou can resume a model from an existing ACP DB (ACPH5) or built it from\nscratch by importing an FE model (mesh). The example uses the path to the model\nreturned by the get_example_file function, but a raw path like\nr\"path\\to\\your\\model.acph5\" can also be used.\n\nTo load an existing ACP layup model with PyACP, use the import_model() method:\n\nTo import an FE model, use the format=\"ansys:cdb\" or format=\"ansys:dat\"\nparameter, respectively.\nThe following example imports a CDB file.\n\nSee FeFormat for a list of supported FE formats. Check out the\ninput_file_for_pyacp section to see how input files can be created.\n\nWhen working on Windows, be careful of backslashes in paths: These may correspond to\nescape sequences, resulting in errors.\nTo avoid issues, make sure to quote the backslashes (by using \\\\) or use a\nraw string literal by prefixing your string with r,\nlike model = acp.import_model(r\"path\\to\\your\\model.acph5\")."},{"objectID":"Getting started","href":"getting_started.html#start-modelling","title":"Getting started > Start modelling","text":"Start modelling\n\nOnce loaded, you can modify the object directly, for example you can assigning a name to a material with:\n\nStart defining new objects in the model. For example, to create a ply and all its dependencies:\n\nThese create_* methods take additional parameters, which can be used to immediately set the properties of the new object.\nFor example, refer to the documentation of create_modeling_ply.\n\nAlternatively, you can always set the properties of an object after it has been created:\n\nWhen using PyACP from an IDE, you can use autocompletion to explore the available methods and properties. PyACP provides type hints to make the autocompletion as helpful as possible."},{"objectID":"Getting started","href":"getting_started.html#update-and-plot-the-model","title":"Getting started > Update and plot the model","text":"Update and plot the model\n\nThe lay-up is not automatically updated. So data such as ply thicknesses\nand fiber directions are only available after updating the model.\nTo perform the update, use the update method:\n\nMany PyACP objects provide data which can be plotted. For example, to show the mesh:\n\nOr to show the thickness of a modeling ply or fiber directions:\n\nThe model can also be opened in the ACP GUI. See view_the_model_in_the_acp_gui."},{"objectID":"Getting started","href":"getting_started.html#continue-exploring","title":"Getting started > Continue exploring","text":"Continue exploring\n\nThis is just a brief introduction to PyACP. To learn more:\n\nCheck out the examples to see complete examples of how to use PyACP.\n\nThe how-to guides provide instructions on how to perform specific tasks.\n\nThe API reference provides detailed information on all available classes and methods."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.id.html#id","title":"id","text":"id\n\n\n\nproperty Material.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.use_default_interpolation_settings.html#use_default_interpolation_settings","title":"use_default_interpolation_settings","text":"use_default_interpolation_settings\n\n\n\nproperty SectionCut.use_default_interpolation_settings: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.interface_weakening_factor.html#interface_weakening_factor","title":"interface_weakening_factor","text":"interface_weakening_factor\n\n\n\nproperty ConstantPuckConstants.interface_weakening_factor: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableEngineeringConstants.nu12.html#nu12","title":"nu12","text":"nu12\n\n\n\nproperty VariableEngineeringConstants.nu12: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStrainLimits.html#variablestrainlimits","title":"VariableStrainLimits","text":"VariableStrainLimits\n\n\n\nclass ansys.acp.core.material_property_sets.VariableStrainLimits(*, _parent_object=None, _attribute_path=None)\n\nVariable strain limits material property set.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Material.tsai_wu_constants.html#tsai_wu_constants","title":"tsai_wu_constants","text":"tsai_wu_constants\n\n\n\nproperty Material.tsai_wu_constants: TC | TV | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.draped_transverse_direction.html#draped_transverse_direction","title":"draped_transverse_direction","text":"draped_transverse_direction\n\n\n\nModelingPlyElementalData.draped_transverse_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SamplingPoint.store.html#store","title":"store","text":"store\n\n\n\nSamplingPoint.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#optimizing-ply-angles","title":"Optimizing ply angles","text":"Optimizing ply angles\n\nThis example demonstrates how to use the ACP, MAPDL, and DPF servers to optimize the ply\nangles in a composite lay-up. The optimization aims to minimize the maximum inverse\nreserve factor (IRF) of the composite structure under two load cases.\n\nThe example uses the scipy.optimize.minimize() function to perform the optimization.\nWhile the procedure itself is not the focus of this example and could be improved,\nit demonstrates the process of optimizing a composite lay-up with PyACP.\n\nWhen copy / pasting the blocks in this example, make sure to use either a Jupyter\nnotebook, or an IPython console. The default Python interactive console (prior to\nPython 3.13) does not allow empty lines in indented code.\nTo run the example with the default Python interpreter, download and execute the\nexample script."},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#import-modules-and-setup","title":"Optimizing ply angles > Import modules and setup","text":"Import modules and setup\n\nTo setup the environment for this optimization example, you must perform these steps which are\ncovered in the subsequent example code:\n\nImport the required libraries.\n\nLaunch the ACP, MAPDL, and DPF servers.\n\nCreate a temporary directory to store the input and output files.\n\nImport the standard library and third-party dependencies.\n\nImport Ansys libraries\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation.\n\nLaunch the PyACP server.\n\nLaunch the MAPDL server.\n\nLaunch the DPF server.\n\nCreate a temporary directory to store the input and output files."},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#prepare-the-acp-model","title":"Optimizing ply angles > Prepare the ACP model","text":"Prepare the ACP model\n\nThis example uses the optimization_model.dat file, which contains a simple ACP model\nof a rounded square tube.\n\nThe prepare_acp_model function imports the optimization_model.dat file into a new\nACP model and creates a lay-up with six plies.\nIt returns the Model instance.\n\nCreate the ACP model and visualize the first ply’s fiber direction.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#create-functions-for-the-optimization","title":"Optimizing ply angles > Create functions for the optimization","text":"Create functions for the optimization\n\nTo optimize the ply angles, you must define functions to update, solve, and postprocess\nthe ACP model for a given set of ply angles.\n\nThe update_ply_angles() function changes the ply angles in the model to the given values and\nupdates the model.\n\nThe solve_cdb() function solves the CDB file with MAPDL and returns the path to the RST file.\n\nThe get_max_irf() function uses PyDPF - Composites to calculate the maximum\ninverse reserve factor (IRF) for a given RST, composite definitions,\nor materials file.\n\nThis function only considers the maximum stress failure criterion."},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#optimize-the-ply-angles","title":"Optimizing ply angles > Optimize the ply angles","text":"Optimize the ply angles\n\nFor the optimization, you must define a single function that takes the ply angles\nas its input and returns the maximum IRF.\nThe get_max_irf_for_parameters() function combines the previously defined functions\nto perform all the necessary steps for a given set of ply angles.\n\nTo inject the acp_workflow, mapdl, dpf_server, and workdir arguments into the\nget_max_irf_for_parameters() function, you can use the functools.partial() function.\n\nFor the optimization, you can use the Nelder-Mead method available in\nthe scipy.optimize.minimize() function. This is a downhill simplex algorithm that\ndoes not require the gradient of the objective function. It is suitable for finding\na local minimum of the objective function.\n\nTo have the Nelder-Mead method cover a reasonable part of the parameter space,\ndefine an initial simplex (matrix of shape (n+1, n), where n is the number of parameters).\n\nThe initial simplex is chosen with random ply angles between 0 and 90 degrees. To make\nthe results reproducible, the random seed is fixed.\n\nTo build this example, the number of function evaluations is limited to 1. In practice, you\nshould increase or remove this limit."},{"objectID":"Home","href":"examples/use_cases/01-optimizing-ply-angles.html#results","title":"Optimizing ply angles > Results","text":"Results\n\nWithout the maxfev limit, the optimization would take roughly 30 minutes to complete and\nconverge to the following result:\n\nThe following code defines the results list as it would be obtained from the full optimization.\n\nVisualize the evolution of the maximum IRF during the optimization.\n\n\n\nVisualize the resulting fiber directions.\n\n\n\nTotal running time of the script: (0 minutes 47.031 seconds)\n\n\n\nDownload Jupyter notebook: 01-optimizing-ply-angles.ipynb\n\nDownload Python source code: 01-optimizing-ply-angles.py\n\nDownload zipped: 01-optimizing-ply-angles.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Sxz.html#sxz","title":"Sxz","text":"Sxz\n\n\n\nproperty VariableStressLimits.Sxz: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SphericalSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty SphericalSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty CutOffSelectionRule.angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION.html#by_direction","title":"BY_DIRECTION","text":"BY_DIRECTION\n\n\n\nExtrusionGuideType.BY_DIRECTION = 'by_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuideType.BY_DIRECTION.html#examples-using-extrusionguidetypeby_direction","title":"BY_DIRECTION > Examples using ExtrusionGuideType.BY_DIRECTION","text":"Examples using ExtrusionGuideType.BY_DIRECTION\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.isalnum.html#isalnum","title":"isalnum","text":"isalnum\n\n\n\nPuckMaterialType.isalnum(/)\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.html#sensortype","title":"SensorType","text":"SensorType\n\n\n\nclass ansys.acp.core.SensorType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the type of sensor.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SensorType.html#examples-using-sensortype","title":"SensorType > Examples using SensorType","text":"Examples using SensorType\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.store.html#store","title":"store","text":"store\n\n\n\nCylindricalSelectionRule.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.extend_endings.html#extend_endings","title":"extend_endings","text":"extend_endings\n\n\n\nproperty TubeSelectionRule.extend_endings: Any\n\n"},{"objectID":"Computation times","href":"sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n02:58.177 total execution time for 19 files from all galleries:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py (../../examples/use_cases/01-optimizing-ply-angles.py)\n\n00:47.031\n\n0.0\n\nsphx_glr_examples_modeling_features_007-sensor.py (../../examples/modeling_features/007-sensor.py)\n\n00:31.107\n\n0.0\n\nsphx_glr_examples_workflows_02-advanced-pymapdl-workflow.py (../../examples/workflows/02-advanced-pymapdl-workflow.py)\n\n00:19.558\n\n0.0\n\nsphx_glr_examples_modeling_features_031-imported-solid-model.py (../../examples/modeling_features/031-imported-solid-model.py)\n\n00:17.640\n\n0.0\n\nsphx_glr_examples_modeling_features_001-materials.py (../../examples/modeling_features/001-materials.py)\n\n00:10.691\n\n0.0\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py (../../examples/modeling_features/002-rosettes-ply-directions.py)\n\n00:08.950\n\n0.0\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py (../../examples/workflows/01-pymapdl-workflow.py)\n\n00:07.722\n\n0.0\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py (../../examples/modeling_features/010-sandwich-panel-layup.py)\n\n00:06.407\n\n0.0\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py (../../examples/modeling_features/004-advanced-selection-rules.py)\n\n00:04.999\n\n0.0\n\nsphx_glr_examples_modeling_features_020-solid_model.py (../../examples/modeling_features/020-solid_model.py)\n\n00:04.604\n\n0.0\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py (../../examples/modeling_features/003-simple-selection-rules.py)\n\n00:04.243\n\n0.0\n\nsphx_glr_examples_modeling_features_030-imported-plies.py (../../examples/modeling_features/030-imported-plies.py)\n\n00:03.964\n\n0.0\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py (../../examples/modeling_features/050-composite_cae_h5.py)\n\n00:03.952\n\n0.0\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py (../../examples/modeling_features/006-layup-thickness-definitions.py)\n\n00:03.688\n\n0.0\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py (../../examples/modeling_features/005-ply-direction-lookup-table.py)\n\n00:03.620\n\n0.0\n\nsphx_glr_examples_workflows_03-pymechanical-shell-workflow.py (../../examples/workflows/03-pymechanical-shell-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_04-pymechanical-solid-workflow.py (../../examples/workflows/04-pymechanical-solid-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_05-pymechanical-to-cdb-workflow.py (../../examples/workflows/05-pymechanical-to-cdb-workflow.py)\n\n00:00.000\n\n0.0\n\nsphx_glr_examples_workflows_06-cdb-to-pymechanical-workflow.py (../../examples/workflows/06-cdb-to-pymechanical-workflow.py)\n\n00:00.000\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_material.html#create_material","title":"create_material","text":"create_material\n\n\n\nModel.create_material(*, name='Material', ply_type='undefined', density=None, engineering_constants=None, stress_limits=None, strain_limits=None, puck_constants=None, woven_characterization=None, woven_puck_constants_1=None, woven_puck_constants_2=None, woven_stress_limits_1=None, woven_stress_limits_2=None, tsai_wu_constants=None, larc_constants=None, fabric_fiber_angle=None)\n\nInstantiate a Material.\n\nThe active material property sets are determined by the ply_type. For\nexample, puck_constants are only active when the ply_type is either\nPlyType.REGULAR or PlyType.WOVEN.\n\nThe inactive property sets can still be set, but may not be accessible:\n\nFor stored materials, inactive property sets always return None.\n\nFor unstored materials, inactive property sets can be accessed. They\nreturn None after storing.\n\nParameters\n\nname (str) – Name of the Material.\n\nply_type (PlyType) – Define the type of material such as core, uni-directional (regular), woven, or isotropic.\n\ndensity (ConstantDensity | None) – Define the density of the material.\n\nengineering_constants (ConstantEngineeringConstants | None) – Define the material stiffness (Young’s moduli, Poisson ratios and shear moduli).\n\nstress_limits (ConstantStressLimits | None) – Define the stress limits for the evaluation of failure criteria with ansys.dpf.composites.\n\nstrain_limits (ConstantStrainLimits | None) – Define the strain limits for the evaluation of failure criteria with ansys.dpf.composites.\n\npuck_constants (ConstantPuckConstants | None) – Define the puck constants for the evaluation of the Puck criterion with ansys.dpf.composites.\n\nwoven_characterization (ConstantWovenCharacterization | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_1 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 (ConstantPuckConstants | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_puck_constants_2 – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_1 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\nwoven_stress_limits_2 (ConstantWovenStressLimits | None) – Define the puck constants of woven fabrics for the evaluation of the Puck\ncriterion with ansys.dpf.composites.\n\ntsai_wu_constants (ConstantTsaiWuConstants | None) – Define the Tsai-Wu constants for the evaluation of the Tsai-Wu criterion\nwith ansys.dpf.composites.\n\nlarc_constants (ConstantLaRCConstants | None) – Define the LaRC constants for the evaluation of the LaRC criterion with\nansys.dpf.composites.\n\nfabric_fiber_angle (ConstantFabricFiberAngle | None) – Define the rotation angle between the material coordinate system and the fiber direction.\nOnly used for shear dependent material properties which are provided by Material Designer.\n\nReturn type\n\nMaterial\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_material.html#examples-using-modelcreate_material","title":"create_material > Examples using Model.create_material","text":"Examples using Model.create_material\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py\n\nsphx_glr_examples_workflows_01-pymapdl-workflow.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CoordinateTransformation.translation_z.html#translation_z","title":"translation_z","text":"translation_z\n\n\n\nCoordinateTransformation.translation_z: float = 0.0\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.edge_sets.html#edge_sets","title":"edge_sets","text":"edge_sets\n\n\n\nproperty Model.edge_sets: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.edge_sets.html#examples-using-modeledge_sets","title":"edge_sets > Examples using Model.edge_sets","text":"Examples using Model.edge_sets\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.scale_ply_thicknesses.html#scale_ply_thicknesses","title":"scale_ply_thicknesses","text":"scale_ply_thicknesses\n\n\n\nproperty LayupMappingObject.scale_ply_thicknesses: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.status.html#status","title":"status","text":"status\n\n\n\nproperty Stackup.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.delete.html#delete","title":"delete","text":"delete\n\n\n\nButtJointSequence.delete()\n\nDelete the object.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.isidentifier.html#isidentifier","title":"isidentifier","text":"isidentifier\n\n\n\nLaunchMode.isidentifier(/)\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as “def” or “class”."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.delete_lost_elements.html#delete_lost_elements","title":"delete_lost_elements","text":"delete_lost_elements\n\n\n\nproperty LayupMappingObject.delete_lost_elements: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantStrainLimits.eZc.html#ezc","title":"eZc","text":"eZc\n\n\n\nproperty ConstantStrainLimits.eZc: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cad_geometry.html#create_cad_geometry","title":"create_cad_geometry","text":"create_cad_geometry\n\n\n\nModel.create_cad_geometry(*, name='CADGeometry', external_path='', scale_factor=1.0, use_default_precision=True, precision=0.001, use_default_offset=True, offset=0.0)\n\nInstantiate a CAD Geometry.\n\nParameters\n\nname (str) – Name of the CAD Geometry.\n\nexternal_path (str) – Path to the CAD file.\n\nscale_factor (float) – Scale factor applied to the CAD geometry.\n\nuse_default_precision (bool) – Whether to use the default precision value.\n\nprecision (float) – Precision of geometrical operations such as intersection points, thickness sampling, etc.\n\nuse_default_offset (bool) – Whether to use the default offset value.\n\noffset (float) – Offset value used to analyze the surface’s coverage regarding the mesh.\n\nReturn type\n\nCADGeometry\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_cad_geometry.html#examples-using-modelcreate_cad_geometry","title":"create_cad_geometry > Examples using Model.create_cad_geometry","text":"Examples using Model.create_cad_geometry\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py\n\nsphx_glr_examples_modeling_features_020-solid_model.py\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.price.html#price","title":"price","text":"price\n\n\n\nAnalysisPlyElementalData.price: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_sensor.html#create_sensor","title":"create_sensor","text":"create_sensor\n\n\n\nModel.create_sensor(*, name='Sensor', sensor_type='sensor_by_area', active=True, entities=())\n\nInstantiate a Sensor.\n\nParameters\n\nname (str) – Name of the sensor.\n\nsensor_type (SensorType) – Type of sensor: The sensor can be scoped by area, material, plies,\nor solid model.\n\nactive (bool) – Inactive sensors are not evaluated.\n\nentities (Sequence[Fabric | Stackup | SubLaminate | ElementSet | OrientedSelectionSet | ModelingPly | SolidModel | ImportedSolidModel]) – List of entities which define the sensor’s scope.\n\nReturn type\n\nSensor\n\nAdded in ACP server version 24.2."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_sensor.html#examples-using-modelcreate_sensor","title":"create_sensor > Examples using Model.create_sensor","text":"Examples using Model.create_sensor\n\nsphx_glr_examples_modeling_features_007-sensor.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.CONNECT_LOCAL.html#connect_local","title":"CONNECT_LOCAL","text":"CONNECT_LOCAL\n\n\n\nLaunchMode.CONNECT_LOCAL = 'connect_local'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FabricWithAngle.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty FabricWithAngle.angle: float\n\nOrientation angle in degree of the fabric with respect to the reference direction."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SubLaminate.topdown.html#topdown","title":"topdown","text":"topdown\n\n\n\nproperty SubLaminate.topdown: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData.html#geometricalselectionruleelementaldata","title":"GeometricalSelectionRuleElementalData","text":"GeometricalSelectionRuleElementalData\n\n\n\nclass ansys.acp.core.mesh_data.GeometricalSelectionRuleElementalData(element_labels, normal=None)\n\nRepresents elemental data for a Geometrical Selection Rule.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.rindex.html#rindex","title":"rindex","text":"rindex\n\n\n\nLaunchMode.rindex(sub, [start, [end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.warping_limit.html#warping_limit","title":"warping_limit","text":"warping_limit\n\n\n\nproperty ImportedSolidModel.warping_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedPlyOffsetType.TOP_OFFSET.html#top_offset","title":"TOP_OFFSET","text":"TOP_OFFSET\n\n\n\nImportedPlyOffsetType.TOP_OFFSET = 'top_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.id.html#id","title":"id","text":"id\n\n\n\nproperty SectionCut.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.element_sets.html#element_sets","title":"element_sets","text":"element_sets\n\n\n\nproperty OrientedSelectionSet.element_sets: LinkedObjectList[ChildT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION.html#direction","title":"DIRECTION","text":"DIRECTION\n\n\n\nLookUpTableColumnValueType.DIRECTION = 'direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LookUpTableColumnValueType.DIRECTION.html#examples-using-lookuptablecolumnvaluetypedirection","title":"DIRECTION > Examples using LookUpTableColumnValueType.DIRECTION","text":"Examples using LookUpTableColumnValueType.DIRECTION\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCut.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SectionCut.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.FieldVariable.lower_limit.html#lower_limit","title":"lower_limit","text":"lower_limit\n\n\n\nFieldVariable.lower_limit: float\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Status.html#status","title":"Status","text":"Status\n\n\n\nclass ansys.acp.core.Status(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the update status of an object.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.design_angle.html#design_angle","title":"design_angle","text":"design_angle\n\n\n\nAnalysisPlyElementalData.design_angle: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.UnitSystemType.BFT.html#bft","title":"BFT","text":"BFT\n\n\n\nUnitSystemType.BFT = 'bft'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nOrientedSelectionSetNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.angles.html#angles","title":"angles","text":"angles\n\n\n\nproperty VariableOffsetSelectionRule.angles: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.force_disable_result_extrapolation.html#force_disable_result_extrapolation","title":"force_disable_result_extrapolation","text":"force_disable_result_extrapolation\n\n\n\nproperty Model.force_disable_result_extrapolation: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableStressLimits.Yt.html#yt","title":"Yt","text":"Yt\n\n\n\nproperty VariableStressLimits.Yt: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.id.html#id","title":"id","text":"id\n\n\n\nproperty ButtJointSequence.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CylindricalSelectionRule.relative_rule.html#relative_rule","title":"relative_rule","text":"relative_rule\n\n\n\nproperty CylindricalSelectionRule.relative_rule: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.import_materials.html#import_materials","title":"import_materials","text":"import_materials\n\n\n\nModel.import_materials(matml_path, *, material_apdl_path=None)\n\nImport materials from a MatML file.\n\nImport materials from a MatML.xml (Engineering Data) file.\n\nOptionally, a material APDL file can be defined. This is a pre-generated\nsolver snippet, needed in case of variable materials or non-standard\nmaterial models. The snippet is used when exporting solid models or\nsurface section cuts in the CDB format.\n\nParameters\n\nmatml_path (str | PathLike[str]) – File path to the MatML file.\n\nmaterial_apdl_path (str | PathLike[str] | None) – File path to the material APDL file."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.import_materials.html#examples-using-modelimport_materials","title":"import_materials > Examples using Model.import_materials","text":"Examples using Model.import_materials\n\nsphx_glr_examples_modeling_features_001-materials.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2.html#parameter_2","title":"parameter_2","text":"parameter_2\n\n\n\nproperty LinkedSelectionRule.parameter_2: float\n\nSecond template parameter of the selection rule."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.parameter_2.html#examples-using-linkedselectionruleparameter_2","title":"parameter_2 > Examples using LinkedSelectionRule.parameter_2","text":"Examples using LinkedSelectionRule.parameter_2\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.html#cutoffgeometry","title":"CutOffGeometry","text":"CutOffGeometry\n\n\n\nclass ansys.acp.core.CutOffGeometry(*, name='CutOffGeometry', active=True, cad_geometry=None, orientation_type='up', relative_merge_tolerance=0.1)\n\nInstantiate a cut-off geometry.\n\nParameters\n\nname (str) – Name of the cut-off geometry.\n\nactive (bool) – Inactive cut-off geometries are not used in the solid model extrusion.\n\ncad_geometry (VirtualGeometry | None) – The geometry defining the cut-off.\n\norientation_type (CutOffGeometryOrientationType) – Determines the cutting orientation of a surface/body geometry. Allows to\nswitch between include and exclude.\n\nrelative_merge_tolerance (float) – Set the merging tolerance for neighboring nodes relative to the element size.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.draping_angle_2_field.html#draping_angle_2_field","title":"draping_angle_2_field","text":"draping_angle_2_field\n\n\n\nproperty ModelingPly.draping_angle_2_field: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.status.html#status","title":"status","text":"status\n\n\n\nproperty ElementSet.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.cog.html#cog","title":"cog","text":"cog\n\n\n\nModelingPlyElementalData.cog: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingGroup.name.html#name","title":"name","text":"name\n\n\n\nproperty ModelingGroup.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Lamina.html#lamina","title":"Lamina","text":"Lamina\n\n\n\nclass ansys.acp.core.Lamina(material, angle=0.0)\n\nClass to link a material with a sub-laminate.\n\nParameters\n\nmaterial (Fabric | Stackup) – Link to an existing fabric or stackup.\n\nangle (float) – Orientation angle in degree of the material with respect to the reference direction.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Lamina.html#examples-using-lamina","title":"Lamina > Examples using Lamina","text":"Examples using Lamina\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantPuckConstants.s.html#s","title":"s","text":"s\n\n\n\nproperty ConstantPuckConstants.s: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyElementalData.area.html#area","title":"area","text":"area\n\n\n\nAnalysisPlyElementalData.area: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.rosette_selection_method.html#rosette_selection_method","title":"rosette_selection_method","text":"rosette_selection_method\n\n\n\nproperty LayupMappingObject.rosette_selection_method: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.CylindricalSelectionRuleNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nCylindricalSelectionRuleNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.cut_off_geometry.html#cut_off_geometry","title":"cut_off_geometry","text":"cut_off_geometry\n\n\n\nproperty CutOffSelectionRule.cut_off_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.name.html#name","title":"name","text":"name\n\n\n\nproperty ImportedSolidModel.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.sensor_type.html#sensor_type","title":"sensor_type","text":"sensor_type\n\n\n\nproperty Sensor.sensor_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.name.html#name","title":"name","text":"name\n\n\n\nproperty Stackup.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty TubeSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.SolidElementSetElementalData.html#solidelementsetelementaldata","title":"SolidElementSetElementalData","text":"SolidElementSetElementalData\n\n\n\nclass ansys.acp.core.mesh_data.SolidElementSetElementalData(element_labels)\n\nRepresents elemental data for a Solid Element Set.\n\nMethods\n\n\n\nAttributes\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.html#linkedselectionrule","title":"LinkedSelectionRule","text":"LinkedSelectionRule\n\n\n\nclass ansys.acp.core.LinkedSelectionRule(selection_rule, *, operation_type='intersect', template_rule=False, parameter_1=0.0, parameter_2=0.0)\n\nDefines selection rules linked to a Boolean Selection Rule or Modeling Ply.\n\nParameters\n\nselection_rule (BooleanSelectionRule | CutOffSelectionRule | CylindricalSelectionRule | GeometricalSelectionRule | ParallelSelectionRule | SphericalSelectionRule | TubeSelectionRule | VariableOffsetSelectionRule) – Link to an existing selection rule.\n\noperation_type (BooleanOperationType) – Determines how the selection rule is combined with other selection rules.\n\ntemplate_rule (bool) – If True, the selection rule is a template rule. This means the parameter\nvalues are taken from the parameter_1 and parameter_2 attributes,\nnot from the linked selection rule.\n\nparameter_1 (float) – First parameter value of the selection rule. Only applies if template_rule\nis True.\n\nparameter_2 (float) – Second parameter value of the selection rule. Only applies if template_rule\nis True.\n\nThe parameter_1 and parameter_2 attributes determine the values of the\nfollowing parameters, depending on the type of selection rule:\n\n\n\n\n\n\n\nRule Type\n\nparameter_1\n\nparameter_2\n\nParallelSelectionRule\n\nlower_limit\n\nupper_limit\n\nCylindricalSelectionRule\n\nradius\n\n-\n\nSphericalSelectionRule\n\nradius\n\n-\n\nTubeSelectionRule\n\nouter_radius\n\ninner_radius\n\nGeometricalSelectionRule\n\nin_plane_capture_tolerance\n\n-\n\nVariableOffsetSelectionRule\n\n-\n\n-\n\nBooleanSelectionRule\n\n-\n\n-\n\nNote that CutOffSelectionRule and BooleanSelectionRule objects cannot be linked to\na Boolean Selection Rule, only to a Modeling Ply..\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LinkedSelectionRule.html#examples-using-linkedselectionrule","title":"LinkedSelectionRule > Examples using LinkedSelectionRule","text":"Examples using LinkedSelectionRule\n\nsphx_glr_examples_modeling_features_003-simple-selection-rules.py\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.full_mapping.html#full_mapping","title":"full_mapping","text":"full_mapping\n\n\n\nproperty FieldDefinition.full_mapping: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyElementalData.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nProductionPlyElementalData.thickness: ScalarData[np.float64] | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.cog.html#cog","title":"cog","text":"cog\n\n\n\nModelElementalData.cog: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SectionCutType.PRODUCTION_PLY_WISE.html#production_ply_wise","title":"PRODUCTION_PLY_WISE","text":"PRODUCTION_PLY_WISE\n\n\n\nSectionCutType.PRODUCTION_PLY_WISE = 'production_ply_wise'\n\n"},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#material-property-sets","title":"Material property sets","text":"Material property sets\n\nMaterial property sets define certain aspects of the properties\nof a material.\nThe attributes described in the following subsections show how\nyou can create and access material property sets in PyACP."},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#constant-versus-variable-property-sets","title":"Material property sets > Constant versus variable property sets","text":"Constant versus variable property sets\n\nMaterial property sets can either be constant or variable. Constant property\nsets are defined by a single value per property. Variable property\nsets depend on field variables such as temperature and fiber volume content.\n\nCurrently, you can only modify the constant property sets with PyACP. Variable\nproperty sets can be inspected, but not modified."},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#isotropic-versus-orthotropic-property-sets","title":"Material property sets > Isotropic versus orthotropic property sets","text":"Isotropic versus orthotropic property sets\n\nThe following material property sets can be defined as either isotropic or orthotropic:\n\nEngineering constants, defined in the ConstantEngineeringConstants and VariableEngineeringConstants classes.\n\nStress limits, defined in the  ConstantStressLimits and VariableStressLimits classes.\n\nStrain limits, defined in the ConstantStrainLimits and VariableStrainLimits classes.\n\nWhether a material has isotropic or orthotropic properties is determined by its\nply type. The isotropic ply types are:\n\nPlyType.ISOTROPIC\n\nPlyType.ADHESIVE\n\nThe PlyType.ISOTROPIC_HOMOGENEOUS_CORE ply type has isotropic Engineering Constants,\nbut orthotropic stress and strain limits.\n\nWhile a material is unstored (see stored_vs_unstored), the property set does not\nautomatically change from orthotropic to isotropic or vice versa. When storing the\nmaterial, the backend ensures that its definition is consistent."},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#available-attributes","title":"Material property sets > Available attributes","text":"Available attributes\n\nThe available attributes for a given property set type change depending on whether\nthe material is isotropic or orthotropic.\nThe following table lists the available attributes for the different property sets in\nisotropic and orthotropic materials.\n\n\n\n\n\n\n\nProperty set\n\nIsotropic attributes\n\nOrthotropic attributes\n\nEngineering constants\n\nE, nu\n\nE1, E2, E3, nu12, nu13, nu23, G12, G13, G23\n\nStress limits\n\neffective_stress\n\nXc, Yc, Zc, Xt, Yt, Zt, Sxy, Syz, Sxz\n\nStrain limits\n\neffective_strain\n\neXc, eYc, eZc, eXt, eYt, eZt, eSxy, eSyz, eSxz"},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#relation-between-isotropic-and-orthotropic-property-sets","title":"Material property sets > Relation between isotropic and orthotropic property sets","text":"Relation between isotropic and orthotropic property sets\n\nFor stress and strain limits, the isotropic and orthotropic attributes are\nindependently defined. This means that when you change the ply type of a material,\nyou must redefine the stress and strain limits.\n\nFor engineering constants, however, the orthotropic and isotropic definitions\nare interlinked. Therefore, when you change the ply type of a material, the\nengineering constants are automatically converted.\nTo avoid accidental use of incorrect engineering constants, PyACP enforces\nconversion and assignment rules, as described later on this page."},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#conversion-rules","title":"Material property sets > Conversion rules","text":"Conversion rules\n\nThe following rules apply when changing the ply type of a material:\n\nThe ply type can always be changed from an isotropic to an orthotropic type.\n\nWhen changing from an orthotropic to an isotropic type, the engineering constants must\nbe consistent with their isotropic counterpart. In particular, the\nfollowing relations must hold:\n\nE_1 &= E_2 = E_3 \\\\\n\\nu_{12} &= \\nu_{13} = \\nu_{23} \\\\\nG_{12} &= G_{13} = G_{23} = \\frac{E_1}{2 \\cdot (1 + \\nu_{12})}\n\nConsider the following example:\n\nFirst, convert to an isotropic ply type. This is allowed since the engineering constants are\nconsistent with an isotropic material.\n\nThen convert to an orthotropic material. This is always allowed.\n\nNow, the engineering constants are no longer consistent with an isotropic material, so converting\nback to an isotropic ply type is not allowed."},{"objectID":"Home","href":"user_guide/concepts/material_property_sets.html#assignment-rules","title":"Material property sets > Assignment rules","text":"Assignment rules\n\nSimilar rules apply when assigning engineering constants to a material:\n\nIsotropic engineering constants can be assigned to both isotropic and orthotropic materials.\n\nOrthotropic engineering constants can be assigned to isotropic materials, if their values are consistent with them,\nand orthotropic materials.\n\nContinuing from the preceding example, you can assign either orthotropic or isotropic engineering constants to the orthotropic material:\n\nNow you can switch back to an isotropic ply type.\n\nIsotropic engineering constants can always be assigned to an isotropic material.\n\nOrthotropic engineering constants can be assigned only if the values are consistent with an isotropic material."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OffsetType.NO_OFFSET.html#no_offset","title":"NO_OFFSET","text":"NO_OFFSET\n\n\n\nOffsetType.NO_OFFSET = 'no_offset'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.StressStateType.html#stressstatetype","title":"StressStateType","text":"StressStateType\n\n\n\nclass ansys.acp.core.StressStateType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nSpecifies if the reinforcing elements should behave like a link, membrane, or shell element (with or without bending).\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.DRAPED_TRANSVERSE_DIRECTION.html#draped_transverse_direction","title":"DRAPED_TRANSVERSE_DIRECTION","text":"DRAPED_TRANSVERSE_DIRECTION\n\n\n\nElementalDataType.DRAPED_TRANSVERSE_DIRECTION = 'draped_transverse_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ShellMappingProperties.relative_in_plane_tolerance.html#relative_in_plane_tolerance","title":"relative_in_plane_tolerance","text":"relative_in_plane_tolerance\n\n\n\nShellMappingProperties.relative_in_plane_tolerance: float = 0.01\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Fabric.draping_ud_coefficient.html#draping_ud_coefficient","title":"draping_ud_coefficient","text":"draping_ud_coefficient\n\n\n\nproperty Fabric.draping_ud_coefficient: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.cut_off_material_handling.html#cut_off_material_handling","title":"cut_off_material_handling","text":"cut_off_material_handling\n\n\n\nproperty Stackup.cut_off_material_handling: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin.html#solidmodelexportmixin","title":"SolidModelExportMixin","text":"SolidModelExportMixin\n\nThis is an internal object. It should not be used directly, and subject to change without notice.\n\n\n\nclass ansys.acp.core._tree_objects._solid_model_export.SolidModelExportMixin(name='')\n\nMixin class for adding export functionality to the solid model and imported solid model classes.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.html#examplekeys","title":"ExampleKeys","text":"ExampleKeys\n\n\n\nclass ansys.acp.core.extras.example_helpers.ExampleKeys(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nKeys for the example files.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.lookup_tables_3d.html#lookup_tables_3d","title":"lookup_tables_3d","text":"lookup_tables_3d\n\n\n\nproperty Model.lookup_tables_3d: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ACPInstance.wait.html#wait","title":"wait","text":"wait\n\n\n\nACPInstance.wait(timeout)\n\nWait for the ACP instance to respond.\n\nRepeatedly checks if the ACP instance is running, returning as\nsoon as it is running.\n\nParameters\n\ntimeout (float) – Wait time before raising an exception.\n\nRaises\n\nRuntimeError – In case the server still has not responded after timeout seconds."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.locked.html#locked","title":"locked","text":"locked\n\n\n\nproperty ElementSet.locked: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.HDF5CompositeCAEImportMode.html#hdf5compositecaeimportmode","title":"HDF5CompositeCAEImportMode","text":"HDF5CompositeCAEImportMode\n\n\n\nclass ansys.acp.core.HDF5CompositeCAEImportMode(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the import mode of the HDF5 Composite CAE file.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.VariableOffsetSelectionRule.name.html#name","title":"name","text":"name\n\n\n\nproperty VariableOffsetSelectionRule.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalRuleType.html#geometricalruletype","title":"GeometricalRuleType","text":"GeometricalRuleType\n\n\n\nclass ansys.acp.core.GeometricalRuleType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for how a geometrical selection rule is defined.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.VariableOffsetSelectionRuleNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nVariableOffsetSelectionRuleNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.void_material.html#void_material","title":"void_material","text":"void_material\n\n\n\nproperty LayupMappingObject.void_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableLaRCConstants.interpolation_options.html#interpolation_options","title":"interpolation_options","text":"interpolation_options\n\n\n\nproperty VariableLaRCConstants.interpolation_options: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.AnalysisPlyNodalData.node_labels.html#node_labels","title":"node_labels","text":"node_labels\n\n\n\nAnalysisPlyNodalData.node_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableDensity.rho.html#rho","title":"rho","text":"rho\n\n\n\nproperty VariableDensity.rho: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.GeometricalSelectionRule.id.html#id","title":"id","text":"id\n\n\n\nproperty GeometricalSelectionRule.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LayupMappingObject.entire_solid_mesh.html#entire_solid_mesh","title":"entire_solid_mesh","text":"entire_solid_mesh\n\n\n\nproperty LayupMappingObject.entire_solid_mesh: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CADComponent.status.html#status","title":"status","text":"status\n\n\n\nproperty CADComponent.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.active.html#active","title":"active","text":"active\n\n\n\nproperty FieldDefinition.active: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.PARALLEL.html#parallel","title":"PARALLEL","text":"PARALLEL\n\n\n\nRosetteType.PARALLEL = 'parallel'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.RosetteType.PARALLEL.html#examples-using-rosettetypeparallel","title":"PARALLEL > Examples using RosetteType.PARALLEL","text":"Examples using RosetteType.PARALLEL\n\nsphx_glr_examples_modeling_features_002-rosettes-ply-directions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.id.html#id","title":"id","text":"id\n\n\n\nproperty Sensor.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.extras.example_helpers.ExampleKeys.SNAP_TO_GEOMETRY.html#snap_to_geometry","title":"SNAP_TO_GEOMETRY","text":"SNAP_TO_GEOMETRY\n\n\n\nExampleKeys.SNAP_TO_GEOMETRY = 17\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.create_field_definition.html#create_field_definition","title":"create_field_definition","text":"create_field_definition\n\n\n\nModel.create_field_definition(*, name='FieldDefinition', active=True, field_variable_name='', scope_entities=(), scalar_field=None, full_mapping=False)\n\nInstantiate a Field Definition.\n\nA field definition is used to configure the state of variable materials.\nFor instance, a Lookup Table can be used to define the distribution of a\nstate of material field (e.g. degradation). The field definition allows\nto define the material field per element or per ply and element.\n\nNote: Field definitions are currently only supported through (Py)Mechanical.\nThe direct interface of PyACP to (Py)MADL ignores field definitions.\n\nParameters\n\nname (str) – Name of the field definition.\n\nactive (bool) – Inactive field definitions are ignored.\n\nfield_variable_name (str) – Links the material field to a field variable name.\nThe field variable name must be defined in the material properties.\nNote that the Temperature and Shear Angle field variables are not available\nfor Field Definitions. Temperature is defined through the solution and Shear Angle\nis defined via draping calculations.\n\nscope_entities (Sequence[ElementSet | OrientedSelectionSet | ModelingPly]) – Define the scope of the field definition. You can use a combination\nof Element Sets and Oriented Selection Sets for elemental scope.\nFor ply-wise field definitions, a combination of Modeling Plies can be selected.\nNote that the field definition is only applied to the Analysis Plies attached to\nthe Modeling Plies. A combination of elemental and ply-wise definition is not supported.\n\nscalar_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Select the scalar Look-Up Table column from which the state of the field\nvariable is interpolated from.\n\nfull_mapping (bool) – Specify to include the shell offset of each analysis ply for the interpolation process.\nThe default is to interpolate the state of the field variables at the shell element centroid.\nFor solid elements, the position of each analysis ply is automatically considered.\n\nReturn type\n\nFieldDefinition\n\nAdded in ACP server version 25.1."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.max_element_thickness.html#max_element_thickness","title":"max_element_thickness","text":"max_element_thickness\n\n\n\nproperty SolidModel.max_element_thickness: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.title.html#title","title":"title","text":"title\n\n\n\nPuckMaterialType.title(/)\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.WOVEN.html#woven","title":"WOVEN","text":"WOVEN\n\n\n\nPlyType.WOVEN = 'woven'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.WOVEN.html#examples-using-plytypewoven","title":"WOVEN > Examples using PlyType.WOVEN","text":"Examples using PlyType.WOVEN\n\nsphx_glr_examples_use_cases_01-optimizing-ply-angles.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.LaunchMode.splitlines.html#splitlines","title":"splitlines","text":"splitlines\n\n\n\nLaunchMode.splitlines(/, keepends=False)\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.TubeSelectionRule.tail_extension.html#tail_extension","title":"tail_extension","text":"tail_extension\n\n\n\nproperty TubeSelectionRule.tail_extension: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ThicknessType.NOMINAL.html#nominal","title":"NOMINAL","text":"NOMINAL\n\n\n\nThicknessType.NOMINAL = 'nominal'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementalDataType.TRANSVERSE_DIRECTION.html#transverse_direction","title":"TRANSVERSE_DIRECTION","text":"TRANSVERSE_DIRECTION\n\n\n\nElementalDataType.TRANSVERSE_DIRECTION = 'transverse_direction'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Sensor.store.html#store","title":"store","text":"store\n\n\n\nSensor.store(parent)\n\nStore the object on the server.\n\nParameters\n\nparent (TreeObject) – Parent object to store the object under."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae.html#import_hdf5_composite_cae","title":"import_hdf5_composite_cae","text":"import_hdf5_composite_cae\n\n\n\nModel.import_hdf5_composite_cae(path, import_mode='append', projection_mode='shell', minimum_angle_tolerance=0.001, recompute_reference_directions=False, shell_mapping_properties=ShellMappingProperties(all_elements=True, element_sets=(), relative_thickness_tolerance=0.5, relative_in_plane_tolerance=0.01, angle_tolerance=35.0, small_hole_threshold=0.0), solid_mapping_properties=SolidMappingProperties(offset_type=<OffsetType.BOTTOM_OFFSET: 'bottom_offset'>), coordinate_transformation=CoordinateTransformation(rotation_angle_x=0.0, rotation_angle_y=0.0, rotation_angle_z=0.0, translation_x=0.0, translation_y=0.0, translation_z=0.0))\n\nImport the lay-up from an HDF5 Composite CAE file.\n\nParameters\n\npath (str | PathLike[str]) – File path.\n\nimport_mode (HDF5CompositeCAEImportMode) – In HDF5CompositeCAEImportMode.APPEND mode, the imported objects are\nappended to existing layup.\nIn HDF5CompositeCAEImportMode.OVERWRITE mode, existing objects in the model\nwith the same name are replaced if possible (not locked).\n\nprojection_mode (HDF5CompositeCAEProjectionMode) – Determines whether loaded plies are mapped onto the reference surface\n(HDF5CompositeCAEProjectionMode.SHELL mode) or exposed as\n3D plies (HDF5CompositeCAEProjectionMode.SOLID mode).\n\nminimum_angle_tolerance (float) – Minimum angle tolerance for which tabular correction angles for plies are computed.\n\nrecompute_reference_directions (bool) – Whether reference directions should be recomputed from tabular angle data or not.\n\nshell_mapping_properties (ShellMappingProperties) – Properties for mapping to the shell on importing HDF5 Composite CAE files.\nUsed only if projection_mode is set to \"shell\".\n\nsolid_mapping_properties (SolidMappingProperties) – Properties for importing HDF5 Composite CAE files as imported plies.\nUsed only if projection_mode is set to \"solid\".\n\ncoordinate_transformation (CoordinateTransformation) – Coordinate transformation applied to the imported lay-up."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.import_hdf5_composite_cae.html#examples-using-modelimport_hdf5_composite_cae","title":"import_hdf5_composite_cae > Examples using Model.import_hdf5_composite_cae","text":"Examples using Model.import_hdf5_composite_cae\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementSet.id.html#id","title":"id","text":"id\n\n\n\nproperty ElementSet.id: Any\n\nIdentifier of the object, used for example as key in maps."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.rotation_angle.html#rotation_angle","title":"rotation_angle","text":"rotation_angle\n\n\n\nproperty ImportedModelingPly.rotation_angle: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModel.format.html#format","title":"format","text":"format\n\n\n\nproperty ImportedSolidModel.format: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PlyType.UNDEFINED.html#undefined","title":"UNDEFINED","text":"UNDEFINED\n\n\n\nPlyType.UNDEFINED = 'undefined'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.OrientedSelectionSetElementalData.orientation.html#orientation","title":"orientation","text":"orientation\n\n\n\nOrientedSelectionSetElementalData.orientation: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PrimaryPly.html#primaryply","title":"PrimaryPly","text":"PrimaryPly\n\n\n\nclass ansys.acp.core.PrimaryPly(sequence, level=1)\n\nDefines a primary ply of a butt joint sequence.\n\nParameters\n\nsequence (ModelingGroup | ModelingPly) – Modeling group or modeling ply defining the primary ply.\n\nlevel (int) – Level of the primary ply. Plies with a higher level inherit the thickness\nfrom adjacent plies with a lower level.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ParallelSelectionRule.upper_limit.html#upper_limit","title":"upper_limit","text":"upper_limit\n\n\n\nproperty ParallelSelectionRule.upper_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.snap_to_geometries.html#snap_to_geometries","title":"snap_to_geometries","text":"snap_to_geometries\n\n\n\nproperty SolidModel.snap_to_geometries: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.count.html#count","title":"count","text":"count\n\n\n\nPuckMaterialType.count(sub, [start, [end]]) -> int\n\nReturn the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ElementTechnology.REINFORCING.html#reinforcing","title":"REINFORCING","text":"REINFORCING\n\n\n\nElementTechnology.REINFORCING = 'reinforcing'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry.html#thickness_geometry","title":"thickness_geometry","text":"thickness_geometry\n\n\n\nproperty ModelingPly.thickness_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ModelingPly.thickness_geometry.html#examples-using-modelingplythickness_geometry","title":"thickness_geometry > Examples using ModelingPly.thickness_geometry","text":"Examples using ModelingPly.thickness_geometry\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ButtJointSequence.name.html#name","title":"name","text":"name\n\n\n\nproperty ButtJointSequence.name: Any\n\nThe name of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionMethod.html#extrusionmethod","title":"ExtrusionMethod","text":"ExtrusionMethod\n\n\n\nclass ansys.acp.core.ExtrusionMethod(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion method used in a solid model.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedProductionPly.status.html#status","title":"status","text":"status\n\n\n\nproperty ImportedProductionPly.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SnapToGeometry.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty SnapToGeometry.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.html#importedmodelingply","title":"ImportedModelingPly","text":"ImportedModelingPly\n\n\n\nclass ansys.acp.core.ImportedModelingPly(*, name='ModelingPly', active=True, offset_type='middle_offset', mesh_import_type='from_geometry', mesh_geometry=None, rosette_selection_method='minimum_angle', rosettes=(), reference_direction_field=None, rotation_angle=0.0, ply_material=None, ply_angle=0.0, draping_type='no_draping', draping_angle_1_field=None, draping_angle_2_field=None, thickness_type='nominal', thickness_field=None, thickness_field_type='absolute_values')\n\nInstantiate an Imported Modeling Ply.\n\nParameters\n\nname (str) – The name of the Modeling Ply\n\nactive (bool) – Inactive plies are ignored in ACP and the downstream analysis.\n\noffset_type (ImportedPlyOffsetType) – Defines the location of the mesh (plane) with respect to the laminate.\nOne of BOTTOM_OFFSET, MIDDLE_OFFSET, and TOP_OFFSET.\n\nmesh_import_type (MeshImportType) – Source of the imported mesh. Either from geometry or from hdf5.\n\nmesh_geometry (VirtualGeometry | None) – Link to the geometry with represents the ply surface. Only used if mesh_import_type\nis FROM_GEOMETRY.\n\nrosette_selection_method (RosetteSelectionMethod) – Selection Method for Rosettes of the Oriented Selection Set.\n\nrosettes (Sequence[Rosette]) – Rosettes of the Oriented Selection Set.\n\nreference_direction_field (LookUpTable3DColumn | LookUpTable1DColumn | None) – A 3D lookup table column that defines the reference directions.\n\nrotation_angle (float) – Angle in degrees by which the initial reference directions are rotated around the orientations.\n\nply_material (Fabric | None) – The material (only fabric is supported) of the ply.\n\nply_angle (float) – Design angle between the reference direction and the ply fiber direction.\n\ndraping_type (ImportedPlyDrapingType) – Chooses between different draping formulations. NO_DRAPING by default.\n\ndraping_angle_1_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the fiber and draped fiber directions, in degree.\n\ndraping_angle_2_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Correction angle between the transverse and draped transverse directions,\nin degree. Optional, uses the same values as draping_angle_1_field\n(no shear) by default.\n\nthickness_type (ImportedPlyThicknessType) – Choose ThicknessType.FROM_TABLE to define a ply with variable thickness.\nThe default value is ThicknessType.NOMINAL, which means the ply\nthickness is constant and determined by the thickness of the ply material.\n\nthickness_field (LookUpTable1DColumn | LookUpTable3DColumn | None) – Defines the look-up table column used to determine the ply thickness.\nOnly applies if thickness_type is ThicknessType.FROM_TABLE.\n\nthickness_field_type (ThicknessFieldType) – If thickness_type is ThicknessType.FROM_TABLE, this parameter\ndetermines how the thickness values are interpreted. They can be either\nabsolute values (ThicknessFieldType.ABSOLUTE_VALUES) or relative\nvalues (ThicknessFieldType.RELATIVE_SCALING_FACTOR).\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingPly.html#examples-using-importedmodelingply","title":"ImportedModelingPly > Examples using ImportedModelingPly","text":"Examples using ImportedModelingPly\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ProductionPlyNodalData.get_pyvista_mesh.html#get_pyvista_mesh","title":"get_pyvista_mesh","text":"get_pyvista_mesh\n\n\n\nProductionPlyNodalData.get_pyvista_mesh(mesh)\n\nGet a pyvista mesh with all data.\n\nParameters\n\nmesh (MeshData) – The mesh to which the data is associated.\n\nReturn type\n\nUnstructuredGrid"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantEngineeringConstants.E2.html#e2","title":"E2","text":"E2\n\n\n\nproperty ConstantEngineeringConstants.E2: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.html#physicaldimension","title":"PhysicalDimension","text":"PhysicalDimension\n\n\n\nclass ansys.acp.core.PhysicalDimension(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nOptions for the dimension (time, length, currency, …) of data.\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.PhysicalDimension.html#examples-using-physicaldimension","title":"PhysicalDimension > Examples using PhysicalDimension","text":"Examples using PhysicalDimension\n\nsphx_glr_examples_modeling_features_004-advanced-selection-rules.py\n\nsphx_glr_examples_modeling_features_005-ply-direction-lookup-table.py\n\nsphx_glr_examples_modeling_features_006-layup-thickness-definitions.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuide.cad_geometry.html#cad_geometry","title":"cad_geometry","text":"cad_geometry\n\n\n\nproperty ExtrusionGuide.cad_geometry: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.StressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS.html#plane_stress_state_with_transverse_shear_and_bending_stiffness","title":"PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS","text":"PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS\n\n\n\nStressStateType.PLANE_STRESS_STATE_WITH_TRANSVERSE_SHEAR_AND_BENDING_STIFFNESS = 'plane_stress_state_with_transverse_shear_and_bending_stiffness'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.EdgeSet.defining_node_labels.html#defining_node_labels","title":"defining_node_labels","text":"defining_node_labels\n\n\n\nproperty EdgeSet.defining_node_labels: Any\n\n"},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#imported-ply","title":"Imported ply","text":"Imported ply\n\nThe definition and use of imported plies is demonstrated in this example.\nIn a nutshell, the difference between ImportedModelingPly and\nModelingPly is that the surface mesh of an ImportedModelingPly\nis defined by an external source, such as a CAD surface, where a ModelingPly\nis always defined on the initial loaded shell mesh.\nTherefore, an imported ply can only be used in combination with an\nImportedSolidModel.\n\nThis examples shows hot to:\n\nLoad an initial mesh\n\nAdd a Material and Fabric\n\nImport geometries which will be used to define the surface of the ImportedModelingPly\n\nAdd two imported modeling plies\n\nCreate an ImportedSolidModel\n\nMap the imported plies to the solid model\n\nVisualized the mapped plies."},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#import-modules","title":"Imported ply > Import modules","text":"Import modules\n\nImport the standard library and third-party dependencies.\n\nImport the PyACP dependencies.\n\nSet the plot theme for the example. This is optional, and ensures that you get the\nsame plot style (theme, color map, etc.) as in the online documentation."},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#start-acp-and-load-the-model","title":"Imported ply > Start ACP and load the model","text":"Start ACP and load the model\n\nGet the example file from the server.\n\nLaunch the PyACP server and connect to it.\n\nCreate a model by loading a shell mesh\n\nAdd a material and a fabric with 1mm thickness.\nThe fabric is used for the imported modeling ply."},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#import-cad-geometries","title":"Imported ply > Import CAD geometries","text":"Import CAD geometries\n\nImport two cad surfaces to define the surface of the imported modeling plies."},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#definition-of-imported-plies","title":"Imported ply > Definition of Imported Plies","text":"Definition of Imported Plies\n\nImported plies cannot be visualized directly yet but the cad geometries are\nshown here instead.\nTo visualize the imported plies, you can save the model and load it in ACP\nstandalone.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/modeling_features/030-imported-plies.html#map-imported-plies-onto-a-solid-mesh","title":"Imported ply > Map Imported Plies onto a solid mesh","text":"Map Imported Plies onto a solid mesh\n\nAn external solid mesh is loaded now to map the imported plies\nonto the solid model. The next figure shows the imported solid mesh\nand the imported plies.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nAdd a mapping object to link the imported plies with the solid model.\nIn this example, all imported plies are mapped in one go.\nThe remaining elemental volume and elements which do not intersect\nwith the imported plies are filled with a void and filler material,\nrespectively.\n\nShow the imported ply geometries and mapped plies on the solid model.\nNote that the analysis plies are not yet directly accessible via\nthe API of the imported solid model. Also, elemental data such as\nthicknesses are not yet implemented for imported plies.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nThe imported solid model can be passed to Mechanical or MAPDL to run an analysis\nas shown in the examples pymechanical_solid_example and\npymapdl_workflow_example.\n\nTotal running time of the script: (0 minutes 3.964 seconds)\n\n\n\nDownload Jupyter notebook: 030-imported-plies.ipynb\n\nDownload Python source code: 030-imported-plies.py\n\nDownload zipped: 030-imported-plies.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.draping_material_model.html#draping_material_model","title":"draping_material_model","text":"draping_material_model\n\n\n\nproperty Stackup.draping_material_model: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.html#importedmodelinggroup","title":"ImportedModelingGroup","text":"ImportedModelingGroup\n\n\n\nclass ansys.acp.core.ImportedModelingGroup(*, name='ImportedModelingGroup')\n\nInstantiate an imported modeling group.\n\nParameters\n\nname (str) – Name of the imported modeling group.\n\nAdded in ACP server version 25.1.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedModelingGroup.html#examples-using-importedmodelinggroup","title":"ImportedModelingGroup > Examples using ImportedModelingGroup","text":"Examples using ImportedModelingGroup\n\nsphx_glr_examples_modeling_features_030-imported-plies.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffSelectionRule.elemental_data.html#elemental_data","title":"elemental_data","text":"elemental_data\n\n\n\nproperty CutOffSelectionRule.elemental_data: MeshDataT\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ScalarData.component_name.html#component_name","title":"component_name","text":"component_name\n\n\n\nproperty ScalarData.component_name: str\n\nName of the component."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelElementalData.element_labels.html#element_labels","title":"element_labels","text":"element_labels\n\n\n\nModelElementalData.element_labels: ScalarData[np.int32]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.CutOffGeometry.status.html#status","title":"status","text":"status\n\n\n\nproperty CutOffGeometry.status: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuideType.html#extrusionguidetype","title":"ExtrusionGuideType","text":"ExtrusionGuideType\n\n\n\nclass ansys.acp.core.ExtrusionGuideType(cls, value, names=<not given>, *values, module=None, qualname=None, type=None, start=1, boundary=None)\n\nExtrusion guide type used in an extrusion guide (solid model).\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ExtrusionGuideType.html#examples-using-extrusionguidetype","title":"ExtrusionGuideType > Examples using ExtrusionGuideType","text":"Examples using ExtrusionGuideType\n\nsphx_glr_examples_modeling_features_020-solid_model.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.VariableWovenCharacterization.E2_1.html#e2_1","title":"E2_1","text":"E2_1\n\n\n\nproperty VariableWovenCharacterization.E2_1: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FieldDefinition.parent.html#parent","title":"parent","text":"parent\n\n\n\nproperty FieldDefinition.parent: CreatableFromResourcePath\n\nThe parent of the object."},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.imported_modeling_groups.html#imported_modeling_groups","title":"imported_modeling_groups","text":"imported_modeling_groups\n\n\n\nproperty Model.imported_modeling_groups: MutableMapping[CreatableValueT]\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.imported_modeling_groups.html#examples-using-modelimported_modeling_groups","title":"imported_modeling_groups > Examples using Model.imported_modeling_groups","text":"Examples using Model.imported_modeling_groups\n\nsphx_glr_examples_modeling_features_050-composite_cae_h5.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.mesh_data.ModelingPlyElementalData.fiber_direction.html#fiber_direction","title":"fiber_direction","text":"fiber_direction\n\n\n\nModelingPlyElementalData.fiber_direction: VectorData | None = None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Stackup.drop_off_material.html#drop_off_material","title":"drop_off_material","text":"drop_off_material\n\n\n\nproperty Stackup.drop_off_material: CreatableFromResourcePath | None\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.OrientedSelectionSet.draping_ud_coefficient.html#draping_ud_coefficient","title":"draping_ud_coefficient","text":"draping_ud_coefficient\n\n\n\nproperty OrientedSelectionSet.draping_ud_coefficient: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.DropOffType.OUTSIDE_PLY.html#outside_ply","title":"OUTSIDE_PLY","text":"OUTSIDE_PLY\n\n\n\nDropOffType.OUTSIDE_PLY = 'outside_ply'\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.Model.relative_thickness_tolerance.html#relative_thickness_tolerance","title":"relative_thickness_tolerance","text":"relative_thickness_tolerance\n\n\n\nproperty Model.relative_thickness_tolerance: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.ConstantLaRCConstants.thin_ply_thickness_limit.html#thin_ply_thickness_limit","title":"thin_ply_thickness_limit","text":"thin_ply_thickness_limit\n\n\n\nproperty ConstantLaRCConstants.thin_ply_thickness_limit: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.SolidModel.offset_direction_type.html#offset_direction_type","title":"offset_direction_type","text":"offset_direction_type\n\n\n\nproperty SolidModel.offset_direction_type: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FabricWithAngle.html#fabricwithangle","title":"FabricWithAngle","text":"FabricWithAngle\n\n\n\nclass ansys.acp.core.FabricWithAngle(fabric, angle=0.0)\n\nDefines a fabric of a stackup.\n\nParameters\n\nfabric (Fabric) – Link to an existing fabric.\n\nangle (float) – Orientation angle in degree of the fabric with respect to the reference direction.\n\nAdded in ACP server version 24.2.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.FabricWithAngle.html#examples-using-fabricwithangle","title":"FabricWithAngle > Examples using FabricWithAngle","text":"Examples using FabricWithAngle\n\nsphx_glr_examples_modeling_features_001-materials.py\n\nsphx_glr_examples_modeling_features_010-sandwich-panel-layup.py"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.ImportedSolidModelExportSettings.use_default_node_index.html#use_default_node_index","title":"use_default_node_index","text":"use_default_node_index\n\n\n\nproperty ImportedSolidModelExportSettings.use_default_node_index: Any\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.acp.core.material_property_sets.PuckMaterialType.rstrip.html#rstrip","title":"rstrip","text":"rstrip\n\n\n\nPuckMaterialType.rstrip(chars=None, /)\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead."}]