version: '3.8'
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./docker/shared/prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    labels:
      traefik.http.routers.prometheus.rule: Host(`prometheus.localhost`)
      traefik.http.routers.prometheus.tls: true
      traefik.http.services.prometheus.loadbalancer.server.port: 9090

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", ""]
    volumes:
      - ./shared/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    # Set AWS environment variables if Observability data needs to be pushed to AWS
    #environment:
      #- AWS_REGION=US
      #- AWS_ACCESS_KEY_ID=ABC
      #- AWS_SECRET_ACCESS_KEY=ABC
    ports:
      - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317"   # OTLP gRPC receiver

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    environment:
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
      - "GF_FEATURE_TOGGLES_ENABLE=traceToMetrics"
    expose:
      - 80
    volumes:
      - ./shared/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./shared/grafana/dashboards:/etc/grafana/provisioning/dashboards
    labels:
      traefik.http.routers.grafana.rule: Host(`grafana.localhost`)
      traefik.http.routers.grafana.tls: true
      traefik.http.services.grafana.loadbalancer.server.port: 3000

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./shared/tempo/tempo-config.yml:/etc/tempo.yml
    ports:
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
